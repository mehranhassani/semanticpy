{"/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_gpfs.py": ["conf", "connection_info", "gpfs", "libvirt_driver", "self", "test_volume", "tree"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/image/test_glance.py": ["False", "None", "RuntimeError", "TestGlanceStore", "True", "auto_disk_config", "calls", "compute_utils", "context", "driver", "error", "error_details", "exception", "expected_os_type", "fake", "glance", "glance_api_servers", "log_calls", "logging", "mock", "mock_call_plugin_serialized", "mock_fault", "mock_log_debug", "mock_make_uuid_stack", "mock_shuffle", "mock_sleep", "mox", "params", "random", "self", "stubs", "super", "sys_meta", "time", "vm_utils", "xenapi_conn", "Note(johngarbutt)", "XenServer", "6.1", "and", "later", "has", "this", "error"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_imagebackend.py": ["AssertionError", "BackendTestCase", "CONF", "EncryptedLvmTestCase", "FSID", "FakeConn", "FakeSecret", "False", "FlatTestCase", "INSTANCE", "LvmTestCase", "NAME", "None", "POOL", "PloopTestCase", "Qcow2TestCase", "RbdTestCase", "RuntimeError", "SIZE", "TEMPLATE_SIZE", "True", "USER", "VG", "_", "_ImageTestCase", "_test", "_test_native_io", "a", "args", "assertIsInstance", "b", "base", "base64", "base_dir", "class_object", "cmd", "conf", "config_fixture", "context", "create_image", "dict", "disk", "driver_format", "driver_io", "driver_mock", "exception", "exist_calls", "existing", "exists", "extra_specs", "failure", "fake_create_volume", "fake_exists", "fake_fetch", "fake_get_disk_size", "fake_libvirt_utils", "fake_processutils", "fake_qemu_img_info", "fake_synchronized", "fake_template", "fetch_func", "fixtures", "fn", "fs", "full_size", "get_disk_size", "get_mon_addrs", "hasattr", "hosts", "image", "image1", "image2", "image_cow", "image_not_cow", "image_type", "imagebackend", "images", "imageutils", "img_path", "imgmodel", "info", "inspect", "instance", "is_sparse", "key_manager", "kwargs", "location", "lockutils", "lv", "lvm", "mock", "mock_cleanup", "mock_clone", "mock_correct_format", "mock_create_snap", "mock_destroy", "mock_disk_exists", "mock_ensure", "mock_exist", "mock_exists", "mock_flatten", "mock_fsid", "mock_get", "mock_get_disk_size", "mock_import", "mock_lvm", "mock_mon_addrs", "mock_parent", "mock_path_exists", "mock_pi", "mock_qemu", "mock_remove", "mock_resize_image", "mock_rm", "mock_synchronized", "model", "name", "nova", "object", "objects", "os", "outer", "p", "parent_pool", "path", "pool", "ports", "qcow", "raw", "rbd_name", "rbd_path", "rbd_uri", "rbd_utils", "self", "set", "shutil", "size", "size_gb", "size_mock", "sparse", "super", "target", "tempfile", "test", "test_snap", "units", "use_cow", "user", "uuid", "uuidutils", "vconfig", "vg", "w", "wargs", "wkwargs", "wrapper", "TODO(mikal):", "rename", "template_dir", "to", "base_dir", "and", "template_path\n", "to", "cached_image_path.", "This", "will", "be", "less", "confusing.\n", "Ensure", "can_fallocate", "is", "not", "initialised", "on", "the", "class\n", "Call", "twice", "to", "verify", "testing", "fallocate", "is", "only", "called", "once.\n", "Testing", "fallocate", "is", "only", "called", "when", "user", "has", "write", "access.\n", "check", "that", "exception", "hasn't", "been", "raised", "and", "the", "method\n", "returned", "correct", "object\n", "Test", "for", "bug", "1608934\n", "The", "Flat", "backend", "doesn't", "write", "to", "the", "image", "cache", "when", "creating", "a\n", "non-image", "backend.", "Test", "that", "we", "don't", "try", "to", "get", "the", "disk", "size", "of\n", "a", "non-existent", "backend.\n", "Lets", "assume", "the", "base", "image", "cache", "directory", "already", "exists\n", "Return", "True", "only", "for", "files", "previously", "created", "during\n", "execution.", "This", "allows", "us", "to", "test", "that", "we're", "not", "calling\n", "get_disk_size()", "on", "something", "which", "hasn't", "been", "previously\n", "created.\n", "get_disk_size", "will", "explode", "if", "called", "on", "a", "path", "which", "doesn't\n", "exist.", "Specific", "exception", "not", "important", "for", "this", "test.\n", "Not", "important,", "won't", "actually", "be", "called", "by", "patched", "code.\n", "The", "template", "function", "we", "pass", "to", "cache.", "Calling", "this", "will\n", "cause", "target", "to", "be", "created.\n", "We're", "not", "testing", "preallocation\n", "Assume", "the", "disk", "doesn't", "already", "exist\n", "This", "won't", "actually", "be", "executed", "since", "change", "I46b5658e,\n", "but", "this", "is", "how", "the", "unpatched", "code", "will", "fail.", "We", "include", "this\n", "here", "as", "a", "belt-and-braces", "sentinel.\n", "Try", "to", "create", "a", "2G", "image\n", "The", "real", "assertion", "is", "that", "the", "above", "call", "to", "cache()", "didn't\n", "raise", "AssertionError", "which,", "if", "we", "get", "here,", "it", "clearly", "didn't.\n", "Ignores", "its", "arguments", "and", "returns", "the", "wrapped", "function", "unmodified\n", "Fake", "exists", "returns", "true", "for", "paths", "which", "have", "been", "added", "to", "the\n", "exists", "set\n", "Fake", "create_volume", "causes", "exists", "to", "return", "true", "for", "the", "volume\n", "Assert", "that", "when", "we", "call", "cache()", "for", "an", "ephemeral", "disk", "with", "the\n", "Lvm", "backend,", "we", "call", "fetch_func", "with", "a", "target", "of", "the", "Lvm", "disk\n", "Ensure", "that", "the", "method", "does", "nothing", "when", "no", "location", "is", "provided\n", "Ensure", "that", "destroy_volume", "is", "not", "called\n", "Ensure", "that", "destroy_volume", "is", "called"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_resource_class_cache.py": ["TestResourceClassCache", "cache", "conn", "exception", "fields", "fixtures", "id", "ins_stmt", "len", "mock", "name", "names", "rc", "rc_cache", "sel_mock", "self", "sess_mock", "standards", "standards2", "super", "test", "Haven't", "added", "anything", "to", "the", "DB", "yet,", "so", "should", "raise\n", "ResourceClassNotFound\n", "Now", "add", "to", "the", "database", "and", "verify", "appropriate", "results...\n", "Try", "same", "again", "and", "verify", "we", "don't", "hit", "the", "DB."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/291_enforce_flavors_migrated.py": ["MetaData", "Table", "True", "_", "and_", "count", "exception", "func", "instances", "meta", "migrate_engine", "msg", "select", "sysmeta"], "/Users/mehranhassani/repos/nova/nova/virt/hardware.py": ["AttributeError", "CONF", "False", "KeyError", "LOG", "MEMPAGES_ANY", "MEMPAGES_LARGE", "MEMPAGES_SMALL", "None", "True", "TypeError", "ValueError", "_", "_LI", "__name__", "_filter_for_numa_threads", "_get_cpu_policy_constraints", "_get_cpu_thread_policy_constraints", "_get_cpu_topology_constraints", "_get_desirable_cpu_topologies", "_get_flavor_image_meta", "_get_pinning", "_get_possible_cpu_topologies", "_get_realtime_mask", "_numa_cell_supports_pagesize_request", "_numa_fit_instance_cell", "_numa_fit_instance_cell_with_pinning", "_numa_get_constraints_auto", "_numa_get_constraints_manual", "_numa_get_cpu_map_list", "_numa_get_flavor_cpu_map_list", "_numa_get_flavor_mem_map_list", "_numa_get_mem_map_list", "_numa_get_pagesize_constraints", "_numa_pagesize_usage_from_cell", "_orphans", "_pack_instance_onto_cores", "_score_cpu_topology", "_sort_possible_cpu_topologies", "_threads", "_validate_numa_nodes", "allow_ranges", "allow_threads", "avail_pagesize", "available_siblings", "availcpus", "bestthreads", "bucket", "c", "cell", "cell_topologies", "cellid", "cells", "cfg", "check_and_return_pages_size", "collections", "context", "cores", "cpu", "cpu_limit", "cpu_list", "cpu_policy", "cpu_thread_policy", "cpu_time_ns", "cpu_usage", "cpu_usage_diff", "cpuindex", "cpuprop", "cpuset", "cpuset_ids", "cpuset_reject_ids", "desired", "dict", "dict_cells", "end", "entry", "exception", "extra_specs", "fields", "flavor", "flavor_cpu_list", "flavor_key", "flavor_mask", "flavor_mem_list", "flavor_nodes", "flavor_num_ports", "flavor_policy", "flavor_request", "flavor_rt", "flvcores", "flvmaxcores", "flvmaxsockets", "flvmaxthreads", "flvsockets", "flvthreads", "fractions", "free", "free_cpus", "get_number", "got_cell", "host", "host_cell", "host_cell_id", "host_cell_perm", "host_numa_topology", "host_topology", "host_topology_and_format_from_host", "hostcell", "hw_numa_cpus", "hw_numa_mem", "id", "image", "image_cpu_list", "image_key", "image_mask", "image_mem_list", "image_meta", "image_nodes", "image_num_ports", "image_policy", "image_request", "inst_cell", "inst_cell_mem", "instance", "instance_cell", "instance_cores", "instance_numa_topology", "instance_topology", "instance_topology_from_instance", "instancecell", "instances", "int", "is_realtime_enabled", "isinstance", "itertools", "jsonify_result", "jsonutils", "key", "len", "limit_cell", "limits", "list", "logging", "map", "mask", "max", "max_mem_kb", "maxcores", "maximum", "maxsockets", "maxthreads", "maxtopology", "mem", "mem_kb", "mem_list", "memory_usage", "memprop", "min", "min_requested_threads", "mostthreads", "ncpus", "never_serialize_result", "new_instance_cell", "newcell", "node", "nodes", "nova", "num_cpu", "num_ports", "numa_cell", "numa_topology", "numa_usage_from_instances", "obj", "obj_instance", "object", "objects", "other", "p", "page", "pages", "pagesize", "parse_cpu_spec", "parts", "pci_requests", "pci_stats", "pinned_cpus", "pinning", "policy", "possible", "preferred", "previndex", "property", "props", "ram_limit", "range", "range_parts", "ranges", "reject", "request", "rt", "rt_mask", "rule", "s", "score", "scores", "self", "set", "setattr", "sib", "sibling_set", "sibling_sets", "sign", "single_cell", "six", "sockets", "sorted", "spec", "specified_threads", "start", "state", "str", "strutils", "t", "threads", "threads_no", "threads_per_core", "topo", "topology", "totalmem", "units", "updated_numa_topology", "usable_cores", "vcpus", "vcpus_rt", "verify_pagesizes", "wantthreads", "wanttopology", "was_json", "x", "zip", "Generate", "a", "CPU-vCPU", "pin", "mapping.\nExtract", "both", "flavor-", "and", "image-based", "variants", "of", "metadata.\nValidate", "and", "return", "the", "requested", "CPU", "policy.\nValidate", "and", "return", "the", "requested", "CPU", "thread", "policy.\nReturns", "realtime", "mask", "based", "on", "flavor/image", "meta\nDetermines", "instance", "vCPUs", "used", "as", "RT", "for", "a", "given", "spec", "Handle", "multi", "','\n", "Note", "the", "count", "limit", "in", "the", ".split()", "call\n", "So,", "this", "was", "a", "range;", "start", "by", "converting", "the", "parts", "to", "ints\n", "Make", "sure", "it's", "a", "valid", "range\n", "Add", "available", "CPU", "ids", "to", "set\n", "Not", "a", "range,", "the", "rule", "is", "an", "exclusion", "rule;", "convert", "to", "int\n", "OK,", "a", "single", "CPU", "to", "include;", "convert", "to", "int\n", "Use", "sets", "to", "handle", "the", "exclusion", "rules", "for", "us\n", "We", "attempt", "to", "detect", "ranges,", "but", "don't", "bother", "with\n", "trying", "to", "do", "range", "negations", "to", "minimize", "the", "overall\n", "spec", "string", "length\n", "Obtain", "the", "absolute", "limits", "from", "the", "flavor\n", "Get", "any", "customized", "limits", "from", "the", "image\n", "Image", "limits", "are", "not", "permitted", "to", "exceed", "the", "flavor\n", "limits.", "ie", "they", "can", "only", "lower", "what", "the", "flavor", "defines\n", "Get", "any", "default", "preferred", "topology", "from", "the", "flavor\n", "If", "the", "image", "limits", "have", "reduced", "the", "flavor", "limits\n", "we", "might", "need", "to", "discard", "the", "preferred", "topology\n", "from", "the", "flavor\n", "Finally", "see", "if", "the", "image", "has", "provided", "a", "preferred\n", "topology", "to", "use\n", "Image", "topology", "is", "not", "permitted", "to", "exceed", "image/flavor\n", "limits\n", "If", "no", "preferred", "topology", "was", "set", "against", "the", "image\n", "then", "use", "the", "preferred", "topology", "from", "the", "flavor\n", "We", "use", "'and'", "not", "'or',", "since", "if", "any", "value", "is", "set\n", "against", "the", "image", "this", "invalidates", "the", "entire", "set\n", "of", "values", "from", "the", "flavor\n", "Clamp", "limits", "to", "number", "of", "vcpus", "to", "prevent\n", "iterating", "over", "insanely", "large", "list\n", "Figure", "out", "all", "possible", "topologies", "that", "match\n", "the", "required", "vcpus", "count", "and", "satisfy", "the", "declared\n", "limits.", "If", "the", "total", "vCPU", "count", "were", "very", "high\n", "it", "might", "be", "more", "efficient", "to", "factorize", "the", "vcpu\n", "count", "and", "then", "only", "iterate", "over", "its", "factors,", "but\n", "that's", "overkill", "right", "now\n", "We", "want", "to\n", "-", "Minimize", "threads", "(ie", "larger", "sockets", "*", "cores", "is", "best)\n", "-", "Prefer", "sockets", "over", "cores\n", "First", "figure", "out", "the", "largest", "available", "thread\n", "count", "which", "is", "not", "greater", "than", "wantthreads\n", "Now", "restrict", "to", "just", "those", "topologies", "which\n", "match", "the", "largest", "thread", "count\n", "Look", "at", "possible", "topologies", "and", "score", "them", "according\n", "to", "how", "well", "they", "match", "the", "preferred", "topologies\n", "We", "don't", "use", "python's", "sort(),", "since", "we", "want", "to\n", "preserve", "the", "sorting", "done", "when", "populating", "the\n", "'possible'", "list", "originally\n", "Build", "list", "of", "all", "possible", "topologies", "sorted\n", "by", "the", "match", "score,", "best", "match", "first\n", "We", "build", "up", "a", "data", "structure", "that", "answers", "the", "question:", "'Given", "the\n", "number", "of", "threads", "I", "want", "to", "pack,", "give", "me", "a", "list", "of", "all", "the", "available\n", "sibling", "sets", "(or", "groups", "thereof)", "that", "can", "accommodate", "it'\n", "make", "sure", "we", "have", "at", "least", "one", "fully", "free", "core\n", "we", "only", "want", "to", "\"use\"", "one", "thread", "per", "core\n", "REQUIRE,", "PREFER", "(explicit,", "implicit)\n", "NOTE(ndipanov):", "We", "iterate", "over", "the", "sibling", "sets", "in", "descending", "order\n", "of", "cores", "that", "can", "be", "packed.", "This", "is", "an", "attempt", "to", "evenly", "distribute\n", "instances", "among", "physical", "cores\n", "NOTE(sfinucan):", "The", "key", "difference", "between", "the", "require", "and\n", "prefer", "policies", "is", "that", "require", "will", "not", "settle", "for", "non-siblings\n", "if", "this", "is", "all", "that", "is", "available.", "Enforce", "this", "by", "ensuring", "we're\n", "using", "sibling", "sets", "that", "contain", "at", "least", "one", "sibling\n", "NOTE(sfinucan):", "If", "siblings", "weren't", "available", "and", "we're", "using", "PREFER\n", "(implicitly", "or", "explicitly),", "fall", "back", "to", "linear", "assignment", "across\n", "cores\n", "Try", "to", "pack", "the", "instance", "cell", "onto", "cores\n", "Straightforward", "to", "pin", "to", "available", "cpus", "when", "there", "is", "no\n", "hyperthreading", "on", "the", "host\n", "NOTE", "(ndipanov):", "do", "not", "allow", "an", "instance", "to", "overcommit", "against\n", "itself", "on", "any", "NUMA", "cell\n", "Nothing", "was", "specified", "for", "hugepages,\n", "let's", "the", "default", "process", "running.\n", "Image", "masks", "are", "used", "ahead", "of", "flavor", "masks", "as", "they", "will", "have", "more\n", "specific", "requirements\n", "TODO(sahid):", "Move", "numa", "related", "to", "hardware/numa.py\n", "If", "one", "property", "list", "is", "specified", "both", "must", "be\n", "If", "any", "node", "has", "data", "set,", "all", "nodes", "must", "have", "data", "set\n", "We", "currently", "support", "same", "pagesize", "for", "all", "cells.\n", "sanity", "checks\n", "TODO(ndipanov):", "We", "may", "want", "to", "sort", "permutations", "differently\n", "depending", "on", "whether", "we", "want", "packing/spreading", "over", "NUMA", "nodes\n", "This", "exception", "will", "been", "raised", "if", "instance", "cell's\n", "custom", "pagesize", "is", "not", "supported", "with", "host", "cell", "in\n", "_numa_cell_supports_pagesize_request", "function.\n", "TODO(ndipanov):", "Remove", "when", "all", "code", "paths", "are", "using", "objects\n", "NOTE", "(ndipanov):", "This", "may", "cause", "a", "lazy-load", "of", "the", "attribute\n", "NOTE", "(ndipanov):", "A", "horrible", "hack", "so", "that", "we", "can", "use\n", "this", "in", "the", "scheduler,", "since", "the\n", "InstanceNUMATopology", "object", "is", "serialized", "raw", "using\n", "the", "obj_base.obj_to_primitive,", "(which", "is", "buggy", "and\n", "will", "give", "us", "a", "dict", "with", "a", "list", "of", "InstanceNUMACell\n", "objects),", "and", "then", "passed", "to", "jsonutils.to_primitive,\n", "which", "will", "make", "a", "dict", "out", "of", "those", "objects.", "All", "of\n", "this", "is", "done", "by", "scheduler.utils.build_request_spec\n", "called", "in", "the", "conductor.\n\n", "Remove", "when", "request_spec", "is", "a", "proper", "object", "itself!\n", "TODO(ndipanov):", "Remove", "when", "all", "code", "paths", "are", "using", "objects\n", "TODO(ndipanov):", "Remove", "when", "all", "code", "paths", "are", "using", "objects"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_cinder.py": ["BaseCinderTestCase", "CATALOG", "CONF", "CinderV2TestCase", "None", "True", "URL", "_attachment_id", "_attachment_id_2", "_device", "_device_2", "_image_metadata", "_instance_uuid", "_instance_uuid_2", "_volume_attachment", "_volume_attachment_2", "_volume_id", "args", "c", "cacert", "cinder", "cinder_client_v2", "collections", "context", "ctxt", "endpoint", "exception", "exp_volume_attachment", "exp_volume_attachment_2", "fake_session", "fixture", "get_api_version", "get_endpoint", "kwargs", "mock", "nova", "object", "retries", "self", "super", "test", "timeout", "v", "volume", "Tests", "that", "we", "fail", "if", "trying", "to", "use", "Cinder", "v1.\nTest", "case", "for", "cinder", "volume", "v2", "api.", "The", "True/False", "negation", "is", "awkward,", "but", "better", "for", "the", "client\n", "to", "pass", "us", "insecure=True", "and", "we", "check", "verify_cert", "==", "False\n", "NOTE(mriedem):", "This", "does", "not", "extend", "BaseCinderTestCase", "because", "Cinder", "v1", "is\n", "no", "longer", "supported,", "this", "is", "just", "to", "test", "that", "trying", "to", "use", "v1", "fails.\n", "setup", "mocks"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migration.py": ["False", "INIT_VERSION", "LOG", "None", "Repository", "True", "ValueError", "_", "_REPOSITORY", "__file__", "__name__", "_find_migrate_repo", "_process_null_records", "check_fkeys", "col_name", "context", "current_version", "database", "db_session", "db_utils", "db_version", "db_version_control", "delete", "engine", "exc", "exception", "fkey", "fkey_found", "fkeys", "get_engine", "int", "len", "list", "logging", "meta", "null", "os", "path", "processed", "records", "rel_path", "repository", "reversed", "sqlalchemy", "table", "table_name", "tables", "version", "versioning_api", "versioning_exceptions", "Get", "the", "path", "for", "the", "migrate", "repository.", "Some", "pre-Essex", "DB's", "may", "not", "be", "version", "controlled.\n", "Require", "them", "to", "upgrade", "using", "Essex", "first.\n", "NOTE(mriedem):", "filter", "out", "tables", "that", "don't", "have", "a", "foreign", "key", "back\n", "to", "the", "instances", "table", "since", "they", "could", "have", "stale", "data", "even", "if\n", "instances.uuid", "wasn't", "NULL.\n", "NOTE(mriedem):", "We're", "going", "to", "load", "up", "all", "of", "the", "tables", "so", "we", "can", "find\n", "any", "with", "an", "instance_uuid", "column", "since", "those", "may", "be", "foreign", "keys", "back\n", "to", "the", "instances", "table", "and", "we", "want", "to", "cleanup", "those", "records", "first.", "We\n", "have", "to", "do", "this", "explicitly", "because", "the", "foreign", "keys", "in", "nova", "aren't\n", "defined", "with", "cascading", "deletes.\n", "Keep", "track", "of", "all", "of", "the", "tables", "that", "had", "hits", "in", "the", "query.\n", "Ignore", "the", "fixed_ips", "table", "by", "design.\n", "Now", "process", "the", "*instances", "tables."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_console_output.py": ["ConsoleOutputExtensionTestV21", "ConsoleOutputPolicyEnforcementV21", "None", "True", "_context", "_ctx", "_instance", "_tail_len", "body", "compute_api", "console_output_v21", "context", "controller_class", "exc", "exception", "expect", "expected_attrs", "fake_get", "fake_get_console_output", "fake_get_console_output_all_characters", "fake_get_console_output_not_ready", "fake_get_not_found", "fake_instance", "fakes", "fixture", "i", "instance_uuid", "int", "length_dict", "mock", "mock_get_console_output", "output", "range", "req", "rule_name", "self", "str", "string", "super", "tail_length", "test", "validation_error", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1595962.py": ["Exception", "False", "REQUIRES_LOCKING", "TestSerialConsoleLiveMigrate", "True", "api_fixture", "cast_as_call", "dict", "ex", "fake_connection", "fake_libvirt_utils", "fakelibvirt", "fixtures", "libvirt_guest", "mock", "mock_conductor_source_check", "mock_create_image", "mock_get_disk_size", "mock_get_job_info", "mock_get_volume_connector", "mock_host_get_connection", "mock_migrate_to_uri", "mock_path_get_size", "nova", "nova_fixtures", "policy_fixture", "post", "self", "server", "server_attr", "server_id", "super", "test", "time", "timeout", "Replace", "libvirt", "with", "fakelibvirt\n", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n1595962.\nL5842-L5852\n", "This", "should", "succeed"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_nova_api.py": ["False", "None", "api", "config", "count", "exception", "fake_server", "fake_service", "launcher", "mock", "mock_exit", "mock_service", "self", "test", "version_cache", "required", "because", "otherwise", "oslo", "early", "parse_args", "dies\n", "required", "so", "we", "don't", "set", "the", "global", "service", "version", "cache\n", "required", "because", "of", "where", "the", "portbind", "happens,", "so", "that", "we\n", "collide", "on", "ports."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_host_mapping.py": ["None", "_TestHostMappingObject", "cell_obj", "create_in_db", "db_mapping", "db_val", "destroy_in_db", "fake_cell", "fake_cell_obj", "get_db_mapping", "host", "host_from_db", "host_mapping", "mapped_cell", "mapping_obj", "mock", "mock_load", "new_fake_cell", "object", "objects", "save_in_db", "self", "test", "test_cell_mapping", "test_objects", "updates", "Test", "when", "db", "object", "does", "not", "have", "cell_mapping", "Check", "that", "lazy", "loading", "isn't", "happening\n", "If", "db", "object", "has", "no", "cell_mapping,", "lazy", "loading", "should", "occur\n", "Check", "that", "cell_mapping", "is", "lazy", "loaded\n", "This", "isn't", "needed", "here"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_type_filters.py": ["agg_mock", "diff_type", "fakes", "host", "inst1", "inst2", "mock", "objects", "self", "set", "spec_obj", "spec_obj2", "spec_obj3", "target_id", "test", "type_filter", "uuids", "True", "since", "no", "instances", "on", "host\n", "Add", "an", "instance", "with", "the", "same", "instance_type_id\n", "True", "since", "only", "same", "instance_type_id", "on", "host\n", "Add", "an", "instance", "with", "a", "different", "instance_type_id\n", "False", "since", "host", "now", "has", "an", "instance", "of", "a", "different", "type\n", "tests", "when", "no", "instance_type", "is", "defined", "for", "aggregate\n", "True", "as", "no", "instance_type", "set", "for", "aggregate\n", "tests", "when", "a", "single", "instance_type", "is", "defined", "for", "an", "aggregate\n", "using", "legacy", "single", "value", "syntax\n", "True", "as", "instance_type", "is", "allowed", "for", "aggregate\n", "False", "as", "instance_type", "is", "not", "allowed", "for", "aggregate\n", "tests", "when", "a", "single", "instance_type", "is", "defined", "for", "multiple", "aggregates\n", "using", "legacy", "single", "value", "syntax\n", "True", "as", "instance_type", "is", "allowed", "for", "first", "aggregate\n", "True", "as", "instance_type", "is", "allowed", "for", "second", "aggregate\n", "False", "as", "instance_type", "is", "not", "allowed", "for", "aggregates\n", "tests", "when", "multiple", "instance_types", "are", "defined", "for", "aggregate\n", "True", "as", "instance_type", "is", "allowed", "for", "aggregate\n", "True", "as", "instance_type", "is", "allowed", "for", "aggregate\n", "False", "as", "instance_type", "is", "not", "allowed", "for", "aggregate"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_disk_filters.py": ["agg_mock", "disk_filter", "fakes", "filt_cls", "host", "mock", "objects", "self", "set", "spec_obj", "test", "Only", "1Gb", "left,", "but", "with", "10x", "overprovision", "a", "7Gb", "instance", "should\n", "still", "fit.", "Schedule", "will", "succeed.\n", "According", "to", "the", "allocation", "ratio,", "This", "host", "has", "119", "Gb", "left,\n", "but", "it", "doesn't", "matter", "because", "the", "requested", "instance", "is\n", "bigger", "than", "the", "whole", "drive.", "Schedule", "will", "fail.\n", "1GB", "used...", "so", "119GB", "allowed...\n", "Uses", "global", "conf."], "/Users/mehranhassani/repos/nova/nova/volume/cinder.py": ["CONF", "Exception", "False", "LOG", "None", "NotImplementedError", "True", "_", "_LE", "_LW", "_SESSION", "__name__", "_reraise", "_untranslate_snapshot_summary_view", "_untranslate_volume_summary_view", "a", "args", "attachment", "attachment_id", "attachments", "auth", "availability_zone", "az", "cinder_client", "cinder_exception", "cinderclient", "client", "collections", "connection_info", "connector", "context", "copy", "ctx", "d", "description", "desired_exc", "dict", "encodeutils", "endpoint_override", "err_msg", "error", "ex", "exc", "exception", "excutils", "fields", "functools", "getattr", "hasattr", "image_id", "instance", "instance_az", "instance_uuid", "interface", "item", "items", "key", "keystone_exception", "ks_loading", "kwargs", "logging", "metadata", "method", "mode", "mountpoint", "msg", "name", "new_volume_id", "nova", "object", "old_volume_id", "res", "res_id", "rval", "rvals", "search_opts", "self", "service_name", "service_parameters", "service_type", "six", "size", "snapshot", "snapshot_id", "status", "strutils", "sys", "translate_cinder_exception", "translate_mixed_exceptions", "translate_snapshot_exception", "translate_volume_exception", "type", "url", "value", "version", "vol", "volume", "volume_id", "volume_type", "vs", "wrapper", "Maps", "keys", "for", "volumes", "summary", "view.\nMaps", "keys", "for", "snapshots", "summary", "view.\nTransforms", "a", "cinder", "exception", "but", "keeps", "its", "traceback", "intact.\nTransforms", "exceptions", "that", "can", "come", "from", "both", "volumes", "and", "snapshots.\nAPI", "for", "interacting", "with", "the", "volume", "manager.\nEnsure", "that", "the", "availability", "zone", "is", "the", "same.", "TODO(jamielennox):", "This", "should", "be", "using", "proper", "version", "discovery", "from\n", "the", "cinder", "service", "rather", "than", "just", "inspecting", "the", "URL", "for", "certain", "string\n", "values.\n", "TODO(jdg):", "The", "calling", "code", "expects", "attach_time", "and\n", "mountpoint", "to", "be", "set.", "When", "the", "calling\n", "code", "is", "more", "defensive", "this", "can", "be\n", "removed.\n", "TODO(jdg):", "Information", "may", "be", "lost", "in", "this", "translation\n", "TODO(vish):", "abstract", "status", "checking?\n", "TODO(walter-boring):", "move", "this", "check", "to", "Cinder", "as", "part", "of\n", "the", "reserve", "call.\n", "TODO(vish):", "abstract", "status", "checking?\n", "NOTE(ildikov):Preparation", "for", "multiattach", "support,", "when", "a", "volume\n", "can", "be", "attached", "to", "multiple", "hosts", "and/or", "instances,\n", "so", "just", "check", "the", "attachment", "specific", "to", "this", "instance\n", "TODO(ildikov):", "change", "it", "to", "a", "better", "exception,", "when", "enable\n", "multi-attach.\n", "'90%'", "here", "is", "used", "to", "tell", "Cinder", "that", "Nova", "is", "done\n", "with", "its", "portion", "of", "the", "'creating'", "state.", "This", "can\n", "be", "removed", "when", "we", "are", "able", "to", "split", "the", "Cinder", "states\n", "into", "'creating'", "and", "a", "separate", "state", "of\n", "'creating_in_nova'.", "(Same", "for", "'deleting'", "state.)"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/networks.py": ["False", "add_network_to_project", "create", "parameter_types", "NOTE:", "In", "_extract_subnets(),", "dns1,", "dns2", "dhcp_server", "are\n", "used", "only", "for", "IPv4,", "not", "IPv6."], "/Users/mehranhassani/repos/nova/nova/objects/virt_device_metadata.py": ["DeviceBus", "DeviceMetadata", "None", "True", "VERSION", "base", "classmethod", "cls", "context", "db", "db_dev_meta", "db_extra", "device_metadata", "fields", "instance_uuid", "jsonutils", "primitive", "self"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/instance_actions.py": ["ACTION_KEYS", "ALIAS", "EVENT_KEYS", "False", "InstanceActionsController", "None", "_", "action", "action_id", "action_raw", "actions", "actions_raw", "alias", "common", "compute", "context", "dict", "event", "event_raw", "events_raw", "evt", "exc", "ext", "extensions", "ia_policies", "id", "instance", "key", "msg", "name", "req", "self", "server_id", "super", "utils", "version", "wsgi", "Returns", "the", "list", "of", "actions", "recorded", "for", "a", "given", "instance.\nReturn", "data", "about", "the", "given", "instance", "action.\nView", "a", "log", "of", "actions", "and", "events", "taken", "on", "an", "instance.", "noqa"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/io_ops_filter.py": ["CONF", "IoOpsFilter", "LOG", "ValueError", "_LW", "__name__", "aggregate_vals", "e", "filters", "host_state", "int", "logging", "max_io_ops", "max_io_ops_per_host", "nova", "num_io_ops", "passes", "self", "spec_obj", "utils", "value", "Filter", "out", "hosts", "with", "too", "many", "concurrent", "I/O", "operations."], "/Users/mehranhassani/repos/nova/nova/policies/floating_ips.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "floating_ips_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/340_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/common.py": ["CONF", "LOG", "None", "QUOTAS", "True", "ValueError", "_", "_LE", "_LW", "_STATE_MAP", "__name__", "_get_int_param", "_get_marker_param", "action", "all_tenants", "args", "attr", "base_url", "clean_parts", "collection_name", "collections", "compute_api", "compute_utils", "context", "default_dir", "default_key", "dict", "e", "err", "error", "exc", "exception", "expected_attrs", "expl", "expression", "f", "flavor_id", "floaters", "function", "functools", "get_networks_for_instance_from_nw_info", "get_pagination_params", "href", "id_key", "identifier", "inner", "input_params", "instance", "instance_id", "int", "int_param", "ip", "ips", "items", "itertools", "kwargs", "label", "last_item", "last_item_id", "len", "limit", "links", "list", "logging", "lower_statuses", "mapped_state", "marker", "max_items", "metadata", "min", "msg", "name", "networks", "new_path", "nova", "nw_info", "object", "objects", "offset", "orig_url", "param", "params", "parsed_url", "part", "parts", "prefix", "prefix_parts", "project_id", "quota", "raise_feature_not_supported", "re", "remove_trailing_version_from_href", "request", "search_opts", "self", "server_id", "set", "six", "sort_dirs", "sort_keys", "sorted", "state", "status", "status_string", "statuses", "str", "strutils", "task_map", "task_state", "task_states", "url", "url_join", "url_parts", "urlparse", "utils", "vif", "vm_state", "vm_states", "webob", "Given", "vm_state", "and", "task_state,", "return", "a", "status", "string.\nExtract", "integer", "param", "from", "request", "or", "fail.\nExtract", "marker", "id", "from", "request", "or", "fail.\nGet", "limited", "parameter", "from", "request.\nModel", "API", "responses", "as", "dictionaries.\nReturn", "href", "string", "with", "proper", "limit", "and", "marker", "params.\nReturn", "an", "href", "string", "pointing", "to", "this", "object.\nCreate", "a", "URL", "that", "refers", "to", "a", "specific", "resource.\nFetch", "an", "instance", "from", "the", "compute", "API,", "handling", "error", "checking.", "Note(maoy):", "the", "OS", "API", "spec", "1.1", "doesn't", "have", "CONFIRMING_RESIZE\n", "state", "so", "we", "comment", "that", "out", "for", "future", "reference", "only.\n", "task_states.RESIZE_CONFIRMING:", "'CONFIRMING_RESIZE',\n", "Add", "sort", "to", "avoid", "different", "order", "on", "set", "in", "Python", "3\n", "NOTE:", "this", "should", "match", "vX.X", "or", "vX\n", "At", "least", "give", "some", "meaningful", "message\n", "Empty", "last", "element", "should", "add", "a", "trailing", "slash\n", "NOTE(alex_xu):", "This", "method", "is", "used", "by", "v2.1", "legacy", "v2", "compat", "mode.\n", "In", "the", "legacy", "v2", "API,", "some", "of", "APIs", "strip", "the", "spaces", "and", "some", "of", "APIs", "not.\n", "The", "v2.1", "disallow", "leading/trailing,", "for", "compatible", "v2", "API", "and", "consistent,\n", "we", "enable", "leading/trailing", "spaces", "and", "strip", "spaces", "in", "legacy", "v2", "compat\n", "mode.", "Althrough", "in", "legacy", "v2", "API", "there", "are", "some", "APIs", "didn't", "strip", "spaces,\n", "but", "actually", "leading/trailing", "spaces(that", "means", "user", "depend", "on", "leading/\n", "trailing", "spaces", "distinguish", "different", "instance)", "is", "pointless", "usecase.\n", "The", "empty", "string", "is", "considered", "enabling", "all_tenants"], "/Users/mehranhassani/repos/nova/nova/tests/unit/__init__.py": ["False", "eventlet", "objects", "NOTE(alaski):", "Make", "sure", "this", "is", "done", "after", "eventlet", "monkey", "patching", "otherwise\n", "the", "threading.local()", "store", "used", "in", "oslo_messaging", "will", "be", "initialized", "to\n", "threadlocal", "storage", "rather", "than", "greenthread", "local.", "This", "will", "cause", "context\n", "sets", "and", "deletes", "in", "that", "storage", "to", "clobber", "each", "other.\n", "NOTE(comstud):", "Make", "sure", "we", "have", "all", "of", "the", "objects", "loaded.", "We", "do", "this\n", "at", "module", "import", "time,", "because", "we", "may", "be", "using", "mock", "decorators", "in", "our\n", "tests", "that", "run", "at", "import", "time."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/241_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_virt_cpu_topology.py": ["_TestVirtCPUTopologyObject", "_top_dict", "object", "objects", "self", "spec", "test_objects", "top_obj"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/fake_libvirt_utils.py": ["False", "File", "None", "RESIZE_SNAPSHOT_NAME", "True", "backing_file", "basename", "compression", "contents", "context", "dest", "dest_fmt", "disk_backing_files", "disk_format", "disk_path", "disk_sizes", "disk_type", "files", "format", "fp", "host", "hypervisor_version", "id_maps", "image_id", "image_meta", "instance", "io", "is_block_dev", "libvirt_utils", "lv", "max_size", "migrate_data", "mode", "name", "object", "on_completion", "on_execute", "open", "os", "out_path", "owner", "path", "receive", "relative", "self", "size", "source_fmt", "sparse", "src", "target", "umask", "vg", "virt_dom"], "/Users/mehranhassani/repos/nova/nova/network/security_group/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/294_add_service_heartbeat.py": ["BASE_TABLE_NAME", "Column", "DateTime", "MetaData", "NEW_COLUMN_NAME", "Table", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_baseproxy.py": ["BaseProxyTestCase", "False", "None", "StringIO", "True", "baseproxy", "config", "fixtures", "gmr", "logging", "mock", "mock_exists", "mock_exit", "mock_gmr", "mock_init", "mock_log", "mock_start", "self", "super", "test", "version", "websocketproxy", "NOTE(mriedem):", "sys.exit", "raises", "TestingException", "so", "we", "can", "actually", "exit\n", "the", "test", "normally."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_security_group_rule.py": ["False", "None", "_TestSecurityGroupRuleListObject", "_TestSecurityGroupRuleObject", "db", "db_mock", "dict", "fake_rule", "fake_rules", "field", "getattr", "instance", "len", "mock", "mock_get", "object", "objects", "ovo_exc", "parentgroup", "rule", "rules", "secgroup", "self", "setattr", "sgrg", "sgrgbsg", "str", "stupid_method", "test_objects", "test_security_group", "updates", "uuids", "x"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_config.py": ["False", "LibvirtConfigBaseTest", "None", "True", "ValueError", "actualXmlstr", "balloon", "cell", "config", "cputune", "device", "disk", "disk2", "emu", "etree", "expected", "expectedXmlstr", "expected_xml", "flavor", "fs", "fun_capability", "gidmap", "hostdev", "inxml", "len", "log", "matchers", "meta", "numa", "numamemnode0", "numamemnode1", "numamemnode2", "numamemory", "obj", "obj2", "obj_fields", "owner", "page", "page1", "page2", "root", "sch0", "sch1", "secret", "self", "set", "test", "tmpit", "tmrtc", "uidmap", "units", "vcpu0", "vcpu1", "vcpu2", "vcpu3", "xml", "xmldoc", "xmlin", "xmlout", "<hostdev", "mode=\"subsystem\"", "type=\"pci\"", "managed=\"yes\"/>\n<hostdev", "mode=\"subsystem\"", "type=\"usb\"", "managed=\"no\"/>240;&#159;&#146;&#169;</foo></demo>',\n", "create", "a", "new", "object", "from", "the", "XML", "and", "check", "it", "again\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same\n", "parse", "the", "xml", "from", "the", "first", "object", "into", "a", "new", "object", "and", "make", "sure\n", "they", "are", "the", "same"], "/Users/mehranhassani/repos/nova/nova/tests/functional/libvirt/test_pci_sriov_servers.py": ["CONF", "False", "LOG", "NumaHostInfo", "SRIOVServersTest", "ServersTestBase", "True", "__name__", "cfg", "conn_mock", "cpu_count", "created_server", "created_server_id", "end_status", "extra_spec", "extra_spec_vfs", "extra_spec_vm", "fake_connection", "fake_libvirt_utils", "fake_network", "fakelibvirt", "fields", "filter_mock", "fixtures", "flavor_id", "flavor_id_vfs", "found_server", "good_server", "host_info", "host_manager", "host_pass_mock", "img_mock", "kwargs", "len", "logging", "mock", "pci_alias", "pci_filter_class", "pci_info", "pf_flavor_id", "pf_server", "pfs_alias_name", "post", "s", "self", "server", "server_ids", "servers", "super", "test", "topology", "vf_server", "vfs_alias_name", "vm_flavor_id", "vm_server", "white_list", "update", "number", "of", "active", "cpus\n", "PFs", "will", "be", "removed", "from", "pools,", "unless", "these", "has", "been", "specifically\n", "requested.", "This", "is", "especially", "needed", "in", "cases", "where", "PFs", "and", "VFs", "have\n", "the", "same", "vendor/product", "id\n", "Replace", "libvirt", "with", "fakelibvirt\n", "Create", "server\n", "Validate", "that", "the", "server", "has", "been", "created\n", "It", "should", "also", "be", "in", "the", "all-servers", "list\n", "Validate", "that", "PciPassthroughFilter", "has", "been", "called\n", "Create", "a", "flavor\n", "Create", "a", "flavor\n", "Create", "a", "flavor\n", "Create", "a", "flavor\n", "Create", "a", "flavor\n", "Create", "a", "flavor"], "/Users/mehranhassani/repos/nova/nova/compute/flavors.py": ["CONF", "None", "True", "VALID_EXTRASPEC_NAME_REGEX", "VALID_ID_REGEX", "ValueError", "_", "_int_or_none", "context", "ctxt", "db", "ephemeral_gb", "exception", "expl", "extra_key", "extra_prefix", "extra_specs", "flavor", "flavor_attributes", "flavorid", "float", "get_default_flavor", "get_flavor_by_name", "instance", "instance_type", "int", "is_public", "isinstance", "k", "key", "key_name", "key_names_list", "kwargs", "len", "list", "memory", "metadata", "msg", "name", "nova", "objects", "parameter_types", "prefix", "prefixes", "re", "read_deleted", "root_gb", "rxtx_factor", "setattr", "six", "str", "strutils", "swap", "sys_meta", "system_metadata_flavor_extra_props", "system_metadata_flavor_props", "to_key", "type_key", "utils", "uuidutils", "v", "val", "valid_flavor_id", "valid_name", "value", "vcpus", "Built-in", "instance", "properties.\nCreates", "flavors.\nGet", "the", "default", "flavor.\nRetrieves", "single", "flavor", "by", "name.\nRetrieve", "flavor", "access", "list", "by", "flavor", "id.", "NOTE(luisg):", "Flavor", "names", "can", "include", "non-ascii", "characters", "so", "that", "users", "can\n", "create", "flavor", "names", "in", "locales", "that", "use", "them,", "however", "flavor", "IDs", "are", "limited\n", "to", "ascii", "characters.\n", "Validate", "extra", "specs", "key", "names.\n", "ensure", "name", "do", "not", "exceed", "255", "characters\n", "ensure", "name", "does", "not", "contain", "any", "special", "characters\n", "NOTE(vish):", "Internally,", "flavorid", "is", "stored", "as", "a", "string", "but", "it", "comes\n", "in", "through", "json", "as", "an", "integer,", "so", "we", "convert", "it", "here.\n", "ensure", "leading/trailing", "whitespaces", "not", "present.\n", "ensure", "flavor", "id", "does", "not", "exceed", "255", "characters\n", "ensure", "flavor", "id", "does", "not", "contain", "any", "special", "characters\n", "NOTE(wangbo):", "validate", "attributes", "of", "the", "creating", "flavor.\n", "ram", "and", "vcpus", "should", "be", "positive", "(", ">", "0)", "integers.\n", "disk,", "ephemeral", "and", "swap", "should", "be", "non-negative", "(", ">=", "0)", "integers.\n", "rxtx_factor", "should", "be", "a", "positive", "float\n", "ensure", "is_public", "attribute", "is", "boolean\n", "TODO(termie):", "flavor-specific", "code", "should", "probably", "be", "in", "the", "API", "that", "uses\n", "flavors.\n", "NOTE(danms):", "This", "method", "is", "deprecated,", "do", "not", "use", "it!\n", "Use", "instance.{old_,new_,}flavor", "instead,", "as", "instances", "no", "longer\n", "have", "flavor", "information", "in", "system_metadata.\n", "NOTE(danms):", "We", "do", "NOT", "save", "all", "of", "extra_specs,", "but", "only", "the\n", "NUMA-related", "ones", "that", "we", "need", "to", "avoid", "an", "uglier", "alternative.", "This\n", "should", "be", "replaced", "by", "a", "general", "split-out", "of", "flavor", "information", "from\n", "system_metadata", "very", "soon.\n", "NOTE(danms):", "This", "method", "is", "deprecated,", "do", "not", "use", "it!\n", "Use", "instance.{old_,new_,}flavor", "instead,", "as", "instances", "no", "longer\n", "have", "flavor", "information", "in", "system_metadata.\n", "NOTE(danms):", "We", "do", "NOT", "save", "all", "of", "extra_specs", "here,", "but", "only", "the\n", "NUMA-related", "ones", "that", "we", "need", "to", "avoid", "an", "uglier", "alternative.", "This\n", "should", "be", "replaced", "by", "a", "general", "split-out", "of", "flavor", "information", "from\n", "system_metadata", "very", "soon.\n", "NOTE(danms):", "This", "method", "is", "deprecated,", "do", "not", "use", "it!\n", "Instances", "no", "longer", "store", "flavor", "information", "in", "system_metadata\n", "NOTE(danms):", "We", "do", "NOT", "save", "all", "of", "extra_specs,", "but", "only", "the\n", "NUMA-related", "ones", "that", "we", "need", "to", "avoid", "an", "uglier", "alternative.", "This\n", "should", "be", "replaced", "by", "a", "general", "split-out", "of", "flavor", "information", "from\n", "system_metadata", "very", "soon."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/pool_states.py": ["ACTIVE", "CHANGING", "CREATED", "DISMISSED", "ERROR", "KEY", "POOL_FLAG", "metadata", "Checks", "if", "aggregate", "is", "a", "hypervisor_pool.", "Metadata", "keys"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/exact_disk_filter.py": ["False", "LOG", "True", "__name__", "filters", "host_state", "logging", "requested_disk", "self", "spec_obj", "Exact", "Disk", "Filter.\nReturn", "True", "if", "host", "has", "the", "exact", "amount", "of", "disk", "available.", "NOTE(mgoddard):", "Setting", "the", "limit", "ensures", "that", "it", "is", "enforced", "in\n", "compute.", "This", "ensures", "that", "if", "multiple", "instances", "are", "scheduled", "to", "a\n", "single", "host,", "then", "all", "after", "the", "first", "will", "fail", "in", "the", "claim."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_floating_ip_dns.py": ["False", "FloatingIPDNSDomainPolicyEnforcementV21", "FloatingIPDNSEntryPolicyEnforcementV21", "FloatingIpDNSDomainDeprecationTest", "FloatingIpDNSEntryDeprecationTest", "FloatingIpDNSTestV21", "None", "NotImplementedError", "True", "_quote_domain", "address", "avail_zone", "body", "calls", "context", "controller_method", "db", "delete", "delete_dns_domain_notfound", "delete_dns_entry_notfound", "dns_type", "domain", "domain2", "entries", "entry", "exc", "exception", "expected_status", "fake_get_dns_entries_by_name", "fakes", "fakeself", "fipdns_v21", "floating_ip_dns", "floating_ip_id", "fqdomain", "host", "id", "len", "mock", "name", "name2", "network", "network_add_dns_entry", "network_api_get_floating_ip", "network_create_private_dns_domain", "network_create_public_dns_domain", "network_delete_dns_domain", "network_delete_dns_entry", "network_get_dns_domains", "network_get_dns_entries_by_address", "network_get_dns_entries_by_name", "network_modify_dns_entry", "project", "req", "res", "res_dict", "rule_name", "self", "super", "temp", "test", "test_ipv4_address", "test_ipv4_address2", "test_ipv6_address", "urllib", "webob", "Create", "a", "floating", "ip", "object.", "None", "of", "these", "APIs", "are", "implemented", "for", "Neutron."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_test_utils.py": ["False", "IOError", "True", "ctxt", "db", "e", "errno", "fake_open", "fake_socket_fail", "fake_socket_ok", "fixtures", "instance_ref", "path", "self", "socket", "tempfile", "test", "test_utils", "x", "y", "get_test_admin_context's", "return", "value", "behaves", "like", "admin", "context.\n", "TODO(soren):", "This", "should", "verify", "the", "full", "interface", "context\n", "objects", "expose.\n", "get_test_instance's", "return", "value", "looks", "like", "an", "instance_ref."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/020_block_device_mappings_mediumtext.py": ["MetaData", "Table", "True", "api_models", "build_requests", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/servicegroup/drivers/mc.py": ["CONF", "Exception", "False", "LOG", "None", "RuntimeError", "True", "_", "_LI", "_LW", "__name__", "api", "base", "cache_utils", "getattr", "group_id", "is_up", "key", "logging", "member_id", "nova", "report_interval", "self", "service", "service_ref", "str", "timeutils", "Join", "the", "given", "service", "with", "its", "group.\nUpdate", "the", "state", "of", "this", "service", "in", "the", "datastore.", "memcached", "has", "data", "expiration", "time", "capability.\n", "set(...,", "time=CONF.service_down_time)", "uses", "it", "and\n", "reduces", "key-deleting", "code.\n", "TODO(termie):", "make", "this", "pattern", "be", "more", "elegant.\n", "TODO(vish):", "this", "should", "probably", "only", "catch", "connection", "errors"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_volume.py": ["API", "CONF", "False", "LOG", "None", "True", "__name__", "_instance", "attachment_id", "availability_zone", "connector", "context", "default", "desc", "description", "exception", "fake_snapshot", "fake_volume", "id", "instance", "instance_uuid", "key", "kwargs", "logging", "metadata", "mode", "mountpoint", "msg", "name", "nova", "object", "s", "self", "size", "snap", "snapshot", "snapshot_id", "snapshot_list", "status", "str", "timeutils", "user_uuid", "uuids", "v", "value", "volume", "volume_id", "volume_list", "volume_type", "Implementation", "of", "a", "fake", "volume", "API."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/evacuate.py": ["ALIAS", "CONF", "EvacuateController", "False", "None", "True", "_", "alias", "api_version_request", "args", "body", "common", "compute", "context", "controller", "e", "evac_policies", "evacuate", "evacuate_body", "exc", "exception", "extension", "extensions", "force", "host", "id", "instance", "kwargs", "message", "msg", "name", "nova", "on_shared_storage", "password", "req", "self", "state_error", "strutils", "super", "utils", "validation", "version", "wsgi", "Enables", "server", "evacuation.", "check", "that", "if", "requested", "to", "evacuate", "server", "on", "shared", "storage\n", "password", "not", "specified\n", "TODO(eliqiao):", "Should", "be", "responding", "here", "with", "202", "Accept\n", "because", "evacuate", "is", "an", "async", "call,", "but", "keep", "to", "200", "for\n", "backwards", "compatibility", "reasons."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/ironic/test_driver.py": ["CONF", "Exception", "FAKE_CLIENT", "FAKE_CLIENT_WRAPPER", "FakeClientWrapper", "FakeLoopingCall", "False", "HashRingTestCase", "IronicDriverConsoleTestCase", "IronicDriverGenerateConfigDriveTestCase", "IronicDriverTestCase", "NodeCacheTestCase", "None", "SENTINEL", "TestException", "True", "_", "_fake_get_console", "_fake_log_debug", "_fake_log_error", "_fake_log_warning", "_fake_set_console_mode", "_get_instance_info", "_get_properties", "_get_stats", "_make_compute_service", "avail_node", "available_nodes", "calls", "cfg", "configdrive", "console_type", "cw", "deploy_exc", "driver", "e", "enabled", "exception", "exceptions", "expected", "expected_cache", "expected_calls", "expected_cpus", "expected_hosts", "expected_patch", "expected_props", "expected_uuids", "fake", "fake_flavor", "fake_group", "fake_inst", "fake_instance", "fake_looping_call", "fake_net_info", "fake_refresh", "fake_resource", "fake_set_provision_state", "fake_validate", "firewall", "first_ironic_port_uuid", "first_port", "first_vif", "first_vif_id", "flavor", "flavor_id", "gotkeys", "hardware", "has_inst_info", "hash_ring", "host", "host_id", "hostname", "hosts", "i", "image_meta", "inst", "instance", "instance_info", "instance_metadata", "instance_params", "instances", "ironic_driver", "ironic_exception", "ironic_states", "ironic_utils", "is_up_calls", "loopingcall", "matchers", "memory_kib", "method_name", "mock", "mock__plug_vifs", "mock_add_instance_info", "mock_aif", "mock_aiitn", "mock_call", "mock_cd_builder", "mock_cleanup_deploy", "mock_configdrive", "mock_destroy", "mock_gbiu", "mock_gbiui", "mock_get", "mock_gi", "mock_hash", "mock_hash_ring", "mock_hosts", "mock_hr", "mock_inst_by_uuid", "mock_instance_meta", "mock_instances", "mock_list", "mock_log", "mock_looping", "mock_lp", "mock_make_drive", "mock_node", "mock_nodes", "mock_nr", "mock_pif", "mock_port_udt", "mock_pvifs", "mock_remove_instance_info", "mock_required_by", "mock_res_unavail", "mock_res_used", "mock_risr", "mock_save", "mock_sbf", "mock_services", "mock_set_pstate", "mock_sf", "mock_sg", "mock_sp", "mock_sps", "mock_ui", "mock_update", "mock_uvifs", "mock_validate_inst", "mock_wait", "mock_wait_active", "mock_warning", "mode", "msg", "n", "network_info", "network_interface", "node", "node_2", "node_dicts", "node_uuid", "nodes", "nova_context", "nova_matchers", "nova_states", "num_nodes", "object", "objects", "ok_state", "parsed", "port", "port_id", "power_state", "preserve", "properties", "props", "props_dict", "range", "regex", "response", "result", "retry_on_conflict", "second_ironic_port_uuid", "second_port", "second_vif", "second_vif_id", "self", "servicegroup", "services", "set", "six", "sorted", "state", "stats", "str", "super", "svc", "task_states", "temp_data", "test", "unavailable", "unused_node", "url", "utils", "uuid", "uuids", "uuidutils", "vm_states", "wantkeys", "Tests", "for", "the", "ironic", "driver.", "mock", "retries", "configs", "to", "avoid", "sleeps", "and", "make", "tests", "run", "quicker\n", "Assert", "_validate_instance_and_node", "wasn't", "called\n", "raw_cpu_arch", "is", "included", "because", "extra_specs", "filters", "do", "not\n", "canonicalized", "the", "arch\n", "Assert", "we", "didn't", "log", "any", "warning", "since", "all", "properties", "are\n", "correct\n", "raw_cpu_arch", "is", "included", "because", "extra_specs", "filters", "do", "not\n", "canonicalized", "the", "arch\n", "raw_cpu_arch", "is", "included", "because", "extra_specs", "filters", "do", "not\n", "canonicalized", "the", "arch\n", "Make", "sure", "it", "cpu_arch", "was", "canonicalized\n", "Assert", "we", "didn't", "log", "any", "warning", "since", "all", "properties", "are\n", "correct\n", "populate", "the", "cache\n", "prove", "that", "zero", "calls", "are", "made", "after", "populating", "cache\n", "a", "node", "in", "maintenance", "/w", "no", "instance", "and", "power", "OFF\n", "a", "node", "in", "maintenance", "/w", "no", "instance", "and", "ERROR", "power", "state\n", "a", "node", "not", "in", "maintenance", "/w", "no", "instance", "and", "bad", "power", "state\n", "a", "node", "not", "in", "maintenance", "or", "bad", "power", "state,", "bad", "provision", "state\n", "a", "node", "in", "cleaning\n", "a", "node", "in", "cleaning,", "waiting", "for", "a", "clean", "step", "to", "finish\n", "a", "node", "in", "deleting\n", "a", "node", "in", "deleted\n", "a", "node", "in", "AVAILABLE", "with", "an", "instance", "uuid\n", "these", "are", "both", "ok", "and", "should", "present", "as", "available", "as", "they\n", "have", "no", "instance_uuid\n", "a", "node", "in", "maintenance", "/w", "instance", "and", "active\n", "a", "node", "in", "maintenance", "/w", "no", "instance", "and", "power", "OFF\n", "a", "node", "/w", "instance", "on", "this", "compute", "daemon", "and", "power", "ON\n", "a", "node", "/w", "instance", "on", "another", "compute", "daemon", "and", "power", "ON\n", "a", "node", "not", "in", "maintenance", "/w", "no", "instance", "and", "bad", "power", "state\n", "ensure", "cache", "gets", "populated", "without", "the", "node", "we", "want\n", "populate", "the", "cache\n", "ironic_states.POWER_ON", "should", "be", "mapped", "to\n", "nova_states.RUNNING\n", "assert", "configdrive", "was", "not", "generated\n", "assert", "configdrive", "was", "generated\n", "assert", "call()", "is", "invoked", "with", "retry_on_conflict", "False", "to\n", "avoid", "bug", "#1341420\n", "For", "states", "that", "makes", "sense", "check", "if", "set_provision_state", "has\n", "been", "called\n", "Call", "the", "method", "under", "test", "here\n", "make", "the", "address", "be", "consistent", "with", "network_info's\n", "asserts\n", "asserts\n", "len(network_info)", ">", "len(ports)\n", "asserts\n", "assert", "port.update()", "was", "not", "called\n", "asserts\n", "assert", "port.update()", "was", "not", "called\n", "asserts\n", "assert", "port.update()", "was", "not", "called\n", "assert", "port.update()", "was", "not", "called\n", "normal", "operation,", "one", "compute", "service\n", "normal", "operation,", "many", "compute", "services\n", "we", "should", "manage", "a", "node", "we", "have", "an", "instance", "for,", "even", "if", "it", "doesn't\n", "map", "to", "us\n", "only", "two", "calls,", "having", "the", "instance", "will", "short-circuit", "the", "first", "node\n", "we", "should", "never", "manage", "a", "node", "that", "another", "compute", "service", "has\n", "an", "instance", "for,", "even", "if", "it", "maps", "to", "us\n", "only", "two", "calls,", "having", "the", "instance", "will", "short-circuit", "the", "first", "node\n", "mock", "retries", "configs", "to", "avoid", "sleeps", "and", "make", "tests", "run", "quicker\n", "Set", "it", "up", "so", "that", "_fake_get_console()", "returns", "'mode'\n", "After", "the", "call", "to", "set_console_mode(),", "then", "_wait_state()\n", "will", "call", "_get_console()", "to", "check", "the", "result.\n", "Set", "timeout", "to", "a", "small", "value", "to", "reduce", "testing", "time\n", "Note:", "timeout", "value", "is", "integer,", "use", "enforce_type=False", "to", "set", "it\n", "to", "a", "floating", "number.\n", "This", "causes", "the", "_wait_state()", "will", "timeout", "because\n", "the", "target", "mode", "never", "gets", "set", "successfully."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_remotefs.py": ["False", "None", "True", "already_mounted", "err_msg", "mkdir_call_args", "mock", "mock_execute", "mock_mkdtemp", "mock_ssh_execute", "processutils", "remotefs", "rm_call_args", "rsync_call_args", "self", "test", "touch_call_args", "utils", "Remote", "filesystem", "operations", "test", "case."], "/Users/mehranhassani/repos/nova/nova/service.py": ["CONF", "Exception", "False", "LOG", "None", "RuntimeError", "SERVICE_MANAGERS", "Service", "_", "_LE", "_LI", "_LW", "__name__", "_create_service_ref", "_launcher", "_update_service_ref", "args", "baserpc", "binary", "classmethod", "cls", "conductor", "conductor_api", "context", "ctxt", "debugger", "e", "endpoints", "exception", "getattr", "host", "importutils", "initial_delay", "key", "kwargs", "loader", "logging", "manager", "manager_class", "max_url_len", "messaging", "msg", "name", "nova", "objects", "objects_base", "os", "periodic_enable", "periodic_fuzzy_delay", "periodic_interval_max", "processutils", "raise_on_error", "random", "report_interval", "rpc", "self", "serializer", "server", "service", "service_obj", "service_ref", "servicegroup", "str", "super", "sys", "target", "this_service", "topic", "use_ssl", "utils", "version", "verstr", "wname", "worker_name", "workers", "wsgi", "Generic", "Node", "base", "class", "for", "all", "workers", "that", "run", "on", "hosts.\nTasks", "to", "be", "run", "at", "a", "periodic", "interval.\nPerform", "basic", "config", "checks", "before", "starting", "processing.\nProvides", "ability", "to", "launch", "API", "from", "a", "'paste'", "configuration.", "NOTE(danms):", "If", "we", "race", "to", "create", "a", "record", "with", "a", "sibling\n", "worker,", "don't", "fail", "here.\n", "Add", "service", "to", "the", "ServiceGroup", "membership", "group.\n", "Make", "sure", "the", "tempdir", "exists", "and", "is", "writable\n", "NOTE(danms):", "Name", "can", "be", "metadata,", "os_compute,", "or", "ec2,", "per\n", "nova.service's", "enabled_apis\n", "inherit", "all", "compute_api", "worker", "counts", "from", "osapi_compute\n", "Pull", "back", "actual", "port", "used\n", "NOTE(danms):", "If", "we", "race", "to", "create", "a", "record", "wth", "a", "sibling,\n", "don't", "fail", "here.\n", "NOTE(vish):", "the", "global", "launcher", "is", "to", "maintain", "the", "existing\n", "functionality", "of", "calling", "service.serve", "+\n", "service.wait"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_availability_zone_filters.py": ["TestAvailabilityZoneFilter", "agg_mock", "availability_zone_filter", "fakes", "host", "mock", "objects", "request", "self", "set", "staticmethod", "super", "test", "zone"], "/Users/mehranhassani/repos/nova/nova/tests/unit/notifications/objects/test_service.py": ["TestServiceStatusNotification", "True", "context", "event_type", "fake_service", "field", "fields", "getattr", "key", "mock", "mock_db_service_update", "mock_notification", "objects", "payload", "priority", "publisher", "self", "service_notification", "service_obj", "setattr", "super", "test", "timeutils", "value"], "/Users/mehranhassani/repos/nova/nova/cmd/common.py": ["CONF", "LOG", "NoDB", "None", "_", "_LE", "__name__", "_decorator", "action", "action_fn", "action_kwargs", "actions", "arg", "argparse", "args", "attr", "callable", "categories", "category", "category_subparsers", "command_object", "desc", "dict", "dir", "exception", "fn", "fn_args", "fn_kwargs", "func", "getattr", "i", "isinstance", "k", "kwargs", "len", "logging", "methods_of", "missing", "nova", "obj", "object", "parser", "print", "result", "self", "service_name", "six", "stacktrace", "subparsers", "text", "traceback", "utils", "v", "Blocks", "Nova", "DB", "access.", "Decorators", "for", "actions\n", "FIXME(markmc):", "hack", "to", "assume", "dest", "is", "the", "arg", "name", "without\n", "the", "leading", "hyphens", "if", "no", "dest", "is", "supplied\n", "call", "the", "action", "with", "the", "remaining", "arguments\n", "check", "arguments\n", "NOTE(mikal):", "this", "isn't", "the", "most", "helpful", "error", "message", "ever.", "It", "is\n", "long,", "and", "tells", "you", "a", "lot", "of", "things", "you", "probably", "don't", "want", "to", "know\n", "if", "you", "just", "got", "a", "single", "arg", "wrong."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/flavors.py": ["ALIAS", "False", "FlavorsController", "None", "True", "ValueError", "_", "_view_builder_class", "alias", "collection_actions", "common", "context", "e", "exception", "extensions", "filters", "flavor", "flavors", "flavors_view", "id", "int", "is_public", "limit", "limited_flavors", "marker", "member_actions", "msg", "name", "objects", "req", "resources", "self", "sort_dir", "sort_key", "strutils", "utils", "version", "webob", "wsgi", "Flavor", "controller", "for", "the", "OpenStack", "API.\nReturn", "all", "flavors", "in", "brief.\nReturn", "all", "flavors", "in", "detail.\nReturn", "data", "about", "the", "given", "flavor", "id.\nParse", "is_public", "into", "something", "usable.\nHelper", "function", "that", "returns", "a", "list", "of", "flavor", "dicts.\nFlavors", "Extension.", "preserve", "default", "value", "of", "showing", "only", "public", "flavors\n", "Only", "admin", "has", "query", "access", "to", "all", "flavor", "types"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/fake.py": ["AttributeError", "CannotDeleteFile", "ClusterComputeResource", "DataObject", "Datacenter", "Datastore", "DatastoreHostMount", "Exception", "FakeClient", "FakeFactory", "FakeObjectRetrievalSession", "FakeRetrieveResult", "FakeService", "FakeSession", "FakeVim", "False", "FileAlreadyExists", "FileFault", "FileLocked", "FileNotFound", "Folder", "HostInternetScsiHba", "HostNetworkSystem", "HostStorageSystem", "HostSystem", "LOG", "ManagedObject", "ManagedObjectReference", "Network", "None", "NotImplementedError", "ObjectContent", "OptionValue", "Prop", "ResourcePool", "SharesInfo", "Task", "True", "VirtualDisk", "VirtualDiskFlatVer2BackingInfo", "VirtualDiskRawDiskMappingVer1BackingInfo", "VirtualE1000", "VirtualEthernetCardResourceAllocation", "VirtualLsiLogicController", "VirtualMachine", "VirtualPCNet32", "_CLASSES", "_FAKE_FILE_SIZE", "_FAKE_VCENTER_UUID", "__init__", "__name__", "_add_file", "_array_types", "_convert_to_array_of_mor", "_convert_to_array_of_opt_val", "_counter", "_create_array_of_type", "_create_object", "_db_content", "_get_object", "_get_object_refs", "_get_objects", "_get_vm_mdo", "_host_sk", "_merge_extraconfig", "_remove_file", "_vim_map", "about_info", "accessible", "args", "array_of_mors", "array_of_optv", "array_type", "array_type_name", "attr", "attr_name", "busNumber", "c", "capacity", "changes", "cleanup", "clone_spec", "cluster", "collections", "config", "config_spec", "connected", "constants", "context", "controller", "controllerKey", "controller_key", "cookies", "cpu", "cpuAllocation", "cpus", "create_cluster", "create_datacenter", "create_datastore", "create_folder", "create_host", "create_host_network_system", "create_host_storage_system", "create_network", "create_res_pool", "create_task", "create_vm", "data", "data_center", "data_store", "datastore", "datastores", "dc_name", "default_lun", "default_target", "destination", "device_change", "devices", "directory", "disk", "disk_backing", "dname", "ds", "ds_do", "ds_file_path", "ds_name", "ds_obj", "ds_path", "ds_ref", "ds_ref1", "ds_ref2", "elem", "error", "error_fault", "ex", "exception", "exconfig_do", "existing", "extension_manager", "extra", "extraConf", "extraConfig", "extraConfigs", "extra_config", "factory", "fake_klass", "file", "file_path", "filename", "flat_vmdk_file_path", "folder", "folder_do", "folder_ref", "free", "free_memory", "get_file", "getattr", "hardware", "hasattr", "host", "host_bus_adapter_array", "host_mdo", "host_net_key", "host_net_sys", "host_net_system", "host_pg", "host_pg_do", "host_pgrps", "host_ref", "host_storage_sys", "host_storage_sys_key", "host_storage_system", "host_summary", "host_sys", "host_system", "hosts", "image", "info", "instance", "iscsi_adapter", "iscsi_hba", "iscsi_hba_array", "iscsi_name", "iscsi_topology", "isinstance", "jsonutils", "key", "key1", "key2", "klass", "kv", "kwargs", "len", "list", "logging", "lst_objs", "lst_ret_objs", "maintenance_mode", "matched", "matched_files", "mdo", "mdo_ref", "mdo_refs", "memory", "memoryAllocation", "method", "missing_list", "mo_id_prefix", "module", "mors", "msg", "name", "net_info_pnic", "net_ref", "net_swicth", "network", "network_do", "new_file", "new_files", "obj", "obj_content", "obj_name", "obj_ref", "obj_type", "object", "objs", "options", "optval", "optvals", "other", "owner", "parent", "parent_mdo", "path", "pg_name", "pg_spec", "pnic_do", "pool", "port", "prefix", "product", "prop", "prop_list", "prop_name", "properties", "property", "protocol", "pwr_state", "quickStats", "quickstats", "r_pool", "res_pool", "res_pool_ref", "result", "ret", "runtime", "s", "scsiCtlrUnitNumber", "scsi_lun_array", "self", "send_targets", "service_content", "session", "session_manager", "set", "setattr", "six", "size", "source", "source_vm_mdo", "source_vmref", "spec", "spec_set", "spec_type", "state", "storageDevice", "str", "summary", "super", "sys", "t", "table", "table_obj", "task", "task_mdo", "task_name", "task_ref", "test", "to_delete", "token", "trace", "transport", "type", "unitNumber", "units", "uuid", "uuidutils", "val", "value", "values", "version", "vexc", "virtual_machine", "vlanid", "vm", "vmPathName", "vm_dict", "vm_list", "vm_mdo", "vm_path", "vm_ref", "vm_refs", "vm_uuid", "vmdk_file_path", "vmware_api_session", "vswitch_do", "vswitch_name", "vswitches", "x", "Resets", "the", "db", "contents.\nClear", "the", "db", "contents.\nCreate", "an", "object", "in", "the", "db.\nGet", "object", "for", "the", "give", "reference.\nGet", "objects", "of", "the", "type.\nWraps", "the", "given", "array", "into", "a", "DataObject.\nWraps", "the", "given", "array", "into", "a", "DataObject.\nReturns", "an", "array", "to", "contain", "objects", "of", "type", "t.\nObject", "to", "retrieve", "a", "ObjectContent", "list.\nGet", "object", "References", "of", "the", "type.\nUpdate", "objects", "of", "the", "type.\nProperty", "Object", "base", "class.\nA", "managed", "object", "reference", "is", "a", "remote", "identifier.\nObjectContent", "array", "holds", "dynamic", "properties.\nManaged", "Object", "base", "class.\nSets", "the", "obj", "property", "which", "acts", "as", "a", "reference", "to", "the", "object.\nDeletes", "an", "attribute.\nGenerates", "a", "new", "Managed", "Object", "ID.\nData", "object", "base", "class.\niSCSI", "Host", "Bus", "Adapter.\nFile", "already", "exists", "class.\nFile", "not", "found", "class.\nFile", "fault.\nCannot", "delete", "file.\nFile", "locked.\nVirtual", "Disk", "class.\nVirtualDiskFlatVer2BackingInfo", "class.\nVirtualDiskRawDiskMappingVer1BackingInfo", "class.\nVirtualLsiLogicController", "class.\nVirtualLsiLogicSASController", "class.\nVirtualPCNet32", "class.\nOptionValue", "class.\nVirtual", "Machine", "class.\nFolder", "class.\nNetwork", "class.\nResource", "Pool", "class.\nCluster", "class.\nDatastore", "class.\nHostNetworkSystem", "class.\nHostStorageSystem", "class.\nHost", "System", "class.\nAdds", "a", "port", "group", "to", "the", "host", "system", "object", "in", "the", "db.\nDatacenter", "class.\nTask", "class.\nAdds", "a", "file", "reference", "to", "the", "db.\nRemoves", "a", "file", "reference", "from", "the", "db.\nFakes", "plugging", "vifs.\nFake", "get", "network.\nCheck", "if", "file", "exists", "in", "the", "db.\nFakes", "the", "upload", "of", "an", "image.\nFakes", "the", "fetch", "of", "an", "image.\nGets", "the", "Virtual", "Machine", "with", "the", "ref", "from", "the", "db.\nImposes", "the", "changes", "in", "extraConfig", "over", "the", "existing", "extraConfig.\nFake", "factory", "class", "for", "the", "suds", "client.\nCreates", "a", "namespace", "object.\nFake", "service", "class.\nFake", "client", "class.\nCreates", "a", "namespace", "object.\nFake", "Session", "Class.\nFake", "VIM", "Class.\nLogs", "in", "and", "sets", "the", "session", "object", "in", "the", "db.\nTerminates", "a", "session.\nChecks", "if", "the", "session", "is", "active.\nCreates", "and", "registers", "a", "VM", "object", "with", "the", "Host", "System.\nReconfigures", "a", "VM", "and", "sets", "the", "properties", "supplied.\nCreates/copies", "a", "vmdk", "file", "object", "in", "the", "datastore.\nExtend", "disk", "size", "when", "create", "an", "instance.\nSnapshots", "a", "VM.", "Here", "we", "do", "nothing", "for", "faking", "sake.\nDeletes", "a", "VM", "snapshot.", "Here", "we", "do", "nothing", "for", "faking", "sake.\nDeletes", "a", "file", "from", "the", "datastore.\nFakes", "a", "return.\nFakes", "a", "task", "return.\nFakes", "a", "VM", "clone.\nCreates", "and", "registers", "a", "VM", "object", "with", "the", "Host", "System.\nUnregisters", "a", "VM", "from", "the", "Host", "System.\nSearches", "the", "datastore", "for", "a", "file.\nCreates", "a", "directory", "in", "the", "datastore.\nSets", "power", "state", "for", "the", "VM.\nContinues", "the", "retrieve.\nCancels", "the", "retrieve.\nRetrieves", "properties", "based", "on", "the", "type.\nAdds", "a", "port", "group", "to", "the", "host", "system.\nAdds", "a", "iscsi", "send", "target", "to", "the", "hba.", "We", "fake", "the", "datastore", "by", "keeping", "the", "file", "references", "as", "a", "list", "of\n", "names", "in", "the", "db\n", "Managed", "Object", "Reference", "value", "attributes\n", "typically", "have", "values", "like", "vm-123", "or\n", "host-232", "and", "not", "UUID.\n", "Managed", "Object", "Reference", "type\n", "attributes", "hold", "the", "name", "of", "the", "type\n", "of", "the", "vCenter", "object", "the", "value\n", "attribute", "is", "the", "identifier", "for\n", "This", "class", "is", "a", "*fake*", "of", "a", "class", "sent", "back", "to", "us", "by\n", "SOAP.", "It", "has", "its", "own", "names.", "These", "names", "are", "decided\n", "for", "us", "by", "the", "API", "we", "are", "*faking*", "here.\n", "propSet", "is", "the", "name", "your", "Python", "code", "will", "need", "to\n", "use", "since", "this", "is", "the", "name", "that", "the", "API", "will", "use\n", "missingSet", "is", "the", "name", "your", "python", "code", "will\n", "need", "to", "use", "since", "this", "is", "the", "name", "that", "the\n", "API", "we", "are", "talking", "to", "will", "use.\n", "TODO(hartsocks):", "this", "is", "adds", "unnecessary", "complexity", "to", "the", "class\n", "TODO(hartsocks):", "remove", "this\n", "in", "a", "real", "ManagedObject", "you", "have", "to", "iterate", "the", "propSet\n", "in", "a", "real", "ManagedObject,", "the", "propSet", "is", "a", "*set*", "not", "a", "list\n", "Sample", "of", "diagnostics", "data", "is", "below.\n", "there", "are", "2", "cases", "-", "new", "entry", "or", "update", "an", "existing", "one\n", "Case", "of", "Reconfig", "of", "VM", "to", "attach", "disk\n", "Update", "summary", "every", "time", "a", "new", "host", "is", "added\n", "Method", "to", "update", "summary", "of", "a", "cluster", "upon", "host", "addition\n", "Compute", "the", "aggregate", "stats\n", "Set", "the", "same", "on", "the", "storage", "system", "managed", "object\n", "Fill", "in", "the", "default", "path", "to", "the", "vmx", "file", "if", "we", "were", "only", "given", "a\n", "datastore.", "Note", "that", "if", "you", "create", "a", "VM", "with", "vmPathName", "'[foo]',", "when", "you\n", "retrieve", "vmPathName", "it", "will", "be", "'[foo]", "uuid/uuid.vmx'.", "Hence", "we", "use\n", "vm_path", "below", "for", "the", "stored", "value", "of", "vmPathName.\n", "Check", "if", "the", "remove", "is", "for", "a", "single", "file", "object", "or", "for", "a", "folder\n", "Removes", "the", "files", "in", "the", "folder", "and", "the", "folder", "too", "from", "the", "db\n", "skip", "'ns0:'\n", "return", "fake", "objects", "in", "a", "circular", "manner\n", "We", "need", "to", "add/create", "both", ".vmdk", "and", ".-flat.vmdk", "files\n", "Impose", "the", "config", "changes", "specified", "in", "the", "config", "property\n", "TODO(garyk):", "add", "support", "for", "spec", "parameter\n", "Check", "if", "we", "are", "searching", "for", "a", "file", "or", "a", "directory\n", "A", "directory", "search", "implies", "that", "we", "must", "return", "all\n", "subdirectories\n", "if", "source", "is", "not", "a", "file", "then", "the", "children", "will", "also\n", "be", "deleted\n", "This", "means", "that", "we", "are", "retrieving", "props", "for", "all", "managed\n", "data", "objects", "of", "the", "specified", "'type'", "in", "the", "entire\n", "inventory.", "This", "gets", "invoked", "by", "vim_util.get_objects.\n", "This", "means", "that", "we", "are", "retrieving", "props", "for", "the", "managed\n", "data", "objects", "in", "the", "parent", "object's", "'path'", "property.\n", "This", "gets", "invoked", "by", "vim_util.get_inner_objects\n", "eg.", "obj_ref", "=", "<ManagedObjectReference", "of", "a", "cluster>\n", "type", "=", "'DataStore'\n", "path", "=", "'datastore'\n", "the", "above", "will", "retrieve", "all", "datastores", "in", "the", "given\n", "cluster.\n", "This", "means", "that", "we", "are", "retrieving", "props", "of", "the", "given\n", "managed", "data", "object.", "This", "gets", "invoked", "by\n", "vim_util.get_properties_for_a_collection_of_objects."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/simple_tenant_usage.py": ["ALIAS", "CONF", "False", "None", "SimpleTenantUsageController", "True", "TypeError", "ValueError", "_", "_view_builder_class", "alias", "all_server_usages", "common", "context", "datetime", "delta", "detailed", "dstr", "dt", "dtstr", "e", "env", "exc", "exception", "extensions", "flavor", "flavor_ref", "flavor_type", "flavors", "flavors_cache", "fmt", "id", "ignore", "info", "instance", "instances", "int", "isinstance", "iso8601", "launched_at", "len", "limit", "links", "list", "marker", "max", "min", "msg", "name", "nova", "now", "objects", "parse_strtime", "period_start", "period_stop", "qs", "req", "res", "resources", "rval", "self", "server_usages", "six", "start", "stop", "stu_policies", "summary", "tenant_id", "tenant_usage", "tenant_usages", "terminated_at", "timeutils", "urlparse", "usage", "usages", "usages_links", "usages_view", "value", "version", "wsgi", "Retrieve", "tenant_usage", "for", "all", "tenants.\nRetrieve", "tenant_usage", "for", "all", "tenants.\nRetrieve", "tenant_usage", "for", "a", "specified", "tenant.\nRetrieve", "tenant_usage", "for", "a", "specified", "tenant.\nSimple", "tenant", "usage", "extension.", "NOTE(mriedem):", "Instance", "object", "DateTime", "fields", "are\n", "timezone-aware", "so", "convert", "using", "isotime.\n", "nothing", "if", "it", "started", "after", "the", "usage", "report", "ended\n", "if", "instance", "launched", "after", "period_started,", "don't", "charge", "for", "first\n", "if", "instance", "stopped", "before", "period_stop,", "don't", "charge", "after\n", "instance", "is", "still", "running,", "so", "charge", "them", "up", "to", "current", "time\n", "instance", "hasn't", "launched,", "so", "no", "charge\n", "Only", "support", "the", "fallback", "mechanism", "for", "deleted", "instances\n", "that", "would", "have", "been", "skipped", "by", "migration", "#153\n", "can't", "bill", "if", "there", "is", "no", "flavor\n", "This", "is", "rare", "case,", "instance", "disappear", "during", "analysis\n", "As", "it's", "just", "info", "collection,", "we", "can", "try", "next", "one\n", "NOTE(mriedem):", "We", "need", "to", "normalize", "the", "start/end", "times", "back\n", "to", "timezone-naive", "so", "the", "response", "doesn't", "change", "after", "the\n", "conversion", "to", "objects.\n", "NOTE(mriedem):", "Instance", "object", "DateTime", "fields", "are", "timezone-aware\n", "so", "we", "have", "to", "force", "UTC", "timezone", "for", "comparing", "this", "datetime", "against\n", "instance", "object", "fields", "and", "still", "maintain", "backwards", "compatibility\n", "in", "the", "API.\n", "NOTE(lzyeval):", "env.get()", "always", "returns", "a", "list\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/consoleauth/test_rpcapi.py": ["CONF", "DROPPED_ARG", "False", "None", "True", "cfg", "consoleauth_rpcapi", "context", "csv_mock", "ctxt", "do_cast", "fake_csv", "getattr", "k", "kwargs", "method", "mock", "object", "orig_prepare", "prepare_mock", "retval", "rpc_kwargs", "rpc_mock", "rpcapi", "self", "six", "test", "v", "version"], "/Users/mehranhassani/repos/nova/nova/policies/keypairs.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "keypairs_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/scality.py": ["CONF", "False", "LOG", "LibvirtScalityVolumeDriver", "True", "_", "__name__", "conf", "config", "connection_info", "disk_info", "e", "exception", "fs", "io", "logging", "mount", "mount_path", "mounts", "msg", "nova", "os", "parts", "path", "self", "super", "urllib", "urlparse", "utils", "Returns", "xml", "for", "libvirt.\nConnect", "the", "volume.\nSanity", "checks", "before", "attempting", "to", "mount", "SOFS.\nDetects", "whether", "Scality", "SOFS", "is", "already", "mounted.", "TODO(mriedem):", "change", "the", "scality", "volume", "driver", "in", "cinder", "to", "set\n", "the", "export", "and", "name", "keys", "rather", "than", "the", "sofs_path", "so", "this", "is\n", "standardized.\n", "The", "default", "driver", "cache", "policy", "is", "'none',", "and", "this", "causes\n", "qemu/kvm", "to", "open", "the", "volume", "file", "with", "O_DIRECT,", "which", "is\n", "rejected", "by", "FUSE", "(on", "kernels", "older", "than", "3.3).", "Scality", "SOFS\n", "is", "FUSE", "based,", "so", "we", "must", "provide", "a", "more", "sensible", "default.\n", "config", "is", "mandatory\n", "config", "can", "be", "a", "file", "path", "or", "a", "URL,", "check", "it\n", "turn", "local", "path", "into", "URL\n", "mount.sofs", "must", "be", "installed"], "/Users/mehranhassani/repos/nova/nova/conf/cache.py": ["conf", "core", "dict", "The", "oslo_cache", "library", "returns", "a", "list", "of", "tuples"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_monitor_metric.py": ["_TestMonitorMetricObject", "_monitor_metric_list_spec", "_monitor_metric_perc_spec", "_monitor_metric_spec", "_monitor_numa_metric_spec", "_ts_now", "exp", "fields", "jsonutils", "list_obj", "metric", "metrics", "monitormetric_obj", "obj", "object", "objects", "primitive", "self", "spec", "spec_list", "test_objects", "timeutils", "zip", "Test", "to", "ensure", "division", "by", "100.0", "occurs", "on", "percentage", "value."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_caching_scheduler.py": ["CachingSchedulerTestCase", "ENABLE_PROFILER", "False", "None", "True", "__name__", "a", "b", "c", "caching_scheduler", "config", "context", "driver_cls", "exception", "fake_host", "flavor", "graphviz", "host_manager", "host_state", "host_states", "hosts", "index", "instance_properties", "len", "microseconds", "mock", "mock_get_extra", "mock_get_hosts", "mock_up_hosts", "objects", "output", "per_request_ms", "pycallgraph", "range", "request_spec", "requests", "result", "run_test", "runner", "seconds", "self", "spec_obj", "suite", "test", "test_case", "test_scheduler", "testtools", "timeutils", "x", "Test", "case", "for", "Caching", "Scheduler.", "NOTE(sbauza):", "Prevent", "to", "stub", "the", "Flavor.get_by_id", "call", "just", "by\n", "directly", "providing", "a", "Flavor", "object\n", "This", "has", "proved", "to", "be", "around", "1", "ms", "on", "a", "random", "dev", "box\n", "But", "this", "is", "here", "so", "you", "can", "do", "simply", "performance", "testing", "easily.\n", "A", "handy", "tool", "to", "help", "profile", "the", "schedulers", "performance"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/239_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_aggregate_instance_extra_specs_filters.py": ["False", "TestAggregateInstanceExtraSpecsFilter", "True", "agg_mock", "agg_specs", "assertion", "capabilities", "especs", "fakes", "host", "mock", "objects", "passes", "self", "set", "spec_obj", "super", "test", "Un-scoped", "extra", "spec\n", "Scoped", "extra", "spec", "that", "applies", "to", "this", "filter\n", "Scoped", "extra", "spec", "that", "does", "not", "apply", "to", "this", "filter\n", "Un-scoped", "extra", "spec\n", "Scoped", "extra", "spec", "that", "applies", "to", "this", "filter\n", "Scoped", "extra", "spec", "that", "does", "not", "apply", "to", "this", "filter\n", "Un-scoped", "extra", "spec,", "make", "sure", "we", "don't", "blow", "up", "if", "it\n", "happens", "to", "match", "our", "scope."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/249_remove_duplicate_index.py": ["INDEX_NAME", "MetaData", "Table", "True", "bdm", "index", "meta", "migrate_engine", "Remove", "duplicate", "index", "from", "block_device_mapping", "table."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_hgst.py": ["None", "brick_conn_vol", "ci", "conf", "connector", "data", "di", "drvr", "hgst", "mock", "self", "test_volume", "Actual", "testing", "of", "the", "os_brick", "HGST", "driver", "done", "in", "the", "os_brick", "testcases\n", "Here", "we're", "concerned", "only", "with", "the", "small", "API", "shim", "that", "connects", "Nova\n", "so", "these", "will", "be", "pretty", "simple", "cases."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/resource_class_cache.py": ["IndexError", "STANDARDS", "ValueError", "_LOCKNAME", "_RC_TBL", "_refresh_from_db", "cache", "conn", "ctx", "db_api", "exception", "fields", "isinstance", "lockutils", "models", "object", "r", "rc", "rc_id", "rc_str", "res", "s", "sa", "sel", "self", "six", "A", "cache", "of", "integer", "and", "string", "lookup", "values", "for", "resource", "classes.", "List", "of", "dict", "of", "all", "standard", "resource", "classes,", "where", "every", "list", "item\n", "have", "a", "form", "{'id':", "<ID>,", "'name':", "<NAME>}\n", "First", "check", "the", "standard", "resource", "classes\n", "Otherwise,", "check", "the", "database", "table\n", "First", "check", "the", "fields.ResourceClass.STANDARD", "values\n", "Otherwise,", "check", "the", "database", "table"], "/Users/mehranhassani/repos/nova/nova/conf/osapi_v21.py": ["True", "api_opts", "api_opts_group", "cfg", "conf"], "/Users/mehranhassani/repos/nova/tools/xenserver/stress_test.py": ["DOM0_CLEANUP_SCRIPT", "False", "True", "__name__", "_parse_args", "all", "argparse", "args", "batch_size", "cleanup", "cmd", "context", "contextlib", "contexts", "count", "dom0_cleanup_script", "dom0_ip", "dom0_ips", "duration", "flavor", "globals", "image_name", "int", "main", "migrate_server", "min", "multiprocessing", "parser", "pool", "proc", "range", "rebuild_server", "result", "results", "ret", "run", "server_built", "server_name", "snapshot_name", "snapshot_taken", "start_time", "status", "stderr", "stdout", "str", "subprocess", "success", "sys", "test", "test_func", "time", "x", "cat", "/tmp/destroy_cache_vdis\n!/bin/bash\n", "Confirm", "the", "resize\n", "Migrate", "A", "->", "B\n", "Migrate", "B", "->", "A"], "/Users/mehranhassani/repos/nova/nova/api/compute_req_id.py": ["ENV_REQUEST_ID", "HTTP_RESP_HEADER_REQUEST_ID", "base", "context", "req", "req_id", "response", "self", "webob"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/extended_server_attributes.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "extended_server_attributes_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/conf/notifications.py": ["ALL_OPTS", "False", "None", "cfg", "conf", "notifications_group"], "/Users/mehranhassani/repos/nova/nova/policies/shelve.py": ["POLICY_ROOT", "base", "policy", "shelve_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_driver.py": ["DriverMethodTestCase", "None", "True", "driver", "driver_name", "driver_names", "fixture_config", "self", "super", "test"], "/Users/mehranhassani/repos/nova/nova/conductor/tasks/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/cmd/api.py": ["CONF", "_LE", "_LW", "__name__", "api", "config", "ex", "exception", "gmr", "launcher", "log", "logging", "nova", "objects", "server", "service", "should_use_ssl", "started", "sys", "utils", "version", "NOTE(mriedem):", "This", "is", "needed", "for", "caching", "the", "nova-compute", "service\n", "version", "which", "is", "looked", "up", "when", "a", "server", "create", "request", "is", "made", "with\n", "network", "id", "of", "'auto'", "or", "'none'."], "/Users/mehranhassani/repos/nova/nova/policies/remote_consoles.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "remote_consoles_policies"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_floating_ips_bulk.py": ["ADMIN_API", "CONF", "FloatingIpsBulkTest", "None", "True", "api_sample_base", "context", "interface", "nova", "pool", "response", "sample_dir", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_fs.py": ["FAKE_DEVICE_NAME", "FAKE_MOUNT_POINT", "FAKE_SHARE", "FakeFileSystemVolumeDriver", "HASHED_SHARE", "LibvirtBaseFileSystemVolumeDriverTestCase", "NORMALIZED_SHARE", "expected_path", "export", "fs", "mock", "os", "path", "self", "super", "test", "utils", "Tests", "the", "basic", "behavior", "of", "the", "LibvirtBaseFileSystemVolumeDriver"], "/Users/mehranhassani/repos/nova/nova/api/validation/parameter_types.py": ["False", "None", "True", "ValidationRegex", "_", "_build_regex_range", "_get_all_chars", "_is_printable", "accessIPv4", "accessIPv6", "admin_password", "boolean", "c", "category", "cell_name", "cell_name_leading_trailing_spaces", "char", "cidr", "copy", "db", "description", "disk_config", "exclude", "flavor_param_non_negative", "flavor_param_positive", "flavor_ref", "hostname", "hostname_or_ip_address", "i", "image_id", "image_id_or_empty_string", "in_range", "invert", "ip_address", "ipv4", "ipv6", "last", "last_added", "mac_address", "metadata", "metadata_with_null", "multi_params", "name", "name_with_leading_trailing_spaces", "network_id", "network_port_id", "non_negative_integer", "none", "object", "pagination_parameters", "personality", "positive_integer", "project_id", "range", "re", "reason", "regex", "result", "ret", "schema", "self", "server_id", "six", "tag", "tcp_udp_port", "unicodedata", "valid_cell_name_leading_trailing_spaces_regex", "valid_cell_name_regex", "valid_char", "valid_description_regex", "valid_description_regex_base", "valid_name_leading_trailing_spaces_regex", "valid_name_leading_trailing_spaces_regex_base", "valid_name_regex", "valid_name_regex_base", "valid_name_regex_obj", "volume_id", "volume_size", "ws", "build", "a", "regex", "that", "matches", "all", "printable", "characters.", "This", "allows\n", "spaces", "in", "the", "middle", "of", "the", "name.", "Also", "note", "that", "the", "regexp", "below\n", "deliberately", "allows", "the", "empty", "string.", "This", "is", "so", "only", "the", "constraint\n", "which", "enforces", "a", "minimum", "length", "for", "the", "name", "is", "triggered", "when", "an\n", "empty", "string", "is", "tested.", "Otherwise", "it", "is", "not", "deterministic", "which\n", "constraint", "fails", "and", "this", "causes", "issues", "for", "some", "unittests", "when\n", "PYTHONHASHSEED", "is", "set", "randomly.\n", "are", "we", "currently", "in", "a", "range\n", "last", "character", "we", "found,", "for", "closing", "ranges\n", "last", "character", "we", "added", "to", "the", "regex,", "this", "lets", "us", "know", "that", "we\n", "already", "have", "B", "in", "the", "range,", "which", "means", "we", "don't", "need", "to", "close\n", "it", "out", "with", "B-B.", "While", "the", "later", "seems", "to", "work,", "it's", "kind", "of", "bad", "form.\n", "Zs", "is", "the", "unicode", "class", "for", "space", "characters,", "of", "which\n", "there", "are", "about", "10", "in", "this", "range.\n", "iterate", "through", "the", "entire", "character", "range.", "in_\n", "This", "regex", "allows", "leading/trailing", "whitespace\n", "cell's", "name", "disallow", "'!',", "'.'", "and", "'@'.\n", "NOTE:", "'host'", "is", "defined", "in", "\"services\"", "table,", "and", "that\n", "means", "a", "hostname.", "The", "hostname", "grammar", "in", "RFC952", "does\n", "not", "allow", "for", "underscores", "in", "hostnames.", "However,", "this\n", "schema", "allows", "them,", "because", "it", "sometimes", "occurs", "in\n", "real", "systems.\n", "NOTE:", "Allow", "to", "specify", "hostname,", "ipv4", "and", "ipv6.\n", "NOTE:", "Nova", "v2.1", "API", "contains", "some", "'name'", "parameters", "such\n", "as", "keypair,", "server,", "flavor,", "aggregate", "and", "so", "on.", "They", "are\n", "stored", "in", "the", "DB", "and", "Nova", "specific", "parameters.\n", "This", "definition", "is", "used", "for", "all", "their", "parameters.\n", "NOTE:", "admin_password", "is", "the", "admin", "password", "of", "a", "server\n", "instance,", "and", "it", "is", "not", "stored", "into", "nova's", "data", "base.\n", "In", "addition,", "users", "set", "sometimes", "long/strange", "string\n", "as", "password.", "It", "is", "unnecessary", "to", "limit", "string", "length\n", "and", "string", "pattern."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/223_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/metadata/vendordata_json.py": ["CONF", "IOError", "JsonFileVendorData", "LOG", "ValueError", "_LW", "__name__", "args", "data", "e", "errno", "fp", "fpath", "jsonutils", "kwargs", "logging", "logprefix", "nova", "open", "self", "super", "vendordata", "Render", "Vendordata", "as", "stored", "in", "configured", "file."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/client/objects.py": ["Host", "Network", "PBD", "PIF", "Pool", "SR", "VBD", "VDI", "VIF", "VLAN", "VM", "XenAPISessionObject", "args", "call", "method_name", "name", "object", "params", "self", "session", "super", "synchronized_plug", "synchronized_unplug", "utils", "vbd_ref", "vm_ref", "Virtual", "Machine.\nVirtual", "block", "device.\nVirtual", "disk", "image.\nVirtual", "Network", "Interface.\nStorage", "Repository.\nPhysical", "block", "device.\nPhysical", "Network", "Interface.\nVLAN.\nXenServer", "hosts.\nNetworks", "that", "VIFs", "are", "attached", "to.\nPool", "of", "hosts.", "NOTE(johngarbutt)", "we", "need", "to", "ensure", "there", "is", "only", "ever", "one\n", "VBD.unplug", "or", "VBD.plug", "happening", "at", "once", "per", "VM\n", "due", "to", "a", "bug", "in", "XenServer", "6.1", "and", "6.2\n", "NOTE(johngarbutt)", "we", "need", "to", "ensure", "there", "is", "only", "ever", "one\n", "VBD.unplug", "or", "VBD.plug", "happening", "at", "once", "per", "VM\n", "due", "to", "a", "bug", "in", "XenServer", "6.1", "and", "6.2"], "/Users/mehranhassani/repos/nova/nova/console/rpcapi.py": ["CONF", "ConsoleAPI", "None", "VERSION_ALIASES", "cctxt", "console_id", "ctxt", "instance_id", "messaging", "nova", "object", "rpc", "self", "server", "super", "target", "topic", "version_cap"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/ironic/test_client_wrapper.py": ["AttributeError", "CONF", "FAKE_CLIENT", "IronicClientWrapperTestCase", "None", "True", "cfg", "client_wrapper", "exception", "expected", "first_client", "get_new_fake_client", "id", "ironic_client", "ironic_exception", "ironic_utils", "ironicclient", "keystoneauth1", "mock", "mock_get_client", "mock_ir_cli", "mock_multi_getattr", "mock_session", "n", "nova", "range", "response", "second_client", "self", "super", "test", "test_obj", "An", "Ironicclient", "is", "called", "with", "a", "keystoneauth1", "Session", "Do", "not", "waste", "time", "sleeping\n", "dummy", "call", "to", "have", "_get_client()", "called"], "/Users/mehranhassani/repos/nova/nova/virt/disk/vfs/api.py": ["False", "LOG", "None", "True", "VFS", "_LI", "__name__", "content", "exception", "group", "guestfs_ready", "image", "importutils", "logging", "mode", "mount", "object", "partition", "path", "self", "staticmethod", "user", "vfs", "Releases", "all", "resources", "initialized", "in", "the", "setup", "method.\nReturns", "the", "entire", "contents", "of", "the", "file", "identified", "by", "@path.\nReturns", "a", "True", "if", "the", "file", "identified", "by", "@path", "exists.", "Class", "level", "flag", "to", "indicate", "whether", "we", "can", "consider\n", "that", "guestfs", "is", "ready", "to", "be", "used.\n", "Inspect", "for", "capabilities", "and", "keep\n", "track", "of", "the", "result", "only", "if", "succeeded.\n", "We", "are", "able", "to", "load", "libguestfs", "but\n", "something", "wrong", "happens", "when", "trying", "to\n", "check", "for", "capabilities."], "/Users/mehranhassani/repos/nova/nova/cmd/baseproxy.py": ["CONF", "True", "errno", "exit_with_error", "gmr", "host", "logging", "msg", "nova", "novnc", "os", "port", "sys", "version", "websocketproxy", "Check", "to", "see", "if", "tty", "html/js/css", "files", "are", "present\n", "Create", "and", "start", "the", "NovaWebSockets", "proxy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_metadata.py": ["ALIAS", "False", "KeyError", "ServerMetadataController", "True", "_", "alias", "body", "common", "compute", "context", "data", "delete", "e", "error", "exc", "exception", "expl", "extensions", "id", "key", "mapper", "meta", "meta_dict", "meta_item", "metadata", "msg", "name", "new_metadata", "parent", "req", "resources", "self", "server", "server_id", "server_metadata", "sm_policies", "state_error", "super", "validation", "value", "version", "wsgi", "wsgi_resource", "The", "server", "metadata", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "the", "list", "of", "metadata", "for", "a", "given", "instance.\nReturn", "a", "single", "metadata", "item.\nDeletes", "an", "existing", "metadata.\nServer", "Metadata", "API.", "NOTE(mikal):", "get_instance_metadata", "sometimes", "returns\n", "InstanceNotFound", "in", "unit", "tests,", "even", "though", "the", "instance", "is\n", "fetched", "on", "the", "line", "above.", "I", "blame", "mocking.\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "201\n", "as", "this", "operation", "complete", "the", "creation", "of", "metadata.\n", "Also", "connect", "the", "non", "project_id", "routes"], "/Users/mehranhassani/repos/nova/nova/policies/extension_info.py": ["POLICY_ROOT", "base", "extension_info_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/virt/osinfo.py": ["ImportError", "LOG", "None", "OsInfo", "_LI", "_LW", "_OsInfoDatabase", "__name__", "_instance", "classmethod", "cls", "devs", "e", "exception", "exp", "filtered", "flt_field", "fltr", "image_meta", "importutils", "libosinfo", "list_len", "logging", "model", "object", "os_key", "os_name", "property", "self", "TODO(vladikr)", "The", "current", "implementation", "will", "serve", "only", "as", "a", "temporary\n", "solution,", "due", "to", "it's", "dependency", "on", "the", "libosinfo", "gobject", "library.\n", "In", "the", "future", "it", "will", "be", "replaced", "by", "a", "pure", "python", "library", "or", "by", "a", "direct\n", "parsing", "of", "the", "libosinfo", "XML", "files.", "However,", "it", "will", "be", "possible", "only", "when\n", "libosinfo", "project", "will", "declare", "the", "XML", "structure", "to", "be", "a", "stable", "ABI."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/vif.py": ["CONF", "Exception", "False", "LOG", "MIN_LIBVIRT_VHOSTUSER_MQ", "None", "True", "_", "_LE", "__name__", "br_name", "cmd_args", "conf", "copy", "designer", "dev", "device_id", "devname", "disv6", "driver", "ex", "exception", "fabric", "flavor", "fp_plug", "func", "getattr", "host", "iface_id", "image_meta", "img_props", "inst_type", "instance", "instance_info", "int", "ip6_addr", "ip_addr", "ips", "is_vif_model_valid_for_virt", "isinstance", "kernel_version", "len", "linux_net", "logging", "mac", "mac_id", "macvtap_mode", "macvtap_src", "max_tap_queues", "missing_params", "mode", "model", "msg", "mtu", "multiqueue", "name", "net_id", "net_type", "network", "network_model", "newvif", "nova", "object", "objects", "os", "os_vif", "os_vif_util", "osinfo", "osv_exception", "ovs_plug", "params", "pci_slot", "phys_if", "phys_interface", "port", "port_id", "prefix", "processutils", "profile", "profilefunc", "ptype", "self", "sock_path", "sockmode_port", "sockmode_qemu", "sockpath", "staticmethod", "subnet", "subnets", "tenant_id", "utils", "v1_name", "v2_name", "valid_models", "vconfig", "vhost_drv", "vhost_queues", "vif", "vif_details", "vif_model", "vif_obj", "vif_slug", "vif_type", "viffunc", "virt_type", "vlan", "vlan_name", "vnic_mac", "vnic_type", "VIF", "drivers", "for", "libvirt.\nGeneric", "VIF", "driver", "for", "libvirt", "networking.\nGet", "VIF", "configurations", "for", "bridge", "type.\nPlug", "a", "VIF_TYPE_TAP", "virtual", "interface.\nCreate", "a", "fp", "netdevice", "interface", "with", "a", "vhostuser", "socket\nUnplug", "the", "VIF", "by", "deleting", "the", "port", "from", "the", "bridge.\nUnplug", "a", "VIF_TYPE_TAP", "virtual", "interface.\nDelete", "a", "fp", "netdevice", "interface", "with", "a", "vhostuser", "socket", "vhostuser", "queues", "support\n", "Default", "to", "letting", "libvirt", "/", "the", "hypervisor", "choose", "the", "model\n", "If", "the", "user", "has", "specified", "a", "'vif_model'", "against", "the\n", "image", "then", "honour", "that", "model\n", "Else", "if", "the", "virt", "type", "is", "KVM/QEMU/VZ(Parallels),", "then", "use", "virtio\n", "according", "to", "the", "global", "config", "parameter\n", "Workaround", "libvirt", "bug,", "where", "it", "mistakenly\n", "enables", "vhost", "mode,", "even", "for", "non-KVM", "guests\n", "NOTE(kengo.sakai):", "In", "kernels", "prior", "to", "3.0,\n", "multiple", "queues", "on", "a", "tap", "interface", "is", "not", "supported.\n", "In", "kernels", "3.x,", "the", "number", "of", "queues", "on", "a", "tap", "interface\n", "is", "limited", "to", "8.", "From", "4.0,", "the", "number", "is", "256.\n", "See:", "https://bugs.launchpad.net/nova/+bug/1570631\n", "(vladikr)", "Not", "setting", "up", "driver", "and", "queues", "for", "vhostuser\n", "as", "queues", "are", "not", "supported", "in", "Libvirt", "until", "version", "1.2.17\n", "Set", "any", "port", "profile", "that", "may", "be", "required\n", "Do", "the", "config", "that's", "common", "to", "all", "vif", "types\n", "Do", "the", "VIF", "type", "specific", "config\n", "Try", "os-vif", "codepath", "first\n", "Legacy", "non-os-vif", "codepath\n", "Try", "os-vif", "codepath", "first\n", "Legacy", "non-os-vif", "codepath\n", "The", "ip", "utility", "doesn't", "accept", "the", "MAC", "00:00:00:00:00:00.\n", "Therefore,", "keep", "the", "MAC", "unchanged.", "Later", "operations", "on\n", "the", "same", "VF", "will", "not", "be", "affected", "by", "the", "existing", "MAC.\n", "Try", "os-vif", "codepath", "first\n", "Legacy", "non-os-vif", "codepath"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/330_enforce_mitaka_online_migrations.py": ["MetaData", "None", "Table", "True", "WARNING_MSG", "_", "aggregates", "compute_nodes", "count", "exception", "func", "meta", "migrate_engine", "msg", "pci_devices", "select", "table", "NOQA\n", "NOQA"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/216_havana.py": ["BigInteger", "Boolean", "Column", "DateTime", "Enum", "Exception", "False", "Float", "ForeignKey", "ForeignKeyConstraint", "Index", "Inet", "InetSmall", "Integer", "LOG", "MYSQL_INDEX_SKIPS", "MediumText", "MetaData", "None", "NullType", "POSTGRES_INDEX_SKIPS", "String", "Table", "Text", "True", "UniqueConstraint", "_LE", "__name__", "_create_dump_tables", "_create_shadow_tables", "agent_builds", "aggregate_hosts", "aggregate_metadata", "aggregates", "block_device_mapping", "bw_usage_cache", "cells", "certificates", "column", "column_copy", "columns", "common_indexes", "compute_node_stats", "compute_nodes", "console_pools", "consoles", "consoles_instance_uuid_column_args", "dialects", "dns_domains", "dump_table_name", "enum", "fixed_ips", "fkey", "fkey_pair", "fkeys", "floating_ips", "group_member", "group_metadata", "group_policy", "groups", "index", "inst_lock_enum", "inst_type_uc_name", "instance_actions", "instance_actions_events", "instance_faults", "instance_id_mappings", "instance_info_caches", "instance_metadata", "instance_system_metadata", "instance_type_extra_specs", "instance_type_projects", "instance_types", "instances", "iscsi_targets", "isinstance", "key_pairs", "list", "logging", "meta", "migrate_engine", "migrations", "mysql_pre_indexes", "networks", "pci_devices", "pci_devices_uc_name", "project_user_quotas", "provider_fw_rules", "quota_classes", "quota_usages", "quotas", "repr", "reservations", "s3_images", "secgroup_instance_association_instance_uuid_fkey", "security_group_default_rules", "security_group_instance_association", "security_group_rules", "security_groups", "services", "shadow_table", "shadow_table_name", "snapshot_id_mappings", "snapshots", "sql", "table", "table_dump", "table_name", "table_names", "tables", "task_log", "task_log_cols", "task_log_uc", "uc", "uc_name", "uniq_name", "virtual_interfaces", "volume_id_mappings", "volume_usage_cache", "volumes", "Note", "on", "the", "autoincrement", "flag:", "this", "is", "defaulted", "for", "primary", "key", "columns\n", "of", "integral", "type,", "so", "is", "no", "longer", "set", "explicitly", "in", "such", "cases.\n", "NOTE(dprince):", "This", "wrapper", "allows", "us", "to", "easily", "match", "the", "Folsom", "MySQL\n", "Schema.", "In", "Folsom", "we", "created", "tables", "as", "latin1", "and", "converted", "them", "to", "utf8\n", "later.", "This", "conversion", "causes", "some", "of", "the", "Text", "columns", "on", "MySQL", "to", "get\n", "created", "as", "mediumtext", "instead", "of", "just", "text.\n", "NOTE(boris-42):", "BigInteger", "is", "not", "supported", "by", "sqlite,", "so\n", "after", "copy", "it", "will", "have", "NullType,", "other\n", "types", "that", "are", "used", "in", "Nova", "are", "supported", "by\n", "sqlite.\n", "NOTE(dprince):", "we", "add", "these", "here", "so", "our", "schema", "contains", "dump", "tables\n", "which", "were", "added", "in", "migration", "209", "(in", "Havana).", "We", "can", "drop", "these", "in\n", "Icehouse:", "https://bugs.launchpad.net/nova/+bug/1266538\n", "NOTE(dprince):", "The", "dump_", "tables", "were", "originally", "created", "from", "an\n", "earlier", "schema", "version", "so", "we", "don't", "want", "to", "add", "the", "pci_stats\n", "column", "so", "that", "schema", "diffs", "are", "exactly", "the", "same.\n", "create", "all", "tables\n", "those", "that", "are", "children", "and", "others", "later\n", "task", "log", "unique", "constraint\n", "networks", "unique", "constraint\n", "instance_type_name", "constraint\n", "flavorid", "unique", "constraint\n", "keypair", "contraint\n", "instance_type_projects", "constraint\n", "floating_ips", "unique", "constraint\n", "instance_info_caches\n", "cells\n", "security_groups\n", "quotas\n", "fixed_ips\n", "services\n", "agent_builds\n", "created", "first", "(to", "preserve", "ordering", "for", "schema", "diffs)\n", "Common", "indexes", "(indexes", "we", "apply", "to", "all", "databases)\n", "NOTE:", "order", "specific", "for", "MySQL", "diff", "support\n", "aggregate_metadata\n", "agent_builds\n", "block_device_mapping\n", "NOTE(dprince):", "This", "is", "now", "a", "duplicate", "index", "on", "MySQL", "and", "needs", "to\n", "be", "removed", "there.", "We", "leave", "it", "here", "so", "the", "Index", "ordering\n", "matches", "on", "schema", "diffs", "(for", "MySQL).\n", "See", "Havana", "migration", "186_new_bdm_format", "where", "we", "dropped", "the\n", "virtual_name", "column.\n", "IceHouse", "fix", "is", "here:", "https://bugs.launchpad.net/nova/+bug/1265839\n", "bw_usage_cache\n", "compute_node_stats\n", "consoles\n", "dns_domains\n", "fixed_ips\n", "floating_ips\n", "group_member\n", "group_metadata\n", "group_policy\n", "instances\n", "instance_actions\n", "instance_faults\n", "instance_id_mappings\n", "instance_metadata\n", "instance_type_extra_specs\n", "iscsi_targets\n", "migrations\n", "networks\n", "project_user_quotas\n", "reservations\n", "security_group_instance_association\n", "task_log\n", "quota_classes\n", "quota_usages\n", "volumes\n", "MySQL", "specific", "indexes\n", "mysql-specific", "index", "by", "leftmost", "100", "chars.", "(mysql", "gets", "angry", "if", "the\n", "index", "key", "length", "is", "too", "long.)\n", "PostgreSQL", "specific", "indexes\n", "NOTE(dprince):", "PostgreSQL", "doesn't", "allow", "duplicate", "indexes\n", "so", "we", "skip", "creation", "of", "select", "indexes", "(so", "schemas", "match", "exactly).\n", "See", "Havana", "migration", "186_new_bdm_format", "where", "we", "dropped", "the\n", "virtual_name", "column.\n", "IceHouse", "fix", "is", "here:", "https://bugs.launchpad.net/nova/+bug/1265839\n", "we", "create", "this", "one", "manually", "for", "MySQL", "above\n", "Common", "foreign", "keys\n", "For", "MySQL", "we", "name", "our", "fkeys", "explicitly\n", "so", "they", "match", "Havana\n", "PostgreSQL", "names", "things", "like", "it", "wants", "(correct", "and", "compatible!)\n", "In", "Folsom", "we", "explicitly", "converted", "migrate_version", "to", "UTF8.\n", "Set", "default", "DB", "charset", "to", "UTF8."], "/Users/mehranhassani/repos/nova/nova/volume/encryptors/nop.py": ["base", "context", "self"], "/Users/mehranhassani/repos/nova/nova/cells/rpc_driver.py": ["CONF", "CellsRPCDriver", "InterCellRPCAPI", "InterCellRPCDispatcher", "None", "VERSION_ALIASES", "_ctxt", "args", "cctxt", "cell_state", "driver", "kwargs", "message", "messaging", "msg_runner", "msg_type", "next_hop", "nova", "object", "proxy_manager", "rpc", "self", "serializer", "server", "super", "target", "topic", "topic_base", "transport", "transport_url", "Use", "the", "IntercellRPCAPI", "to", "send", "a", "message", "to", "a", "cell.\nTurn", "the", "DB", "information", "for", "a", "cell", "into", "a", "messaging.RPCClient.\nInit", "the", "Intercell", "RPC", "Dispatcher.", "NOTE(comstud):", "We", "do", "not", "need", "to", "use", "the", "object", "serializer\n", "on", "this", "because", "object", "serialization", "is", "taken", "care", "for", "us", "in\n", "the", "nova.cells.messaging", "module."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/storage/rbd_utils.py": ["False", "ImportError", "LOG", "None", "RADOSClient", "RBDVolumeProxy", "RbdProxy", "RuntimeError", "True", "_", "_LE", "_LW", "__name__", "_cleanup_vol", "_fsid", "addr", "addrs", "args", "attr", "attrib", "base", "ceph_conf", "client", "dest_client", "dest_name", "dest_pool", "dict", "driver", "e", "exception", "excutils", "features", "filter", "filter_fn", "force", "fsid", "getattr", "host", "host_port", "hosts", "ignore_errors", "image", "image_location", "image_meta", "int", "ioctx", "jsonutils", "len", "libvirt_utils", "lines", "logging", "loopingcall", "mon", "monmap", "name", "object", "out", "piece", "pieces", "pool", "pool_to_open", "port", "ports", "prefix", "property", "protect", "rados", "rbd", "rbd_user", "read_only", "reason", "retryctx", "self", "size", "snap", "snap_name", "snapshot", "src_client", "stats", "str", "timed_out", "timer", "tpool", "traceback", "type_", "units", "url", "urllib", "utils", "value", "vol", "volume", "volumes", "Context", "manager", "to", "simplify", "error", "handling", "for", "connecting", "to", "ceph.", "NOTE(angdraug):", "rados.Rados", "fails", "to", "connect", "if", "ceph_conf", "is", "None:\n", "https://github.com/ceph/ceph/pull/1787\n", "shutdown", "cannot", "raise", "an", "exception\n", "closing", "an", "ioctx", "cannot", "raise", "an", "exception\n", "check", "that", "we", "can", "read", "the", "image\n", "Image", "format", "2", "supports", "cloning,\n", "in", "stable", "ceph", "rbd", "release", "default", "is", "not", "2,\n", "we", "need", "to", "use", "it", "explicitly.\n", "NOTE(danms):", "We", "let", "it", "go", "for", "ten", "seconds\n", "NOTE(danms):", "Run", "this", "again", "to", "propagate", "the", "error,", "but\n", "if", "it", "succeeds,", "don't", "raise", "the", "loopingcall", "exception"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_auth.py": ["TestNoAuthMiddleware", "api_v21", "auth", "compute", "fakes", "openstack_api", "req", "result", "scenarios", "self", "super", "test", "testscenarios", "urlmap", "make", "sure", "it", "works", "with", "trailing", "slash", "on", "the", "request"], "/Users/mehranhassani/repos/nova/nova/objects/block_device.py": ["BLOCK_DEVICE_OPTIONAL_ATTRS", "BlockDeviceMappingList", "False", "LOG", "None", "StopIteration", "True", "VERSION", "_", "_BLOCK_DEVICE_OPTIONAL_JOINED_FIELD", "_LW", "__name__", "_expected_cols", "attr", "attrname", "base", "bdm", "bdm_dicts_list", "bdm_obj", "bdm_objects", "bdms", "block_device", "block_device_obj", "cell_type", "cells_api", "cells_create", "cells_opts", "cells_rpcapi", "classmethod", "cls", "context", "create", "db", "db_bdm", "db_bdms", "db_block_device", "db_list", "delattr", "exception", "expected_attrs", "extra_args", "fields", "instance_uuid", "instance_uuids", "key", "len", "logging", "my_inst", "next", "objects", "primitive", "property", "self", "set", "staticmethod", "target_version", "update_or_create", "updated", "updates", "use_slave", "versionutils", "volume_id", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "instance_uuid", "to", "get_by_volume_id", "method\n", "Version", "1.2:", "Instance", "version", "1.14\n", "Version", "1.3:", "Instance", "version", "1.15\n", "Version", "1.4:", "Instance", "version", "1.16\n", "Version", "1.5:", "Instance", "version", "1.17\n", "Version", "1.6:", "Instance", "version", "1.18\n", "Version", "1.7:", "Add", "update_or_create", "method\n", "Version", "1.8:", "Instance", "version", "1.19\n", "Version", "1.9:", "Instance", "version", "1.20\n", "Version", "1.10:", "Changed", "source_type", "field", "to", "BlockDeviceSourceTypeField.\n", "Version", "1.11:", "Changed", "destination_type", "field", "to\n", "BlockDeviceDestinationTypeField.\n", "Version", "1.12:", "Changed", "device_type", "field", "to", "BlockDeviceTypeField.\n", "Version", "1.13:", "Instance", "version", "1.21\n", "Version", "1.14:", "Instance", "version", "1.22\n", "Version", "1.15:", "Instance", "version", "1.23\n", "Version", "1.16:", "Deprecate", "get_by_volume_id(),", "add\n", "get_by_volume()", "and", "get_by_volume_and_instance()\n", "Version", "1.17:", "Added", "tag", "field\n", "NOTE(alaski):", "bdms", "are", "looked", "up", "by", "instance", "uuid", "and", "device_name\n", "so", "if", "we", "sync", "up", "with", "no", "device_name", "an", "entry", "will", "be", "created", "that\n", "will", "not", "be", "found", "on", "a", "later", "update_or_create", "call", "and", "a", "second", "bdm\n", "create", "will", "occur.\n", "NOTE(alaski):", "If", "the", "device", "name", "has", "just", "been", "set", "this", "bdm\n", "likely", "does", "not", "exist", "in", "the", "parent", "cell", "and", "we", "should", "create", "it.\n", "If", "this", "is", "a", "modification", "of", "the", "device", "name", "we", "should", "update\n", "rather", "than", "create", "which", "is", "why", "None", "is", "used", "here", "instead", "of", "True\n", "NOTE(danms):", "This", "method", "is", "deprecated", "and", "will", "be", "removed", "in\n", "v2.0", "of", "the", "object\n", "NOTE", "(ndipanov):", "Move", "this", "to", "the", "db", "layer", "into", "a\n", "get_by_instance_and_volume_id", "method\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "BlockDeviceMapping", "<=", "version", "1.1\n", "Version", "1.2:", "Added", "use_slave", "to", "get_by_instance_uuid\n", "Version", "1.3:", "BlockDeviceMapping", "<=", "version", "1.2\n", "Version", "1.4:", "BlockDeviceMapping", "<=", "version", "1.3\n", "Version", "1.5:", "BlockDeviceMapping", "<=", "version", "1.4\n", "Version", "1.6:", "BlockDeviceMapping", "<=", "version", "1.5\n", "Version", "1.7:", "BlockDeviceMapping", "<=", "version", "1.6\n", "Version", "1.8:", "BlockDeviceMapping", "<=", "version", "1.7\n", "Version", "1.9:", "BlockDeviceMapping", "<=", "version", "1.8\n", "Version", "1.10:", "BlockDeviceMapping", "<=", "version", "1.9\n", "Version", "1.11:", "BlockDeviceMapping", "<=", "version", "1.10\n", "Version", "1.12:", "BlockDeviceMapping", "<=", "version", "1.11\n", "Version", "1.13:", "BlockDeviceMapping", "<=", "version", "1.12\n", "Version", "1.14:", "BlockDeviceMapping", "<=", "version", "1.13\n", "Version", "1.15:", "BlockDeviceMapping", "<=", "version", "1.14\n", "Version", "1.16:", "BlockDeviceMapping", "<=", "version", "1.15\n", "Version", "1.17:", "Add", "get_by_instance_uuids()"], "/Users/mehranhassani/repos/nova/nova/tests/unit/notifications/objects/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/assisted_volume_snapshots.py": ["False", "snapshots_create"], "/Users/mehranhassani/repos/nova/nova/scheduler/utils.py": ["CONF", "GroupDetails", "KeyError", "LOG", "None", "True", "ValueError", "_", "_LE", "_LW", "_SUPPORTS_AFFINITY", "_SUPPORTS_ANTI_AFFINITY", "_SUPPORTS_SOFT_AFFINITY", "_SUPPORTS_SOFT_ANTI_AFFINITY", "__name__", "_add_retry_host", "_get_group_details", "_log_compute_error", "any", "args", "attempt", "bad", "collections", "compute_utils", "context", "converter", "ctxt", "dict", "event_type", "ex", "exc", "exc_reason", "exception", "filter", "filter_properties", "flavors", "force_hosts", "force_nodes", "forced_host", "forced_node", "func", "functools", "good", "group", "group_hosts", "group_info", "host", "host_state", "hosts", "image", "instance", "instance_type", "instance_uuid", "instances", "isinstance", "jsonutils", "key", "kwargs", "last_host", "last_node", "len", "limits", "logging", "max_attempts", "messaging", "method", "msg", "name", "node", "nodename", "notifier", "nova", "obj_base", "obj_instance", "objects", "opt", "opts", "outer", "payload", "policies", "policy", "properties", "request_spec", "retries", "retry", "retry_on_timeout", "retry_select_destinations", "rpc", "scheduler_hints", "seen_sep", "sep", "service", "set", "state", "str", "sys", "updates", "user_group_hosts", "user_hosts", "validate_filter", "validate_weigher", "value", "vm_state", "weigher", "weight_classes", "wrapped", "Utility", "methods", "for", "scheduling.\nchanges", "VM", "state", "and", "notifies.\nBuild", "the", "filter_properties", "dict", "from", "data", "in", "the", "boot", "request.\nValidates", "that", "the", "filter", "is", "configured", "in", "the", "default", "filters.\nValidates", "that", "the", "weigher", "is", "configured", "in", "the", "default", "weighers.", "obj_to_primitive", "doesn't", "copy", "this", "enough,", "so", "be", "sure\n", "to", "detach", "our", "metadata", "blob", "because", "we", "modify", "it", "below.\n", "NOTE(danms):", "Replicate", "this", "old", "behavior", "because", "the\n", "scheduler", "RPC", "interface", "technically", "expects", "it", "to", "be\n", "there.", "Remove", "this", "when", "we", "bump", "the", "scheduler", "RPC", "API", "to\n", "v5.0\n", "If", "the", "flavor", "isn't", "complete", "(which", "is", "legit", "with", "a\n", "flavor", "object,", "just", "don't", "put", "it", "in", "the", "request", "spec\n", "NOTE(vish):", "We", "shouldn't", "get", "here", "unless", "we", "have", "a", "catastrophic\n", "failure,", "so", "just", "set", "the", "instance", "to", "its", "internal", "state\n", "TODO(alaski):", "It", "doesn't", "seem", "necessary", "that", "these", "are", "conditionally\n", "added.", "Let's", "just", "add", "empty", "lists", "if", "not", "forced_host/node.\n", "Adds", "a", "retry", "entry", "for", "the", "selected", "compute", "host", "and", "node:\n", "Adds", "oversubscription", "policy\n", "In", "the", "case", "of", "multiple", "force", "hosts/nodes,", "scheduler", "should", "not\n", "disable", "retry", "filter", "but", "traverse", "all", "force", "hosts/nodes", "one", "by\n", "one", "till", "scheduler", "gets", "a", "valid", "target", "host.\n", "re-scheduling", "is", "disabled.\n", "retry", "is", "enabled,", "update", "attempt", "count:\n", "list", "of", "compute", "hosts", "tried\n", "string-ified", "exception", "from", "compute\n", "no", "exception", "info", "from", "a", "previous", "attempt,", "skip\n", "no", "previously", "attempted", "hosts,", "skip\n", "NOTE(sbauza)", "If", "there", "are", "multiple", "instance", "UUIDs,", "it's", "a", "boot\n", "request", "and", "they", "will", "all", "be", "in", "the", "same", "group,", "so", "it's", "safe", "to\n", "only", "check", "the", "first", "one."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/vmops.py": ["CONF", "Exception", "False", "KeyError", "LOG", "NEUTRON_VIF_DRIVER", "NOVA_VIF_DRIVER", "None", "REBOOT_TYPE_HARD", "REBOOT_TYPE_SOFT", "SHUTDOWN_TIME_INCREMENT", "True", "VM_GENERATIONS", "VM_GENERATIONS_CONTROLLER_TYPES", "_", "_LE", "_LI", "_LW", "_MAX_CONSOLE_LOG_FILE_SIZE", "_ROOT_DISK_CTRL_ADDR", "__name__", "_check_vm_status", "_scope", "admin_password", "args", "base_vhd_info", "base_vhd_path", "base_vhd_size", "block_device_info", "block_device_manager", "boot_order", "cdb", "certificate_required", "check_admin_permissions", "class_name", "configdrive", "configdrive_ext", "configdrive_path", "configdrive_path_iso", "conflicting_values", "constants", "context", "contextlib", "controller_type", "ctrl_disk_addr", "default_vm_gen", "delete", "desired_vm_states", "dest_host", "dest_path", "destroy_disks", "device", "dict", "disk_path", "disk_total_bytes_sec", "disk_total_iops_sec", "drive_addr", "drive_type", "dvd_disk_paths", "e", "enumerate", "eph", "eph_info", "eph_name", "ephemerals", "err_msg", "etimeout", "event_name", "events", "exc", "exception", "excutils", "extra_md", "extra_specs", "fields", "fileutils", "filtered_specs", "flavor_secure_boot", "format_ext", "function", "functools", "get_network_driver", "hardware", "image_meta", "image_prop_vm", "imagecache", "img_secure_boot", "importutils", "index", "info", "injected_files", "inst_md", "instance", "instance_disks", "instance_id", "instance_info", "instance_metadata", "instance_name", "instance_path", "instance_uuids", "int", "is_rescue_vhd", "key", "kwds", "local_disks", "logging", "loopingcall", "metadata", "min", "network_info", "new_size", "notes", "nova", "object", "objects", "old_size", "os", "os_type", "os_win_const", "os_win_exc", "path", "pathutils", "periodic_call", "pipe_path", "port_number", "port_type", "processutils", "quota_specs", "reason", "reboot_type", "remotefx_max_resolution", "remotefx_monitor_count", "remotefx_vram", "req_state", "requires_sb", "rescue", "rescue_configdrive_path", "rescue_image_id", "rescue_password", "rescue_vhd_path", "rescue_vm_gen", "retry_interval", "root_dev_info", "root_device", "root_disk_info", "root_vhd_internal_size", "root_vhd_path", "root_vhd_size", "scope", "secure_boot_enabled", "self", "serial_ports", "serialconsoleops", "spec", "state", "staticmethod", "str", "summary_info", "time", "time_limit", "timeout", "units", "utils", "utilsfactory", "uuidutils", "value", "vhd_path", "vhd_type", "vif", "vif_metadata", "vifs", "virtapi", "vm_gen", "vm_name", "vm_state", "vm_states", "volumeops", "vram_bytes", "wait_time", "wrapper", "\"Return", "the", "correct", "network", "module\nGet", "information", "about", "the", "VM.\nCreate", "a", "new", "VM", "and", "start", "it.\nReboot", "the", "specified", "instance.\nPause", "VM", "instance.\nUnpause", "paused", "VM", "instance.\nSuspend", "the", "specified", "instance.\nResume", "the", "suspended", "VM", "instance.\nPower", "off", "the", "specified", "instance.\nPower", "on", "the", "specified", "instance.\nResume", "guest", "state", "when", "a", "host", "is", "booted.", "Make", "sure", "the", "windows", "account", "has", "the", "required", "admin", "permissions.\n", "The", "console", "log", "is", "stored", "in", "two", "files,", "each", "should", "have", "at", "most", "half", "of\n", "the", "maximum", "console", "log", "size.\n", "NOTE(claudiub):", "When", "an", "instance", "starts,", "Hyper-V", "creates", "a", "VM", "memory\n", "file", "on", "the", "local", "disk.", "The", "file", "size", "is", "the", "same", "as", "the", "VM's", "amount\n", "of", "memory.", "Since", "disk_gb", "must", "be", "an", "integer,", "and", "memory", "is", "MB,", "round\n", "up", "from", "X512", "MB.\n", "The", "base", "image", "has", "already", "been", "resized.", "As", "differencing\n", "vhdx", "images", "support", "it,", "the", "root", "image", "will", "be", "resized\n", "instead", "if", "needed.\n", "Make", "sure", "we're", "starting", "with", "a", "clean", "slate.\n", "waiting", "will", "occur", "after", "the", "instance", "is", "created.\n", "We", "never", "heard", "from", "Neutron\n", "NOTE(danms):", "We", "need", "to", "collect", "any", "VIFs", "that", "are", "currently\n", "down", "that", "we", "expect", "a", "down->up", "event", "for.", "Anything", "that", "is\n", "already", "up", "will", "not", "undergo", "that", "transition,", "and", "for\n", "anything", "that", "might", "be", "stale", "(cache-wise)", "assume", "it's\n", "already", "up", "so", "we", "don't", "block", "on", "it.\n", "For", "the", "moment,", "we", "use", "COM", "port", "1", "when", "getting", "the", "serial", "console\n", "log", "as", "well", "as", "interactive", "sessions.", "In", "the", "future,", "the", "way", "in", "which\n", "we", "consume", "instance", "serial", "ports", "may", "become", "configurable.\n\n", "Note", "that", "Hyper-V", "instances", "will", "always", "have", "2", "COM", "ports\n", "RemoteFX", "not", "required.\n", "if", "an", "ephemeral", "doesn't", "have", "a", "path,", "it", "might", "have", "been", "removed\n", "during", "resize.\n", "Do", "the", "attach", "here", "and", "if", "there", "is", "a", "certain", "file", "format", "that", "isn't\n", "supported", "in", "constants.DISK_FORMAT_MAP", "then", "bomb", "out.\n", "Stop", "the", "VM", "first.\n", "Perform", "a", "soft", "shutdown", "on", "the", "instance.\n", "Wait", "maximum", "timeout", "for", "the", "instance", "to", "be", "shutdown.\n", "If", "it", "was", "not", "shutdown,", "retry", "until", "it", "succeeds", "or", "a", "maximum", "of\n", "time", "waited", "is", "equal", "to", "timeout.\n", "Exception", "is", "raised", "when", "trying", "to", "shutdown", "the", "instance\n", "while", "it", "is", "still", "booting.\n", "We", "must", "make", "sure", "that", "the", "console", "log", "workers", "are", "stopped,\n", "otherwise", "we", "won't", "be", "able", "to", "delete", "or", "move", "the", "VM", "log", "files.\n", "The", "manager", "can", "call", "the", "stop", "API", "after", "receiving", "instance\n", "power", "off", "events.", "If", "this", "is", "triggered", "when", "the", "instance\n", "is", "being", "deleted,", "it", "might", "attempt", "to", "power", "off", "an", "unexisting\n", "instance.", "We'll", "just", "pass", "in", "this", "case.\n", "add", "a", "timeout", "to", "the", "periodic", "call.\n", "VM", "did", "not", "shutdown", "in", "the", "expected", "time_limit.\n", "stop", "the", "periodic", "call,", "in", "case", "of", "exceptions", "or", "Timeout.\n", "can", "attach", "/", "detach", "interface", "to", "stopped", "VMs.\n", "TODO(claudiub):", "add", "set", "log", "level", "to", "error", "after", "string", "freeze.\n", "TODO(claudiub):", "add", "set", "log", "level", "to", "error", "after", "string", "freeze.\n", "TODO(claudiub):", "add", "set", "log", "level", "to", "error", "after", "string", "freeze.\n", "Reattach", "the", "configdrive,", "if", "exists", "and", "not", "already", "attached."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_ds_util.py": ["DsUtilTestCase", "False", "None", "StopIteration", "True", "_call_method", "_wait_for_task", "accessible", "args", "call_method", "createParentDirectories", "data_store", "datacenter", "datastorePath", "datastore_invalid_regex", "datastore_regex", "datastore_valid_regex", "datastores", "datastores_i", "dest_datacenter", "dest_name", "destinationDatacenter", "destinationName", "ds_browser", "ds_obj", "ds_path", "ds_type", "ds_types", "ds_util", "dst_dc_ref", "dst_ds_path", "dst_name", "e", "exception", "exp_message", "fake", "fake0", "fake1", "fake_call_method", "fake_ds_list", "fake_ds_mor", "fake_objects", "fake_wait_for_task", "file_exists", "host", "host_mount", "host_mounts", "hosts", "iter", "kwargs", "maintenance_mode", "method", "mock", "module", "name", "next", "object", "propdict", "re", "regex", "result", "result_file", "self", "setattr", "sourceDatacenter", "sourceName", "src_datacenter", "src_dc_ref", "src_ds_path", "src_name", "str", "super", "task_info", "task_ref", "test", "type", "units", "vexc", "Mock", "vim_util", "calls", "made", "by", "get_datastore.", "Should", "never", "get", "here\n", "Should", "never", "get", "here\n", "Should", "never", "get", "here\n", "Should", "never", "get", "here\n", "For", "the", "moment,", "at", "least,", "this", "list", "of", "datastores", "is", "simply", "passed", "to\n", "get_properties_for_a_collection_of_objects,", "which", "we", "mock", "below.", "We\n", "don't", "need", "to", "over-complicate", "the", "fake", "function", "by", "worrying", "about", "its\n", "contents.\n", "Mock", "the", "call", "which", "returns", "a", "list", "of", "datastores", "for", "the", "cluster\n", "Return", "the", "datastore", "result", "sets", "we", "were", "passed", "in,", "in", "the", "order\n", "given\n", "Start", "a", "new", "iterator", "over", "given", "datastores\n", "Continue", "returning", "results", "from", "the", "current", "iterator.\n", "Sentinel", "that", "get_datastore's", "use", "of", "vim", "has", "changed\n", "Test", "with", "a", "regex", "that", "matches", "with", "a", "datastore\n", "Test", "with", "a", "regex", "containing", "whitelist", "of", "datastores\n", "Test", "with", "a", "regex", "that", "has", "no", "match\n", "Checks", "if", "code", "raises", "DatastoreNotFound", "with", "a", "specific", "message\n", "assertRaisesRegExp", "would", "have", "been", "a", "good", "choice", "instead", "of\n", "try/catch", "block,", "but", "it's", "available", "only", "from", "Py", "2.7."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/cells.py": ["ALIAS", "CONF", "CellsController", "False", "None", "True", "_", "_filter_keys", "_fixup_cell_info", "_scrub_cell", "alias", "body", "cap", "capacities", "cell", "cell_capabs", "cell_info", "cells", "cells_policies", "cells_rpcapi", "coll_actions", "common", "context", "ctxt", "deleted", "detail", "dict", "e", "exc", "exception", "existing", "extensions", "getattr", "id", "input_field", "int", "isinstance", "item", "items", "k", "key", "keys", "memb_actions", "messaging", "my_caps", "name", "nova", "num_deleted", "project_id", "req", "res", "rpc", "self", "setattr", "six", "str", "strutils", "transport_field", "transport_field_map", "transport_host", "transport_url", "updated_since", "v", "validation", "value", "version", "wsgi", "The", "cells", "extension.\nController", "for", "Cell", "resources.\nReturn", "all", "cells.\nReturn", "all", "cells", "in", "brief.\nReturn", "all", "cells", "in", "detail.\nReturn", "name", "and", "capabilities", "for", "this", "cell.\nReturn", "capacities", "for", "a", "given", "cell", "or", "all", "cells.\nReturn", "data", "about", "the", "given", "cell", "name.", "'id'", "is", "a", "cell", "name.\nDelete", "a", "child", "or", "parent", "cell", "entry.", "'id'", "is", "a", "cell", "name.\nCreate", "a", "child", "cell", "entry.\nUpdate", "a", "child", "cell", "entry.", "'id'", "is", "the", "cell", "name", "to", "update.\nTell", "all", "cells", "to", "sync", "instance", "info.", "Disassemble", "the", "transport", "URL\n", "Just", "go", "with", "None's\n", "Ask", "the", "CellsManager", "for", "the", "most", "recent", "data\n", "TODO(kaushikc):", "return", "capacities", "as", "a", "part", "of", "cell", "info", "and\n", "cells", "detail", "calls", "in", "v2.1,", "along", "with", "capabilities\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "204\n", "as", "this", "operation", "complete", "the", "deletion", "of", "aggregate", "resource", "and", "return\n", "no", "response", "body.\n", "Start", "with", "the", "cell", "type", "conversion\n", "Avoid", "cell", "type", "being", "overwritten", "to", "'child'\n", "Now", "we", "disassemble", "the", "existing", "transport", "URL...\n", "Copy", "over", "the", "input", "fields\n", "Only", "override", "the", "value", "if", "we're", "given", "an", "override\n", "Now", "set", "the", "transport", "URL\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "201\n", "as", "this", "operation", "complete", "the", "creation", "of", "aggregates", "resource", "when\n", "returning", "a", "response.\n", "NOTE(Vek):", "There", "is", "a", "race", "condition", "here", "if", "multiple\n", "callers", "are", "trying", "to", "update", "the", "cell\n", "information", "simultaneously.", "Since", "this\n", "operation", "is", "administrative", "in", "nature,", "and\n", "will", "be", "going", "away", "in", "the", "future,", "I", "don't", "see\n", "it", "as", "much", "of", "a", "problem...\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "204\n", "as", "this", "operation", "complete", "the", "sync", "instance", "info", "and", "return\n", "no", "response", "body."], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/affinity.py": ["CONF", "False", "LOG", "None", "ServerGroupSoftAntiAffinityWeigher", "True", "_LW", "_SoftAffinityWeigherBase", "__name__", "cfg", "host_state", "instances", "len", "logging", "member_on_host", "members", "policies", "policy_name", "request_spec", "self", "set", "super", "warning_sent", "weight", "weights", "Higher", "weights", "win."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_floating_ip_pools.py": ["FloatingIPPoolsPolicyEnforcementV21", "FloatingIpPoolDeprecationTest", "FloatingIpPoolTestV21", "None", "context", "exc", "exception", "fake_get_floating_ip_pools", "fakes", "fipp_v21", "floating_ip_pools", "mock", "name", "pools", "res_dict", "response", "rule", "rule_name", "self", "super", "test", "view"], "/Users/mehranhassani/repos/nova/nova/network/model.py": ["Exception", "False", "FixedIP", "IP", "Model", "NIC_NAME_LEN", "Network", "NetworkInfo", "NetworkInfoAsyncWrapper", "None", "OVS_VHOSTUSER_INTERFACE_TYPE", "Route", "Subnet", "True", "VIF", "VIF8021QbgParams", "VIF8021QbhParams", "VIF_DETAILS_BRIDGE_NAME", "VIF_DETAILS_MACVTAP_MODE", "VIF_DETAILS_MACVTAP_SOURCE", "VIF_DETAILS_OVS_HYBRID_PLUG", "VIF_DETAILS_PHYSICAL_NETWORK", "VIF_DETAILS_PHYS_INTERFACE", "VIF_DETAILS_PORT_FILTER", "VIF_DETAILS_PROFILEID", "VIF_DETAILS_TAP_MAC_ADDRESS", "VIF_DETAILS_VHOSTUSER_FP_PLUG", "VIF_DETAILS_VHOSTUSER_MODE", "VIF_DETAILS_VHOSTUSER_OVS_PLUG", "VIF_DETAILS_VHOSTUSER_SOCKET", "VIF_DETAILS_VLAN", "VIF_MODEL_ALL", "VIF_MODEL_E1000", "VIF_MODEL_E1000E", "VIF_MODEL_NE2K_PCI", "VIF_MODEL_NETFRONT", "VIF_MODEL_PCNET", "VIF_MODEL_RTL8139", "VIF_MODEL_SPAPR_VLAN", "VIF_MODEL_SRIOV", "VIF_MODEL_VIRTIO", "VIF_MODEL_VMXNET", "VIF_MODEL_VMXNET3", "VIF_TYPE_802_QBG", "VIF_TYPE_802_QBH", "VIF_TYPE_BINDING_FAILED", "VIF_TYPE_BRIDGE", "VIF_TYPE_DVS", "VIF_TYPE_HOSTDEV", "VIF_TYPE_HW_VEB", "VIF_TYPE_IB_HOSTDEV", "VIF_TYPE_IOVISOR", "VIF_TYPE_IVS", "VIF_TYPE_MACVTAP", "VIF_TYPE_MIDONET", "VIF_TYPE_OTHER", "VIF_TYPE_OVS", "VIF_TYPE_TAP", "VIF_TYPE_VHOSTUSER", "VIF_TYPE_VROUTER", "VNIC_TYPES_DIRECT_PASSTHROUGH", "VNIC_TYPES_SRIOV", "VNIC_TYPE_BAREMETAL", "VNIC_TYPE_DIRECT", "VNIC_TYPE_DIRECT_PHYSICAL", "VNIC_TYPE_MACVTAP", "VNIC_TYPE_NORMAL", "_", "active", "address", "all", "args", "async_method", "bridge", "cidr", "classmethod", "cls", "d", "default", "details", "devname", "dict", "dns", "do_raise", "ensure_string_keys", "exception", "fixed_ip", "floating_ip", "floating_ips", "fn", "functools", "gateway", "getattr", "id", "instanceid", "interface", "ip", "ips", "isinstance", "jsonutils", "k", "key", "keys", "kwargs", "label", "list", "managerid", "method", "methods", "msg", "netaddr", "network", "network_info", "new_route", "other", "ovs_interfaceid", "phy_network", "preserve_on_delete", "profile", "profileid", "qbg_params", "qbh_params", "route", "routes", "self", "setattr", "six", "staticmethod", "str", "subnet", "subnets", "super", "type", "typeid", "typeidversion", "utils", "v", "vif", "vnic_type", "wrapped", "wrapper", "Defines", "some", "necessary", "structures", "for", "most", "of", "the", "network", "models.\ncalls", "get(key,", "default)", "on", "self['meta'].\nRepresents", "an", "IP", "address", "in", "Nova.\nRepresents", "a", "Fixed", "IP", "address", "in", "Nova.\nRepresents", "an", "IP", "Route", "in", "Nova.\nRepresents", "a", "Subnet", "in", "Nova.\nConvenient", "function", "to", "get", "cidr", "as", "a", "netaddr", "object.\nRepresents", "a", "Network", "in", "Nova.\nRepresents", "the", "parameters", "for", "a", "802.1qbg", "VIF.\nRepresents", "the", "parameters", "for", "a", "802.1qbh", "VIF.\nRepresents", "a", "Virtual", "Interface", "in", "Nova.\nReturns", "the", "netmask", "appropriate", "for", "injection", "into", "a", "guest.\nStores", "and", "manipulates", "network", "information", "for", "a", "Nova", "instance.\nReturns", "all", "fixed_ips", "without", "floating_ips", "attached.\nReturns", "all", "floating_ips.\nWait", "for", "asynchronous", "call", "to", "finish.\nSynchronize", "the", "model", "before", "running", "a", "method.\nWait", "for", "asynchronous", "call", "to", "finish.", "http://bugs.python.org/issue4978\n", "Constants", "for", "the", "'vif_type'", "field", "in", "VIF", "class\n", "Constants", "for", "dictionary", "keys", "in", "the", "'vif_details'", "field", "in", "the", "VIF\n", "class\n", "The", "following", "constant", "defines", "an", "SR-IOV", "related", "parameter", "in", "the\n", "'vif_details'.", "'profileid'", "should", "be", "used", "for", "VIF_TYPE_802_QBH\n", "The", "following", "constant", "defines", "an", "SR-IOV", "and", "macvtap", "related", "parameter", "in\n", "the", "'vif_details'.", "'vlan'", "should", "be", "used", "for", "VIF_TYPE_HW_VEB", "or\n", "VIF_TYPE_MACVTAP\n", "The", "following", "three", "constants", "define", "the", "macvtap", "related", "fields", "in\n", "the", "'vif_details'.\n", "Constants", "for", "vhost-user", "related", "fields", "in", "'vif_details'.\n", "Sets", "mode", "on", "vhost-user", "socket,", "valid", "values", "are", "'client'\n", "and", "'server'\n", "vhost-user", "socket", "path\n", "Specifies", "whether", "vhost-user", "socket", "should", "be", "plugged\n", "into", "ovs", "bridge.", "Valid", "values", "are", "True", "and", "False\n", "Specifies", "whether", "vhost-user", "socket", "should", "be", "used", "to\n", "create", "a", "fp", "netdevice", "interface.\n", "ovs", "vhost", "user", "interface", "type", "name\n", "Constants", "for", "dictionary", "keys", "in", "the", "'vif_details'", "field", "that", "are\n", "valid", "for", "VIF_TYPE_TAP.\n", "Define", "supported", "virtual", "NIC", "types.", "VNIC_TYPE_DIRECT", "and", "VNIC_TYPE_MACVTAP\n", "are", "used", "for", "SR-IOV", "ports\n", "Define", "list", "of", "ports", "which", "needs", "pci", "request.\n", "Note:", "The", "macvtap", "port", "needs", "a", "PCI", "request", "as", "it", "is", "a", "tap", "interface\n", "with", "VF", "as", "the", "lower", "physical", "interface.\n", "Define", "list", "of", "ports", "which", "are", "passthrough", "to", "the", "guest\n", "and", "need", "a", "special", "treatment", "on", "snapshot", "and", "suspend/resume\n", "Constants", "for", "the", "'vif_model'", "values\n", "Constant", "for", "max", "length", "of", "network", "interface", "names\n", "eg", "'bridge'", "in", "the", "Network", "class", "or", "'devname'", "in\n", "the", "VIF", "class\n", "pull", "meta", "out", "of", "kwargs", "if", "it's", "there\n", "update", "meta", "with", "any", "additional", "kwargs", "that", "may", "exist\n", "determine", "version", "from", "address", "if", "not", "passed", "in\n", "FIXME(mriedem):", "Is", "this", "actually", "used?", "It's", "never", "set.\n", "remove", "unnecessary", "fields", "on", "fixed_ips\n", "remove", "floating", "ips", "from", "IP,", "since", "this", "is", "a", "flat", "structure\n", "of", "all", "IPs\n", "add", "floating", "ips", "to", "list", "(if", "any)\n", "NetworkInfo", "is", "a", "list", "of", "VIFs\n", "There", "is", "no", "asynchronous", "call", "for", "this", "class,", "so", "this", "is", "a", "no-op\n", "here,", "but", "subclasses", "may", "override", "to", "provide", "asynchronous\n", "capabilities.", "Must", "be", "defined", "here", "in", "the", "parent", "class", "so", "that", "code\n", "which", "works", "with", "both", "parent", "and", "subclass", "types", "can", "reference", "this\n", "method.\n", "NOTE(comstud):", "This", "looks", "funky,", "but", "this", "object", "is\n", "subclassed", "from", "list.", "In", "other", "words,", "'self'", "is", "really\n", "just", "a", "list", "with", "a", "bunch", "of", "extra", "methods.", "So", "this\n", "line", "just", "replaces", "the", "current", "list", "(which", "should", "be\n", "empty)", "with", "the", "result."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/microversions.py": ["ALIAS", "MicroversionsController", "MicroversionsController2", "MicroversionsController3", "MicroversionsController4", "MicroversionsExtendsBaseController", "MicroversionsExtendsController1", "MicroversionsExtendsController2", "MicroversionsExtendsController3", "alias", "body", "data", "dummy_schema", "extension1", "extension2", "extension3", "extensions", "id", "name", "req", "res1", "res2", "res3", "res4", "res5", "resp_obj", "self", "validation", "version", "webob", "wsgi", "Microversions", "Test", "Extension\nBasic", "Microversions", "Extension.", "noqa\n", "noqa\n", "We", "have", "a", "second", "example", "controller", "here", "to", "help", "check\n", "for", "accidental", "dependencies", "between", "API", "controllers\n", "due", "to", "base", "class", "changes\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/conf/opts.py": ["Exception", "LIST_OPTS_FUNC_NAME", "_", "__file__", "_append_config_options", "_import_modules", "_list_module_names", "_tupleize", "collections", "config_options", "configs", "dct", "hasattr", "imported_modules", "importlib", "ispkg", "key", "list", "mod", "modname", "module_names", "msg", "opts", "os", "package_path", "pkgutil", "val", "Take", "the", "dict", "of", "options", "and", "convert", "to", "the", "2-tuple", "format."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/servers.py": ["False", "LOG", "None", "True", "ViewBuilder", "_LW", "__name__", "_collection_name", "_fault_statuses", "_inst_fault", "_progress_statuses", "_show_expected_attrs", "api_version_request", "bookmark", "coll_name", "common", "context", "data", "dict", "exception", "expected_attrs", "extend_address", "fault", "fault_dict", "flavor_bookmark", "flavor_id", "func", "getattr", "hashlib", "host", "image_id", "image_ref", "instance", "instance_type", "instances", "ip_v4", "ip_v6", "is_admin", "isinstance", "list", "logging", "mapping", "metadata", "networks", "nova_context", "obj_base", "objects", "project", "request", "self", "server", "server_list", "servers", "servers_dict", "servers_links", "set", "sha_hash", "sorted", "staticmethod", "str", "super", "t", "utils", "views_addresses", "views_flavors", "views_images", "Model", "a", "server", "API", "response", "as", "a", "python", "dictionary.\nInitialize", "view", "builder.\nView", "that", "should", "be", "returned", "when", "an", "instance", "is", "created.\nGeneric,", "non-detailed", "view", "of", "an", "instance.\nDetailed", "view", "of", "a", "single", "instance.\nShow", "a", "list", "of", "servers", "without", "many", "details.\nDetailed", "view", "of", "a", "list", "of", "instance.", "These", "are", "the", "lazy-loadable", "instance", "attributes", "required", "for", "showing\n", "details", "about", "an", "instance.", "Add", "to", "this", "list", "as", "new", "things", "need", "to", "be\n", "shown.\n", "NOTE(sdague):", "historically", "this", "was", "the\n", "os-disk-config", "extension,", "but", "now", "that", "extensions\n", "are", "gone,", "we", "merge", "these", "attributes", "here.\n", "NOTE(mriedem):", "We", "sort", "the", "list", "so", "we", "can", "have", "predictable", "test\n", "results.\n", "NOTE(sdague):", "historically", "this", "was", "the\n", "os-disk-config", "extension,", "but", "now", "that", "extensions\n", "are", "gone,", "we", "merge", "these", "attributes", "here.\n", "FIXME(danms):", "Transitional", "support", "for", "objects\n", "If", "the", "instance", "is", "deleted", "the", "vm", "and", "task", "states", "don't", "really", "matter\n", "NOTE(danms):", "No", "instance", "mapping", "at", "all,", "or", "a", "mapping", "with", "no", "cell,\n", "which", "means", "a", "legacy", "environment", "or", "instance."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/292_drop_nova_volumes_tables.py": ["ForeignKeyConstraint", "MetaData", "Table", "True", "_drop_table_and_indexes", "_get_columns", "_remove_foreign_key_constraints", "column", "columns", "engine", "fk", "fkey", "index", "inspector", "meta", "params", "reflection", "set", "source_table", "table", "table_name", "table_names", "target_table", "Drop", "the", "`iscsi_targets`", "and", "`volumes`", "tables", "They", "were", "used", "with\n", "nova-volumes,", "which", "is", "deprecated", "and", "removed,", "but", "the", "related\n", "tables", "are", "still", "created."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_flavor_extraspecs.py": ["ADMIN_API", "True", "api_sample_base", "response", "sample_dir", "self", "subs"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/api_sample_base.py": ["ApiSampleTestBaseV21", "CONF", "False", "None", "True", "_additional_fixtures", "_project_id", "api_major_version", "api_paste_fixture", "api_samples_test_base", "fake_network", "fix", "fixtures", "nova", "os", "sample_dir", "scenarios", "self", "super", "test", "testscenarios", "API", "samples", "heavily", "uses", "testscenarios.", "This", "allows", "us", "to", "use", "the\n", "same", "tests,", "with", "slight", "variations", "in", "configuration", "to", "ensure", "our\n", "various", "ways", "of", "calling", "the", "API", "are", "compatible.", "Testscenarios", "works\n", "through", "the", "class", "level", "``scenarios``", "variable.", "It", "is", "an", "array", "of\n", "tuples", "where", "the", "first", "value", "in", "each", "tuple", "is", "an", "arbitrary", "name", "for\n", "the", "scenario", "(should", "be", "unique),", "and", "the", "second", "item", "is", "a", "dictionary\n", "of", "attributes", "to", "change", "in", "the", "class", "for", "the", "test.\n\n", "By", "default", "we're", "running", "scenarios", "for", "2", "situations\n\n", "-", "Hitting", "the", "default", "/v2", "endpoint", "with", "the", "v2.1", "Compatibility", "stack\n\n", "-", "Hitting", "the", "default", "/v2.1", "endpoint\n\n", "Things", "we", "need", "to", "set:\n\n", "-", "api_major_version", "-", "what", "version", "of", "the", "API", "we", "should", "be", "hitting\n\n", "-", "microversion", "-", "what", "API", "microversion", "should", "be", "used\n\n", "-", "_additional_fixtures", "-", "any", "additional", "fixtures", "need\n\n", "NOTE(sdague):", "if", "you", "want", "to", "build", "a", "test", "that", "only", "tests", "specific\n", "microversions,", "then", "replace", "the", "``scenarios``", "class", "variable", "in", "that\n", "test", "class", "with", "something", "like:\n\n", "[(\"v2_11\",", "{'api_major_version':", "'v2.1',", "'microversion':", "'2.11'})]\n", "any", "additional", "fixtures", "needed", "for", "this", "scenario\n", "test", "v2", "with", "the", "v2.1", "compatibility", "stack\n", "test", "v2.1", "base", "microversion\n", "test", "v2.18", "code", "without", "project", "id\n", "load", "any", "additional", "fixtures", "specified", "by", "the", "scenario\n", "super", "class", "call", "is", "delayed", "here", "so", "that", "we", "have", "the", "right\n", "paste", "and", "conf", "before", "loading", "all", "the", "services,", "as", "we", "can't\n", "change", "these", "later.\n", "this", "is", "used", "to", "generate", "sample", "docs"], "/Users/mehranhassani/repos/nova/nova/policies/security_group_default_rules.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "security_group_default_rules_policies"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/volumes.py": ["ALIAS", "False", "MAX_PROXY_API_SUPPORT_VERSION", "None", "SnapshotController", "True", "VolumeAttachmentController", "VolumeController", "_", "_check_request_version", "_translate_attachment_detail_view", "_translate_attachment_summary_view", "_translate_snapshot_detail_view", "_translate_snapshot_summary_view", "_translate_volume_detail_view", "_translate_volume_summary_view", "alias", "api_version_request", "assigned_mountpoint", "attachment", "availability_zone", "bdm", "bdms", "body", "cinder", "common", "compute", "context", "create_func", "d", "device", "dict", "e", "entity_maker", "err", "exc", "exc_inv", "exception", "extensions", "force", "found", "id", "instance", "instance_uuid", "limited_list", "list", "location", "metadata", "method", "min_version", "mountpoint", "msg", "name", "new_snapshot", "new_volume", "new_volume_id", "objects", "old_volume", "old_volume_id", "req", "res", "resources", "result", "results", "retval", "self", "server_id", "server_state", "size", "snapshot", "snapshot_id", "snapshots", "state_error", "strutils", "super", "va_policies", "validation", "version", "vm_states", "vol", "vol_policies", "vol_type", "volume", "volume_id", "volumes", "volumes_schema", "wsgi", "The", "volumes", "extension.\nMaps", "keys", "for", "volumes", "details", "view.\nMaps", "keys", "for", "volumes", "summary", "view.\nThe", "Volumes", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "data", "about", "the", "given", "volume.\nDelete", "a", "volume.\nReturns", "a", "summary", "list", "of", "volumes.\nReturns", "a", "detailed", "list", "of", "volumes.\nReturns", "a", "list", "of", "volumes,", "transformed", "through", "entity_maker.\nCreates", "a", "new", "volume.\nMaps", "keys", "for", "attachment", "details", "view.\nMaps", "keys", "for", "attachment", "summary", "view.\nReturns", "the", "list", "of", "volume", "attachments", "for", "a", "given", "instance.\nReturn", "data", "about", "the", "given", "volume", "attachment.\nAttach", "a", "volume", "to", "an", "instance.\nDetach", "a", "volume", "from", "an", "instance.\nReturns", "a", "list", "of", "attachments,", "transformed", "through", "entity_maker.\nMaps", "keys", "for", "snapshots", "details", "view.\nMaps", "keys", "for", "snapshots", "summary", "view.\nThe", "Snapshots", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "data", "about", "the", "given", "snapshot.\nDelete", "a", "snapshot.\nReturns", "a", "summary", "list", "of", "snapshots.\nReturns", "a", "detailed", "list", "of", "snapshots.\nReturns", "a", "list", "of", "snapshots,", "transformed", "through", "entity_maker.\nCreates", "a", "new", "snapshot.\nVolumes", "support.", "No", "additional", "data", "/", "lookups", "at", "the", "moment\n", "NOTE(ildikov):", "The", "attachments", "field", "in", "the", "volume", "info", "that\n", "Cinder", "sends", "is", "converted", "to", "an", "OrderedDict", "with", "the\n", "instance_uuid", "as", "key", "to", "make", "it", "easier", "for", "the", "multiattach\n", "feature", "to", "check", "the", "required", "information.", "Multiattach", "will\n", "be", "enable", "in", "the", "Nova", "API", "in", "Newton.\n", "The", "format", "looks", "like", "the", "following:\n", "attachments", "=", "{'instance_uuid':", "{\n", "'attachment_id':", "'attachment_uuid',\n", "'mountpoint':", "'/dev/sda/\n", "}\n", "}\n", "TODO(vish):", "Instance", "should", "be", "None", "at", "db", "layer", "instead", "of\n", "trying", "to", "lazy", "load,", "but", "for", "now", "we", "turn", "it", "into\n", "a", "dict", "to", "avoid", "an", "error.\n", "No", "additional", "data", "/", "lookups", "at", "the", "moment\n", "NOTE(justinsb):", "We", "use", "the", "volume", "id", "as", "the", "id", "of", "the", "attachment", "object\n", "TODO(mriedem):", "This", "API", "should", "return", "a", "202", "instead", "of", "a", "200", "response.\n", "The", "attach", "is", "async\n", "NOTE(justinsb):", "And", "now,", "we", "have", "a", "problem...\n", "The", "attach", "is", "async,", "so", "there's", "a", "window", "in", "which", "we", "don't", "see\n", "the", "attachment", "(until", "the", "attachment", "completes).", "We", "could", "also\n", "get", "problems", "with", "concurrent", "requests.", "I", "think", "we", "need", "an\n", "attachment", "state,", "and", "to", "write", "to", "the", "DB", "here,", "but", "that's", "a", "bigger\n", "change.\n", "For", "now,", "we'll", "probably", "have", "to", "rely", "on", "libraries", "being", "smart\n", "TODO(justinsb):", "How", "do", "I", "return", "\"accepted\"", "here?\n", "NOTE:", "This", "BadRequest", "is", "different", "from", "the", "above", "NotFound", "even\n", "though", "the", "same", "VolumeNotFound", "exception.", "This", "is", "intentional\n", "because", "new_volume_id", "is", "specified", "in", "a", "request", "body", "and", "if", "a\n", "nonexistent", "resource", "in", "the", "body", "(not", "URI)", "the", "code", "should", "be\n", "400", "Bad", "Request", "as", "API-WG", "guideline.", "On", "the", "other", "hand,\n", "old_volume_id", "is", "specified", "with", "URI.", "So", "it", "is", "valid", "to", "return\n", "NotFound", "response", "if", "that", "is", "not", "existent.\n", "The", "volume", "is", "not", "attached.", "Treat", "it", "as", "NotFound\n", "by", "falling", "through.\n", "The", "volume", "is", "not", "attached.", "Treat", "it", "as", "NotFound\n", "by", "falling", "through.\n", "NOTE(gagupta):", "No", "additional", "data", "/", "lookups", "at", "the", "moment\n", "NOTE(gagupta):", "We", "map", "volume_size", "as", "the", "snapshot", "size"], "/Users/mehranhassani/repos/nova/nova/volume/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/conductor/tasks/migrate.py": ["MigrationTask", "None", "base", "clean_shutdown", "compute_rpcapi", "context", "flavor", "host", "host_state", "hosts", "image", "instance", "jsonutils", "legacy_props", "legacy_spec", "node", "objects", "request_spec", "reservations", "scheduler_client", "scheduler_utils", "self", "super", "TODO(sbauza):", "Remove", "that", "once", "prep_resize()", "accepts", "a", "RequestSpec\n", "object", "in", "the", "signature", "and", "all", "the", "scheduler.utils", "methods", "too\n", "TODO(sbauza):", "Remove", "that", "RequestSpec", "rehydratation", "once\n", "scheduler.utils", "methods", "use", "directly", "the", "NovaObject.\n", "NOTE(sbauza):", "Force_hosts/nodes", "needs", "to", "be", "reset\n", "if", "we", "want", "to", "make", "sure", "that", "the", "next", "destination\n", "is", "not", "forced", "to", "be", "the", "original", "host\n", "context", "is", "not", "serializable\n", "FIXME(sbauza):", "Serialize/Unserialize", "the", "legacy", "dict", "because", "of\n", "oslo.messaging", "#1529084", "to", "transform", "datetime", "values", "into", "strings.\n", "tl;dr:", "datetimes", "in", "dicts", "are", "not", "accepted", "as", "correct", "values", "by", "the\n", "rpc", "fake", "driver."], "/Users/mehranhassani/repos/nova/nova/policies/evacuate.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "evacuate_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/fping.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "fping_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/029_placement_aggregates.py": ["Column", "DateTime", "False", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "meta", "migrate_engine", "placement_aggregates", "API", "Database", "migrations", "for", "placement_aggregates"], "/Users/mehranhassani/repos/nova/nova/ipv6/__init__.py": ["noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_host.py": ["AttributeError", "DiagFakeDomain", "FakeVirtDomain", "False", "HostTestCase", "IOError", "None", "StringMatcher", "True", "TypeError", "args", "caps", "cb", "cnt", "conn", "connect_with_block", "connection", "creds", "dict", "dom", "dom0", "dom1", "domain", "doms", "e", "error", "ev", "event", "event1", "event2", "event3", "event4", "eventlet", "exception", "expected", "fake_caps_xml", "fake_dom_xml", "fake_hv_type", "fake_hv_ver", "fake_list_all", "fake_lookup", "fake_lv_ver", "fake_register", "fakelibvirt", "flags", "func", "get_conn_currency", "got_events", "greenthread", "gt_mock", "guest", "h", "handler", "host", "hostimpl", "hv_type", "hv_ver", "hv_ver_", "id", "instance", "isinstance", "len", "libvirt_driver", "libvirt_guest", "log_mock", "lv_ver", "lv_ver_", "m", "memmb", "mock", "mock_close", "mock_compareCPU", "mock_conn", "mock_defineXML", "mock_event", "mock_file", "mock_find_secret", "mock_hostname", "mock_libvirt", "mock_list", "mock_listDevices", "mock_list_all", "mock_list_domains", "mock_nodeDeviceLookupByName", "mock_open", "mock_platform", "mock_queue", "mock_sec", "mock_spawn_after", "mock_test_conn", "mock_type", "mock_ver", "mock_version", "name", "not_supported_exc", "obj_fields", "object", "objects", "opaque", "other", "other_exc", "result", "seconds", "secret", "self", "set_close_callback", "six", "spawn_after", "spawn_after_mock", "stats", "super", "test", "testtools", "thr1", "thr2", "type", "uri", "uuid", "uuids", "uuidutils", "vconfig", "vm0", "vm1", "vm2", "vm3", "vm4", "vm_states", "vms", "want_events", "x", "finding", "secrets", "with", "various", "usage_type.\ncreating", "secrets", "with", "various", "usage_type.\ndeleting", "secret.", "verify", "that", "the", "driver", "registers", "for", "the", "close", "callback\n", "Validate", "that", "the", "libvirt", "self-pipe", "for", "forwarding\n", "events", "between", "threads", "is", "working", "sanely\n", "STOPPED", "is", "delayed", "so", "it's", "handled", "separately\n", "Validate", "that", "libvirt", "events", "are", "correctly", "translated\n", "to", "Nova", "events\n", "enough", "to", "allow", "another", "connect", "to", "run\n", "call", "serially\n", "enough", "to", "allow", "another", "connect", "to", "run\n", "call", "concurrently\n", "let", "threads", "run\n", "Attempt", "to", "get", "a", "second", "connection,", "and", "assert", "that", "we", "don't", "add\n", "queue", "a", "second", "callback.", "Note", "that", "we", "can't", "call\n", "_dispatch_conn_event()", "and", "assert", "no", "additional", "call", "to", "the", "handler\n", "here", "as", "above.", "This", "is", "because", "we", "haven't", "added", "an", "event,", "so", "it", "would\n", "block.", "We", "mock", "the", "helper", "method", "which", "queues", "an", "event", "for", "callback\n", "instead.\n", "This", "test", "will", "timeout", "if", "it", "fails.", "Success", "is", "implicit", "in", "a\n", "timely", "return", "from", "wait(),", "indicating", "that", "the", "connection", "event\n", "handler", "was", "called.\n", "Xen", "dom-0\n", "Test", "old", "version", "of", "libvirt,", "it", "shouldn't", "see", "the", "`aes'", "feature\n", "Cleanup", "the", "capabilities", "cache", "firstly\n", "Test", "new", "version", "of", "libvirt,", "should", "find", "the", "`aes'", "feature\n", "Test", "old", "version", "of", "libvirt.", "Should", "return", "single", "'hypervisor'\n", "Cleanup", "the", "capabilities", "cache", "firstly\n", "Test", "new", "version", "of", "libvirt.", "Should", "still", "return", "single", "'hypervisor'\n", "Handle", "just", "the", "NO_SUPPORT", "error\n", "Clear", "cached", "result", "so", "we", "can", "test", "again...\n", "Other", "errors", "should", "not", "be", "caught"], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/fakes.py": ["FakeModel", "False", "INSTANCE_TYPES", "None", "NotImplementedError", "True", "ValueError", "_create_instance_type", "address", "addresses", "auto_assigned", "classmethod", "cls", "context", "copy", "datetime", "dict", "exception", "fake_fixed_ip_associate", "fake_fixed_ip_associate_pool", "fake_fixed_ip_create", "fake_fixed_ip_disassociate", "fake_fixed_ip_disassociate_all_by_timeout", "fake_fixed_ip_get_all", "fake_fixed_ip_get_by_address", "fake_fixed_ip_get_by_instance", "fake_fixed_ip_update", "fake_flavor_get", "fake_flavor_get_all", "fake_flavor_get_by_name", "fake_floating_ip_allocate_address", "fake_floating_ip_deallocate", "fake_floating_ip_disassociate", "fake_floating_ip_fixed_ip_associate", "fake_floating_ip_get_all_by_host", "fake_floating_ip_get_by_address", "fake_network_create_safe", "fake_network_get", "fake_network_get_all", "fake_network_get_all_by_host", "fake_network_set_host", "fake_network_update", "fake_project_get_networks", "fake_virtual_interface_create", "fake_virtual_interface_delete_by_instance", "fake_virtual_interface_get_by_instance", "fake_virtual_interface_get_by_instance_and_network", "fif", "fixed", "fixed_address", "fixed_ip_address", "fixed_ip_fields", "fixed_ips", "flavor_fields", "float", "floating_address", "floating_ip_fields", "floating_ips", "fn", "func", "funcs", "host", "host_id", "i", "id", "injected", "inst_type", "instance_id", "instance_type", "instance_uuid", "ip", "ips", "isinstance", "key", "m", "max", "module", "n", "name", "net", "nets", "network_fields", "network_id", "networks", "object", "pool", "project_id", "self", "six", "str", "stub_out", "test", "time", "updates", "v", "values", "vif", "virtual_interface_fields", "virtual_interfaces", "Stubouts,", "mocks", "and", "fixtures", "for", "the", "test", "suite.\nStubs", "out", "for", "model.\nSet", "the", "stubs", "in", "mapping", "in", "the", "db", "api.\nStubs", "out", "the", "db", "API", "for", "creating", "Instances.", "TODO(jkoelker):", "Once", "we", "get", "the", "patches", "that", "remove", "host", "from\n", "the", "floating_ip", "table,", "we'll", "need", "to", "stub\n", "this", "out\n", "NOTE(tr3buchet):", "yo", "dawg,", "i", "heard", "you", "like", "addresses"], "/Users/mehranhassani/repos/nova/nova/context.py": ["False", "LOG", "None", "RequestContext", "True", "ValueError", "_", "_ContextAuthPlugin", "__name__", "_del_read_deleted", "_get_read_deleted", "_set_read_deleted", "action", "auth_token", "cell_mapping", "class_name", "classmethod", "cls", "context", "contextmanager", "copy", "ctx", "ctxt", "db", "db_connection_string", "enginefacade", "environ", "exception", "fatal", "getattr", "hasattr", "instance_lock_checked", "interface", "is_admin", "is_user_context", "isinstance", "ksa_service_catalog", "kwargs", "logging", "original_db_connection", "plugin", "policy", "project_id", "project_name", "property", "quota_class", "read_deleted", "region_name", "remote_address", "s", "sc", "self", "service_catalog", "service_name", "service_type", "session", "six", "super", "target", "timestamp", "timeutils", "user_auth_plugin", "user_id", "user_name", "utils", "value", "values", "RequestContext:", "context", "for", "requests", "that", "persist", "through", "all", "of", "nova.\nReturn", "a", "version", "of", "this", "context", "with", "admin", "flag", "set.\nIndicates", "if", "the", "request", "context", "is", "a", "normal", "user.\nEnsures", "a", "request", "has", "permission", "to", "access", "the", "given", "project.\nEnsures", "a", "request", "has", "permission", "to", "access", "the", "given", "user.\nEnsures", "a", "request", "has", "permission", "to", "access", "the", "given", "quota", "class.", "Only", "include", "required", "parts", "of", "service_catalog\n", "if", "list", "is", "empty", "or", "none\n", "NOTE(markmc):", "this", "attribute", "is", "currently", "only", "used", "by", "the\n", "rs_limits", "turnstile", "pre-processor.\n", "See", "https://lists.launchpad.net/openstack/msg12200.html\n", "NOTE(dheeraj):", "The", "following", "attributes", "are", "used", "by", "cellsv2", "to", "store\n", "connection", "information", "for", "connecting", "to", "the", "target", "cell.\n", "It", "is", "only", "manipulated", "using", "the", "target_cell", "contextmanager\n", "provided", "by", "this", "module\n", "FIXME(dims):", "user_id", "and", "project_id", "duplicate", "information", "that", "is\n", "already", "present", "in", "the", "oslo_context's", "RequestContext.", "We", "need", "to\n", "get", "rid", "of", "them.\n", "FIXME(dims):", "defensive", "hasattr()", "checks", "need", "to", "be\n", "removed", "once", "we", "figure", "out", "why", "we", "are", "seeing", "stack\n", "traces\n", "NOTE(tonyb):", "This", "can", "be", "removed", "once", "we're", "certain", "to", "have", "a\n", "RequestContext", "contains", "'is_admin_project',", "We", "can", "only", "get", "away", "with\n", "this", "because", "we", "\"know\"", "the", "default", "value", "of", "'is_admin_project'", "which\n", "is", "very", "fragile.\n", "the", "base", "oslo.context", "sets", "its", "user", "param", "and", "tenant", "param", "but", "not\n", "our", "user_id", "and", "project_id", "param", "so", "fix", "those", "up.\n", "context.roles", "must", "be", "deepcopied", "to", "leave", "original", "roles\n", "without", "changes\n", "NOTE(alaski):", "This", "method", "should", "only", "be", "used", "when", "an", "admin", "context", "is\n", "necessary", "for", "the", "entirety", "of", "the", "context", "lifetime.", "If", "that's", "not", "the\n", "case", "please", "use", "get_context(),", "or", "create", "the", "RequestContext", "manually,", "and\n", "use", "context.elevated()", "where", "necessary.", "Some", "periodic", "tasks", "may", "use\n", "get_admin_context", "so", "that", "their", "database", "calls", "are", "not", "filtered", "on\n", "project_id.\n", "avoid", "circular", "import"], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/tasks/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/extra_specs_ops.py": ["False", "None", "True", "all", "float", "method", "op", "op_methods", "operator", "req", "val", "value", "words", "x", "y", "1.", "The", "following", "operations", "are", "supported:\n", "=,", "s==,", "s!=,", "s>=,", "s>,", "s<=,", "s<,", "<in>,", "<all-in>,", "<or>,", "==,", "!=,", ">=,", "<=\n", "2.", "Note", "that", "<or>", "is", "handled", "in", "a", "different", "way", "below.\n", "3.", "If", "the", "first", "word", "in", "the", "extra_specs", "is", "not", "one", "of", "the", "operators,\n", "it", "is", "ignored.\n", "Ex:", "<or>", "v1", "<or>", "v2", "<or>", "v3\n", "remove", "a", "keyword", "<or>\n", "requires", "a", "list", "not", "a", "string"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/multinic.py": ["ALIAS", "MultinicController", "address", "alias", "args", "body", "common", "compute", "context", "controller", "e", "exc", "exception", "extension", "extensions", "id", "instance", "kwargs", "multinic", "multinic_policies", "name", "network_id", "req", "self", "super", "validation", "version", "wsgi", "The", "multinic", "extension.\nAdds", "an", "IP", "on", "a", "given", "network", "to", "an", "instance.\nRemoves", "an", "IP", "from", "an", "instance.\nMultiple", "network", "support.", "Note:", "The", "class", "name", "is", "as", "it", "has", "to", "be", "for", "this", "to", "be", "loaded", "as", "an\n", "extension--only", "first", "character", "capitalized."], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_flavor.py": ["Exception", "False", "None", "True", "context", "db_flavor", "expected_attrs", "fake_db_flavor", "field", "fields", "name", "objects", "updates"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/quobyte.py": ["CONF", "DRIVER_CACHE", "DRIVER_IO", "False", "LOG", "LibvirtQuobyteVolumeDriver", "None", "OSError", "SOURCE_PROTOCOL", "SOURCE_TYPE", "_", "_LE", "_LI", "__name__", "command", "conf", "configfile", "connection_info", "data", "disk_dev", "disk_info", "errno", "exc", "export", "fileutils", "fs", "len", "libvirt_utils", "logging", "mnt_base", "mount_path", "mount_volume", "mounted", "msg", "nova", "nova_exception", "os", "processutils", "protocol", "quobyte_volume", "self", "six", "super", "umount_volume", "utils", "validate_volume", "volume", "Wraps", "execute", "calls", "for", "mounting", "a", "Quobyte", "volume\nWraps", "execute", "calls", "for", "unmouting", "a", "Quobyte", "volume\nWraps", "execute", "calls", "for", "checking", "validity", "of", "a", "Quobyte", "volume\nClass", "implements", "libvirt", "part", "of", "volume", "driver", "for", "Quobyte.\nConnect", "the", "volume.\nDisconnect", "the", "volume.", "Run", "mount", "command", "but", "do", "not", "fail", "on", "already", "mounted", "exit", "code"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_designer.py": ["KeyError", "None", "conf", "config", "designer", "e", "expected", "matchers", "mock", "mock_pci", "mock_pci_fields", "pci_utils", "self", "test", "Test", "whether", "test_set_vif_bandwidth_config_no_extra_specs", "fails", "when\n", "its", "second", "parameter", "has", "no", "'extra_specs'", "field.\n", "The", "conf", "will", "never", "be", "user", "be", "used,", "so", "we", "can", "use", "'None'.\n", "An", "empty", "dictionary", "is", "fine:", "all", "that", "matters", "it", "that", "there", "is", "no\n", "'extra_specs'", "field."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/230_add_details_column_to_instance_actions_events.py": ["Column", "String", "Text", "actions_events", "api", "details", "host", "migrate_engine", "shadow_actions_events", "utils"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/flavor_manage.py": ["ALIAS", "FlavorManageController", "True", "_", "_view_builder_class", "alias", "body", "context", "controller", "e", "ephemeral_gb", "err", "exception", "extension", "extensions", "flavor", "flavor_manage", "flavorid", "flavors", "flavors_view", "fm_policies", "id", "is_public", "memory", "name", "objects", "req", "root_gb", "rxtx_factor", "self", "super", "swap", "validation", "vals", "vcpus", "version", "webob", "wsgi", "The", "Flavor", "Lifecycle", "API", "controller", "for", "the", "OpenStack", "API.\nFlavor", "create/delete", "API", "support.", "NOTE(oomichi):", "Return", "202", "for", "backwards", "compatibility", "but", "should", "be\n", "204", "as", "this", "operation", "complete", "the", "deletion", "of", "aggregate", "resource", "and\n", "return", "no", "response", "body.\n", "NOTE(oomichi):", "Return", "200", "for", "backwards", "compatibility", "but", "should", "be", "201\n", "as", "this", "operation", "complete", "the", "creation", "of", "flavor", "resource.\n", "NOTE(gmann):", "For", "backward", "compatibility,", "non", "public", "flavor\n", "access", "is", "not", "being", "added", "for", "created", "tenant.", "Ref", "-bug/1209101"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_vm_util.py": ["DynamicProperty", "FakeVirtualE1000", "False", "ManagedObjectRefs", "MoRef", "None", "ObjectContent", "OptionValue", "True", "VMwareVMUtilGetHostRefTestCase", "VMwareVMUtilTestCase", "_call_method", "_wait_for_task", "actual", "args", "backing", "boot_disk", "boot_options", "bus_number", "call_method", "card", "child_entity", "child_entity_1", "child_entity_1_name", "child_entity_2", "child_entity_2_name", "child_entity_3", "child_entity_3_name", "child_folder", "child_name", "cluster", "collections", "config_spec", "connectable", "connection_state", "constants", "controller", "controller_key", "controller_spec", "cpuAllocation", "cpu_allocation", "cpu_limits", "create_spec", "datastore", "destroy_disk", "details", "device", "device1", "device2", "device_change", "devices", "dict", "disk", "disk1", "disk2", "disk3", "disk_backing", "display_name", "dm", "dp", "driver", "ds_obj", "duplicate_exception", "e_disk", "exception", "expected", "expected_calls", "expected_invoke_api", "expected_stats", "extra_config", "extra_opts", "extra_specs", "factory", "fake", "fake_call_method", "fake_call_mock", "fake_devices", "fake_factory", "fake_get_ref", "fake_get_spec", "fake_get_vm_ref", "fake_instance", "fake_log_warn", "fake_objects", "fake_profile_id", "fake_vms", "fake_wait_for_task", "fake_wait_mock", "filename", "found", "hardware", "hardware_device", "hasattr", "host", "hosts", "i", "ide0", "ide1", "ide_controller", "isinstance", "len", "limits", "list", "maintenance_mode", "mem_info", "memory_allocation", "memory_limits", "memory_mb", "method", "mock", "mock_call", "mock_get_name", "mock_get_vm_ref", "mock_log_warn", "mock_object", "mock_reconfigure", "mock_retrieve_profile_id", "module", "msg", "n_filename", "name", "network_model", "network_ref", "object", "opt_val", "parent", "parent_folder", "partialObject", "path", "pbm", "port", "profile_spec", "prop_dict", "prop_list_host_1", "prop_list_host_2", "prop_val", "prop_val_1", "prop_val_2", "propdict", "range", "ref", "remote_display_vnc_enabled", "remote_display_vnc_keymap", "remote_display_vnc_port", "res", "respool", "respool_resource_usage", "result", "ret", "root_disk", "runtime_host_1", "runtime_host_2", "scsi0", "scsi_controller", "self", "serial_port_spec", "session", "sorted", "spec", "str", "stubs", "super", "swap_disk", "taken", "task_info", "test", "type", "types", "unit_number", "uuid", "uuidutils", "values", "vc6_onwards", "vcpus", "vexc", "vif_info", "virtual_device_config", "vm", "vm_ref", "vm_util", "vmdk", "vmdk_adapter_type", "vutil", "wait_for_task", "Test", "create_folder", "when", "the", "datacenter", "vmFolder", "is", "empty\nTest", "create_folder", "when", "child", "not", "present.\nTest", "create_folder", "when", "child", "already", "present.", "Test", "controller", "spec", "returned", "for", "lsiLogic", "sas", "adapter", "type\n", "Test", "controller", "spec", "returned", "for", "paraVirtual", "adapter", "type\n", "Test", "controller", "spec", "with", "specific", "bus", "number", "rather", "default", "0\n", "Test", "the", "adapter_type", "returned", "for", "a", "lsiLogic", "sas", "controller\n", "Ephemeral", "disk\n", "Test", "for", "the", "adapter_type", "to", "be", "used", "in", "vmdk", "descriptor\n", "Adapter", "type", "in", "vmdk", "descriptor", "is", "same", "for", "LSI-SAS,", "LSILogic\n", "and", "ParaVirtual\n", "return", "the", "scsi", "type,", "not", "ide\n", "the", "controller", "is", "not", "suitable", "since", "the", "device", "under", "this", "controller\n", "has", "exceeded", "SCSI_MAX_CONNECT_NUMBER\n", "Test", "that", "default", "IDE", "controllers", "are", "used", "when", "there", "is", "a", "free", "slot\n", "on", "them\n", "Test", "that", "a", "new", "controller", "is", "created", "when", "there", "is", "no", "free", "slot", "on\n", "the", "default", "IDE", "controllers\n", "Test", "that", "we", "allocate", "on", "existing", "SCSI", "controller", "if", "there", "is", "a", "free\n", "slot", "on", "it\n", "Test", "that", "we", "allocate", "on", "existing", "SCSI", "controller", "if", "there", "is", "a", "free\n", "slot", "on", "it\n", "Add", "new", "attribute", "externalId", "supported", "from", "VC6\n", "Root", "disk\n", "Swap", "disk\n", "N.B.", "Mocking", "on", "the", "class", "only", "mocks", "test_*(),", "but", "we", "need\n", "VMwareAPISession.vim", "to", "be", "mocked", "in", "both", "setUp", "and", "tests.", "Not", "mocking", "in\n", "setUp", "causes", "object", "initialisation", "to", "fail.", "Not", "mocking", "in", "tests", "results\n", "in", "vim", "calls", "not", "using", "FakeVim.\n", "Create", "a", "fake", "VirtualMachine", "running", "on", "a", "known", "host"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_cells.py": ["CONF", "CellsSampleJsonTest", "True", "_fake_cell_get", "_fake_cell_get_all", "api_sample_base", "cell", "cell_name", "context", "exception", "goc_mock", "inst", "mock", "models", "my_state", "nova", "num_cells", "our_id", "range", "response", "sample_dir", "self", "state", "state_manager", "super", "x", "db_check_interval", "<", "0", "makes", "cells", "manager", "always", "hit", "the", "DB\n", "Override", "this"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/248_add_expire_reservations_index.py": ["Index", "LOG", "MetaData", "Table", "True", "_LI", "__name__", "_get_deleted_expire_index", "idx", "index", "logging", "members", "meta", "migrate_engine", "reservations", "sorted", "table", "Based", "on", "expire_reservations", "query\n", "from:", "nova/db/sqlalchemy/api.py"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_user_data.py": ["CONF", "FAKE_UUID", "False", "None", "ServersControllerCreateTest", "True", "args", "base64", "body", "cfg", "compute_api", "context", "create", "datetime", "def_image_ref", "dict", "exception", "ext_info", "extension_info", "fake", "fake_gen_uuid", "fake_instance", "fake_method", "fakes", "flavors", "image_uuid", "inst", "inst_type", "instance", "instance_create", "instance_get", "instance_id", "instance_update", "instance_uuid", "jsonutils", "kwargs", "legacy_v2", "manager", "mock", "mock_create", "no_image", "old_create", "override_controller", "params", "project_get_networks", "req", "return_security_group", "security_group_id", "self", "server", "server_update", "servers", "super", "test", "user_data", "user_id", "uuid", "value", "values", "Shared", "implementation", "for", "tests", "below", "that", "create", "instance.", "Network", "API", "needs", "to", "be", "stubbed", "out", "before", "creating", "the", "controllers."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/iser.py": ["CONF", "LibvirtISERVolumeDriver", "connection", "connector", "iscsi", "nova", "self", "super", "utils", "Driver", "to", "attach", "Network", "volumes", "to", "libvirt.", "Call", "the", "factory", "here", "so", "we", "can", "support\n", "more", "than", "x86", "architectures."], "/Users/mehranhassani/repos/nova/nova/network/security_group/openstack_driver.py": ["NEUTRON_DRIVER", "NOVA_DRIVER", "importutils", "is_neutron_security_groups", "nova"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_imagecache.py": ["CONF", "False", "ImageCacheManagerTestCase", "None", "REQUIRES_LOCKING", "True", "_age_and_verify", "_file_delete", "_get_ds_browser", "_get_dynamic", "_get_sub_folders", "_get_timestamp", "_list_base", "_mkdir", "_timestamp_cleanup", "all_instances", "cache", "cache_root_folder", "cfg", "context", "datastore", "datastores_info", "datetime", "dc_info", "dc_ref", "ds", "ds_browser", "ds_obj", "ds_path", "ds_ref", "ds_util", "expected_ds_path", "fake", "fake_age_cached_images", "fake_ds_ref", "fake_file_delete", "fake_get_ds_browser", "fake_get_object_property", "fake_get_sub_folders", "fake_get_timestamp", "fake_instance", "fake_list_datastore_images", "fake_mkdir", "fake_timestamp_cleanup", "files", "fn", "image_id", "imagecache", "images", "instance", "instances", "mobj", "mock", "mock_bdms_by_inst", "mock_get_ds_browser", "mock_get_method", "mock_timestamp_cleanup", "mock_timestamp_folder_get", "moref", "objects", "originals", "path", "property_name", "ret", "self", "session", "set", "str", "super", "t", "test", "timestamp_folder_path", "ts", "ts_path", "utils_fixture", "uuidsentinel", "vim", "vutil", "No", "time", "stamp", "exists\n", "Timestamp", "that", "will", "be", "valid", "=>", "no", "deletion\n", "Timestamp", "that", "will", "be", "invalid", "=>", "deletion"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/025_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_groups.py": ["ALIAS", "Exception", "False", "LOG", "None", "ServerGroupController", "ValueError", "_", "_LE", "__name__", "_authorize_context", "action", "alias", "api_version_request", "body", "common", "context", "e", "exc", "extensions", "filters", "group", "id", "instance", "instances", "limited_list", "logging", "members", "msg", "name", "nova", "objects", "project_id", "quotas", "req", "res", "result", "schema", "self", "server_group", "sg", "sg_policies", "sgs", "user_id", "validation", "vals", "version", "webob", "wsgi", "The", "Server", "Group", "API", "Extension.\nThe", "Server", "group", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "data", "about", "the", "given", "server", "group.\nDelete", "an", "server", "group.\nReturns", "a", "list", "of", "server", "groups.\nCreates", "a", "new", "server", "group.\nServer", "group", "support.", "the", "id", "field", "has", "its", "value", "as", "the", "uuid", "of", "the", "server", "group\n", "There", "is", "no", "'uuid'", "key", "in", "server_group", "seen", "by", "clients.\n", "In", "addition,", "clients", "see", "policies", "as", "a", "[\"policy-name\"]", "list;\n", "and", "they", "see", "members", "as", "a", "[\"server-id\"]", "list.\n", "NOTE(danms):", "This", "has", "been", "exposed", "to", "the", "user,", "but", "never", "used.\n", "Since", "we", "can't", "remove", "it,", "just", "make", "sure", "it's", "always", "empty.\n", "Display", "the", "instances", "that", "are", "not", "deleted.\n", "Add", "project", "id", "information", "to", "the", "response", "data", "for\n", "API", "version", "v2.13\n", "We", "have", "to", "add", "the", "quota", "back", "to", "the", "user", "that", "created\n", "the", "server", "group"], "/Users/mehranhassani/repos/nova/nova/scheduler/manager.py": ["CONF", "LOG", "None", "QUOTAS", "SchedulerManager", "True", "__name__", "_sentinel", "aggregate", "aggregates", "args", "context", "ctxt", "dests", "driver", "exception", "filter_properties", "host_name", "instance_info", "instance_uuid", "instance_uuids", "jsonutils", "kwargs", "logging", "manager", "messaging", "nova", "object", "objects", "periodic_task", "quota", "request_spec", "scheduler_driver", "self", "spec_obj", "super", "target", "Chooses", "a", "host", "to", "run", "instances", "on.", "TODO(sbauza):", "Change", "the", "method", "signature", "to", "only", "accept", "a", "spec_obj\n", "argument", "once", "API", "v5", "is", "provided.\n", "NOTE(sbauza):", "We're", "dropping", "the", "user", "context", "now", "as", "we", "don't", "need", "it\n", "NOTE(sbauza):", "We're", "dropping", "the", "user", "context", "now", "as", "we", "don't", "need", "it"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/server_migrations.py": ["False", "force_complete"], "/Users/mehranhassani/repos/nova/nova/objects/instance_fault.py": ["Exception", "LOG", "True", "VERSION", "_LE", "__name__", "base", "cells_opts", "cells_rpcapi", "cls", "context", "db", "db_fault", "db_faultdict", "db_faultlist", "db_faults", "exception", "fault", "fields", "instance_uuid", "instance_uuids", "itertools", "key", "logging", "objects", "self", "staticmethod", "values", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Added", "create()\n", "NOTE(danms):", "These", "are", "identical", "right", "now\n", "Cells", "should", "only", "try", "sending", "a", "message", "over", "to", "nova-cells\n", "if", "cells", "is", "enabled", "and", "we're", "not", "the", "API", "cell.", "Otherwise,\n", "if", "the", "API", "cell", "is", "calling", "this,", "we", "could", "end", "up", "with\n", "infinite", "recursion.\n", "Version", "1.0:", "Initial", "version\n", "InstanceFault", "<=", "version", "1.1\n", "Version", "1.1:", "InstanceFault", "version", "1.2\n", "Version", "1.2:", "Added", "get_latest_by_instance_uuids()", "method"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/config_drive.py": ["parameter_types", "server_create"], "/Users/mehranhassani/repos/nova/nova/objects/fixed_ip.py": ["FIXED_IP_OPTIONAL_ATTRS", "False", "FixedIP", "None", "True", "VERSION", "address", "classmethod", "cls", "context", "db", "db_fixedip", "db_fixedips", "db_vif", "exception", "expected_attrs", "field", "fields", "fip", "fips", "fixed_ips", "fixedip", "get_network", "host", "id", "info", "inst", "instance_uuid", "ip", "ipinfo", "ips", "network", "network_id", "obj_base", "objects", "primitive", "reserved", "self", "staticmethod", "str", "super", "target_version", "time", "time_str", "timeutils", "updates", "utils", "versionutils", "vif", "vif_id", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "virtual_interface", "field\n", "Version", "1.2:", "Instance", "version", "1.14\n", "Version", "1.3:", "Instance", "1.15\n", "Version", "1.4:", "Added", "default_route", "field\n", "Version", "1.5:", "Added", "floating_ips", "field\n", "Version", "1.6:", "Instance", "1.16\n", "Version", "1.7:", "Instance", "1.17\n", "Version", "1.8:", "Instance", "1.18\n", "Version", "1.9:", "Instance", "1.19\n", "Version", "1.10:", "Instance", "1.20\n", "Version", "1.11:", "Instance", "1.21\n", "Version", "1.12:", "Instance", "1.22,", "FloatingIPList", "1.9\n", "Version", "1.13:", "Instance", "1.23,", "FloatingIPList", "1.10\n", "Version", "1.14:", "Added", "vif_id", "kwarg", "to", "associate(_pool),", "FloatingIPList", "1.11\n", "NOTE(danms):", "This", "should", "not", "ever", "be", "made", "lazy-loadable\n", "because", "it", "would", "create", "a", "bit", "of", "a", "loop", "between", "FixedIP\n", "and", "FloatingIP\n", "NOTE(danms):", "This", "field", "is", "only", "set", "when", "doing", "a\n", "FixedIPList.get_by_network()", "because", "it's", "a", "relatively\n", "special-case", "thing,", "so", "skip", "it", "here\n", "NOTE(danms):", "Instance", "could", "be", "deleted,", "and", "thus", "None\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "get_by_network()\n", "Version", "1.2:", "FixedIP", "<=", "version", "1.2\n", "Version", "1.3:", "FixedIP", "<=", "version", "1.3\n", "Version", "1.4:", "FixedIP", "<=", "version", "1.4\n", "Version", "1.5:", "FixedIP", "<=", "version", "1.5,", "added", "expected", "attrs", "to", "gets\n", "Version", "1.6:", "FixedIP", "<=", "version", "1.6\n", "Version", "1.7:", "FixedIP", "<=", "version", "1.7\n", "Version", "1.8:", "FixedIP", "<=", "version", "1.8\n", "Version", "1.9:", "FixedIP", "<=", "version", "1.9\n", "Version", "1.10:", "FixedIP", "<=", "version", "1.10\n", "Version", "1.11:", "FixedIP", "<=", "version", "1.11\n", "Version", "1.12:", "FixedIP", "<=", "version", "1.12\n", "Version", "1.13:", "FixedIP", "<=", "version", "1.13\n", "Version", "1.14:", "FixedIP", "<=", "version", "1.14"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/stubs.py": ["Exception", "FakeException", "FakeSessionForFirewallTests", "FakeSessionForVMTests", "FakeSessionForVolumeTests", "False", "None", "ReplaceModule", "True", "XenAPITestBase", "XenAPITestBaseNoDB", "_1", "_10", "_11", "_2", "_3", "_4", "_5", "_6", "_7", "_8", "_9", "_fake_fetch_disk_image", "_fake_iptables_save_output", "_make_fake_vdi", "_vmops", "args", "cls", "cmd", "cmd_args", "conn", "context", "details", "dev", "dict", "dom0", "error", "f", "fake", "fake_acquire_bootlock", "fake_destroy", "fake_download", "fake_fetch_image", "fake_generate_ephemeral", "fake_get_sr_path", "fake_get_vdi", "fake_import_all_migrated_disks", "fake_none", "fake_release_bootlock", "fake_session", "fake_sr", "fake_stream_disk", "fake_wait_for_device", "fake_wait_for_instance_to_start", "fake_wait_for_vhd_coalesce", "fakesr", "filename", "fixtures", "hasattr", "host_ref", "hostref", "image", "image_type", "import_root", "instance", "islive", "jsonutils", "lines", "live", "max_seconds", "method", "migrate_data", "mock", "name", "name_label", "networkref", "new_value", "nova", "old_value", "opt_args", "options", "output", "pickle", "platform_version", "plugin", "process_input", "product_brand", "product_version", "raise_failure", "random", "rec", "ref", "refs", "ret_str", "root_uuid", "s", "self", "session", "session_ref", "six", "sr_ref", "stubs", "super", "sys", "test", "test_case", "type", "uri", "url", "userdevice", "uuid", "valid_vdi", "vdi_map", "vdi_rec", "vdi_rec_parent", "vdi_ref", "vdi_ref_parent", "vdi_type", "vif_map", "vm", "vm_rec", "vm_ref", "vm_utils", "vmops", "vmref", "vms", "Stubouts,", "mocks", "and", "fixtures", "for", "the", "test", "suite.\nStubs", "out", "methods", "from", "XenAPISession.\nAssumes", "VMs", "stu", "have", "PV", "kernels.\nSimulates", "a", "failure", "in", "lookup", "image.\nSimulates", "a", "failure", "in", "fetch", "image_glance_disk.\nSimulates", "a", "failure", "in", "create_vm.\nSimulates", "a", "failure", "in", "_attach_disks.\nStubs", "out", "a", "XenAPISession", "for", "VM", "tests.\nStubs", "out", "a", "XenApi", "Session", "for", "doing", "IPTable", "Firewall", "tests.\nReplace", "a", "module", "with", "a", "fake", "module.\nStubs", "out", "a", "XenAPISession", "for", "Volume", "tests.\nStubs", "out", "a", "XenAPISession", "for", "Volume", "tests:", "it", "injects", "failures.", "TODO(sirp):", "Should", "we", "actually", "fake", "out", "the", "data", "here\n", "Generated", "by", "iptables-save", "v1.4.10", "on", "\"\n", "Completed", "on", "Sun", "Nov", "6", "22:49:02", "2011\\n\")\n", "The", "command", "to", "execute", "is", "a", "json-encoded", "list\n", "This", "is", "for", "testing", "failure\n", "FIXME(sirp):", "XenAPITestBase", "is", "deprecated,", "all", "tests", "should", "be", "converted\n", "over", "to", "use", "XenAPITestBaseNoDB"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_certificates.py": ["CertificatesSamplesJsonTest", "api_sample_base", "fake_crypto", "response", "sample_dir", "self", "super"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/remote_consoles.py": ["False", "create_v26", "create_v28", "get_rdp_console", "get_serial_console", "get_spice_console", "get_vnc_console"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_network_cache_model.py": ["None", "dict", "ip_dict", "model", "network_dict", "new_fixed_ip", "new_ip", "new_net", "new_network", "new_route", "new_subnet", "route_dict", "subnet_dict", "version", "vif", "vif_dict"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/image/test_vdi_through_dev.py": ["None", "True", "command", "consumer", "contextlib", "eventlet", "fake_context", "glance", "inf", "open", "outf", "pool", "producer", "result", "self", "session", "six", "store", "tarfile", "test", "tfile", "tinfo", "vdi_through_dev", "xenapi_session"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/289_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_evacuate.py": ["ADMIN_API", "EvacuateJsonTest", "EvacuateJsonTestV214", "False", "None", "True", "compute_node_get_all_by_host", "context", "expected_resp_code", "fake_check_instance_exists", "fake_computes", "fake_service_get_by_compute_host", "fake_service_is_up", "host", "instance", "microversion", "mock", "objects", "rebuild_mock", "req_subs", "response", "sample_dir", "scenarios", "self", "server_req", "server_resp", "service", "test_servers", "Simulate", "validation", "of", "instance", "host", "is", "down.\nSimulate", "that", "given", "host", "is", "a", "valid", "host.\nSimulate", "validation", "of", "instance", "does", "not", "exist.", "NOTE(gibi):", "no", "server_resp", "means", "we", "expect", "empty", "body", "as\n", "a", "response\n", "Note", "(wingwj):", "The", "host", "can't", "be", "the", "same", "one\n", "Note", "(wingwj):", "The", "host", "can't", "be", "the", "same", "one\n", "Note", "(wingwj):", "The", "host", "can't", "be", "the", "same", "one\n", "Note", "(wingwj):", "The", "host", "can't", "be", "the", "same", "one"], "/Users/mehranhassani/repos/nova/nova/notifications/objects/aggregate.py": ["AggregatePayload", "False", "SCHEMA", "True", "VERSION", "aggregate", "base", "fields", "kwargs", "nova_base", "self", "super", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/limits.py": ["ALIAS", "False", "LimitsController", "MAX_IMAGE_META_PROXY_API_VERSION", "MAX_PROXY_API_SUPPORT_VERSION", "MIN_WITHOUT_IMAGE_META_PROXY_API_VERSION", "MIN_WITHOUT_PROXY_API_SUPPORT_VERSION", "QUOTAS", "True", "abs_limits", "alias", "builder", "context", "extensions", "filter_result", "k", "limits_policies", "limits_views", "max_image_meta", "name", "project_id", "quota", "quotas", "req", "resource", "self", "v", "version", "wsgi", "Controller", "for", "accessing", "limits", "in", "the", "OpenStack", "API.\nReturn", "all", "global", "limit", "information.\nLimits", "support.", "noqa\n", "noqa\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/objects/floating_ip.py": ["FLOATING_IP_OPTIONAL_ATTRS", "False", "FloatingIP", "None", "True", "VERSION", "address", "attrname", "auto_assigned", "classmethod", "cls", "context", "db", "db_fixed", "db_floatingip", "db_floatingips", "exception", "expected_attrs", "field", "fields", "fixed_address", "fixed_ip_id", "floating", "floating_address", "floatingip", "host", "id", "instance", "instance_uuid", "interface", "ip_info", "ips", "obj_base", "objects", "pool", "project_id", "reason", "self", "staticmethod", "str", "updates", "want_result", "x", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "_get_addresses_by_instance_uuid()\n", "Version", "1.2:", "FixedIP", "<=", "version", "1.2\n", "Version", "1.3:", "FixedIP", "<=", "version", "1.3\n", "Version", "1.4:", "FixedIP", "<=", "version", "1.4\n", "Version", "1.5:", "FixedIP", "<=", "version", "1.5\n", "Version", "1.6:", "FixedIP", "<=", "version", "1.6\n", "Version", "1.7:", "FixedIP", "<=", "version", "1.11\n", "Version", "1.8:", "FixedIP", "<=", "version", "1.12\n", "Version", "1.9:", "FixedIP", "<=", "version", "1.13\n", "Version", "1.10:", "FixedIP", "<=", "version", "1.14\n", "XXX", "joins", "fixed.instance\n", "NOTE(danms):", "Make", "sure", "we", "don't", "pass", "the", "calculated", "fixed_ip\n", "relationship", "to", "the", "DB", "update", "method\n", "Version", "1.3:", "FloatingIP", "1.2\n", "Version", "1.4:", "FloatingIP", "1.3\n", "Version", "1.5:", "FloatingIP", "1.4\n", "Version", "1.6:", "FloatingIP", "1.5\n", "Version", "1.7:", "FloatingIP", "1.6\n", "Version", "1.8:", "FloatingIP", "1.7\n", "Version", "1.9:", "FloatingIP", "1.8\n", "Version", "1.10:", "FloatingIP", "1.9\n", "Version", "1.11:", "FloatingIP", "1.10\n", "We", "don't", "want", "to", "register", "this", "object", "because", "it", "will", "not", "be", "passed\n", "around", "on", "RPC,", "it", "just", "makes", "our", "lives", "a", "lot", "easier", "in", "the", "API", "when\n", "dealing", "with", "floating", "IP", "operations\n", "Version", "1.0:", "Initial", "Version"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/vmops.py": ["CONF", "Cookie", "Exception", "False", "LOG", "None", "NotImplementedError", "RESIZE_TOTAL_STEPS", "True", "VMWARE_POWER_STATES", "VirtualMachineInstanceConfigInfo", "_", "_LE", "_LI", "_LW", "__name__", "_get_vm_and_vmdk_attribs", "_time_sleep_wrapper", "adapter_type", "admin_password", "allowed_ds_types", "args", "at", "attach_config_spec", "attempt", "base_folder", "bdi", "block_device_info", "block_device_mapping", "boot_spec", "broadcast_v4", "cached_image_file_name", "cdb", "cdrom_attach_config_spec", "client_factory", "clone_spec", "cluster", "collections", "compute", "config_drive", "config_spec", "configdrive", "conn_state", "connection_info", "constants", "context", "controller_key", "controller_spec", "converted_image_ds_loc", "cookie_header", "cookies", "ctxt", "ctype", "data", "data_store_name", "datacenter_moref", "datacenter_path", "datastore", "datastore_name", "datastore_path", "datastore_regex", "datastores", "datastores_info", "dc_info", "dc_name", "dc_path", "dc_ref", "decorator", "delay", "delete_snapshot_task", "dest", "destroy_disks", "detach_config_spec", "device", "devices", "diagnostics", "diags", "dict", "dir_ds_compliant_path", "disk", "disk_info", "disk_type", "dns", "driver", "ds", "ds_browser", "ds_name", "ds_obj", "ds_path", "ds_ref", "ds_ref_ret", "ds_util", "dst_folder_ds_path", "dst_path", "e", "enumerate", "eph", "ephemerals", "error_util", "excep", "exception", "excutils", "extra_md", "extra_specs", "f", "factory", "file", "file_path", "filename", "files", "flat_file", "flat_vmdk_ds_loc", "flat_vmdk_name", "flavor", "float", "folder", "folder_name", "folder_path", "folder_ref", "folders", "gateway_v4", "getattr", "hardware", "hardware_devices", "hasattr", "host", "host_name", "host_objs", "hosts", "hw_version", "id", "idx", "image_cache", "image_ds_loc", "image_fetch", "image_id", "image_info", "image_meta", "image_prepare", "image_size", "imagecache", "images", "index", "injected_files", "inst_md", "instance", "instance_folder", "instance_metadata", "instance_uuid", "instances", "instances_info", "int", "interface_str", "internal_access_path", "ip_v4", "jsonutils", "k", "key", "kwargs", "len", "linked_clone", "location", "location_url", "lockutils", "logging", "lst_properties", "lst_vm_names", "machine_id_change_spec", "machine_id_str", "max", "max_mem", "metadata", "migration", "min", "mks_auth", "msg", "name", "netmask_v4", "network", "network_info", "new_size", "nova", "nova_context", "num_cpu", "object", "objects", "opt_value", "original_disk", "os", "os_type", "parent_folder", "path", "path_list", "port", "port_index", "power_on", "power_state", "profile_spec", "progress", "prop", "prop_dict", "properties", "property", "props", "pwr_state", "range", "reason", "reboot_type", "rel_spec", "requested_size", "rescue_device", "rescue_disk_path", "reset_task", "resize_instance", "resized_disk", "resource", "retries", "retrieve_result", "retry_if_task_in_progress", "root_disk_ds_loc", "root_disk_in_kb", "root_disk_name", "root_vmdk_path", "round", "s", "self", "service_content", "session", "session_vim", "setattr", "size", "size_in_kb", "sized_disk_ds_loc", "sized_image_disk_name", "snapshot", "snapshot_ref", "snapshot_task", "snapshot_vm_ref", "src_folder_ds_path", "src_path", "state", "staticmethod", "step", "storage_policy", "str", "strutils", "subnets_v4", "suspend_task", "swap", "task_info", "task_states", "thumbprint", "ticket", "time", "timeout", "tmp_dir_loc", "tmp_file", "tmp_image_ds_loc", "tmp_path", "tools_running_status", "tools_status", "topology", "total_steps", "type", "unit_number", "units", "update_task_state", "upload_folder", "upload_iso_path", "uploaded_iso_path", "uptime", "url", "utils", "uuidutils", "v", "valid_bus", "value", "version", "vexc", "vi", "vif", "vif_info", "vif_infos", "vif_model", "vim_util", "virtapi", "vm", "vm_clone_task", "vm_config_pathname", "vm_ds_path", "vm_name", "vm_props", "vm_ref", "vm_resize_spec", "vm_util", "vm_uuid", "vmdk", "vmdk_extend_task", "vms", "vmwarevif", "vnc_config_spec", "vnc_console", "volumeops", "vutil", "Parameters", "needed", "to", "create", "and", "configure", "a", "new", "instance.\nManagement", "class", "for", "VM-related", "tasks.\nInitializer.\nIncrease", "the", "size", "of", "the", "root", "vmdk", "if", "necessary.\nFetch", "image", "which", "is", "located", "on", "a", "vSphere", "datastore.\nDownload", "image", "as", "an", "individual", "file", "to", "host", "via", "HTTP", "PUT.\nDownload", "stream", "optimized", "image", "to", "host", "as", "a", "vApp.\nDownload", "root", "disk", "of", "an", "OVA", "image", "as", "streamOptimized.\nCaptures", "all", "relevant", "information", "from", "the", "spawn", "parameters.\nUpdates", "the", "file", "size", "of", "the", "specified", "image.\nChecks", "if", "the", "block", "device", "mapping", "is", "valid.\nAttach", "cdrom", "to", "VM", "by", "reconfiguration.\nReboot", "a", "VM", "instance.\nSuspend", "the", "specified", "instance.\nResume", "the", "specified", "instance.\nUnrescue", "the", "specified", "instance.\nResizes", "the", "VM", "according", "to", "the", "flavor.\nConfirms", "a", "resize,", "destroying", "the", "source", "VM.\nFinish", "reverting", "a", "resize.\nCompletes", "a", "resize,", "turning", "on", "the", "migrated", "instance.\nPoll", "for", "rebooting", "instances.\nReturn", "data", "about", "the", "VM", "instance.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "connection", "info", "for", "a", "vnc", "console.\nSet", "the", "vnc", "configuration", "of", "the", "VM.\nGet", "reference", "to", "the", "host", "with", "the", "name", "specified.\nCheck", "that", "the", "cache", "folder", "exists.\nCheck", "that", "the", "temp", "folder", "exists.\ninject", "network", "info", "for", "specified", "instance.\nReturns", "list", "of", "valid", "vms", "from", "RetrieveResult", "object.\nAttach", "an", "interface", "to", "the", "instance.\nDetach", "an", "interface", "from", "the", "instance.\nUses", "cached", "image", "disk", "by", "copying", "it", "into", "the", "VM", "directory.\nUses", "cached", "image", "as", "parent", "of", "a", "COW", "child", "in", "the", "VM", "directory.\nUses", "cached", "image", "as", "a", "bootable", "virtual", "cdrom.\nGet", "the", "datacenter", "name", "and", "the", "reference.\nLists", "the", "VM", "instances", "that", "are", "registered", "with", "vCenter", "cluster.\nReturn", "connection", "info", "for", "a", "vnc", "console", "using", "vCenter", "logic.", "Some", "methods", "called", "during", "spawn", "take", "the", "instance", "parameter", "purely\n", "for", "logging", "purposes.\n", "TODO(vui)", "Clean", "them", "up,", "so", "we", "no", "longer", "need", "to", "keep", "this", "variable\n", "Note(vui):", "See", "https://bugs.launchpad.net/nova/+bug/1363349\n", "for", "cases", "where", "mocking", "time.sleep()", "can", "have", "unintended", "effects", "on", "code\n", "not", "under", "test.", "For", "now,", "unblock", "the", "affected", "test", "cases", "by", "providing\n", "a", "wrapper", "function", "to", "work", "around", "needing", "to", "mock", "time.sleep()\n", "Enable", "more", "than", "one", "compute", "node", "to", "run", "on", "the", "same", "host\n", "Ensure", "that", "the", "base", "folder", "is", "unique", "per", "compute", "node\n", "Aging", "disable", "ensures", "backward", "compatibility\n", "Clean", "up", "files", "created", "during", "the", "extend", "operation\n", "NOTE:", "formatted", "as", "lines", "like", "this:", "'name:NAME\\nuserid:ID\\n...'\n", "Maximum", "folder", "length", "must", "be", "less", "than", "80", "characters.\n", "The", "'id'", "length", "is", "36.", "The", "maximum", "prefix", "for", "name", "is", "40.\n", "We", "cannot", "truncate", "the", "'id'", "as", "this", "is", "unique", "across", "OpenStack.\n", "Get", "the", "create", "vm", "config", "spec\n", "Create", "the", "VM\n", "TODO(rgerganov):", "this", "is", "a", "hack", "to", "emulate", "cookiejar", "until", "we", "fix\n", "oslo.vmware", "to", "accept", "plain", "http", "headers\n", "try", "to", "get", "esx", "cookie", "to", "upload\n", "The", "directory", "of", "the", "imported", "disk", "is", "the", "unique", "name\n", "of", "the", "VM", "use", "to", "import", "it", "with.\n", "The", "size", "of", "the", "image", "is", "different", "from", "the", "size", "of", "the", "virtual", "disk.\n", "We", "want", "to", "use", "the", "latter.", "On", "vSAN", "this", "is", "the", "only", "way", "to", "get", "this\n", "size", "because", "there", "is", "no", "VMDK", "descriptor.\n", "The", "directory", "of", "the", "imported", "disk", "is", "the", "unique", "name\n", "of", "the", "VM", "use", "to", "import", "it", "with.\n", "The", "size", "of", "the", "image", "is", "different", "from", "the", "size", "of", "the", "virtual", "disk.\n", "We", "want", "to", "use", "the", "latter.", "On", "vSAN", "this", "is", "the", "only", "way", "to", "get", "this\n", "size", "because", "there", "is", "no", "VMDK", "descriptor.\n", "Folder", "move", "has", "failed.", "This", "may", "be", "due", "to", "the", "fact", "that", "a\n", "process", "or", "thread", "has", "already", "completed", "the", "operation.\n", "Since", "image", "caching", "is", "synchronized,", "this", "can", "only", "happen\n", "due", "to", "action", "external", "to", "the", "process.\n", "In", "the", "event", "of", "a", "FileAlreadyExists", "we", "continue,\n", "all", "other", "exceptions", "will", "be", "raised.\n", "converts", "fetched", "image", "to", "preallocated", "disk\n", "The", "size", "of", "the", "sparse", "image", "is", "different", "from", "the", "size", "of", "the\n", "virtual", "disk.", "We", "want", "to", "use", "the", "latter.\n", "There", "may", "be", "block", "devices", "defined", "but", "no", "ephemerals.", "In", "this", "case\n", "we", "need", "to", "allocate", "an", "ephemeral", "disk", "if", "required\n", "driver.block_device_info_get_swap", "returns\n", "{'device_name':", "None,", "'swap_size':", "0}", "if", "swap", "is", "None\n", "in", "block_device_info.", "If", "block_device_info", "does", "not", "contain\n", "a", "swap", "device,", "we", "need", "to", "reset", "swap", "to", "None,", "so", "we", "can\n", "extract", "the", "swap_size", "from", "the", "instance's", "flavor.\n", "The", "size", "of", "the", "Glance", "image", "is", "different", "from", "the", "deployed", "VMDK\n", "size", "for", "sparse,", "streamOptimized", "and", "OVA", "images.", "We", "need", "to", "retrieve\n", "the", "size", "of", "the", "flat", "VMDK", "and", "update", "the", "file_size", "property", "of", "the\n", "image.", "This", "ensures", "that", "further", "operations", "involving", "size", "checks\n", "and", "disk", "resizing", "will", "work", "as", "expected.\n", "Creates", "the", "virtual", "machine.", "The", "virtual", "machine", "reference", "returned\n", "is", "unique", "within", "Virtual", "Center.\n", "Cache", "the", "vm_ref.", "This", "saves", "a", "remote", "call", "to", "the", "VC.", "This", "uses", "the\n", "instance", "uuid.\n", "Update", "the", "Neutron", "VNIC", "index\n", "Set", "the", "machine.id", "parameter", "of", "the", "instance", "to", "inject\n", "the", "NIC", "configuration", "inside", "the", "VM\n", "Set", "the", "vnc", "configuration", "of", "the", "instance,", "vnc", "port", "starts", "from", "5900\n", "NOTE(mriedem):", "block_device_info", "can", "contain", "an", "auth_password\n", "so", "we", "have", "to", "scrub", "the", "message", "before", "logging", "it.\n", "Before", "attempting", "to", "attach", "any", "volume,", "make", "sure", "the\n", "block_device_mapping", "(i.e.", "disk_bus)", "is", "valid\n", "TODO(hartsocks):", "instance", "is", "unnecessary,", "remove", "it\n", "we", "still", "use", "instance", "in", "many", "locations", "for", "no", "other", "purpose\n", "than", "logging,", "can", "we", "simplify", "this?\n", "Create", "ephemeral", "disks\n", "Rename", "the", "VM.", "This", "is", "done", "after", "the", "spec", "is", "created", "to", "ensure\n", "that", "all", "of", "the", "files", "for", "the", "instance", "are", "under", "the", "directory\n", "'uuid'", "of", "the", "instance\n", "Get", "the", "vmdk", "info", "that", "the", "VM", "is", "pointing", "to\n", "TODO(vui):", "convert", "to", "creating", "plain", "vm", "clone", "and", "uploading", "from", "it\n", "instead", "of", "using", "live", "vm", "snapshot.\n", "Create", "a", "temporary", "VM", "(linked", "clone", "from", "snapshot),", "then", "export\n", "the", "VM's", "root", "disk", "to", "glance", "via", "HttpNfc", "API\n", "Deleting", "the", "snapshot", "after", "destroying", "the", "temporary", "VM", "created\n", "based", "on", "it", "allows", "the", "instance", "vm's", "disks", "to", "be", "consolidated.\n", "TODO(vui)", "Add", "handling", "for", "when", "vmdk", "volume", "is", "attached.\n", "Raise", "an", "exception", "if", "the", "VM", "is", "not", "powered", "On.\n", "If", "latest", "vmware", "tools", "are", "installed", "in", "the", "VM,", "and", "that", "the", "tools\n", "are", "running,", "then", "only", "do", "a", "guest", "reboot.", "Otherwise", "do", "a", "hard", "reset.\n", "Destroy", "a", "VM", "instance\n", "Power", "off", "the", "VM", "if", "it", "is", "in", "PoweredOn", "state.\n", "Un-register", "the", "VM\n", "Delete", "the", "folder", "holding", "the", "VM", "related", "content", "on\n", "the", "datastore.\n", "Only", "PoweredOn", "VMs", "can", "be", "suspended.\n", "Raise", "Exception", "if", "VM", "is", "poweredOff\n", "Get", "the", "root", "disk", "vmdk", "object\n", "Get", "the", "image", "details", "of", "the", "instance\n", "Fetch", "the", "image", "if", "it", "does", "not", "exist", "in", "the", "cache\n", "Get", "the", "rescue", "disk", "path\n", "Copy", "the", "cached", "image", "to", "the", "be", "the", "rescue", "disk.", "This", "will", "be", "used\n", "as", "the", "rescue", "disk", "for", "the", "instance.\n", "Attach", "the", "rescue", "disk", "to", "the", "instance\n", "Get", "the", "rescue", "device", "and", "configure", "the", "boot", "order", "to\n", "boot", "from", "this", "device\n", "Update", "the", "VM", "with", "the", "new", "boot", "order", "and", "power", "on\n", "Get", "the", "rescue", "device", "and", "detach", "it", "from", "the", "instance.\n", "Divide", "the", "action's", "workflow", "into", "discrete", "steps", "and", "\"bump\"", "the\n", "instance's", "progress", "field", "as", "each", "step", "is", "completed.\n\n", "For", "a", "first", "cut", "this", "should", "be", "fine,", "however,", "for", "large", "VM", "images,\n", "the", "clone", "disk", "step", "begins", "to", "dominate", "the", "equation.", "A\n", "better", "approximation", "would", "use", "the", "percentage", "of", "the", "VM", "image", "that\n", "has", "been", "streamed", "to", "the", "destination", "host.\n", "Checks", "if", "the", "migration", "needs", "a", "disk", "resize", "down.\n", "TODO(garyk):", "treat", "dest", "parameter.", "Migration", "needs", "to", "be", "treated.\n", "0.", "Zero", "out", "the", "progress", "to", "begin\n", "1.", "Power", "off", "the", "instance\n", "2.", "Reconfigure", "the", "VM", "properties\n", "3.Reconfigure", "the", "disk", "properties\n", "4.", "Purge", "ephemeral", "and", "swap", "disks\n", "Reconfigure", "ephemerals\n", "Ensure", "that", "the", "VM", "is", "off\n", "Reconfigure", "the", "VM", "properties\n", "5.", "Update", "ephemerals", "if", "necessary\n", "6.", "Start", "VM\n", "All", "of", "values", "received", "are", "objects.", "Convert", "them", "to", "dictionaries\n", "Add", "a", "namespace", "to", "all", "of", "the", "diagnostsics\n", "TODO(garyk):", "add", "in", "cpu,", "nic", "and", "disk", "stats\n", "TODO(vish):", "add", "support", "for", "dns2\n", "TODO(sateesh):", "add", "support", "for", "injection", "of", "ipv6", "configuration\n'\n", "NOTE(hartsocks):", "if", "the", "folder", "already", "exists,", "that\n", "just", "means", "the", "folder", "was", "prepped", "by", "another", "process.\n", "Set", "the", "machine.id", "parameter", "of", "the", "instance", "to", "inject\n", "the", "NIC", "configuration", "inside", "the", "VM\n", "Ignore", "VM's", "that", "do", "not", "have", "nvp.vm-uuid", "defined\n", "Ignoring", "the", "orphaned", "or", "inaccessible", "VMs\n", "Ensure", "that", "there", "is", "not", "a", "race", "with", "the", "port", "index", "management\n", "Ensure", "that", "there", "is", "not", "a", "race", "with", "the", "port", "index", "management\n", "Ensure", "only", "a", "single", "thread", "extends", "the", "image", "at", "once.\n", "We", "do", "this", "by", "taking", "a", "lock", "on", "the", "name", "of", "the", "extended\n", "image.", "This", "allows", "multiple", "threads", "to", "create", "resized\n", "copies", "simultaneously,", "as", "long", "as", "they", "are", "different\n", "sizes.", "Threads", "attempting", "to", "create", "the", "same", "resized", "copy\n", "will", "be", "serialized,", "with", "only", "the", "first", "actually", "creating\n", "the", "copy.\n\n", "Note", "that", "the", "object", "is", "in", "a", "per-nova", "cache", "directory,\n", "so", "inter-nova", "locking", "is", "not", "a", "concern.", "Consequently", "we\n", "can", "safely", "use", "simple", "thread", "locks.\n", "File", "was", "never", "created:", "cleanup", "not\n", "required\n", "Resize", "the", "copy", "to", "the", "appropriate", "size.", "No", "need\n", "for", "cleanup", "up", "here,", "as", "_extend_virtual_disk\n", "already", "does", "it\n", "Associate", "the", "sized", "image", "disk", "to", "the", "VM", "by", "attaching", "to", "the", "VM", "a\n", "COW", "child", "of", "said", "disk.\n", "Optionally", "create", "and", "attach", "blank", "disk\n", "It", "is", "pointless", "to", "COW", "a", "blank", "disk\n", "vCenter", "does", "not", "run", "virtual", "machines", "and", "does", "not", "run\n", "a", "VNC", "proxy.", "Instead,", "you", "need", "to", "tell", "OpenStack", "to", "talk\n", "directly", "to", "the", "ESX", "host", "running", "the", "VM", "you", "are", "attempting\n", "to", "connect", "to", "via", "VNC.\n", "NOTE:", "VM", "can", "move", "hosts", "in", "some", "situations.", "Debug", "for", "admins."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_images.py": ["False", "None", "True", "__file__", "adapter_type", "constants", "context", "cookies", "dc_name", "disk_format", "disk_type", "ds_name", "exception", "expected", "f", "fake_extract", "fake_read_handle", "fake_write_handle", "file_path", "file_size", "glance_read", "global_lc_setting", "host", "http_write", "image", "image_data", "image_download", "image_id", "image_lc_setting", "image_props", "image_show", "image_size_in_kb", "image_transfer", "images", "img_props", "instance", "iter", "m", "mdata", "metadata", "mock", "mock_build_shadow_vm_config_spec", "mock_call_method", "mock_get_remote_image_service", "mock_get_vmdk_info", "mock_image_api_download", "mock_image_api_get", "mock_image_service", "mock_image_transfer", "mock_ovf", "mock_read_class", "mock_read_handle", "mock_tar", "mock_tar_open", "mock_vmdk", "mock_write_class", "mock_write_handle", "name", "nova", "objects", "observed", "open", "os", "os_type", "ovf_descriptor", "ovf_path", "port", "raw_disk_size_in_btyes", "raw_disk_size_in_bytes", "raw_disk_size_in_gb", "read_file_handle", "read_iter", "res_pool_ref", "rw_handles", "self", "session", "tarfile", "test", "units", "uuidsentinel", "vif_model", "vm_folder_ref", "vm_util", "vmdk_name", "vsphere_location", "write_file_handle", "Unit", "tests", "for", "Vmware", "API", "connection", "calls.\nTest", "fetching", "images.\nTest", "fetching", "streamOptimized", "disk", "image.", "assert", "that", "defaults", "are", "set", "and", "no", "value", "returned", "is", "left", "empty\n", "N.B.", "We", "intentially", "don't", "use", "the", "defined", "constants", "here.", "Amongst\n", "other", "potential", "failures,", "we're", "interested", "in", "changes", "to", "their\n", "values,", "which", "would", "not", "otherwise", "be", "picked", "up."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/cloudpipe.py": ["False", "create", "parameter_types", "update"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_ironic_host_manager.py": ["FakeFilterClass1", "FakeFilterClass2", "False", "IronicHostManagerChangedNodesTestCase", "IronicHostManagerTestCase", "IronicHostManagerTestFilters", "None", "True", "__name__", "_self", "cn1", "cn2", "cn3", "compute", "compute_node", "context", "dict", "enabled_filters", "exception", "expected_rv", "fake_filter_one", "fake_properties", "fakes", "filter_properties", "filter_props", "filters", "getter", "host", "host_filters", "host_manager", "host_state", "host_states_map", "i", "info", "init_mock", "ironic", "ironic_driver", "ironic_fakes", "ironic_host_manager", "len", "mock", "mock_base_init_instance_info", "mock_get_all", "mock_get_by_binary", "mock_get_by_host", "mock_get_instance_info", "mock_init_agg", "mock_init_aggs", "mock_init_inst", "n", "node", "non_ironic", "obj", "obj_base", "objects", "range", "result", "running_nodes", "rv", "self", "set", "spec_obj", "state_key", "super", "supported_instances", "test", "type", "uuids", "x", "Test", "case", "for", "IronicHostManager", "class.\nTest", "case", "for", "IronicHostManager", "class.\nTest", "filters", "work", "for", "IronicHostManager.", "for", "ironic", "compute", "nodes", "we", "always", "return", "an", "empty", "dict\n", "base", "class", "implementation", "is", "overriden", "and", "not", "called\n", "for", "a", "non-ironic", "compute", "we", "call", "the", "base", "class", "implementation\n", "we", "return", "exactly", "what", "the", "base", "class", "implementation", "returned\n", "ensure", "we", "filter", "out", "ironic", "nodes", "before", "calling", "the", "base", "class", "impl\n", "check", "we", "don't", "try", "to", "get", "nodes", "list", "if", "it", "was", "passed", "explicitly\n", "ensure", "we", "filter", "out", "ironic", "nodes", "before", "calling", "the", "base", "class", "impl\n", "first", "call:", "all", "nodes\n", "second", "call:", "just", "running", "nodes\n", "first", "call:", "all", "nodes\n", "second", "call:", "no", "nodes\n", "Test", "we", "return", "1", "correct", "filter", "object\n", "ensure", "the", "defaults", "come", "from", "scheduler.baremetal_enabled_filters\n", "and", "not", "enabled_filters\n", "without", "scheduler.use_baremetal_filters\n", "with", "scheduler.use_baremetal_filters\n", "[1]", "and", "[3]", "are", "host2", "and", "host4\n", "[0]", "and", "[2]", "are", "host1", "and", "host3\n", "Ensure", "ignore_hosts", "processed", "before", "force_hosts", "in", "host", "filters.\n", "only", "fake_host3", "should", "be", "left.\n", "Ensure", "all", "nodes", "returned", "for", "a", "host", "with", "many", "nodes\n", "[5]", "is", "fake-node2,", "[7]", "is", "fake-node4\n", "Ensure", "only", "overlapping", "results", "if", "both", "force", "host", "and", "node\n", "[5]", "is", "fake-node2\n", "Ensure", "non-overlapping", "force_node", "and", "force_host", "yield", "no", "result\n", "Ensure", "ignore_hosts", "can", "coexist", "with", "force_nodes\n", "Ensure", "ignore_hosts", "is", "processed", "before", "force_nodes"], "/Users/mehranhassani/repos/nova/tools/db/schema_diff.py": ["Exception", "False", "IndexError", "KeyError", "MIGRATE_REPO", "NEW_DB", "NEW_DUMP", "None", "ORIG_DB", "ORIG_DUMP", "True", "ValueError", "_", "__name__", "_get_db_driver_class", "_migrate", "_migrate_cmd", "_migrate_get_earliest_version", "args", "branch_name", "cmd", "current_branch_name", "datetime", "db_driver", "db_name", "db_url", "die", "diff_files", "dump_db", "dump_filename", "earliest_version", "filename", "filename1", "filename2", "git_checkout", "git_current_branch_name", "git_has_uncommited_changes", "git_symbolic_ref", "glob", "globals", "int", "main", "manage_py", "migration_version", "msg", "name", "new_branch", "new_version", "object", "options", "orig_branch", "orig_version", "os", "parse_options", "path", "pipeline", "prefix", "print", "proc", "prog", "quiet", "ref", "ref_name", "self", "stderr", "stdout", "str", "subprocess", "sys", "timestamp", "upgrade_cmd", "usage", "users_branch", "version", "versions", "versions_glob", "Dump\n", "Diff\n", "Use", "colordiff", "if", "available\n", "Database\n", "Migrate\n", "NOTE(sirp):", "sqlalchemy-migrate", "currently", "cannot", "handle", "the", "skipping", "of\n", "migration", "numbers.\n", "Git\n", "Command\n", "Since", "we're", "going", "to", "be", "switching", "branches,", "ensure", "user", "doesn't", "have", "any\n", "uncommitted", "changes\n", "Dump", "Original", "Schema\n", "Dump", "New", "Schema"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_metadata.py": ["BadStateServerMetaDataTestV21", "CONF", "Exception", "False", "None", "ServerMetaDataTestV21", "ServerMetaPolicyEnforcementV21", "body", "cfg", "columns_to_join", "compute_rpcapi", "context", "data", "delete", "delete_server_metadata", "diff", "exc", "exception", "expected", "fake_change_instance_metadata", "fake_instance", "fake_instance_save", "fakes", "inst", "instance", "isinstance", "jsonutils", "key", "len", "metadata", "mock", "mock_update", "msg", "nova", "num", "objects", "param_url", "range", "req", "res", "res_dict", "response", "return_create_instance_metadata", "return_empty_server_metadata", "return_server", "return_server_by_uuid", "return_server_metadata", "return_server_nonexistent", "rule_name", "self", "server_id", "server_metadata_v21", "server_uuid", "six", "stub_max_server_metadata", "stub_server_metadata", "super", "test", "timeutils", "use_slave", "uuids", "validation_ex", "validation_ex_large", "vm_states", "webob", "test", "for", "long", "key\n", "test", "for", "long", "value\n", "test", "for", "empty", "key.\n", "test", "for", "long", "key\n", "test", "for", "long", "value\n", "test", "for", "empty", "key."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_vif.py": ["None", "True", "XenAPIBridgeDriverTestCase", "XenAPIOpenVswitchDriverTestCase", "XenVIFDriverTestBase", "XenVIFDriverTestCase", "args", "attribute", "device", "exception", "expected", "fake_call_xenapi", "fake_vif", "fake_vif_rec", "instance", "method", "mock", "mock_VIF_get_record", "mock_brctl_add_if", "mock_create_linux_bridge", "mock_create_vif", "mock_create_vif_interim_network", "mock_delete_linux_bridge", "mock_delete_linux_port", "mock_device_exists", "mock_ensure_vlan_bridge", "mock_find_network_with_name_label", "mock_get_vif_ref", "mock_lookup", "mock_network_create", "mock_network_destroy", "mock_network_get_VIFs", "mock_network_get_bridge", "mock_network_get_uuid", "mock_one", "mock_ovs_add_port", "mock_ovs_del_br", "mock_ovs_del_port", "mock_super_unplug", "model", "network", "network_ref", "network_utils", "object", "patcher", "ret_vif_ref", "return_val", "self", "side_effect", "stubs", "super", "target", "test", "vif", "vif_rec", "vif_ref", "vm_ref"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_security_group_default_rules.py": ["ADMIN_API", "True", "api_sample_base", "response", "rule_id", "sample_dir", "self"], "/Users/mehranhassani/repos/nova/nova/tests/unit/conf_fixture.py": ["CONF", "ConfFixture", "False", "True", "config", "config_fixture", "ipv6", "nova", "paths", "policy_opts", "self", "super", "utils", "Fixture", "to", "manage", "global", "conf", "settings.", "default", "group\n", "TODO(sdague):", "this", "makes", "our", "project_id", "match", "'fake'", "as", "well.\n", "We", "should", "fix", "the", "tests", "to", "use", "real\n", "UUIDs", "then", "drop", "this", "work", "around.\n", "api", "group\n", "api_database", "group\n", "database", "group\n", "key_manager", "group\n", "wsgi", "group"], "/Users/mehranhassani/repos/nova/nova/policy.py": ["CONF", "Exception", "False", "IsAdminCheck", "KEY_EXPR", "LOG", "None", "True", "USER_BASED_RESOURCES", "_ENFORCER", "_LE", "_LW", "__name__", "_serialize_rules", "_warning_for_deprecated_user_based_rules", "action", "cfg", "conf_args", "context", "copy", "credentials", "creds", "current_file_rules", "default_rule", "do_raise", "enforcer", "exc", "exception", "excutils", "i", "init", "kind", "len", "logging", "match", "overwrite", "policies", "policy", "policy_file", "re", "register_rules", "resource", "result", "rule", "rule_name", "rules", "saved_file_rules", "self", "six", "sorted", "str", "super", "sys", "target", "use_conf", "Policy", "Engine", "For", "Nova.\nAn", "explicit", "check", "for", "is_admin.\nInitialize", "the", "check.\nDetermine", "whether", "is_admin", "matches", "the", "requested", "value.", "This", "list", "is", "about", "the", "resources", "which", "support", "user", "based", "policy", "enforcement.\n", "Avoid", "sending", "deprecation", "warning", "for", "those", "resources.\n", "oslo_policy", "will", "read", "the", "policy", "configuration", "file", "again", "when", "the", "file\n", "is", "changed", "in", "runtime", "so", "the", "old", "policy", "rules", "will", "be", "saved", "to\n", "saved_file_rules", "and", "used", "to", "compare", "with", "new", "rules", "to", "determine", "the\n", "rules", "whether", "were", "updated.\n", "Only", "the", "rules", "which", "are", "loaded", "from", "file", "may", "be", "changed.\n", "Checks", "whether", "the", "rules", "are", "updated", "in", "the", "runtime\n", "We", "will", "skip", "the", "warning", "for", "the", "resources", "which", "support", "user", "based\n", "policy", "enforcement.\n", "the", "target", "is", "user-self\n", "This", "method", "is", "for", "use", "by", "oslopolicy", "CLI", "scripts.", "Those", "scripts", "need", "the\n", "'output-file'", "and", "'namespace'", "options,", "but", "having", "those", "in", "sys.argv", "means\n", "loading", "the", "Nova", "config", "options", "will", "fail", "as", "those", "are", "not", "expected", "to\n", "be", "present.", "So", "we", "pass", "in", "an", "arg", "list", "with", "those", "stripped", "out.\n", "Start", "at", "1", "because", "cfg.CONF", "expects", "the", "equivalent", "of", "sys.argv[1:]"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_migrations.py": ["False", "GET", "MigrationsPolicyEnforcement", "MigrationsPolicyEnforcementV223", "MigrationsTestCaseV21", "MigrationsTestCaseV223", "None", "True", "base", "context", "datetime", "enumerate", "environ", "exc", "exception", "fake_migrations", "fakes", "filters", "i", "m_get", "mig", "migrations", "migrations_in_progress", "migrations_obj", "migrations_v21", "mock", "mox_fixture", "moxstubout", "object", "objects", "response", "rule_name", "self", "super", "test", "uuids", "wsgi_api_version", "Run", "before", "each", "test.\nRun", "before", "each", "test.", "in-progress", "live", "migration\n", "non", "in-progress", "live", "migration\n", "in-progress", "resize\n", "non", "in-progress", "resize\n", "first", "item", "is", "in-progress", "live", "migration"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_rescue.py": ["req_subs", "response", "sample_dir", "self", "subs", "test_servers", "uuid", "Do", "a", "server", "get", "to", "make", "sure", "that", "the", "'RESCUE'", "state", "is", "set\n", "Do", "a", "server", "get", "to", "make", "sure", "that", "the", "'RESCUE'", "state", "is", "set\n", "Do", "a", "server", "get", "to", "make", "sure", "that", "the", "'ACTIVE'", "state", "is", "back"], "/Users/mehranhassani/repos/nova/nova/virt/configdrive.py": ["CONF", "CONFIGDRIVESIZE_BYTES", "False", "None", "True", "_", "basedir", "data", "dirname", "ent", "err", "exception", "exctb", "exctype", "excval", "f", "fields", "filepath", "fileutils", "image_prop", "instance", "instance_md", "isinstance", "mountdir", "mounted", "nova", "object", "open", "os", "path", "publisher", "required_by", "self", "shutil", "six", "str", "tmpdir", "units", "utils", "version", "Config", "Drive", "v2", "helper.\nBuild", "config", "drives,", "optionally", "as", "a", "context", "manager.", "Config", "drives", "are", "64mb,", "if", "we", "can't", "size", "to", "the", "exact", "size", "of", "the", "data\n", "NOTE(mikal):", "this", "means", "we're", "being", "cleaned", "up", "because", "an\n", "exception", "was", "thrown.", "All", "bets", "are", "off", "now,", "and", "we", "should", "not\n", "swallow", "the", "exception\n", "the", "given", "data", "can", "be", "either", "text", "or", "bytes.", "we", "can", "only", "write\n", "bytes", "into", "files.\n", "NOTE(mikal):", "This", "is", "a", "little", "horrible,", "but", "I", "couldn't", "find", "an\n", "equivalent", "to", "genisoimage", "for", "vfat", "filesystems.\n", "NOTE(mikal):", "I", "can't", "just", "use", "shutils.copytree", "here,\n", "because", "the", "destination", "directory", "already\n", "exists.", "This", "is", "annoying."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/013_build_request_extended_attrs.py": ["Column", "Index", "MetaData", "String", "Table", "Text", "True", "UniqueConstraint", "build_requests", "c", "col_name", "column", "columns_to_add", "constr", "constr_names", "constrs", "hasattr", "index", "inspector", "meta", "migrate_engine", "reflection"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_multinic.py": ["FixedIpTestV21", "MultinicPolicyEnforcementV21", "None", "UUID", "_remove_fixed_ip", "address", "body", "compute", "compute_api_add_fixed_ip", "compute_api_get", "compute_api_remove_fixed_ip", "context", "controller_class", "dict", "exc", "exception", "expected_attrs", "fakes", "instance", "instance_id", "isinstance", "last_add_fixed_ip", "last_remove_fixed_ip", "mock", "mock_add_fixed_ip", "multinic_v21", "network_id", "objects", "resp", "rule_name", "self", "status_int", "super", "test", "validation_error", "webob", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/attach_interfaces.py": ["ALIAS", "Exception", "InterfaceAttachmentController", "None", "NotImplementedError", "_", "_translate_interface_attachment_view", "ai_policies", "alias", "attach_interfaces", "attachment", "body", "common", "compute", "context", "data", "dict", "e", "entity_maker", "exc", "exception", "extensions", "id", "instance", "msg", "name", "network", "network_id", "port", "port_id", "port_info", "ports", "req", "req_ip", "res", "results", "search_opts", "self", "server_id", "state_error", "super", "validation", "version", "vif", "webob", "wsgi", "The", "instance", "interfaces", "extension.\nMaps", "keys", "for", "interface", "attachment", "details", "view.\nThe", "interface", "attachment", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "the", "list", "of", "interface", "attachments", "for", "a", "given", "instance.\nReturn", "data", "about", "the", "given", "interface", "attachment.\nAttach", "an", "interface", "to", "an", "instance.\nDetach", "an", "interface", "from", "an", "instance.\nReturns", "a", "list", "of", "attachments,", "transformed", "through", "entity_maker.\nAttach", "interface", "support.", "NOTE(mriedem):", "We", "need", "to", "verify", "the", "instance", "actually", "exists", "from\n", "the", "server_id", "even", "though", "we're", "not", "using", "the", "instance", "for", "anything,\n", "just", "the", "port", "id."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_fping.py": ["FpingSampleJsonTests", "fake_check_fping", "response", "sample_dir", "self", "super", "test_fping", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/227_fix_project_user_quotas_resource_length.py": ["MetaData", "String", "Table", "True", "col_resource", "getattr", "meta", "migrate_engine", "table", "The", "resource", "of", "project_user_quotas", "table", "had", "been", "changed", "to\n", "invalid", "length(25)", "since", "I56ad98d3702f53fe8cfa94093fea89074f7a5e90.\n", "The", "following", "code", "fixes", "the", "length", "for", "the", "environments", "which", "are\n", "deployed", "after", "I56ad98d3702f53fe8cfa94093fea89074f7a5e90."], "/Users/mehranhassani/repos/nova/nova/conf/mks.py": ["False", "cfg", "conf", "mks_group", "mks_opts"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/constants.py": ["ADAPTER_TYPE_BUSLOGIC", "ADAPTER_TYPE_IDE", "ADAPTER_TYPE_LSILOGICSAS", "ADAPTER_TYPE_PARAVIRTUAL", "CONTAINER_FORMATS_ALL", "CONTAINER_FORMAT_BARE", "CONTAINER_FORMAT_OVA", "DATASTORE_TYPE_NFS", "DATASTORE_TYPE_NFS41", "DATASTORE_TYPE_VMFS", "DATASTORE_TYPE_VSAN", "DEFAULT_ADAPTER_TYPE", "DEFAULT_CONTAINER_FORMAT", "DEFAULT_DISK_FORMAT", "DEFAULT_DISK_TYPE", "DEFAULT_OS_TYPE", "DEFAULT_VIF_MODEL", "DISK_FORMATS_ALL", "DISK_FORMAT_ISCSI", "DISK_FORMAT_ISO", "DISK_FORMAT_VMDK", "DISK_TYPE_EAGER_ZEROED_THICK", "DISK_TYPE_PREALLOCATED", "DISK_TYPE_SPARSE", "DISK_TYPE_STREAM_OPTIMIZED", "DISK_TYPE_THIN", "EXTENSION_KEY", "EXTENSION_TYPE_INSTANCE", "IMAGE_VM_PREFIX", "MIN_VC_OVS_VERSION", "MIN_VC_VERSION", "NEXT_MIN_VC_VERSION", "SCSI_ADAPTER_TYPES", "SCSI_MAX_CONNECT_NUMBER", "SCSI_MAX_CONTROLLER_NUMBER", "SNAPSHOT_VM_PREFIX", "SUPPORTED_FLAT_VARIANTS", "VALID_OS_TYPES", "network_model", "set", "The", "minimum", "VC", "version", "for", "Neutron", "'ovs'", "port", "type", "support\n", "The", "max", "number", "of", "devices", "that", "can", "be", "connected", "to", "one", "adapter\n", "One", "adapter", "has", "16", "slots", "but", "one", "reserved", "for", "controller\n", "The", "max", "number", "of", "SCSI", "adaptors", "that", "could", "be", "created", "on", "one", "instance.\n", "This", "list", "was", "extracted", "from", "a", "file", "on", "an", "installation", "of", "ESX", "6.5.", "The", "file\n", "can", "be", "found", "in", "/usr/lib/vmware/hostd/vimLocale/en/gos.vmsg\n", "The", "contents", "of", "this", "list", "should", "be", "updated", "whenever", "there", "is", "a", "new\n", "release", "of", "ESX."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/server_tags.py": ["False", "instance", "parameter_types", "update", "update_all"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_base.py": ["HyperVBaseTestCase", "True", "builtins", "mock", "platform_patcher", "self", "super", "test", "utilsfactory", "utilsfactory_patcher", "wmi_patcher"], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/ram.py": ["CONF", "host_state", "minval", "nova", "self", "weight_properties", "weights", "Override", "the", "weight", "multiplier.\nHigher", "weights", "win.", "We", "want", "spreading", "to", "be", "the", "default."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/console_auth_tokens.py": ["ALIAS", "ConsoleAuthTokensController", "False", "True", "_", "alias", "args", "cat_policies", "connect_info", "console_type", "consoleauth_rpcapi", "context", "controller", "ext", "extensions", "i", "id", "kwargs", "msg", "name", "rdp_only", "req", "self", "super", "token", "version", "webob", "wsgi", "Checks", "a", "console", "auth", "token", "and", "returns", "the", "related", "connect", "info.\nConsole", "token", "authentication", "support.", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_image_meta.py": ["AttributeError", "None", "True", "any", "bus", "datetime", "exception", "expected", "image", "image_meta", "legacy_props", "legacy_type", "legacy_types", "obj", "objects", "primitive", "prop", "props", "secure_props", "self", "set", "test", "virtprops", "x", "Testing", "string", "->", "int", "conversion\n", "Testing", "string", "->", "bool", "conversion\n", "Fill", "sane", "values", "for", "the", "rest", "here\n", "Both", "keys", "are", "referring", "to", "the", "same", "object", "field\n", "The", "normal", "property", "always", "wins", "vs.", "the", "legacy", "field", "since\n", "_set_attr_from_current_names", "is", "called", "finally"], "/Users/mehranhassani/repos/nova/nova/api/metadata/base.py": ["ALL_OPENSTACK_VERSIONS", "CONF", "CONTENT", "CONTENT_DIR", "Exception", "FOLSOM", "False", "GRIZZLY", "HAVANA", "InstanceMetadata", "InvalidMetadataPath", "InvalidMetadataVersion", "KeyError", "LIBERTY", "LOG", "MD_JSON_NAME", "MIME_TYPE_APPLICATION_JSON", "MIME_TYPE_TEXT_PLAIN", "NEWTON_ONE", "NEWTON_TWO", "NW_JSON_NAME", "None", "OPENSTACK_VERSIONS", "PASS_NAME", "RouteConfiguration", "UD_NAME", "VD2_JSON_NAME", "VD_JSON_NAME", "VERSION", "VERSIONS", "VendorDataDriver", "_LI", "_LW", "__name__", "_format_instance_mapping", "address", "az", "base64", "bdms", "block_device", "bus", "bytes", "cells_api", "cells_opts", "cells_rpcapi", "cfg", "cid", "content", "contents", "context", "ctxt", "data", "device", "device_metadata", "device_metadata_list", "dict", "ec2utils", "extra_md", "filepath", "find_path_in_tree", "fixed_ip", "fixed_ips", "floating_ip", "floating_ips", "fmt_sgroups", "get_metadata_by_instance_id", "hostname", "i", "importutils", "instance", "instance_id", "instance_type", "isinstance", "j", "jsonutils", "key", "keypair", "keypairs", "len", "list", "logging", "meta_data", "metadata", "metadata_obj", "mime_type", "netutils", "network", "network_info", "network_metadata", "nova", "object", "objects", "openstack_driver", "os", "output", "password", "path", "path_handler", "path_handlers", "path_tokens", "posixpath", "provider", "range", "request_context", "requested", "required", "ret", "secgroup_api", "self", "six", "sorted", "str", "timeutils", "today", "utils", "v", "values", "vd_driver", "vdclass", "vendordata", "vendordata_dynamic", "vendordata_json", "version", "versions", "x", "Instance", "Metadata", "information.\nInstance", "metadata.\nYields", "(path,", "value)", "tuples", "for", "metadata", "elements.\nRoutes", "metadata", "paths", "to", "request", "handlers.", "NOTE(mikal):", "think", "of", "these", "strings", "as", "version", "numbers.", "They", "traditionally\n", "correlate", "with", "OpenStack", "release", "dates,", "with", "all", "the", "changes", "for", "a", "given\n", "release", "bundled", "into", "a", "single", "version.", "Note", "that", "versions", "in", "the", "future", "are\n", "hidden", "from", "the", "listing,", "but", "can", "still", "be", "requested", "explicitly,", "which", "is\n", "required", "for", "testing", "purposes.", "We", "know", "this", "isn't", "great,", "but", "its", "inherited\n", "from", "EC2,", "which", "this", "needs", "to", "be", "compatible", "with.\n", "The", "default", "value", "of", "mimeType", "is", "set", "to", "MIME_TYPE_TEXT_PLAIN\n", "expose", "instance", "metadata.\n", "get", "network", "info,", "and", "the", "rendered", "network", "template\n", "expose", "network", "metadata\n", "'content'", "is", "passed", "in", "from", "the", "configdrive", "code", "in\n", "nova/virt/libvirt/driver.py.", "That's", "how", "we", "get", "the", "injected", "files\n", "(personalities)", "in.", "AFAIK", "they're", "not", "stored", "in", "the", "db", "at", "all,\n", "so", "are", "not", "available", "later", "(web", "service", "metadata", "time).\n", "NOTE(mikal):", "the", "decision", "to", "not", "pass", "extra_md", "here", "like", "we\n", "do", "to", "the", "StaticJSON", "driver", "is", "deliberate.", "extra_md", "will\n", "contain", "the", "admin", "password", "for", "the", "instance,", "and", "we", "shouldn't\n", "pass", "that", "to", "external", "services.\n", "public", "keys", "are", "strangely", "rendered", "in", "ec2", "metadata", "service\n", "meta-data/public-keys/", "returns", "'0=keyname'", "(with", "no", "trailing", "/)\n", "and", "only", "if", "there", "is", "a", "public", "key", "given.\n", "'0=keyname'", "means", "there", "is", "a", "normally", "rendered", "dict", "at\n", "meta-data/public-keys/0\n\n", "meta-data/public-keys/", ":", "'0=%s'", "%", "keyname\n", "meta-data/public-keys/0/", ":", "'openssh-key'\n", "meta-data/public-keys/0/openssh-key", ":", "'%s'", "%", "publickey\n", "TODO(vish):", "store", "product", "codes\n", "TODO(vish):", "store", "ancestor", "ids\n", "get_ec2_metadata", "returns", "dict", "without", "top", "level", "version\n", "NOTE(mriedem):", "It's", "possible", "for", "the", "keypair", "to", "be", "deleted\n", "before", "it", "was", "migrated", "to", "the", "instance_extra", "table,", "in", "which\n", "case", "lazy-loading", "instance.keypairs", "will", "handle", "the", "404", "and\n", "just", "set", "an", "empty", "KeyPairList", "object", "on", "the", "instance.\n", "TODO(artom/mriedem)", "It", "would", "be", "nice", "if", "we", "had", "something\n", "more", "generic,", "like", "a", "type", "identifier", "or", "something,", "built\n", "into", "these", "types", "of", "objects,", "like", "a", "get_meta_type()\n", "abstract", "method", "on", "the", "base", "DeviceBus", "class.\n", "serial", "and", "path", "are", "optional", "parameters\n", "request", "for", "/version,", "give", "a", "list", "of", "what", "is", "available\n", "NOTE(mikal):", "backwards", "compatibility...", "If", "the", "deployer", "has\n", "specified", "providers,", "and", "one", "of", "those", "providers", "is", "StaticJSON,\n", "then", "do", "that", "thing", "here.", "Otherwise,", "if", "the", "deployer", "has\n", "specified", "an", "old", "style", "driver", "here,", "then", "use", "that.", "This", "second\n", "bit", "can", "be", "removed", "once", "old", "style", "vendordata", "is", "fully", "deprecated\n", "and", "removed.\n", "TODO(mikal):", "when", "we", "removed", "the", "old", "style", "vendordata\n", "drivers,", "we", "need", "to", "remove", "self.vddriver", "as", "well.\n", "Set", "default", "mimeType.", "It", "will", "be", "modified", "only", "if", "there", "is", "a", "change\n", "fix", "up", "requests,", "prepending", "/ec2", "to", "anything", "that", "does", "not", "match\n", "request", "for", "/\n", "all", "values", "of", "'path'", "input", "starts", "with", "'/'", "and", "have", "no", "trailing", "/\n", "specifically", "handle", "the", "top", "level", "request\n", "NOTE(vish):", "don't", "show", "versions", "that", "are", "in", "the", "future\n", "EC2", "style", "metadata\n", "given", "a", "dict/list", "tree,", "and", "a", "path", "in", "that", "tree,", "return", "data", "found", "there.\n", "NOTE(mikal):", "this", "alias", "is", "to", "stop", "old", "style", "vendordata", "plugins", "from", "breaking\n", "post", "refactor.", "It", "should", "be", "removed", "when", "we", "finish", "deprecating", "those", "plugins."], "/Users/mehranhassani/repos/nova/tools/colorizer.py": ["AttributeError", "Exception", "False", "ImportError", "None", "NovaTestResult", "True", "_AnsiColorizer", "_NullColorizer", "_Win32Colorizer", "_colors", "args", "blue", "bold", "classes", "classmethod", "cls", "color", "colorizer", "curses", "descriptions", "details", "dict", "diff", "elapsed", "elapsed_time", "err", "errors", "exit_code", "flavor", "get_elapsed_time_color", "green", "heapq", "item", "last_cls", "len", "list", "long_result", "min", "name", "object", "oldest", "pywintypes", "reason", "red", "result", "runner", "screenBuffer", "self", "short_result", "slow", "slow_tests", "slow_total_time", "sorted", "stdout", "str", "stream", "subunit", "success", "sum", "super", "supported", "sys", "test", "test_class", "test_name", "testtools", "text", "time", "unittest", "verbosity", "win32console", "x", "Display", "a", "subunit", "stream", "through", "a", "colorized", "unittest", "test", "runner.\nSee", "_AnsiColorizer", "docstring.\nSee", "_AnsiColorizer", "docstring.", "auto", "color", "only", "on", "TTYs\n", "guess", "false", "in", "case", "of", "error\n", "this", "is", "a", "fixed-sized", "heap\n", "NOTE(vish):", "reset", "stdout", "for", "the", "terminal", "check\n", "Pare", "out", "'fast'", "tests\n", "sort", "by", "name"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/api/test_migrations.py": ["False", "None", "NovaAPIMigrationsWalk", "NovaAPIModelsSync", "True", "api_models", "build_requests", "build_requests_table", "check", "column", "column_keys", "column_whitelist", "columns", "compare_to", "constr", "constr_columns", "constrs", "context", "data", "db_utils", "diff", "element", "engine", "fake_build_req", "fk", "fkey", "fkey_whitelist", "getattr", "index", "inspector", "isinstance", "list", "map_table", "migrate_repo", "migration", "mitaka_placeholders", "mock", "name", "new_diff", "newton_placeholders", "nova_fixtures", "object_", "os", "property", "range", "reflected", "reflection", "repository", "sa_migration", "self", "special_cases", "sqlalchemy", "super", "table_name", "tablename", "test", "test_base", "test_migrations", "type_", "version", "with_data", "Test", "that", "the", "models", "match", "the", "database", "after", "migrations", "are", "run.", "create", "user", "openstack_citest", "with", "createdb", "login", "password\n", "create", "database", "openstack_citest", "with", "owner", "openstack_citest;\n", "migrate_version", "is", "a", "sqlalchemy-migrate", "control", "table", "and\n", "isn't", "included", "in", "the", "model.\n", "Filter", "out", "diffs", "that", "shouldn't", "cause", "a", "sync", "failure.\n", "Define", "a", "whitelist", "of", "ForeignKeys", "that", "exist", "on", "the", "model", "but", "not", "in\n", "the", "database.", "They", "will", "be", "removed", "from", "the", "model", "at", "a", "later", "time.\n", "Define", "a", "whitelist", "of", "columns", "that", "will", "be", "removed", "from", "the\n", "DB", "at", "a", "later", "release", "and", "aren't", "on", "a", "model", "anymore.\n", "modify_nullable", "is", "a", "list\n", "tuple", "with", "action", "as", "first", "element.", "Different", "actions", "have\n", "different", "tuple", "structures.\n", "NOTE(sdague):", "the", "oslo_db", "base", "test", "case", "completely\n", "invalidates", "our", "logging", "setup,", "we", "actually", "have", "to", "do", "that\n", "before", "it", "is", "called", "to", "keep", "this", "from", "vomitting", "all", "over", "our\n", "test", "output.\n", "Enforcement", "migration,", "no", "changes", "to", "test\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "flavors\n", "flavor_extra_specs\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "flavor_projects\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "Ensure", "the", "foreign", "key", "still", "exists\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "aggregate_metadata\n", "aggregate_hosts\n", "aggregates\n", "instance_groups\n", "instance_group_policy\n", "Ensure", "the", "foreign", "key", "still", "exists\n", "There", "should", "only", "be", "one", "foreign", "key", "here\n", "instance_group_member\n", "quota_classes\n", "quota_usages\n", "quotas\n", "project_user_quotas\n", "reservations\n", "Ensure", "the", "foreign", "key", "still", "exists\n", "There", "should", "only", "be", "one", "foreign", "key", "here"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/net.py": ["CONF", "False", "KeyError", "LOG", "LibvirtNetVolumeDriver", "None", "_", "_LW", "__name__", "auth_enabled", "conf", "connection_info", "disk_dev", "disk_info", "exception", "host", "ip", "libvirt_volume", "logging", "netdisk_properties", "nova", "password", "port", "secret", "self", "source_protocol", "super", "target_portal", "usage_name", "usage_type", "utils", "Driver", "to", "attach", "Network", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt.\nDetach", "the", "volume", "from", "instance_name.", "TODO(mriedem):", "Add", "delegation", "methods", "to", "connection", "(LibvirtDriver)\n", "to", "call", "through", "for", "these", "secret", "CRUD", "operations", "so", "the", "volume", "driver\n", "doesn't", "need", "to", "know", "the", "internal", "attributes", "of", "the", "connection\n", "object.\n", "The", "rbd", "volume", "driver", "in", "cinder", "sets", "auth_enabled", "if", "the", "rbd_user", "is\n", "set", "in", "cinder.", "The", "rbd", "auth", "values", "from", "the", "cinder", "connection", "take\n", "precedence", "over", "any", "local", "nova", "config", "values", "in", "case", "the", "cinder", "ceph\n", "backend", "is", "configured", "differently", "than", "the", "nova", "rbd", "ephemeral", "storage\n", "configuration.\n", "secret_type", "is", "always", "hard-coded", "to", "'ceph'", "in", "cinder\n", "Anyone", "relying", "on", "falling", "back", "to", "nova", "config", "is", "probably", "having\n", "this", "work", "accidentally", "and", "we'll", "remove", "that", "support", "in", "the\n", "16.0.0", "Pike", "release.\n", "use", "the", "nova", "config", "values\n", "secret_type", "is", "always", "hard-coded", "to", "'ceph'", "in", "cinder"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_admin_actions.py": ["AdminActionsSamplesJsonTest", "response", "sample_dir", "self", "super", "test_servers", "Get", "api", "samples", "to", "reset", "server", "network", "request.\n", "Get", "api", "samples", "to", "inject", "network", "info", "request.\n", "get", "api", "samples", "to", "server", "reset", "state", "request."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/236_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_pci_device_pools.py": ["fake_pool", "fake_pool_dict", "fake_pool_list", "fake_pool_list_primitive", "fake_pool_primitive", "pci_device_pool", "This", "represents", "the", "format", "that", "PCI", "device", "pool", "info", "was", "stored", "in", "the", "DB\n", "before", "this", "info", "was", "made", "into", "objects."], "/Users/mehranhassani/repos/nova/nova/policies/baremetal_nodes.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "baremetal_nodes_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/keymgr/__init__.py": ["CONF", "LOG", "None", "_LW", "__name__", "api_class", "barbican", "castellan", "castellan_mock", "cfg", "cls", "conf", "deprecated", "deprecated_barbican", "deprecated_mock", "importutils", "log_deprecated_warning", "logging", "nova", "NOTE(kfarr):", "This", "line", "can", "be", "removed", "when", "a", "value", "is", "assigned", "in", "DevStack\n", "NOTE(kfarr):", "For", "backwards", "compatibility,", "everything", "below", "this", "comment\n", "is", "deprecated", "for", "removal\n", "TODO(kfarr):", "key_manager.api_class", "should", "be", "set", "in", "DevStack,", "and", "this\n", "block", "can", "be", "removed"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/test_wsgi.py": ["Application", "Router", "StringIO", "application", "environ", "fixtures", "mapper", "result", "routes", "self", "start_response", "super", "test", "webob", "wsgi", "Dummy", "application", "to", "test", "debug.\nTest", "application", "to", "call", "from", "router.\nTest", "router."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/servers.py": ["False", "base_create", "base_create_v20", "base_create_v219", "base_create_v232", "base_create_v237", "base_rebuild", "base_rebuild_v20", "base_rebuild_v219", "base_resize", "base_update", "base_update_v20", "base_update_v219", "copy", "create_image", "create_image_v20", "parameter_types", "reboot", "trigger_crash_dump", "NOTE(gmann):", "In", "case", "of", "boot", "from", "volume,", "imageRef", "was\n", "allowed", "as", "the", "empty", "string", "also", "So", "keeping", "the", "same\n", "behavior", "and", "allow", "empty", "string", "in", "case", "of", "boot", "from\n", "volume", "only.", "Python", "code", "make", "sure", "empty", "string", "is\n", "not", "allowed", "for", "other", "cases.\n", "2.37", "builds", "on", "2.32", "and", "makes", "the", "following", "changes:\n", "1.", "server.networks", "is", "required\n", "2.", "server.networks", "is", "now", "either", "an", "enum", "or", "a", "list\n", "3.", "server.networks.uuid", "is", "now", "required", "to", "be", "a", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_trusted_filters.py": ["AttestationServiceTestCase", "CONF", "TestTrustedFilter", "attestation_service", "bad_host", "call_args", "cfg", "expected_call_args", "extra_specs", "fake_compute_nodes", "fakes", "host", "jsonutils", "list", "mock", "mocked", "oat_data", "objects", "req_mock", "request_mock", "requests", "result", "self", "spec_obj", "status", "status_code", "super", "test", "time_fixture", "timeutils", "trusted_filter", "unconvertible_text", "utils", "utils_fixture", "this", "unconvertible_texts", "leads", "to", "TypeError", "and", "ValueError\n", "in", "jsonutils.loads(res.text)", "in", "_do_request()", "method\n", "TrustedFilter's", "constructor", "creates", "the", "attestation", "cache,", "which\n", "calls", "to", "get", "a", "list", "of", "all", "the", "compute", "nodes.\n", "Fill", "the", "caches\n", "Fill", "the", "caches\n", "Fill", "the", "caches\n", "This", "is", "just", "a", "broken", "date", "to", "ensure", "that\n", "we're", "not", "just", "arbitrarily", "accepting", "any\n", "date", "format."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/availability_zone.py": ["ALIAS", "ATTRIBUTE_NAME", "AvailabilityZoneController", "CONF", "False", "None", "True", "alias", "alive", "api_services", "availability_zones", "available_zones", "az_policies", "body_deprecated_param", "context", "create_kwargs", "ctxt", "enabled_services", "extensions", "filtered_available_zones", "filtered_not_available_zones", "host", "host_services", "hosts", "is_available", "name", "not_available_zones", "nova", "objects", "req", "resource", "result", "schema", "self", "server_dict", "service", "servicegroup", "super", "version", "wsgi", "zone", "zone_hosts", "zones", "The", "Availability", "Zone", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "a", "summary", "list", "of", "availability", "zone.\nReturns", "a", "detailed", "list", "of", "availability", "zone.", "Hide", "internal_service_availability_zone\n", "Available", "services\n", "Skip", "API", "services", "in", "the", "listing", "since", "they", "are", "not\n", "maintained", "in", "the", "same", "way", "as", "other", "services\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1.\n", "NOTE(alex_xu):", "For", "v2.1", "compat", "mode,", "we", "strip", "the", "spaces", "when", "create\n", "availability_zone.", "But", "we", "don't", "strip", "at", "here", "for", "backward-compatible\n", "with", "some", "users", "already", "created", "availability_zone", "with\n", "leading/trailing", "spaces", "with", "legacy", "v2", "API."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/models.py": ["AggregateHost", "AggregateMetadata", "BASE", "BigInteger", "Boolean", "CONF", "Column", "ConsolePool", "DateTime", "Enum", "False", "FixedIp", "Float", "ForeignKey", "Index", "Instance", "InstanceGroupMember", "InstanceGroupPolicy", "InstanceTypes", "Integer", "KeyError", "MEDIUMTEXT", "MediumText", "Network", "None", "NovaBase", "String", "Text", "True", "TypeError", "Unicode", "VirtualInterface", "__table_args__", "__tablename__", "_hosts", "_members", "_metadata", "_policies", "access_ip_v4", "access_ip_v6", "action", "action_id", "address", "aggregate_id", "allocated", "allocation_ratio", "api_url", "architecture", "auto_assigned", "auto_disk_config", "availability_zone", "base_name", "binary", "boot_index", "bridge", "bridge_interface", "broadcast", "bw_in", "bw_out", "can_host", "cell_name", "cfg", "cidr", "cidr_v6", "class_name", "cleaned", "code", "column", "compute_host", "compute_node_id", "config_drive", "connection_info", "console_type", "consumer_id", "copy", "cpu_allocation_ratio", "cpu_info", "curr_last_refreshed", "curr_read_bytes", "curr_reads", "curr_write_bytes", "curr_writes", "current_workload", "declarative_base", "default_ephemeral_device", "default_swap_device", "delete_on_termination", "deleted", "delta", "description", "dest_compute", "dest_host", "dest_node", "destination_type", "details", "dev_id", "dev_type", "device_metadata", "device_name", "device_type", "dhcp_server", "dhcp_start", "disable_terminate", "disabled", "disabled_reason", "disk_allocation_ratio", "disk_available_least", "disk_bus", "disk_processed", "disk_remaining", "disk_total", "display_description", "display_name", "dns1", "dns2", "domain", "enable_dhcp", "ephemeral_gb", "ephemeral_key_uuid", "errors", "event", "expire", "expires", "extra_info", "extra_resources", "file_name", "fingerprint", "finish_time", "fixed_ip", "fixed_ip_id", "flavor", "flavorid", "forced_down", "free_disk_gb", "free_ram_mb", "from_port", "gateway", "gateway_v6", "generation", "grantee_group", "group_id", "guest_format", "h", "hard_limit", "hidden", "host", "host_ip", "hostname", "hypervisor", "hypervisor_hostname", "hypervisor_type", "hypervisor_version", "id", "image_id", "image_ref", "in_use", "info", "injected", "injected_files", "instance", "instance_id", "instance_name", "instance_type", "instance_type_id", "instance_uuid", "instances", "interface", "internal_access_path", "is_parent", "is_public", "iter", "kernel_id", "key", "key_data", "key_name", "keypairs", "label", "last_ctr_in", "last_ctr_out", "last_refreshed", "last_seen_up", "launch_index", "launched_at", "launched_on", "leased", "local_gb", "local_gb_used", "locked", "locked_by", "m", "mac", "max_unit", "md5hash", "memory_mb", "memory_mb_used", "memory_processed", "memory_remaining", "memory_total", "message", "metadata", "metrics", "migration_context", "migration_type", "min_unit", "models", "mtu", "multi_host", "name", "netmask", "netmask_v6", "network", "network_id", "network_info", "new_instance_type_id", "no_device", "node", "numa_node", "numa_topology", "old_instance_type_id", "orm", "os", "os_type", "p", "parent_addr", "parent_group", "parent_group_id", "password", "pci_requests", "pci_stats", "period_beginning", "period_ending", "policy", "pool", "pool_id", "port", "power_state", "priority", "product_id", "progress", "project_id", "property", "protocol", "public_hostname", "public_key", "ram_allocation_ratio", "ramdisk_id", "report_count", "request_id", "reservation_id", "reserved", "resource", "resource_class_id", "resource_id", "resource_provider", "resource_provider_id", "result", "root_device_name", "root_gb", "running_vms", "rxtx_base", "rxtx_factor", "scheduled_at", "schema", "scope", "security_group_id", "self", "service_id", "session", "share_address", "shutdown_terminate", "snapshot_id", "source_compute", "source_node", "source_type", "start_period", "start_time", "state", "stats", "status", "step_size", "supported_instances", "swap", "tag", "task_items", "task_name", "task_state", "terminated_at", "timeutils", "to_port", "token_hash", "topic", "tot_last_refreshed", "tot_read_bytes", "tot_reads", "tot_write_bytes", "tot_writes", "total", "traceback", "transport_url", "type", "types", "uniq_name", "until_refresh", "url", "usage", "usage_id", "used", "user_data", "user_id", "username", "uuid", "value", "vcpu_model", "vcpu_weight", "vcpus", "vcpus_used", "vendor_id", "version", "virtual_interface", "virtual_interface_id", "vlan", "vm_mode", "vm_state", "volume_id", "volume_size", "vpn_private_address", "vpn_public_address", "vpn_public_port", "weight_offset", "weight_scale", "Represents", "a", "running", "service", "on", "a", "host.\nRepresents", "a", "running", "compute", "service", "on", "a", "host.\nRepresents", "a", "x509", "certificate.\nRepresents", "a", "guest", "VM.\nRepresents", "a", "single", "quota", "override", "for", "a", "user", "with", "in", "a", "project.\nRepresents", "the", "current", "usage", "for", "a", "given", "resource.\nRepresents", "a", "resource", "reservation", "for", "quotas.\nRepresents", "a", "block", "storage", "device", "that", "can", "be", "attached", "to", "a", "VM.\nRepresents", "block", "device", "mapping", "that", "is", "defined", "by", "EC2.\nRepresents", "a", "security", "group.\nRepresents", "a", "rule", "in", "a", "security", "group.\nRepresents", "a", "rule", "in", "a", "security", "group.\nRepresents", "a", "public", "key", "pair", "for", "ssh", "/", "WinRM.\nRepresents", "a", "running", "host-to-host", "migration.\nRepresents", "a", "network.\nRepresents", "a", "virtual", "interface", "on", "an", "instance.\nRepresents", "a", "fixed", "IP", "for", "an", "instance.\nRepresents", "a", "floating", "IP", "that", "dynamically", "forwards", "to", "a", "fixed", "IP.\nRepresents", "a", "DNS", "domain", "with", "availability", "zone", "or", "project", "info.\nRepresents", "pool", "of", "consoles", "on", "the", "same", "physical", "node.\nRepresents", "a", "console", "session", "for", "an", "instance.\nRepresents", "a", "user-provided", "metadata", "key/value", "pair", "for", "an", "instance.\nRepresents", "a", "system-owned", "metadata", "key/value", "pair", "for", "an", "instance.\nRepresent", "projects", "associated", "instance_types.\nRepresents", "additional", "specs", "as", "key/value", "pairs", "for", "an", "instance_type.\nRepresents", "a", "host", "that", "is", "member", "of", "an", "aggregate.\nRepresents", "a", "metadata", "key/value", "pair", "for", "an", "aggregate.\nRepresents", "a", "cluster", "of", "hosts", "that", "exists", "in", "this", "zone.\nRepresents", "an", "agent", "build.\nCache", "for", "instance", "bandwidth", "usage", "data", "pulled", "from", "the", "hypervisor.\nCache", "for", "volume", "usage", "data", "pulled", "from", "the", "hypervisor.\nCompatibility", "layer", "for", "the", "S3", "image", "service", "talking", "to", "Glance.\nCompatibility", "layer", "for", "the", "EC2", "volume", "service.\nCompatibility", "layer", "for", "the", "EC2", "snapshot", "service.\nTrack", "events", "that", "occur", "during", "an", "InstanceAction.\nCompatibility", "layer", "for", "the", "EC2", "instance", "service.\nAudit", "log", "for", "background", "periodic", "tasks.\nRepresents", "the", "members", "for", "an", "instance", "group.\nRepresents", "the", "policy", "type", "for", "an", "instance", "group.\nRepresents", "the", "tag", "for", "a", "resource.\nRepresents", "a", "mapping", "to", "a", "providers", "of", "resources.\nRepresents", "a", "quantity", "of", "available", "resource.\nA", "use", "of", "inventory.\nAssociate", "a", "resource", "provider", "with", "an", "aggregate.\nRepresents", "a", "console", "auth", "token", ",", "ForeignKey('hosts.id'))\n", "FIXME(sbauza:", "Host", "field", "is", "nullable", "because", "some", "old", "Juno", "compute", "nodes\n", "can", "still", "report", "stats", "from", "an", "old", "ResourceTracker", "without", "setting", "this\n", "field.\n", "This", "field", "has", "to", "be", "set", "non-nullable", "in", "a", "later", "cycle", "(probably", "Lxxx)\n", "once", "we", "are", "sure", "that", "all", "compute", "nodes", "in", "production", "report", "it.\n", "Free", "Ram,", "amount", "of", "activity", "(resize,", "migration,", "boot,", "etc)", "and\n", "the", "number", "of", "running", "VM's", "are", "a", "good", "starting", "point", "for", "what's\n", "important", "when", "making", "scheduling", "decisions.\n", "Note(masumotok):", "Expected", "Strings", "example:\n\n", "'{\"arch\":\"x86_64\",\n", "\"model\":\"Nehalem\",\n", "\"topology\":{\"sockets\":1,", "\"threads\":2,", "\"cores\":3},\n", "\"features\":[\"tdtscp\",", "\"xtpr\"]}'\n\n", "Points", "are", "\"json", "translatable\"", "and", "it", "must", "have", "all", "dictionary", "keys\n", "above,", "since", "it", "is", "copied", "from", "<cpu>", "tag", "of", "getCapabilities()\n", "(See", "libvirt.virtConnection).\n", "Note(yongli):", "json", "string", "PCI", "Stats\n", "'[{\"vendor_id\":\"8086\",", "\"product_id\":\"1234\",", "\"count\":3", "},", "...]'\n", "extra_resources", "is", "a", "json", "string", "containing", "arbitrary\n", "data", "about", "additional", "resources.\n", "json-encode", "string", "containing", "compute", "node", "statistics\n", "json-encoded", "dict", "that", "contains", "NUMA", "topology", "as", "generated", "by\n", "objects.NUMATopology._to_json()\n", "allocation", "ratios", "provided", "by", "the", "RT\n", "Support", "templates", "like", "\"uuid-%(uuid)s\",", "etc.\n", "NOTE(russellb):", "Don't", "use", "self.iteritems()", "here,", "as", "it", "will\n", "result", "in", "infinite", "recursion", "on", "the", "name", "property.\n", "prevent", "recursion", "if", "someone", "specifies", "%(name)s\n", "%(name)s", "will", "not", "be", "valid.\n", "This", "is", "not", "related", "to", "hostname,", "above.", "It", "refers\n", "to", "the", "nova", "node.\n", ",", "ForeignKey('hosts.id'))\n", "To", "identify", "the", "\"ComputeNode\"", "which", "the", "instance", "resides", "in.\n", "This", "equals", "to", "ComputeNode.hypervisor_hostname.\n", "*not*", "flavorid,", "this", "is", "the", "internal", "primary_key\n", "This", "always", "refers", "to", "the", "availability_zone", "kwarg", "passed", "in", "/servers", "and\n", "provided", "as", "an", "API", "option,", "not", "at", "all", "related", "to", "the", "host", "AZ", "the", "instance\n", "belongs", "to.\n", "User", "editable", "field", "for", "display", "in", "user-facing", "UIs\n", "To", "remember", "on", "which", "host", "an", "instance", "booted.\n", "An", "instance", "may", "have", "moved", "to", "another", "host", "by", "live", "migration.\n", "NOTE(jdillaman):", "locked", "deprecated", "in", "favor", "of", "locked_by,\n", "to", "be", "removed", "in", "Icehouse\n", "User", "editable", "field", "meant", "to", "represent", "what", "ip", "should", "be", "used\n", "to", "connect", "to", "the", "instance\n", "EC2", "instance_initiated_shutdown_terminate\n", "True:", "->", "'terminate'\n", "False:", "->", "'stop'\n", "Note(maoy):", "currently", "Nova", "will", "always", "stop", "instead", "of", "terminate\n", "no", "matter", "what", "the", "flag", "says.", "So", "we", "set", "the", "default", "to", "False.\n", "EC2", "disable_api_termination\n", "OpenStack", "compute", "cell", "name.", "This", "will", "only", "be", "set", "at", "the", "top", "of\n", "the", "cells", "tree", "and", "it'll", "be", "a", "full", "cell", "name", "such", "as", "'api!hop1!hop2'\n", "NOTE(pumaranikar):", "internal_id", "attribute", "is", "no", "longer", "used", "(bug", "1441242)\n", "Hence,", "removing", "from", "object", "layer", "in", "current", "release", "(Ocata)", "and", "will\n", "treated", "as", "deprecated.", "The", "column", "can", "be", "removed", "from", "schema", "with\n", "a", "migration", "at", "the", "start", "of", "next", "release.\n", "internal_id", "=", "Column(Integer)\n", "Records", "whether", "an", "instance", "has", "been", "deleted", "from", "disk\n", "text", "column", "used", "for", "storing", "a", "json", "object", "of", "network", "data", "for", "api\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "Internal", "only", "primary", "key/id\n", "Public", "facing", "id", "will", "be", "renamed", "public_id\n", "TODO(macsz)", "This", "class", "can", "be", "removed.", "It", "might", "need", "a", "DB", "migration", "to", "drop\n", "this.\n", "default=False", "for", "compatibility", "of", "the", "existing", "code.\n", "With", "EC2", "API,\n", "default", "True", "for", "ami", "specified", "device.\n", "default", "False", "for", "created", "with", "other", "timing.\n", "TODO(sshturm)", "add", "default", "in", "db\n", "for", "no", "device", "to", "suppress", "devices.\n", "(anthony)", "the", "condition", "below", "shouldn't", "be", "necessary", "now", "that", "the\n", "association", "is", "being", "marked", "as", "deleted.", "However,", "removing", "this\n", "may", "cause", "existing", "deployments", "to", "choke,", "so", "I'm", "leaving", "it\n", "Note:", "This", "is", "not", "the", "parent", "SecurityGroup.", "It's", "SecurityGroup", "we're\n", "granting", "access", "for.\n", "\"tcp\",", "\"udp\"", "or", "\"icmp\"\n", "\"tcp\",", "\"udp\",", "or", "\"icmp\"\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(tr3buchet):", "the", "____compute", "variables", "are", "instance['host']\n", "nodes", "are", "equivalent", "to", "a", "compute", "node's", "'hypervisor_hostname'\n", "NOTE(tr3buchet):", "dest_host,", "btw,", "is", "an", "ip", "address\n", "TODO(_cerberus_):", "enum\n", ",", "ForeignKey('hosts.id'))\n", "TODO(vish):", "can", "these", "both", "come", "from", "the", "same", "baseclass?\n", "associated", "means", "that", "a", "fixed_ip", "has", "its", "instance_id", "column", "set\n", "allocated", "means", "that", "a", "fixed_ip", "has", "its", "virtual_interface_id", "column", "set\n", "TODO(sshturm)", "add", "default", "in", "db\n", "leased", "means", "dhcp", "bridge", "has", "leased", "the", "ip\n", "TODO(sshturm)", "add", "default", "in", "db\n", "TODO(sshturm)", "add", "default", "in", "db\n", ",", "ForeignKey('hosts.id'))\n", "TODO(sshturm)", "add", "default", "in", "db\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "Name", "here", "is", "the", "'short", "name'", "of", "a", "cell.", "For", "instance:", "'child1'\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "physical", "address", "of", "device", "domain:bus:slot.func", "(0000:09:01.1)\n", "label", "is", "abstract", "device", "name,", "that", "is", "used", "to", "unify", "devices", "with", "the\n", "same", "functionality", "with", "different", "addresses", "or", "host.\n", "the", "request_id", "is", "used", "to", "identify", "a", "device", "that", "is", "allocated", "for", "a\n", "particular", "request\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated.\n", "NOTE(alaski):", "This", "table", "exists", "in", "the", "nova_api", "database", "and", "its", "usage", "here\n", "is", "deprecated."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/placement/test_handler.py": ["DeclarationsTest", "DispatchTest", "MapperTest", "_environ", "action", "allow_header", "app", "context_mock", "declarations", "dict", "environ", "error", "handler", "method", "mock", "mocked_log", "path", "result", "root", "routes", "self", "start_response", "str", "super", "test", "type", "uuidsentinel", "webob", "Unit", "tests", "for", "the", "functions", "used", "by", "the", "placement", "API", "handlers.", "Used", "in", "tests", "below\n", "PEP", "3333", "requires", "that", "headers", "be", "whatever", "the", "native", "str\n", "is", "in", "that", "version", "of", "Python.", "Never", "unicode."], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/driver.py": ["CONF", "Exception", "False", "LEGACY_NODENAME", "LOG", "None", "NotImplementedError", "TIME_BETWEEN_API_CALL_RETRIES", "True", "VMwareAPISession", "VMwareVCDriver", "_", "_LE", "_LI", "_LW", "__name__", "about", "action", "admin_password", "all_instances", "api", "args", "bad_volumes_callback", "block_device_info", "block_device_mapping", "cacert", "capabilities", "connection_info", "constants", "context", "dest", "destroy_disks", "destroy_vifs", "device_type", "disk", "disk_bus", "disk_info", "driver", "e", "enabled", "encryption", "error_util", "exception", "excutils", "flavor", "host", "host_ip", "host_port", "host_stats", "ignored_states", "image_id", "image_meta", "injected_files", "insecure", "instance", "instances", "isinstance", "kwargs", "logging", "method", "migrate_data", "migration", "min_version", "mo_id", "mode", "module", "mountpoint", "msg", "network_info", "next_min_ver", "nodename", "nova", "nova_vim_util", "nw_info", "os_extension", "password", "pbm", "pbm_wsdl_loc", "power_on", "property", "re", "reboot_type", "refresh", "rescue_password", "resize_instance", "retry_count", "retry_interval", "scheme", "self", "state", "stats_dict", "super", "task_ref", "task_states", "timeout", "update_task_state", "username", "v_utils", "vc_version", "version", "vexc", "vif", "vim", "vim_util", "virtapi", "vm_util", "vmops", "volumeops", "The", "VC", "host", "connection", "object.\nCleanup", "after", "instance", "being", "destroyed", "by", "Hypervisor.\nresume", "guest", "state", "when", "a", "host", "is", "booted.\nList", "VM", "instance", "UUIDs.\nList", "VM", "instances", "from", "the", "single", "compute", "node.\nConfirms", "a", "resize,", "destroying", "the", "source", "VM.\nFinish", "reverting", "a", "resize,", "powering", "back", "on", "the", "instance.\nCompletes", "a", "resize,", "turning", "on", "the", "migrated", "instance.\nReturn", "link", "to", "instance's", "VNC", "console", "using", "vCenter", "logic.\nRetrieves", "the", "vCenter", "UUID.\nCreate", "VM", "instance.\nAttach", "volume", "storage", "to", "VM", "instance.\nDetach", "volume", "storage", "to", "VM", "instance.\nReturn", "volume", "connector", "information.\nReturns", "the", "IP", "address", "of", "the", "vCenter", "host.\nCreate", "snapshot", "from", "a", "running", "VM", "instance.\nReboot", "VM", "instance.\nDestroy", "VM", "instance.\nPause", "VM", "instance.\nUnpause", "paused", "VM", "instance.\nSuspend", "the", "specified", "instance.\nResume", "the", "suspended", "VM", "instance.\nRescue", "the", "specified", "instance.\nUnrescue", "the", "specified", "instance.\nPower", "off", "the", "specified", "instance.\nPower", "on", "the", "specified", "instance.\nPoll", "for", "rebooting", "instances.\nReturn", "info", "about", "the", "VM", "instance.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "data", "about", "VM", "diagnostics.\nHost", "uptime", "operation", "not", "supported", "by", "VC", "driver.\ninject", "network", "info", "for", "specified", "instance.\nManage", "the", "local", "cache", "of", "images.\nEfficient", "override", "of", "base", "instance_exists", "method.\nAttach", "an", "interface", "to", "the", "instance.\nDetach", "an", "interface", "from", "the", "instance.\nCheck", "if", "the", "module", "is", "a", "VIM", "Object", "instance.", "Legacy", "nodename", "is", "of", "the", "form:", "<mo", "id>(<cluster", "name>)\n", "e.g.", "domain-26(TestCluster)\n", "We", "assume", "<mo", "id>", "consists", "of", "alphanumeric,", "_", "and", "-.\n", "We", "assume", "cluster", "name", "is", "everything", "between", "the", "first", "(", "and", "the", "last", ").\n", "We", "pull", "out", "<mo", "id>", "for", "re-use.\n", "The", "vCenter", "driver", "includes", "API", "that", "acts", "on", "ESX", "hosts", "or", "groups\n", "of", "ESX", "hosts", "in", "clusters", "or", "non-cluster", "logical-groupings.\n\n", "vCenter", "is", "not", "a", "hypervisor", "itself,", "it", "works", "with", "multiple\n", "hypervisor", "host", "machines", "and", "their", "guests.", "This", "fact", "can\n", "subtly", "alter", "how", "vSphere", "and", "OpenStack", "interoperate.\n", "Update", "the", "PBM", "location", "if", "necessary\n", "Register", "the", "OpenStack", "extension\n", "Register", "an", "'OpenStack'", "extension", "in", "vCenter\n", "Check", "if", "the", "instance", "is", "running", "already", "and", "avoid", "doing\n", "anything", "if", "it", "is.\n", "Instance", "is", "not", "up", "and", "could", "be", "in", "an", "unknown", "state.\n", "Be", "as", "absolute", "as", "possible", "about", "getting", "it", "back", "into\n", "a", "known", "and", "running", "state.\n", "TODO(PhilDay):", "Add", "support", "for", "timeout", "(clean", "shutdown)\n", "vCenter", "does", "not", "actually", "run", "the", "VNC", "service\n", "itself.", "You", "must", "talk", "to", "the", "VNC", "host", "underneath", "vCenter.\n", "The", "VMWare", "driver", "manages", "multiple", "hosts,", "so", "there", "are\n", "likely", "many", "different", "CPU", "models", "in", "use.", "As", "such", "it", "is\n", "impossible", "to", "provide", "any", "meaningful", "info", "on", "the", "CPU\n", "model", "of", "the", "\"host\"\n", "We", "need", "to", "detach", "attached", "volumes\n", "Certain", "disk", "types,", "for", "example", "'IDE'", "do", "not", "support", "hot\n", "plugging.", "Hence", "we", "need", "to", "power", "off", "the", "instance", "and", "update\n", "the", "instance", "state.\n", "Destroy", "gets", "triggered", "when", "Resource", "Claim", "in", "resource_tracker\n", "is", "not", "successful.", "When", "resource", "claim", "is", "not", "successful,\n", "node", "is", "not", "set", "in", "instance.", "Perform", "destroy", "only", "if", "node", "is", "set\n", "A", "resize", "uses", "the", "same", "instance", "on", "the", "VC.", "We", "do", "not", "delete", "that\n", "VM", "in", "the", "event", "of", "a", "revert\n", "We", "need", "to", "detach", "attached", "volumes\n", "TODO(PhilDay):", "Add", "support", "for", "timeout", "(clean", "shutdown)"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_utils.py": ["CONF", "Exception", "FakeImgInfo", "FakeStatResult", "False", "None", "OSError", "True", "_context", "args", "backing_file", "blktap", "bytes", "cfg", "checks", "cmd", "context", "d_backing", "d_size", "d_type", "dest_format", "disk", "dst_fd", "dst_path", "example_output", "exception", "execute_args", "expected_args", "expected_commands", "expected_path", "expected_result", "expected_size", "f", "fake_execute", "fake_instance", "fake_qemu_img_info", "fake_rename", "fake_rm_on_error", "fake_statvfs", "fake_unlink", "file_format", "fileutils", "fp", "fs_info", "functools", "i", "id_maps", "image_arch", "image_id", "image_info", "image_meta", "images", "inst_path_at_dest", "instance", "is_block_dev", "kbytes", "len", "libvirt_utils", "mbytes", "migrate_data", "mock", "mock_execute", "mock_exists", "mock_images", "mock_isdir", "mock_log", "mock_rem_fs_remove", "mode", "new", "obj_fields", "object", "objects", "old", "old_rm_path_on_error", "open", "os", "out", "out_format", "output", "p", "path", "processutils", "qemu_img_cmd", "range", "remove", "result", "return_true", "self", "side_effect", "six", "src_fd", "src_format", "src_path", "target", "tempfile", "template_output", "test", "type_map", "utils", "uuids", "vconfig", "version", "versions", "virt_type", "with_actual_path", "xend", "Seems", "like", "lvm", "detection\n", "if", "its", "in", "/dev", "??\n", "Try", "rbd", "detection\n", "Try", "the", "other", "types\n", "NOTE(aloga):", "Xen", "is", "tested", "in", "test_pick_disk_driver_name_xen\n", "block", "dev\n", "file", "dev\n", "qemu", "backend", "supported", "only", "by", "libxl", "which", "is\n", "production", "since", "xen", "4.2.", "libvirt", "use", "libxl", "if\n", "xend", "service", "not", "started.\n", "default", "is_block_dev", "False\n", "We", "have", "a", "test", "for", "write_to_file.", "If", "that", "is", "sound,", "this", "suffices\n", "We", "have", "a", "test", "for", "write_to_file.", "If", "that", "is", "sound,", "this", "suffices\n", "Since", "the", "remove", "param", "of", "fileutils.remove_path_on_error()\n", "is", "initialized", "at", "load", "time,", "we", "must", "provide", "a", "wrapper\n", "that", "explicitly", "resets", "it", "to", "our", "fake", "delete_if_exists()"], "/Users/mehranhassani/repos/nova/nova/objects/fields.py": ["AARCH64", "ACTIVE", "ADD_FIXED_IP", "ADD_HOST", "ALL", "ALLOCATED", "ALPHA", "ARMV6", "ARMV7", "ARMV7B", "AUDIT", "AUTO_TYPE", "AVAILABLE", "AddressBase", "Architecture", "AutoTypedField", "BAREMETAL", "BHYVE", "BIOS", "BLANK", "BLOCK_DEVICE_MAPPING", "BUILDING", "BUSLOGIC", "BaseEnumField", "BaseNovaEnum", "BlockDeviceDestinationType", "BlockDeviceSourceType", "BlockDeviceType", "BooleanField", "CDROM", "CIRRUS", "CLAIMED", "CPUAllocationPolicy", "CPUEmulatorThreadsPolicy", "CPUFeaturePolicy", "CPUMatch", "CPUMode", "CPUThreadAllocationPolicy", "CPU_FREQUENCY", "CPU_IDLE_PERCENT", "CPU_IDLE_TIME", "CPU_IOWAIT_PERCENT", "CPU_IOWAIT_TIME", "CPU_KERNEL_PERCENT", "CPU_KERNEL_TIME", "CPU_PERCENT", "CPU_USER_PERCENT", "CPU_USER_TIME", "CRASHED", "CREATE", "CRIS", "CRITICAL", "CUSTOM", "ConfigDrivePolicy", "DEBUG", "DEDICATED", "DELETE", "DELETED", "DELETING", "DISABLE", "DISABLED", "DISK", "DISK_GB", "DOCKER", "DOWN", "DateTimeField", "Dict", "DictOfIntegersField", "DictOfListOfStringsField", "DictOfNullableStringsField", "DictOfStringsField", "DictProxyField", "DiskBus", "DiskFormat", "END", "ERROR", "EVACUATE", "EXACT", "EXCEPTION", "EXE", "EXISTS", "ElementTypeError", "Enum", "EnumField", "FAKE", "FDC", "FLOPPY", "FORBID", "FORCE", "FS", "Field", "FieldType", "FirmwareType", "FlexibleBooleanField", "FloatField", "HOST_MODEL", "HOST_PASSTHROUGH", "HVM", "HVType", "HYPERV", "I686", "IA64", "IBMVSCSI", "IDE", "IDEAddress", "IMAGE", "IMAGE_BACKUP", "IMAGE_PENDING_UPLOAD", "IMAGE_SNAPSHOT", "IMAGE_SNAPSHOT_PENDING", "IMAGE_UPLOADING", "INFO", "IPAddress", "IPAddressField", "IPNetwork", "IPNetworkField", "IPV4Address", "IPV4AddressField", "IPV4AndV6AddressField", "IPV4Network", "IPV4NetworkField", "IPV4_ADDRESS", "IPV6Address", "IPV6AddressField", "IPV6Network", "IPV6NetworkField", "IRONIC", "ISO", "ISOLATE", "ImageSignatureHashType", "ImageSignatureKeyType", "InstancePowerState", "InstanceState", "InstanceTaskState", "IntegerField", "KQEMU", "KVM", "KeyError", "KeyTypeError", "LEGACY_VALUES", "LINUX", "LIVE_MIGRATION_ABORT", "LIVE_MIGRATION_POST", "LIVE_MIGRATION_POST_DEST", "LIVE_MIGRATION_PRE", "LIVE_MIGRATION_ROLLBACK", "LIVE_MIGRATION_ROLLBACK_DEST", "LM32", "LOCAL", "LSILOGIC", "LSISAS1068", "LSISAS1078", "LUN", "LVM", "LXC", "LXD", "List", "ListOfDictOfNullableStringsField", "ListOfObjectsField", "ListOfSetsOfIntegersField", "ListOfStringsField", "M68K", "MACAddressField", "MAINTENANCE", "MANDATORY", "MEMORY_MB", "MICROBLAZE", "MICROBLAZEEL", "MIGRATING", "MINIMUM", "MIPS", "MIPS64", "MIPS64EL", "MIPSEL", "MonitorMetricType", "NETWORKING", "NONE", "NOSTATE", "NUMA_CORE", "NUMA_MEMORY_MB", "NUMA_MEM_BW_CURRENT", "NUMA_MEM_BW_MAX", "NUMA_SOCKET", "NUMA_THREAD", "NonNegativeFloatField", "NonNegativeIntegerField", "None", "NotificationAction", "NotificationPhase", "NotificationPriority", "OPENRISC", "OPENVZ", "OPTIONAL", "OSType", "Object", "ObjectField", "PARALLELS", "PARISC", "PARISC64", "PATTERN", "PAUSE", "PAUSED", "PAUSING", "PCIAddress", "PCI_DEVICE", "PHYP", "PLOOP", "POWERING_OFF", "POWERING_ON", "POWEROFF", "POWER_OFF", "POWER_ON", "PPC", "PPC64", "PPC64LE", "PPCEMB", "PPCLE", "PREFER", "PRSM", "PciDeviceStatus", "PciDeviceType", "PointerModelType", "QCOW2", "QEMU", "QXL", "RAW", "RBD", "REBOOT", "REBOOTING", "REBOOTING_HARD", "REBOOT_PENDING", "REBOOT_PENDING_HARD", "REBOOT_STARTED", "REBOOT_STARTED_HARD", "REBUILD", "REBUILDING", "REBUILD_BLOCK_DEVICE_MAPPING", "REBUILD_SPAWNING", "REMOVED", "REMOVE_FIXED_IP", "REMOVE_HOST", "REQUIRE", "REQUIRED", "RESCUE", "RESCUED", "RESCUING", "RESET", "RESIZE", "RESIZED", "RESIZE_CONFIRM", "RESIZE_CONFIRMING", "RESIZE_FINISH", "RESIZE_MIGRATED", "RESIZE_MIGRATING", "RESIZE_PREP", "RESIZE_REVERT", "RESIZE_REVERTING", "RESTORE", "RESTORING", "RESUME", "RESUMING", "RNGModel", "RUNNING", "ResourceClass", "S390", "S390X", "SAMPLE", "SATA", "SCHEDULING", "SCSI", "SCSIAddress", "SCSIModel", "SH4", "SH4EB", "SHARE", "SHARED", "SHELVE", "SHELVED", "SHELVED_OFFLOADED", "SHELVE_OFFLOAD", "SHELVING", "SHELVING_IMAGE_PENDING_UPLOAD", "SHELVING_IMAGE_UPLOADING", "SHELVING_OFFLOADING", "SHUTDOWN", "SNAPSHOT", "SOFT_DELETE", "SOFT_DELETED", "SOFT_DELETING", "SPARC", "SPARC64", "SPAWNING", "SRIOV_NET_VF", "SRIOV_PF", "SRIOV_VF", "STANDARD", "START", "STOPPED", "STRICT", "SUSPEND", "SUSPENDED", "SUSPENDING", "SecureBoot", "SensitiveStringField", "Set", "SetOfIntegersField", "StringField", "TEST", "TRIGGER_CRASH_DUMP", "UEFI", "UML", "UNAVAILABLE", "UNCLAIMABLE", "UNICORE32", "UNKNOWN", "UNPAUSE", "UNPAUSING", "UNRESCUE", "UNRESCUING", "UNSHELVE", "UNSHELVING", "UP", "UPDATE", "UPDATING_PASSWORD", "USB", "USBAddress", "USBTABLET", "UUIDField", "UnspecifiedDefault", "V1_0", "VBOX", "VCPU", "VDI", "VGA", "VHD", "VIFModel", "VIRTIO", "VIRTIO_SCSI", "VIRTUOZZO", "VMDK", "VMMode", "VMPVSCSI", "VMVGA", "VMWARE", "VOLUME", "VOLUME_ATTACH", "VOLUME_DETACH", "VOLUME_SWAP", "ValueError", "VersionPredicateField", "VideoModel", "WARN", "WINDOWS", "WatchdogAction", "X86_64", "XEN", "XTENSA", "XTENSAEB", "ZVM", "_", "_UNUSED", "attr", "classmethod", "cls", "exception", "fields", "index", "instance", "int", "isinstance", "mode", "msg", "name", "network_model", "newname", "obj", "os", "re", "self", "six", "staticmethod", "str", "super", "value", "vif", "Represents", "possible", "destination_type", "values", "for", "a", "BlockDeviceMapping.\nRepresents", "the", "possible", "source_type", "values", "for", "a", "BlockDeviceMapping.\nRepresents", "possible", "device_type", "values", "for", "a", "BlockDeviceMapping.\nClasses", "of", "resources", "provided", "to", "consumers.\nReturn", "an", "index", "into", "the", "Enum", "given", "a", "value.\nReturn", "the", "Enum", "value", "at", "a", "given", "index.", "Import", "field", "errors", "from", "oslo.versionedobjects\n", "Import", "fields", "from", "oslo.versionedobjects\n", "NOTE(danms):", "These", "are", "things", "we", "need", "to", "import", "for", "some", "of", "our\n", "own", "implementations", "below,", "our", "tests,", "or", "other", "transitional\n", "bits", "of", "code.", "These", "should", "be", "removable", "after", "we", "finish", "our\n", "conversion\n", "Xen", "mistake", "from", "Icehouse", "or", "earlier\n", "prefer", "(default):", "The", "host", "may", "or", "may", "not", "have", "hyperthreads.", "This\n", "retains", "the", "legacy", "behavior,", "whereby", "siblings", "are", "preferred", "when\n", "available.", "This", "is", "the", "default", "if", "no", "policy", "is", "specified.\n", "isolate:", "The", "host", "may", "or", "many", "not", "have", "hyperthreads.", "If", "hyperthreads", "are\n", "present,", "each", "vCPU", "will", "be", "placed", "on", "a", "different", "core", "and", "no", "vCPUs", "from\n", "other", "guests", "will", "be", "able", "to", "be", "placed", "on", "the", "same", "core,", "i.e.", "one\n", "thread", "sibling", "is", "guaranteed", "to", "always", "be", "unused.", "If", "hyperthreads", "are\n", "not", "present,", "each", "vCPU", "will", "still", "be", "placed", "on", "a", "different", "core", "and\n", "there", "are", "no", "thread", "siblings", "to", "be", "concerned", "with.\n", "require:", "The", "host", "must", "have", "hyperthreads.", "Each", "vCPU", "will", "be", "allocated", "on\n", "thread", "siblings.\n", "share", "(default):", "Emulator", "threads", "float", "across", "the", "pCPUs\n", "associated", "to", "the", "guest.\n", "isolate:", "Emulator", "threads", "are", "isolated", "on", "a", "single", "pCPU.\n", "Represents", "the", "possible", "hash", "methods", "used", "for", "image", "signing\n", "Represents", "the", "possible", "keypair", "types", "used", "for", "image", "signing\n", "Some", "code/docs", "use", "upper", "case", "or", "initial", "caps\n", "so", "canonicalize", "to", "all", "lower", "case\n", "The", "ordering", "here", "is", "relevant.", "If", "you", "must", "add", "a", "value,", "only\n", "append.\n", "This", "is", "the", "set", "of", "standard", "resource", "classes", "that", "existed", "before\n", "we", "opened", "up", "for", "custom", "resource", "classes", "in", "version", "1.1", "of", "various\n", "objects", "in", "nova/objects/resource_provider.py\n", "Some", "compat", "for", "strings", "we'd", "see", "in", "the", "legacy\n", "vmware_adaptertype", "image", "property\n", "Some", "compat", "for", "strings", "we'd", "see", "in", "the", "legacy\n", "hw_vif_model", "image", "property\n", "Native", "ABI", "(aka", "fully", "virtualized)\n", "Xen", "3.0", "paravirtualized\n", "User", "Mode", "Linux", "paravirtualized\n", "Executables", "in", "containers\n", "For", "compatibility", "with", "pre-Folsom", "deployments\n", "The", "nova-compute", "is", "up.\n", "The", "nova-compute", "is", "forced_down.\n", "The", "nova-compute", "is", "disabled.\n", "The", "nova-compute", "has", "not", "reported.\n", "No", "host", "or", "nova-compute.\n", "The", "device", "has", "been", "hot-removed", "and", "not", "yet", "deleted\n", "The", "device", "is", "marked", "not", "available/deleted.\n", "NOTE(jaypipes):", "It's", "silly", "that", "the", "word", "\"type-\"", "is", "in", "these", "constants,\n", "but", "alas,", "these", "were", "the", "original", "constant", "strings", "used...\n", "TODO(rlrossit):", "These", "should", "be", "changed", "over", "to", "be", "a", "StateMachine", "enum", "from\n", "oslo.versionedobjects", "using", "the", "valid", "state", "transitions", "described", "in\n", "nova.compute.vm_states\n", "TODO(rlrossit):", "These", "should", "be", "changed", "over", "to", "be", "a", "StateMachine", "enum", "from\n", "oslo.versionedobjects", "using", "the", "valid", "state", "transitions", "described", "in\n", "nova.compute.task_states\n", "The", "order", "is", "important", "here.", "If", "you", "make", "changes,", "only", "*append*\n", "values", "to", "the", "end", "of", "the", "list.\n", "Hmm,", "do", "we", "need", "this?"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_image_size.py": ["IMAGES", "ImageSizeTestV21", "NOW_API_FORMAT", "body", "content_type", "fake_detail", "fake_show", "fakes", "image", "images", "jsonutils", "prefix", "req", "res", "self", "size", "super", "test", "url"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/networks_associate.py": ["ALIAS", "MAX_PROXY_API_SUPPORT_VERSION", "NetworkAssociateActionController", "None", "NotImplementedError", "_", "alias", "body", "common", "context", "exc", "exception", "extension", "extensions", "id", "msg", "na_policies", "name", "network", "network_api", "networks_associate", "req", "self", "validation", "version", "wsgi", "Network", "Association", "API", "Controller.\nNetwork", "association", "support."], "/Users/mehranhassani/repos/nova/nova/objects/instance_group.py": ["False", "InstanceGroup", "InstanceGroupList", "LAZY_LOAD_FIELDS", "None", "True", "VERSION", "_get_main_instance_groups", "_instance_group_get_query", "_instance_group_members_add", "_instance_group_members_add_by_uuid", "_instance_group_model_add", "_instance_group_model_get_query", "_instance_group_policies_add", "already_existing", "api_db_groups", "api_models", "append_to_models", "attrname", "base", "classmethod", "cls", "compute_utils", "contains_eager", "context", "copy", "count", "current", "db", "db_api", "db_exc", "db_group", "db_inst", "db_item", "dict", "done", "exception", "exclude", "field", "fields", "filter_uuids", "filters", "getattr", "group", "group_id", "group_uuid", "grp", "grp_member", "hasattr", "hint", "id", "id_field", "ig", "ignore", "igs", "instance", "instance_group", "instance_models", "instance_uuid", "instance_uuids", "instances", "item", "item_models", "items", "joinedload", "len", "limit", "list", "main_db_groups", "main_groups", "main_models", "member", "members", "model", "model_class", "models", "name", "objects", "payload", "policies", "primitive", "project_id", "qry", "query", "self", "set", "skipcheck", "staticmethod", "target_version", "updates", "user_id", "uuid", "uuidutils", "values", "values_copy", "versionutils", "Save", "updates", "to", "this", "instance", "group.\nRefreshes", "the", "instance", "group.\nCount", "the", "number", "of", "instances", "in", "a", "group", "belonging", "to", "a", "user.", "NOTE(melwitt):", "The", "condition", "on", "the", "join", "limits", "the", "number", "of", "members\n", "returned", "to", "only", "those", "we", "wish", "to", "check", "as", "already", "existing.\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Use", "list/dict", "helpers", "for", "policies,", "metadetails,", "members\n", "Version", "1.3:", "Make", "uuid", "a", "non-None", "real", "string\n", "Version", "1.4:", "Add", "add_members()\n", "Version", "1.5:", "Add", "get_hosts()\n", "Version", "1.6:", "Add", "get_by_name()\n", "Version", "1.7:", "Deprecate", "metadetails\n", "Version", "1.8:", "Add", "count_members_by_user()\n", "Version", "1.9:", "Add", "get_by_instance_uuid()\n", "Version", "1.10:", "Add", "hosts", "field\n", "NOTE(danms):", "Before", "1.7,", "we", "had", "an", "always-empty\n", "metadetails", "property\n", "Most", "of", "the", "field", "names", "match", "right", "now,", "so", "be", "quick\n", "This", "is", "needed", "to", "handle", "db", "models", "from", "both", "the", "api\n", "database", "and", "the", "main", "database.", "In", "the", "migration", "to\n", "the", "api", "database,", "we", "have", "removed", "soft-delete,", "so\n", "the", "object", "fields", "for", "delete", "must", "be", "filled", "in", "with\n", "default", "values", "for", "db", "models", "from", "the", "api", "database.\n", "Delete", "policies", "and", "members\n", "NOTE(sbauza):", "Only", "hosts", "could", "be", "lazy-loaded", "right", "now\n", "NOTE(sbauza):", "We", "do", "NOT", "save", "the", "set", "of", "compute", "nodes", "that", "an\n", "instance", "group", "is", "connected", "to", "in", "this", "method.", "Instance", "groups", "are\n", "implicitly", "connected", "to", "compute", "nodes", "when", "the\n", "InstanceGroup.add_members()", "method", "is", "called,", "which", "adds", "the", "mapping\n", "table", "entries.\n", "So,", "since", "the", "only", "way", "to", "have", "hosts", "in", "the", "updates", "is", "to", "set", "that\n", "field", "explicitly,", "we", "prefer", "to", "raise", "an", "Exception", "so", "the", "developer\n", "knows", "he", "has", "to", "call", "obj_reset_changes(['hosts'])", "right", "after", "setting\n", "the", "field.\n", "NOTE(danms):", "This", "is", "just", "for", "the", "migration", "routine,", "and\n", "can", "be", "removed", "once", "we're", "no", "longer", "supporting", "the", "migration\n", "of", "instance", "groups", "from", "the", "main", "to", "api", "database.\n", "Version", "1.0:", "Initial", "version\n", "InstanceGroup", "<=", "version", "1.3\n", "Version", "1.1:", "InstanceGroup", "<=", "version", "1.4\n", "Version", "1.2:", "InstanceGroup", "<=", "version", "1.5\n", "Version", "1.3:", "InstanceGroup", "<=", "version", "1.6\n", "Version", "1.4:", "InstanceGroup", "<=", "version", "1.7\n", "Version", "1.5:", "InstanceGroup", "<=", "version", "1.8\n", "Version", "1.6:", "InstanceGroup", "<=", "version", "1.9\n", "Version", "1.7:", "InstanceGroup", "<=", "version", "1.10\n", "NOTE(melwitt):", "This", "might", "happen", "if", "there's", "a", "failure", "right", "after\n", "the", "InstanceGroup", "was", "created", "and", "the", "migration", "is", "re-run."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/availability_zone.py": ["parameter_types", "server_create", "server_create_v20"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_pci_passthrough_filters.py": ["AttributeError", "False", "None", "TestPCIPassthroughFilter", "True", "fakes", "host", "mock", "objects", "pci_passthrough_filter", "pci_stats_mock", "request", "requests", "self", "spec_obj", "stats", "super", "test"], "/Users/mehranhassani/repos/nova/nova/policies/simple_tenant_usage.py": ["POLICY_ROOT", "base", "policy", "simple_tenant_usage_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/test_sqlalchemy_migration.py": ["False", "None", "TestFlavorCheck", "TestNewtonCellsCheck", "TestNewtonCheck", "TestNullInstanceUuidScanDB", "TestOcataCheck", "True", "USES_DB_SELF", "UniqueConstraint", "_", "agg", "cell0", "cell1", "cell2", "cn", "consoles", "context", "database", "db_api", "db_utils", "db_version_calls", "engine", "engine_calls", "exc", "exception", "fake_record", "fixed_ips", "flavor", "group", "hostmapping", "importlib", "inst", "instances", "keypair", "metadata", "migrate_engine", "migration", "mock", "mock_db_version", "mock_downgrade", "mock_find_repo", "mock_get_engine", "mock_upgrade", "mock_version", "mock_version_control", "nova_fixtures", "objects", "record", "results", "self", "sqlalchemy", "super", "table", "table_name", "test", "uuidsentinel", "versioning_api", "versioning_exceptions", "NOTE(mriedem):", "Copied", "from", "the", "267", "database", "migration.\n", "When", "this", "test", "runs,", "we've", "already", "run", "the", "schema", "migration", "to", "make\n", "instances.uuid", "non-nullable,", "so", "we", "have", "to", "alter", "the", "table", "here\n", "so", "we", "can", "test", "against", "a", "real", "database.\n", "Now", "create", "fake", "entries", "in", "the", "fixed_ips,", "consoles", "and\n", "instances", "table", "where", "(instance_)uuid", "is", "None", "for", "testing.\n", "The", "fixed_ips", "table", "should", "be", "ignored.\n", "Now", "pick", "a", "random", "table", "with", "an", "instance_uuid", "column", "and", "show", "it's\n", "in", "the", "results", "but", "with", "0", "hits.\n", "Make", "sure", "nothing", "was", "deleted.\n", "The", "fixed_ips", "table", "should", "be", "ignored.\n", "Now", "pick", "a", "random", "table", "with", "an", "instance_uuid", "column", "and", "show", "it's\n", "in", "the", "results", "but", "with", "0", "hits.\n", "Make", "sure", "fixed_ips", "wasn't", "touched,", "but", "instances", "and", "instance_faults\n", "records", "were", "deleted."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/instancejobtracker.py": ["LOG", "None", "OSError", "_LE", "_LW", "__name__", "collections", "errno", "exc", "instance", "list", "logging", "object", "os", "pid", "pids_to_remove", "self", "signal", "uuid", "remove", "instance.uuid", "if", "no", "pid's", "remaining\n", "Try", "to", "kill", "the", "process\n", "Check", "if", "the", "process", "is", "still", "alive.\n", "The", "process", "is", "still", "around"], "/Users/mehranhassani/repos/nova/nova/quota.py": ["AbsoluteResource", "BaseResource", "CONF", "CountableResource", "Exception", "False", "LOG", "None", "QUOTAS", "QuotaEngine", "ReservableResource", "True", "UNLIMITED_VALUE", "_LE", "__name__", "_keypair_get_count_by_user", "_server_group_count_members_by_user", "_valid_method_call_check_resource", "_valid_method_call_check_resources", "all_quotas", "args", "class_quotas", "context", "count", "datetime", "db", "db_proj_quotas", "default_quotas", "defaults", "deltas", "desired", "dict", "driver", "elevated", "exception", "expire", "flag", "group", "has_sync", "hasattr", "headroom", "importutils", "int", "isinstance", "k", "key", "keys", "kwargs", "len", "limit", "logging", "max", "maximum", "method", "min", "minimum", "modified_quotas", "name", "nova", "object", "objects", "overs", "per_project_resources", "proj_quotas", "project_id", "project_quotas", "project_scoped", "project_usages", "property", "quota", "quota_class", "quota_driver_class", "quotas", "remains", "res", "res_name", "reservations", "resource", "resource_names", "resources", "self", "set", "settable_quotas", "setted_quotas", "six", "sorted", "sub_resources", "super", "sync", "sync_filt", "syncable_resources", "timeutils", "unders", "unknown", "usage", "usages", "user_id", "user_quotas", "user_scoped", "user_usages", "v", "v1", "v2", "val", "valid_method", "value", "values", "x", "Quotas", "for", "resources", "per", "project.\nGet", "a", "specific", "quota", "by", "project", "and", "user.\nGet", "a", "specific", "quota", "by", "project.\nGet", "a", "specific", "quota", "by", "quota", "class.\nGet", "a", "specific", "quota", "by", "project", "and", "user.\nGet", "a", "specific", "quota", "by", "project.\nGet", "a", "specific", "quota", "by", "quota", "class.\nDescribe", "a", "single", "resource", "for", "quota", "checking.\nReturn", "the", "default", "value", "of", "the", "quota.\nDescribe", "a", "reservable", "resource.\nDescribe", "a", "non-reservable", "resource.\nRepresent", "the", "set", "of", "recognized", "quotas.\nInitialize", "a", "Quota", "object.\nRegister", "a", "resource.\nRegister", "a", "list", "of", "resources.\nGet", "a", "specific", "quota", "by", "project", "and", "user.\nGet", "a", "specific", "quota", "by", "project.\nGet", "a", "specific", "quota", "by", "quota", "class.\nHelper", "method", "to", "avoid", "referencing", "objects.KeyPairList", "on", "import.\nHelper", "method", "to", "avoid", "referencing", "objects.InstanceGroup", "on", "import.\nA", "method", "to", "check", "whether", "the", "resource", "can", "use", "the", "quota", "method.", "Get", "the", "quotas", "for", "the", "appropriate", "class.", "If", "the", "project", "ID\n", "matches", "the", "one", "in", "the", "context,", "we", "use", "the", "quota_class", "from\n", "the", "context,", "otherwise,", "we", "use", "the", "provided", "quota_class", "(if\n", "any)\n", "Omit", "default/quota", "class", "values\n", "Include", "usages", "if", "desired.", "This", "is", "optional", "because", "one\n", "internal", "consumer", "of", "this", "interface", "wants", "to", "access", "the\n", "usages", "directly", "from", "inside", "a", "transaction.\n", "Initialize", "remains", "quotas.\n", "Use", "the", "project", "quota", "for", "default", "user", "quota.\n", "Resources", "are", "either", "project-scoped", "or", "user-scoped\n", "Filter", "resources\n", "Make", "sure", "we", "accounted", "for", "all", "of", "them...\n", "Grab", "and", "return", "the", "quotas", "(without", "usages)\n", "Grab", "and", "return", "the", "quotas", "(without", "usages)\n", "Ensure", "no", "value", "is", "less", "than", "zero\n", "If", "project_id", "is", "None,", "then", "we", "use", "the", "project_id", "in", "context\n", "If", "user", "id", "is", "None,", "then", "we", "use", "the", "user_id", "in", "context\n", "Get", "the", "applicable", "quotas\n", "Check", "the", "quotas", "and", "construct", "a", "list", "of", "the", "resources", "that\n", "would", "be", "put", "over", "limit", "by", "the", "desired", "values\n", "Set", "up", "the", "reservation", "expiration\n", "If", "project_id", "is", "None,", "then", "we", "use", "the", "project_id", "in", "context\n", "If", "user_id", "is", "None,", "then", "we", "use", "the", "project_id", "in", "context\n", "Get", "the", "applicable", "quotas.\n", "NOTE(Vek):", "We're", "not", "worried", "about", "races", "at", "this", "point.\n", "Yes,", "the", "admin", "may", "be", "in", "the", "process", "of", "reducing\n", "quotas,", "but", "that's", "a", "pretty", "rare", "thing.\n", "NOTE(Vek):", "Most", "of", "the", "work", "here", "has", "to", "be", "done", "in", "the", "DB\n", "API,", "because", "we", "have", "to", "do", "it", "in", "a", "transaction,\n", "which", "means", "access", "to", "the", "session.", "Since", "the\n", "session", "isn't", "available", "outside", "the", "DBAPI,", "we\n", "have", "to", "do", "the", "work", "there.\n", "If", "project_id", "is", "None,", "then", "we", "use", "the", "project_id", "in", "context\n", "If", "user_id", "is", "None,", "then", "we", "use", "the", "user_id", "in", "context\n", "If", "project_id", "is", "None,", "then", "we", "use", "the", "project_id", "in", "context\n", "If", "user_id", "is", "None,", "then", "we", "use", "the", "user_id", "in", "context\n", "We", "need", "an", "elevated", "context", "for", "the", "calls", "to\n", "quota_usage_update()\n", "Reset", "the", "usage", "to", "-1,", "which", "will", "force", "it", "to", "be\n", "refreshed\n", "That", "means", "it'll", "be", "refreshed", "anyway\n", "Unlimited\n", "Unlimited\n", "Unlimited\n", "Get", "the", "project", "ID\n", "Ditto", "for", "the", "quota", "class\n", "Look", "up", "the", "quota", "for", "the", "project\n", "Try", "for", "the", "quota", "class\n", "OK,", "return", "the", "default\n", "NOTE(mikal):", "special", "case", "for", "quota_networks,", "which", "is", "an", "API\n", "flag", "and", "not", "a", "quota", "flag\n", "Get", "the", "resource\n", "NOTE(Vek):", "Ignoring", "exceptions", "here", "is", "safe,", "because", "the\n", "usage", "resynchronization", "and", "the", "reservation", "expiration\n", "mechanisms", "will", "resolve", "the", "issue.", "The", "exception", "is\n", "logged,", "however,", "because", "this", "is", "less", "than", "optimal.\n", "NOTE(Vek):", "Ignoring", "exceptions", "here", "is", "safe,", "because", "the\n", "usage", "resynchronization", "and", "the", "reservation", "expiration\n", "mechanisms", "will", "resolve", "the", "issue.", "The", "exception", "is\n", "logged,", "however,", "because", "this", "is", "less", "than", "optimal."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_extra_specs_ops.py": ["False", "True", "assertion", "extra_specs_ops", "matches", "req", "self", "str", "test", "value", "values"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/rescue.py": ["False", "parameter_types", "rescue"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_mapper.py": ["Controller", "app", "fakes", "object", "openstack_api", "req", "resp", "self", "test", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_policy.py": ["policy_data"], "/Users/mehranhassani/repos/nova/nova/hacking/checks.py": ["BaseASTChecker", "CHECK_DESC", "CheckForStrUnicodeExc", "CheckForTransAdd", "CheckForUncalledTestClosure", "False", "None", "TRANS_FUNC", "True", "UNDERSCORE_IMPORT_FILES", "_FindVariableReferences", "_end_re", "_get_virt_name", "_re", "_start_re", "any", "api_version_re", "asse_equal_in_end_with_true_or_false_re", "asse_equal_in_start_with_true_or_false_re", "asse_equal_type_re", "asse_raises_regexp", "asse_true_false_with_in_or_not_in", "asse_true_false_with_in_or_not_in_spaces", "asse_trueinst_re", "assert_equal_in", "assert_equal_none", "assert_equal_type", "assert_raises_regexp", "assert_true_instance", "assert_true_or_false_with_in", "ast", "blank_before", "call_node", "capital_cfg_help", "cfg_opt_re", "cfg_re", "check_api_version_decorator", "check_config_option_in_central_place", "check_context_log", "check_delayed_string_interpolation", "check_doubled_words", "check_explicit_underscore_import", "check_greenthread_spawns", "check_http_not_implemented", "check_no_contextlib_nested", "check_policy_enforce", "check_policy_registration_in_central_place", "check_python3_no_iteritems", "check_python3_no_iterkeys", "check_python3_no_itervalues", "check_python3_xrange", "check_uuid4", "child_node", "closures", "conf_attribute_set_re", "conf_exceptions", "contextlib_nested", "custom_underscore_check", "data", "datetime_funcs", "decorator_re", "dict_constructor_with_list_copy", "dict_constructor_with_list_copy_re", "doubled_words_re", "driver", "error", "f", "filename", "find_references", "handler", "http_not_implemented_re", "import_no_db_in_virt", "import_no_virt_driver_config_deps", "import_no_virt_driver_import_deps", "import_translation_for_log_or_exception", "isinstance", "json_funcs", "len", "line_number", "lines", "log_remove_context", "log_string_interpolation", "log_translation", "log_translation_LW", "log_translation_exception", "log_translation_info", "logical_line", "m", "match", "message", "missed", "msg", "mutable_default_args", "names", "no_assert_equal_true_false", "no_assert_true_false_is_not", "no_db_session_in_public_api", "no_import_translation_in_tests", "no_log_warn", "no_mutable_default_args", "no_os_popen", "no_setting_conf_directly_in_tests", "no_translate_debug_logs", "no_vi_headers", "node", "os", "pep8", "physical_line", "policy_enforce_re", "pos", "previous_logical", "range", "re", "references", "regex", "register", "res", "rule_default_re", "self", "session_check", "set", "six", "spawn_re", "string_translation", "super", "t", "thatdriver", "thisdriver", "tokens", "translated_log", "tree", "txt", "underscore_import_check", "use_jsonutils", "use_timeutils_utcnow", "validate_log_translations", "vi_header_re", "virt_config_re", "virt_file_re", "virt_import_re", "Called", "automatically", "by", "pep8.\nAdd", "an", "error", "caused", "by", "a", "node", "to", "the", "list", "of", "errors", "for", "pep8.", "Excludes", "oslo.config", "OptGroup", "objects\n\\s+vim?:.+\")\n", "NOTE(snikitin):", "Next", "two", "regexes", "weren't", "united", "to", "one", "for", "more", "readability.\n", "asse_true_false_with_in_or_not_in", "regex", "checks\n", "assertTrue/False(A", "in", "B)", "cases", "where", "B", "argument", "has", "no", "spaces\n", "asse_true_false_with_in_or_not_in_spaces", "regex", "checks", "cases\n", "where", "B", "argument", "has", "spaces", "and", "starts/ends", "with", "[,", "',", "\".\n", "For", "example:", "[1,", "2,", "3],", "\"some", "string\",", "'another", "string'.\n", "We", "have", "to", "separate", "these", "regexes", "to", "escape", "a", "false", "positives\n", "results.", "B", "argument", "should", "have", "spaces", "only", "if", "it", "starts\n", "with", "[,", "\",", "'.", "Otherwise", "checking", "of", "string\n", "\"assertFalse(A", "in", "B", "and", "C", "in", "D)\"", "will", "be", "false", "positives.\n", "In", "this", "case", "B", "argument", "is", "\"B", "and", "C", "in", "D\".\n", "We", "need", "this", "for", "cases", "where", "they", "have", "created", "their", "own", "_", "function.\n", "tools", "are", "OK", "to", "use", "the", "standard", "datetime", "module\n", "Ignore", "things", "we", "mis-detect", "as", "virt", "drivers", "in", "the", "regex\n", "NOTE(gilliard):", "line_number", "is", "1-indexed\nLog_Translation\n", "Translations", "are", "not", "required", "in", "the", "test", "directory\n", "and", "the", "Xen", "utilities\n", "Build", "a", "list", "of", "the", "files", "that", "have", "_", "imported.", "No", "further\n", "checking", "needed", "once", "it", "is", "found.\n", "the", "code", "below", "that", "path", "is", "not", "meant", "to", "be", "executed", "from", "neutron\n", "tree", "where", "jsonutils", "module", "is", "present,", "so", "don't", "enforce", "its", "usage\n", "for", "this", "subdirectory\n", "tools", "are", "OK", "to", "use", "the", "standard", "json", "module\n", "Python", "2", "produces", "ast.TryExcept", "and", "ast.TryFinally", "nodes,", "but", "Python", "3\n", "only", "produces", "ast.Try", "nodes.\n", "This", "means", "the", "value", "of", "a", "variable", "was", "loaded.", "For", "example", "a\n", "variable", "'foo'", "was", "used", "like:\n", "mocked_thing.bar", "=", "foo\n", "foo()\n", "self.assertRaises(exception,", "foo)\n", "Test", "things\n", "self._filename", "is", "'stdin'", "in", "the", "unit", "test", "for", "this", "check.\n", "Walk", "just", "the", "direct", "nodes", "of", "the", "test", "method\n", "Walk", "all", "nodes", "to", "find", "references\ncontextlib.nested", "for", "\"\n", "That's", "the", "correct", "location\n", "(macsz)", "All", "config", "options", "(with", "exceptions", "that", "are", "clarified\n", "in", "the", "list", "below)", "were", "moved", "to", "the", "central", "place.", "List", "below", "is", "for\n", "all", "options", "that", "were", "impossible", "to", "move", "without", "doing", "a", "major", "impact\n", "on", "code.", "Add", "full", "path", "to", "a", "module", "or", "folder.\n", "CLI", "opts", "are", "allowed", "to", "be", "outside", "of", "nova/conf", "directory\n", "config", "options", "should", "not", "be", "declared", "in", "tests,", "but", "there", "is\n", "another", "checker", "for", "it", "(N320)\n", "This", "is", "where", "registration", "should", "happen\n", "A", "couple", "of", "policy", "tests", "register", "rules"], "/Users/mehranhassani/repos/nova/nova/network/api.py": ["API", "CONF", "False", "LOG", "None", "NotImplementedError", "True", "_LI", "__name__", "address", "addresses", "affect_auto_assigned", "args", "availability_zone", "base_api", "bind_host_id", "cfg", "context", "dhcp_options", "dict", "dns_type", "domain", "exception", "fixed", "fixed_address", "fixed_ip", "fixed_ips", "flavor", "floating", "floating_address", "floating_ip", "floating_ips", "helper", "host", "id", "instance", "isinstance", "kwargs", "logging", "mac_address", "macs", "migration", "msg", "msg_dict", "multi_host", "name", "network", "network_id", "network_model", "network_rpcapi", "network_uuid", "num_instances", "nw_info", "obj_base", "objects", "orig_instance", "orig_instance_uuid", "pci_requests", "pool", "port_id", "project", "project_id", "project_only", "requested_ip", "requested_networks", "security_groups", "self", "staticmethod", "strutils", "super", "teardown", "utils", "vif", "vifs", "vpn", "Adds", "(allocates)", "a", "floating", "IP", "to", "a", "project", "from", "a", "pool.\nRemoves", "(deallocates)", "a", "floating", "IP", "with", "address", "from", "a", "project.\nDisassociates", "a", "floating", "IP", "from", "fixed", "IP", "it", "is", "associated", "with.\nDeallocates", "all", "network", "structures", "related", "to", "instance.\nAdds", "a", "fixed", "IP", "to", "instance", "from", "specified", "network.\nRemoves", "a", "fixed", "IP", "from", "instance", "from", "specified", "network.\nForce", "adds", "another", "network", "to", "a", "project.\nAssociate", "or", "disassociate", "host", "or", "project", "to", "network.\nReturns", "all", "network", "info", "related", "to", "an", "instance.\nReturns", "all", "network", "info", "related", "to", "an", "instance.\nCreate", "specified", "DNS", "entry", "for", "address.\nCreate", "specified", "DNS", "entry", "for", "address.\nDelete", "the", "specified", "dns", "entry.\nDelete", "the", "specified", "dns", "domain.\nGet", "entries", "for", "address", "and", "domain.\nGet", "entries", "for", "name", "and", "domain.\nCreate", "a", "private", "DNS", "domain", "with", "nova", "availability", "zone.\nCreate", "a", "public", "DNS", "domain", "with", "optional", "nova", "project.\nStart", "to", "migrate", "the", "network", "of", "an", "instance.\nFinish", "migrating", "the", "network", "of", "an", "instance.\nSetup", "network", "for", "specified", "instance", "on", "host.\nCleanup", "network", "for", "specified", "instance", "on", "host.", "NOTE(vish):", "this", "local", "version", "of", "floating_manager", "has", "to", "convert\n", "ClientExceptions", "back", "since", "they", "aren't", "going", "over", "rpc.\n", "release", "ip", "from", "project\n", "purge", "cached", "nw", "info", "for", "the", "original", "instance\n", "NOTE(vish):", "We", "can't", "do", "the", "floating", "ip", "allocation", "here", "because\n", "this", "is", "called", "from", "compute.manager", "which", "shouldn't\n", "have", "db", "access", "so", "we", "do", "it", "on", "the", "other", "side", "of", "the\n", "rpc.\n", "Check", "to", "see", "if", "we're", "asked", "to", "'auto'", "allocate", "networks", "because", "if\n", "so", "we", "need", "to", "just", "null", "out", "the", "requested_networks", "value", "so", "the\n", "network", "manager", "doesn't", "try", "to", "get", "networks", "with", "uuid", "'auto'", "which\n", "doesn't", "exist.\n", "check", "to", "see", "if", "nothing", "was", "allocated", "and", "we", "were", "requested", "to\n", "auto-allocate\n", "NOTE(vish):", "We", "can't", "do", "the", "floating", "ip", "deallocation", "here", "because\n", "this", "is", "called", "from", "compute.manager", "which", "shouldn't\n", "have", "db", "access", "so", "we", "do", "it", "on", "the", "other", "side", "of", "the\n", "rpc.\n", "In", "the", "case", "of", "'auto'", "allocation", "for", "networks,", "just", "pass", "None", "for\n", "requested_networks", "since", "'auto'", "isn't", "an", "actual", "network.\n", "NOTE(danms):", "Here", "for", "neutron", "compatibility\n", "NOTE(danms):", "Here", "for", "neutron", "compatibility\n", "NOTE(danms):", "Here", "for", "neutron", "compatibility\n", "NOTE(danms):", "Here", "for", "neutron", "compatibility\n", "Neutron", "validation", "checks", "and", "returns", "how", "many", "of", "num_instances\n", "instances", "can", "be", "supported", "by", "the", "quota.", "For", "Nova", "network\n", "this", "is", "part", "of", "the", "subsequent", "quota", "check,", "so", "we", "just", "return\n", "the", "requested", "number", "in", "this", "case.\n", "This", "is", "NOOP", "for", "Nova", "network", "since", "it", "doesn't", "support", "SR-IOV.\n", "NOTE(tr3buchet):", "host", "is", "passed", "in", "cases", "where", "we", "need", "to", "setup\n", "or", "teardown", "the", "networks", "on", "a", "host", "which", "has", "been", "migrated", "to/from\n", "and", "instance.host", "is", "not", "yet", "or", "is", "no", "longer", "equal", "to"], "/Users/mehranhassani/repos/nova/nova/wsgi.py": ["Application", "CONF", "EnvironmentError", "Exception", "False", "LOG", "LookupError", "Middleware", "None", "NotImplementedError", "Request", "RuntimeError", "True", "_", "_LE", "_LI", "__name__", "_factory", "app", "app_iter", "application", "args", "backlog", "bind_addr", "ca_file", "cert_file", "classmethod", "cls", "config_path", "default_pool_size", "deploy", "dup_socket", "environ", "eventlet", "exception", "excutils", "family", "global_config", "greenlet", "hasattr", "host", "info", "key", "key_file", "kwargs", "local_config", "logging", "mapper", "match", "max_url_len", "name", "nova", "object", "os", "part", "pool_size", "port", "print", "protocol", "req", "resp", "response", "routes", "scheme", "self", "service", "six", "socket", "ssl", "ssl_kwargs", "start_response", "staticmethod", "super", "sys", "use_ssl", "utils", "value", "webob", "wsgi_kwargs", "Utility", "methods", "for", "working", "with", "WSGI", "servers.\nServer", "class", "to", "manage", "a", "WSGI", "server,", "serving", "a", "WSGI", "application.\nBase", "WSGI", "application", "wrapper.", "Subclasses", "need", "to", "implement", "__call__.\nDo", "whatever", "you'd", "like", "to", "the", "response.\nIterator", "that", "prints", "the", "contents", "of", "a", "wrapper", "string.\nWSGI", "middleware", "that", "maps", "incoming", "requests", "to", "WSGI", "apps.\nUsed", "to", "load", "WSGI", "applications", "from", "paste", "configurations.", "Allow", "operators", "to", "customize", "http", "requests", "max", "header", "line", "size.\n", "TODO(dims):", "eventlet's", "green", "dns/socket", "module", "does", "not", "actually\n", "support", "IPv6", "in", "getaddrinfo().", "We", "need", "to", "get", "around", "this", "in", "the\n", "future", "or", "monitor", "upstream", "for", "a", "fix\n", "The", "server", "socket", "object", "will", "be", "closed", "after", "server", "exits,\n", "but", "the", "underlying", "file", "descriptor", "will", "remain", "open,", "and", "will\n", "give", "bad", "file", "descriptor", "error.", "So", "duplicating", "the", "socket", "object,\n", "to", "keep", "file", "descriptor", "usable.\n", "sockets", "can", "hang", "around", "forever", "without", "keepalive\n", "This", "option", "isn't", "available", "in", "the", "OS", "X", "version", "of", "eventlet\n", "Resize", "pool", "to", "stop", "new", "requests", "from", "being", "processed\n", "Any", "of", "the", "following", "objects", "work", "as", "responses:\n", "Option", "1:", "simple", "string\n", "Option", "2:", "a", "nicely", "formatted", "HTTP", "exception", "page\n", "Option", "3:", "a", "webob", "Response", "object", "(in", "case", "you", "need", "to", "play", "with\n", "headers,", "or", "you", "want", "to", "be", "treated", "like", "an", "iterable,", "or", "...)\n", "Option", "4:", "any", "wsgi", "app", "to", "be", "run", "next\n", "Option", "5:", "you", "can", "get", "a", "Response", "object", "for", "a", "wsgi", "app,", "too,", "to\n", "play", "with", "headers", "etc\n", "You", "can", "then", "just", "return", "your", "response...\n", "...", "or", "set", "req.response", "and", "return", "None.\n", "Explicit", "mapping", "of", "one", "route", "to", "a", "controller+action\n", "Actions", "are", "all", "implicitly", "defined\n", "Pointing", "to", "an", "arbitrary", "WSGI", "app.", "You", "can", "specify", "the\n", "{path_info:.*}", "parameter", "so", "the", "target", "app", "can", "be", "handed", "just", "that\n", "section", "of", "the", "URL."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_state_manager.py": ["FAKE_COMPUTES", "FAKE_COMPUTES_N_TO_ONE", "FAKE_ITYPES", "FAKE_SERVICES", "FakeCellStateManager", "False", "None", "TestCellStateManagerDB", "TestCellsGetCapacity", "TestCellsStateManager", "TestCellsStateManagerNToOne", "TestCellsStateManagerNodeDown", "True", "_create_fake_node", "_fake_cell_get_all", "_fake_compute_node_get_all", "_fake_compute_node_n_to_one_get_all", "_fake_instance_type_all", "_fake_service_get_all_by_binary", "_fake_service_get_all_by_binary_nodedown", "_node", "_service", "_type", "args", "binary", "cap", "capacities", "cell", "cell_free_disk", "cell_free_ram", "cfg", "classmethod", "cls", "compute", "context", "datetime", "db_exc", "dict", "e", "eph", "exception", "fake", "force", "free_disk", "free_mem", "host", "inst", "kwargs", "last_seen", "manager", "max", "mem", "mock", "mock_find_file", "mock_read_cached_file", "mock_sleep", "models", "my_state", "noupdate_sec", "now", "object", "objects", "other_cell", "reserve_percent", "result", "root", "self", "six", "state", "state_manager", "str", "sum", "super", "sz", "test", "time", "timeutils", "total_disk", "total_mem", "units", "utils", "wrapper", "NOTE(alaski):", "It's", "important", "to", "have", "multiple", "types", "that", "end", "up", "having", "the\n", "same", "memory", "and", "disk", "requirements.", "So", "two", "types", "need", "the", "same", "first", "value,\n", "and", "two", "need", "the", "second", "and", "third", "values", "to", "add", "up", "to", "the", "same", "thing.\n", "utilize", "entire", "cell\n", "4", "on", "host", "3,", "1", "on", "host4\n", "reserve", "the", "entire", "cell.", "(utilize", "zero", "percent)\n", "utilize", "half", "the", "cell's", "free", "capacity\n", "10", "from", "host", "3\n", "2", "on", "host", "3\n", "utilize", "half", "the", "cell's", "free", "capacity\n", "6", "from", "host", "2\n", "1", "on", "host", "2"], "/Users/mehranhassani/repos/nova/nova/conf/wsgi.py": ["ALL_OPTS", "True", "cfg", "conf", "wsgi_group", "TODO(sfinucan):", "It", "is", "not", "possible", "to", "rename", "this", "to", "'log_format'\n", "yet,", "as", "doing", "so", "would", "cause", "a", "conflict", "if", "'[DEFAULT]", "log_format'\n", "were", "used.", "When", "'deprecated_group'", "is", "removed", "after", "Ocata,", "this\n", "should", "be", "changed."], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/config_file.py": ["XenAPIPlugin", "__name__", "args", "config_file", "config_key", "get_val", "len", "line", "open", "session", "split", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/269_add_numa_node_column.py": ["Column", "Integer", "MetaData", "None", "Table", "True", "hasattr", "meta", "migrate_engine", "numa_node", "pci_devices", "shadow_pci_devices", "\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html\n", "Add", "a", "new", "column", "to", "store", "PCI", "device", "numa", "node"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/common.py": ["False", "None", "True", "actual", "base_url", "body", "compare_tree_to_dict", "data", "elem", "expected", "jsonutils", "key", "keys", "method", "req", "url", "web_request", "webob", "zip", "Factory", "for", "removing", "duplicate", "webob", "code", "from", "tests.\nCompare", "xml", "atom", "links.\nCompare", "xml", "media", "types.\nCompare", "parts", "of", "lxml.etree", "objects", "to", "dicts."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_filter_scheduler.py": ["None", "_fake_weigh_objects", "_self", "consumed_hosts", "dests", "dict", "driver_cls", "e", "exception", "expected", "fake_get_filtered_hosts", "fakes", "filter_properties", "filter_scheduler", "functions", "host", "host_manager", "host_state", "hosts", "index", "len", "list", "mock", "mock_by_host", "mock_cn_get_all", "mock_get_all", "mock_get_by_binary", "mock_get_extra", "mock_get_hosts", "mock_get_inst_info", "mock_info", "mock_schedule", "node", "objects", "options", "retry", "scheduler_utils", "selected_hosts", "selected_nodes", "self", "spec_obj", "test_scheduler", "this_weight", "uuids", "weighed_host", "weighed_hosts", "weights", "Test", "case", "for", "Filter", "Scheduler.\nMake", "sure", "the", "host_subset_size", "property", "works", "properly.", "noqa\n", "Test", "addition", "of", "certain", "filter", "props", "after", "a", "node", "is", "selected.\n", "one", "host", "should", "be", "chosen\n", "one", "host", "should", "be", "chosen\n", "one", "host", "should", "be", "chosen\n", "Tests", "that", "we", "have", "fewer", "hosts", "available", "than", "number", "of", "instances\n", "requested", "to", "build.\n", "Make", "sure", "that", "we", "provided", "a", "reason", "why", "NoValidHost.\n", "Make", "sure", "that", "the", "consumed", "hosts", "have", "chance", "to", "be", "reverted."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_scheduler.py": ["CONF", "CellsSchedulerTestCase", "FakeFilterClass1", "FakeFilterClass2", "FakeWeightClass1", "FakeWeightClass2", "False", "None", "True", "_ctxt", "_fake_instance_update_at_top", "_secs", "bdms", "block_device", "block_device_mapping", "build_inst_kwargs", "call_info", "cells", "child_cells", "cls_names", "context", "copy", "count", "ctxt", "db", "enumerate", "exception", "expected_filt_props", "fake_block_device", "fake_build_request_spec", "fake_create_instances_here", "fake_get_filtered_objs", "fake_get_weighed_objs", "fake_grab_target_cells", "fake_instance_save", "fake_instance_update_at_top", "fake_rpc_build_instances", "fake_sleep", "fakes", "filt_properties", "filter_classes", "filter_properties", "filters", "host_sched_kwargs", "id", "image", "inst", "inst_type", "instance", "instance_properties", "instance_props", "instance_type", "instance_uuid", "instance_uuids", "instances", "len", "meta", "method_kwargs", "mock", "mock_bdm_validate", "mock_create_db", "mock_func", "mock_update", "msg_runner_build_instances", "nova", "obj", "objects", "orig_fn", "our_cell_info", "our_path", "range", "request_spec", "security_groups", "self", "self_cs", "self_mr", "super", "sys_meta", "target_cell", "test", "utils", "uuid", "uuidsentinel", "uuidutils", "values", "vm_states", "weighers", "weight_properties", "weights", "x", "Test", "case", "for", "CellsScheduler", "class.", "Just", "grab", "the", "first", "instance", "type\n", "Test", "these", "as", "lists\n", "NOTE(danms):", "Make", "sure", "that", "only", "the", "expected", "properties\n", "are", "applied", "to", "the", "instance", "object.", "The", "complex", "ones", "that\n", "would", "have", "been", "mangled", "over", "RPC", "should", "be", "removed.\n", "Make", "sure", "there's", "no", "capacity", "info", "so", "we're", "sure", "to\n", "select", "a", "child", "cell\n", "This", "gets", "called", "twice.", "Once", "for", "our", "running", "it\n", "in", "this", "cell..", "and", "then", "it'll", "get", "called", "when", "the\n", "child", "cell", "is", "picked.", "So,", "first", "time..", "just", "run", "it\n", "like", "normal.\n", "Make", "sure", "there's", "no", "child", "cells", "so", "that", "we", "will", "be\n", "selected\n", "Shouldn't", "retry\n", "if", "a", "filter", "handles", "scheduling,", "short", "circuit\n", "Re-init", "our", "fakes", "with", "some", "filters.\n", "Make", "sure", "there's", "no", "child", "cells", "so", "that", "we", "will", "be\n", "selected.", "Makes", "stubbing", "easier.\n", "Our", "cell", "was", "selected.\n", "Filter", "args", "are", "correct\n", "Re-init", "our", "fakes", "with", "some", "filters.\n", "Make", "sure", "there's", "no", "child", "cells", "so", "that", "we", "will", "be\n", "selected.", "Makes", "stubbing", "easier.\n", "Should", "not", "be", "called\n", "Should", "cause", "scheduling", "to", "be", "skipped.", "Means", "that", "the\n", "filter", "did", "it.\n", "Re-init", "our", "fakes", "with", "some", "filters.\n", "Make", "sure", "there's", "no", "child", "cells", "so", "that", "we", "will", "be\n", "selected.", "Makes", "stubbing", "easier.\n", "Our", "cell", "was", "selected.\n", "Weight", "args", "are", "correct"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/276_vcpu_model.py": ["BASE_TABLE_NAME", "Column", "MetaData", "NEW_COLUMN_NAME", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_availability_zone.py": ["ExtendedAvailabilityZoneTestV21", "None", "UUID1", "UUID2", "UUID3", "args", "availability_zones", "az", "base_url", "body", "content_type", "context", "db_list", "enumerate", "exception", "fake_compute_get", "fake_compute_get_all", "fake_compute_get_az", "fake_compute_get_empty", "fake_get_host_availability_zone", "fake_get_no_host_availability_zone", "fake_instance", "fakes", "fields", "host", "i", "inst", "inst1", "inst2", "instance_obj", "jsonutils", "objects", "prefix", "req", "res", "return_server", "self", "server", "super", "test", "url", "vm_states"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/config.py": ["False", "LibvirtConfigCPU", "LibvirtConfigCPUFeature", "LibvirtConfigCaps", "LibvirtConfigCapsGuest", "LibvirtConfigCapsHost", "LibvirtConfigCapsNUMACPU", "LibvirtConfigCapsNUMACell", "LibvirtConfigCapsNUMAPages", "LibvirtConfigCapsNUMATopology", "LibvirtConfigGuest", "LibvirtConfigGuestCPU", "LibvirtConfigGuestCPUFeature", "LibvirtConfigGuestCPUNUMA", "LibvirtConfigGuestCPUNUMACell", "LibvirtConfigGuestCPUTune", "LibvirtConfigGuestCPUTuneEmulatorPin", "LibvirtConfigGuestCPUTuneVCPUPin", "LibvirtConfigGuestCPUTuneVCPUSched", "LibvirtConfigGuestChannel", "LibvirtConfigGuestChar", "LibvirtConfigGuestCharBase", "LibvirtConfigGuestCharDeviceLog", "LibvirtConfigGuestClock", "LibvirtConfigGuestConsole", "LibvirtConfigGuestController", "LibvirtConfigGuestDevice", "LibvirtConfigGuestDeviceAddress", "LibvirtConfigGuestDeviceAddressDrive", "LibvirtConfigGuestDeviceAddressPCI", "LibvirtConfigGuestDisk", "LibvirtConfigGuestDiskBackingStore", "LibvirtConfigGuestFeature", "LibvirtConfigGuestFeatureACPI", "LibvirtConfigGuestFeatureAPIC", "LibvirtConfigGuestFeatureHyperV", "LibvirtConfigGuestFeaturePAE", "LibvirtConfigGuestFilesys", "LibvirtConfigGuestGIDMap", "LibvirtConfigGuestGraphics", "LibvirtConfigGuestHostdev", "LibvirtConfigGuestHostdevPCI", "LibvirtConfigGuestIDMap", "LibvirtConfigGuestInput", "LibvirtConfigGuestInterface", "LibvirtConfigGuestMemoryBacking", "LibvirtConfigGuestMemoryBackingPage", "LibvirtConfigGuestMemoryTune", "LibvirtConfigGuestMetaNovaFlavor", "LibvirtConfigGuestMetaNovaInstance", "LibvirtConfigGuestMetaNovaOwner", "LibvirtConfigGuestNUMATune", "LibvirtConfigGuestNUMATuneMemNode", "LibvirtConfigGuestNUMATuneMemory", "LibvirtConfigGuestRng", "LibvirtConfigGuestSMBIOS", "LibvirtConfigGuestSerial", "LibvirtConfigGuestSnapshot", "LibvirtConfigGuestSnapshotDisk", "LibvirtConfigGuestSysinfo", "LibvirtConfigGuestTimer", "LibvirtConfigGuestUIDMap", "LibvirtConfigGuestVideo", "LibvirtConfigGuestWatchdog", "LibvirtConfigMemoryBalloon", "LibvirtConfigNodeDevice", "LibvirtConfigNodeDevicePciCap", "LibvirtConfigNodeDevicePciSubFunctionCap", "LibvirtConfigObject", "LibvirtConfigSeclabel", "LibvirtConfigSecret", "MIN_SPINLOCK_RETRIES", "NOVA_NS", "None", "True", "_", "addr_elem", "addr_type", "address", "arch", "auth", "b", "backend", "bandwidth", "bios", "blockio", "boot_dev", "bus", "c", "c2", "caps", "cell", "cells", "child", "childs", "clk", "controller", "cpu", "cpus", "d", "dev", "devices", "dict", "disk", "disks", "domain", "drv", "drv_elem", "dt", "dte", "etree", "event", "exception", "f", "feat", "features", "filter", "ft", "func", "funcap", "g", "guest", "hardware", "hash", "host", "hosts_info", "hugepages", "idmap", "idmaps", "int", "iotune", "item", "k", "key", "kwargs", "len", "list", "loader", "log", "m", "map", "mem", "meta", "metadata", "model", "msg", "name", "node", "node_name", "numa", "obj", "object", "os", "p", "page", "pages", "param", "pci_utils", "pcicap", "pe", "perfs", "pkg", "port", "pretty_print", "project", "rate", "root", "sc", "sched", "seclabel", "self", "set", "six", "slot", "smbios", "sorted", "source", "source_elem", "ss", "staticmethod", "str", "sub", "super", "sysinfo", "system", "tag_elem", "target", "time", "timestr", "tm", "top", "topo", "type", "type_node", "units", "usage", "user", "v", "value", "vcpu", "vif_inbound", "vif_outbound", "vlan_elem", "vport", "x", "xml_str", "xmlcell", "xmlcells", "xmldoc", "xmlstr", "zip", "Represents", "a", "sub-element", "to", "a", "character", "device.\nLibvirt", "Node", "Devices", "parser.\nLibvirt", "Node", "Devices", "pci", "capability", "parser.", "Namespace", "to", "use", "for", "Nova", "specific", "metadata", "items", "in", "XML\n", "sorting", "the", "features", "to", "allow", "more", "predictable", "tests\n", "Block", "size", "tuning\n", "strip", "the", "0x", "prefix", "on", "each", "attribute", "since\n", "format_dom", "puts", "them", "back", "on", "-", "note", "that\n", "LibvirtConfigGuestHostdevPCI", "does", "not", "do", "this...\n", "NOTE(mriedem):", "The", "vlan", "element", "can", "have", "multiple", "tag\n", "sub-elements", "but", "we're", "currently", "only", "storing", "a", "single", "tag\n", "id", "in", "the", "vlan", "attribute.\n", "Note", "that", "only", "average", "is", "mandatory,", "burst", "and", "peak", "are\n", "optional", "(and", "all", "are", "ints).\n", "QEMU", "requires", "at", "least", "this", "value", "to", "be", "set\n", "Generate", "XML", "nodes", "for", "UEFI", "boot.\n", "Note:", "This", "cover", "only", "for:", "LibvirtConfigGuestDisks\n", "LibvirtConfigGuestHostdevPCI\n", "LibvirtConfigGuestInterface\n", "LibvirtConfigGuestUidMap\n", "LibvirtConfigGuestGidMap\n", "LibvirtConfigGuestCPU\n", "list", "of", "tuple", "(domain,bus,slot,function)"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/json_filter.py": ["False", "None", "True", "_and", "_equals", "_greater_than", "_greater_than_equal", "_in", "_less_than", "_less_than_equal", "_not", "_or", "all", "any", "arg", "args", "bad", "bool", "cmd", "commands", "cooked_args", "filters", "getattr", "host_state", "isinstance", "item", "jsonutils", "len", "list", "method", "obj", "op", "operator", "path", "query", "result", "self", "six", "spec_obj", "string", "First", "term", "is", "==", "all", "the", "other", "terms.\nFirst", "term", "is", "<", "all", "the", "other", "terms.\nFirst", "term", "is", ">", "all", "the", "other", "terms.\nFirst", "term", "is", "in", "set", "of", "remaining", "terms.\nFirst", "term", "is", "<=", "all", "the", "other", "terms.\nFirst", "term", "is", ">=", "all", "the", "other", "terms.\nFlip", "each", "of", "the", "arguments.\nTrue", "if", "any", "arg", "is", "True.\nTrue", "if", "all", "args", "are", "True.\nRecursively", "parse", "the", "query", "structure.", "NOTE(comstud):", "Not", "checking", "capabilities", "or", "service", "for\n", "enabled/disabled", "so", "that", "a", "provided", "json", "filter", "can", "decide\n", "If", "any", "succeeded,", "include", "the", "host\n", "Filter", "it", "out."], "/Users/mehranhassani/repos/nova/nova/api/openstack/wsgi.py": ["API_VERSION_REQUEST_HEADER", "ActionDispatcher", "AttributeError", "Controller", "ControllerMetaclass", "DEFAULT_API_VERSION", "ENV_LEGACY_V2", "False", "Fault", "IndexError", "JSONDeserializer", "JSONDictSerializer", "KeyError", "LEGACY_API_VERSION_REQUEST_HEADER", "LOG", "None", "NotImplementedError", "Request", "Resource", "ResourceExceptionHandler", "ResponseObject", "True", "TypeError", "VER_METHOD_ATTR", "ValueError", "_", "_LE", "_LI", "_METHODS_WITH_BODY", "_ROUTES_METHODS", "_SUPPORTED_CONTENT_TYPES", "__name__", "_fault_names", "_meth", "_view_builder_class", "accept", "action", "action_args", "action_method", "action_name", "action_peek", "action_result", "actions", "api_version", "args", "base", "bases", "body", "callable", "classmethod", "cls", "cls_dict", "code", "compare", "compute_node", "compute_nodes", "content_type", "contents", "context", "controller", "counter", "d", "data", "datastring", "db_items", "decoded", "decorator", "delattr", "dict", "e", "encodeutils", "entity_name", "ex", "ex_traceback", "ex_type", "ex_value", "exc_info", "exception", "explanation", "ext", "extension", "extensions", "f", "fault_data", "fault_name", "flavor", "flavorid", "flavors", "func", "func_dict", "func_list", "func_name", "functools", "get_supported_content_types", "getattr", "hasattr", "hdr", "hdr_string", "headers", "i18n", "id", "inherits", "instance", "instance_uuid", "instances", "is_dict", "is_intersect", "isinstance", "item", "item_get", "item_key", "items", "jsonutils", "key", "kwargs", "len", "list", "logging", "max_ver", "mcs", "meth", "method", "method_name", "microversion_parse", "min_ver", "msg", "name", "new_func", "obj", "obj_max_ver", "obj_min_ver", "object", "p", "pairs", "parent_ext", "parts", "possible_type", "project_id", "property", "req", "request", "request_environment", "resp_obj", "response", "retry", "self", "serializer", "setattr", "six", "staticmethod", "str", "strutils", "super", "support_api_request_version", "type", "user_locale", "utils", "val", "value", "ver", "version_meth_dict", "version_select", "versioned_method", "versioned_methods", "view_builder", "webob", "wsgi", "x", "Add", "some", "OpenStack", "API-specific", "logic", "to", "the", "base", "webob.Request.\nDetermine", "the", "requested", "response", "content-type.\nSet", "API", "version", "request", "based", "on", "the", "request", "header", "information.\nMaps", "method", "name", "to", "local", "methods", "through", "action", "name.\nFind", "and", "call", "local", "method.\nDefault", "JSON", "request", "body", "serialization.\nBuilds", "a", "response", "object.\nRetrieves", "a", "header", "with", "the", "given", "name.\nSets", "a", "header", "with", "the", "given", "name", "to", "the", "given", "value.\nDeletes", "the", "header", "with", "the", "given", "name.\nRetrieve", "the", "response", "status.\nRetrieve", "the", "headers.\nRegisters", "controller", "actions", "with", "this", "resource.\nRegisters", "controller", "extensions", "with", "this", "resource.\nParse", "dictionary", "created", "by", "routes", "library.\nWSGI", "method", "that", "controls", "(de)serialization", "and", "method", "dispatch.\nImplement", "the", "processing", "stack.\nLook", "up", "the", "action-specific", "method", "and", "its", "extensions.\nDispatch", "a", "call", "to", "the", "action-specific", "method.\nAdds", "the", "wsgi_actions", "dictionary", "to", "the", "class.\nDefault", "controller.\nInitialize", "controller", "with", "a", "view", "builder", "instance.\nWrap", "webob.exc.HTTPException", "to", "provide", "API", "friendly", "response.\nCreate", "a", "Fault", "for", "the", "given", "webob.exc.exception.\nGenerate", "a", "WSGI", "response", "based", "on", "the", "exception", "passed", "to", "ctor.", "These", "are", "typically", "automatically", "created", "by", "routes", "as", "either", "defaults\n", "collection", "or", "member", "methods.\n", "The", "default", "api", "version", "request", "if", "none", "is", "requested", "in", "the", "headers\n", "Note(cyeoh):", "This", "only", "applies", "for", "the", "v2.1", "API", "once", "microversions\n", "support", "is", "fully", "merged.", "It", "does", "not", "affect", "the", "V2", "API.\n", "name", "of", "attribute", "to", "keep", "version", "method", "information\n", "Names", "of", "headers", "used", "by", "clients", "to", "request", "a", "specific", "version\n", "of", "the", "REST", "API\n", "NOTE(rlrossit):", "This", "function", "allows", "a", "get", "on", "both", "a", "dict-like", "and", "an\n", "object-like", "object.", "cache_db_items()", "is", "used", "on", "both", "versioned", "objects", "and\n", "dicts,", "so", "the", "function", "can't", "be", "totally", "changed", "over", "to", "[]", "syntax,", "nor\n", "can", "it", "be", "changed", "over", "to", "use", "getattr().\n", "Calculate", "the", "best", "MIME", "type\n", "Check", "URL", "path", "suffix\n", "NOTE(markmc):", "text/plain", "is", "the", "default", "for", "eventlet", "and\n", "other", "webservers", "which", "use", "mimetools.Message.gettype()\n", "whereas", "twisted", "defaults", "to", "''.\n", "'latest'", "is", "a", "special", "keyword", "which", "is", "equivalent", "to\n", "requesting", "the", "maximum", "version", "of", "the", "API", "supported\n", "Check", "that", "the", "version", "requested", "is", "within", "the", "global\n", "minimum/maximum", "of", "supported", "API", "versions\n", "NOTE(andreykurilin):", "we", "need", "to", "encode", "'Content-Length'", "header,\n", "since", "webob.Response", "auto", "sets", "it", "if", "\"body\"", "attr", "is", "presented.\n", "https://github.com/Pylons/webob/blob/1.5.0b0/webob/response.py#L147\n", "Make", "sure", "there's", "exactly", "one", "key...\n", "Return", "the", "action", "name\n", "We", "didn't", "handle", "the", "exception\n", "Copy", "over", "the", "actions", "dictionary\n", "Save", "a", "mapping", "of", "extensions\n", "Look", "up", "the", "extending", "method\n", "Extending", "an", "action...\n", "Extending", "a", "regular", "method\n", "NOTE(Vek):", "Check", "for", "get_action_args()", "override", "in", "the\n", "controller\n", "Regular", "functions", "get", "post-processing...\n", "If", "an", "attached", "extension", "(@wsgi.extends)", "for", "the\n", "method", "has", "no", "version", "match", "its", "not", "an", "error.", "We\n", "just", "don't", "run", "the", "extends", "code\n", "We", "had", "a", "response", "return", "it,", "to", "exit", "early.", "This", "is\n", "actually", "a", "failure", "mode.", "None", "is", "success.\n", "Set", "the", "version", "of", "the", "API", "requested", "based", "on", "the", "header\n", "Identify", "the", "action,", "its", "arguments,", "and", "the", "requested\n", "content", "type\n", "NOTE(sdague):", "we", "filter", "out", "InvalidContentTypes", "early", "so", "we\n", "know", "everything", "is", "good", "from", "here", "on", "out.\n", "NOTE(Vek):", "Splitting", "the", "function", "up", "this", "way", "allows", "for\n", "auditing", "by", "external", "tools", "that", "wrap", "the", "existing\n", "function.", "If", "we", "try", "to", "audit", "__call__(),", "we", "can\n", "run", "into", "troubles", "due", "to", "the", "@webob.dec.wsgify()\n", "decorator.\n", "Get", "the", "implementing", "method\n", "Now,", "deserialize", "the", "request", "body...\n", "allow", "empty", "body", "with", "PUT", "and", "POST\n", "Update", "the", "action", "args\n", "No", "exceptions;", "convert", "action_result", "into", "a\n", "ResponseObject\n", "Run", "post-processing", "extensions\n", "Do", "a", "preserialize", "to", "set", "up", "the", "response", "object\n", "Process", "extensions\n", "In", "Py2.X", "Headers", "must", "be", "byte", "strings\n", "In", "Py3.X", "Headers", "must", "be", "utf-8", "strings\n", "Look", "up", "the", "method\n", "Propagate", "the", "error\n", "Look", "up", "the", "action", "method\n", "We", "deliberately", "don't", "return", "any", "message", "information\n", "about", "the", "exception", "to", "the", "user", "so", "it", "looks", "as", "if\n", "the", "method", "is", "simply", "not", "implemented.\n", "Store", "enough", "information", "to", "find", "what", "we're", "extending\n", "If", "we", "have", "positional", "arguments,", "call", "the", "decorator\n", "OK,", "return", "the", "decorator", "instead\n", "Find", "all", "actions\n", "start", "with", "wsgi", "actions", "from", "base", "classes\n", "NOTE(cyeoh):", "This", "resets", "the", "VER_METHOD_ATTR", "attribute\n", "between", "API", "controller", "class", "creations.", "This", "allows", "us\n", "to", "use", "a", "class", "decorator", "on", "the", "API", "methods", "that", "doesn't\n", "require", "naming", "explicitly", "what", "method", "is", "being", "versioned", "as\n", "it", "can", "be", "implicit", "based", "on", "the", "method", "decorated.", "It", "is", "a", "bit\n", "ugly.\n", "Add", "the", "actions", "and", "extensions", "to", "the", "class", "dict\n", "The", "first", "arg", "to", "all", "versioned", "methods", "is", "always", "the", "request\n", "object.", "The", "version", "for", "the", "request", "is", "attached", "to", "the\n", "request", "object\n", "Update", "the", "version_select", "wrapper", "function", "so\n", "other", "decorator", "attributes", "like", "wsgi.response\n", "are", "still", "respected.\n", "No", "version", "match\n", "No", "versioning", "on", "this", "class\n", "NOTE(cyeoh):", "This", "decorator", "MUST", "appear", "first", "(the", "outermost\n", "decorator)", "on", "an", "API", "method", "for", "it", "to", "work", "correctly\n", "Add", "to", "list", "of", "versioned", "methods", "registered\n", "Ensure", "the", "list", "is", "sorted", "by", "minimum", "version", "(reversed)\n", "so", "later", "when", "we", "work", "through", "the", "list", "in", "order", "we", "find\n", "the", "method", "which", "has", "the", "latest", "version", "which", "supports\n", "the", "version", "requested.\n", "Replace", "the", "body", "with", "fault", "details."], "/Users/mehranhassani/repos/nova/nova/signature_utils.py": ["CERTIFICATE_FORMATS", "DSA", "ECC_CURVES", "HASH_METHODS", "KeyManagerError", "LOG", "MASK_GEN_ALGORITHMS", "None", "RSA_PSS", "SignatureKeyType", "TypeError", "X_509", "_", "_LE", "_REGISTERED_TYPES", "__name__", "base64", "binascii", "cert", "cert_data", "certificate", "classmethod", "cls", "context", "create_verifier", "create_verifier_for_dsa", "create_verifier_for_ecc", "create_verifier_for_pss", "curve", "default_backend", "dsa", "e", "ec", "encodeutils", "exception", "get_certificate", "get_hash_method", "get_public_key", "get_signature", "hash_method", "hash_method_name", "hashes", "image_meta_props", "img_signature", "img_signature_certificate_uuid", "img_signature_hash_method", "img_signature_key_type", "isinstance", "key", "key_manager", "keymgr_api", "logging", "mgf", "msg", "name", "now", "object", "padding", "public_key", "public_key_type", "rsa", "salt_length", "self", "signature", "signature_certificate_uuid", "signature_data", "signature_key_type", "timeutils", "verifier", "verify_certificate", "x509", "Support", "signature", "verification.", "Currently", "supported", "signature", "key", "types\n", "RSA", "Options\n", "DSA", "Options\n", "ECC", "curves", "--", "note", "that", "only", "those", "with", "key", "sizes", ">=384", "are", "included\n", "Note", "also", "that", "some", "of", "these", "may", "not", "be", "supported", "by", "the", "cryptography", "backend\n", "These", "are", "the", "currently", "supported", "certificate", "formats\n", "These", "are", "the", "currently", "supported", "MGF", "formats,", "used", "for", "RSA-PSS", "signatures\n", "each", "key", "type", "will", "require", "its", "own", "verifier\n", "default", "to", "MGF1\n", "default", "to", "max", "salt", "length\n", "return", "the", "verifier\n", "return", "the", "verifier\n", "return", "the", "verifier\n", "Register", "the", "elliptic", "curves", "which", "are", "supported", "by", "the", "backend\n", "create", "the", "verifier", "based", "on", "the", "signature", "key", "type\n", "Error", "creating", "the", "verifier\n", "Note", "that", "this", "public", "key", "could", "either", "be\n", "RSAPublicKey,", "DSAPublicKey,", "or", "EllipticCurvePublicKey\n", "Confirm", "the", "type", "is", "of", "the", "type", "expected", "based", "on", "the", "signature", "key", "type\n", "The", "certificate", "retrieved", "here", "is", "a", "castellan", "certificate", "object\n", "The", "problem", "encountered", "may", "be", "backend-specific,", "since", "castellan\n", "can", "use", "different", "backends.", "Rather", "than", "importing", "all", "possible\n", "backends", "here,", "the", "generic", "\"Exception\"", "is", "used.\n", "castellan", "always", "encodes", "certificates", "in", "DER", "format\n", "verify", "the", "certificate\n", "Get", "now", "in", "UTC,", "since", "certificate", "returns", "times", "in", "UTC\n", "Confirm", "the", "certificate", "valid", "time", "range", "includes", "now"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_limits.py": ["BaseLimitTestSuite", "FakeHttplibSocket", "False", "LimitsControllerTestV21", "LimitsControllerTestV236", "LimitsControllerTestV239", "LimitsPolicyEnforcementV21", "LimitsViewBuilderTest", "None", "StringIO", "True", "_get_project_quotas", "_mode", "_other", "abs_limits", "absolute_limits", "accept_header", "app", "body", "context", "dict", "encodeutils", "exc", "exception", "expected", "expected_limits", "expected_response", "fakes", "get_project_quotas", "headers", "host", "httplib", "jsonutils", "k", "limits_controller", "limits_v21", "matchers", "method", "mock", "nova", "object", "output", "path", "project_id", "req", "request", "resp", "response", "response_string", "rule_name", "self", "sock", "str", "stub_get_project_quotas", "super", "tenant_id", "test", "usages", "v", "views", "wsgi", "Base", "test", "suite", "which", "provides", "relevant", "stubs", "and", "time", "abstraction.\nReturn", "the", "\"time\"", "according", "to", "this", "test", "suite.\nTests", "for", "`limits.LimitsController`", "class.\nRun", "before", "each", "test.\nHelper", "to", "set", "routing", "arguments.\nFake", "`httplib.HTTPResponse`", "replacement.\nInitialize", "new", "`FakeHttplibSocket`.\nReturns", "the", "socket's", "internal", "buffer.\nFake", "`httplib.HTTPConnection`.\nInitialize", "`FakeHttplibConnection`.\nReturn", "our", "generated", "response", "from", "the", "request.", "Test", "getting", "empty", "limit", "details", "in", "JSON.\n", "Test", "getting", "limit", "details", "in", "JSON.\n", "staring", "from", "version", "2.39", "there", "is", "no", "'maxImageMeta'", "field\n", "in", "response", "after", "removing", "'image-metadata'", "proxy", "API"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/flavor_rxtx.py": ["ALIAS", "False", "FlavorRxtxController", "alias", "body", "context", "controller", "db_flavor", "extension", "extensions", "flavor", "flavors", "fr_policies", "id", "key", "list", "name", "req", "resp_obj", "self", "version", "wsgi", "The", "Flavor", "Rxtx", "API", "extension.\nSupport", "to", "show", "the", "rxtx", "status", "of", "a", "flavor."], "/Users/mehranhassani/repos/nova/nova/network/base_api.py": ["Exception", "False", "LOG", "None", "NotImplementedError", "SENTINEL", "True", "ValueError", "_", "_LE", "__name__", "address", "affect_auto_assigned", "args", "argspec", "availability_zone", "base", "bind_host_id", "context", "dhcp_options", "dns_type", "domain", "excutils", "f", "fixed_address", "floating_address", "floating_ip", "functools", "hooks", "host", "ic", "id", "impl", "index", "inspect", "instance", "isinstance", "kwargs", "lockutils", "logging", "mac_address", "macs", "migration", "msg", "name", "network_id", "network_model", "network_uuid", "num_instances", "nw_info", "object", "objects", "pci_requests", "pool", "port_id", "project", "project_id", "requested_ip", "requested_networks", "res", "result", "security_groups", "self", "teardown", "update_cells", "update_instance_cache_with_nw_info", "vif", "vpn", "wrapper", "Get", "all", "the", "networks", "for", "client.\nGet", "specific", "network", "for", "client.\nCreate", "a", "network.\nDelete", "a", "specific", "network.\nDisassociate", "a", "network", "for", "client.\nGet", "fixed", "IP", "by", "id.\nGet", "fixed", "IP", "by", "address.\nGet", "floating", "IP", "by", "id.\nGet", "floating", "IP", "pools.\nGet", "floating", "IP", "by", "address.\nGet", "floating", "IPs", "by", "project.\nGet", "instance", "id", "by", "floating", "address.\nGet", "vif", "mac", "address.\nAdds", "(allocate)", "floating", "IP", "to", "a", "project", "from", "a", "pool.\nRemoves", "(deallocates)", "a", "floating", "IP", "with", "address", "from", "a", "project.\nRemoves", "(deallocates)", "and", "deletes", "the", "floating", "IP.\nAssociates", "a", "floating", "IP", "with", "a", "fixed", "IP.\nDisassociates", "a", "floating", "IP", "from", "fixed", "IP", "it", "is", "associated", "with.\nDeallocates", "all", "network", "structures", "related", "to", "instance.\nAllocate", "port", "for", "instance.\nDeallocate", "port", "for", "instance.\nList", "ports.\nShow", "specific", "port.\nAdds", "a", "fixed", "IP", "to", "instance", "from", "specified", "network.\nRemoves", "a", "fixed", "IP", "from", "instance", "from", "specified", "network.\nForce", "adds", "another", "network", "to", "a", "project.\nAssociate", "or", "disassociate", "host", "or", "project", "to", "network.\nReturns", "all", "network", "info", "related", "to", "an", "instance.\nTemplate", "method,", "so", "a", "subclass", "can", "implement", "for", "neutron/network.\nCreate", "specified", "DNS", "entry", "for", "address.\nCreate", "specified", "DNS", "entry", "for", "address.\nDelete", "the", "specified", "dns", "entry.\nDelete", "the", "specified", "dns", "domain.\nGet", "entries", "for", "address", "and", "domain.\nGet", "entries", "for", "name", "and", "domain.\nCreate", "a", "private", "DNS", "domain", "with", "nova", "availability", "zone.\nCreate", "a", "public", "DNS", "domain", "with", "optional", "nova", "project.\nStart", "to", "migrate", "the", "network", "of", "an", "instance.\nFinish", "migrating", "the", "network", "of", "an", "instance.", "NOTE(comstud):", "The", "save()", "method", "actually", "handles", "updating", "or\n", "creating", "the", "instance.", "We", "don't", "need", "to", "retrieve", "the", "object\n", "from", "the", "DB", "first.\n", "get", "the", "instance", "from", "arguments", "(or", "raise", "ValueError)\n", "We", "need", "to", "call", "the", "wrapped", "function", "with", "the", "lock", "held", "to", "ensure\n", "that", "it", "can", "call", "_get_instance_nw_info", "safely.\n", "return", "the", "original", "function's", "return", "value\n", "NOTE(comstud):", "Don't", "update", "API", "cell", "with", "new", "info_cache", "every\n", "time", "we", "pull", "network", "info", "for", "an", "instance.", "The", "periodic", "healing\n", "of", "info_cache", "causes", "too", "many", "cells", "messages.", "Healing", "the", "API\n", "will", "happen", "separately."], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/test_serial.py": ["None", "SerialTestCase", "exception", "fake_socket", "fake_verify_port", "host", "len", "mock", "port", "port_10000_already_used", "s", "self", "serial", "set", "six", "socket", "start", "stop", "super", "test", "x", "y", "Tests", "for", "Serial", "Console."], "/Users/mehranhassani/repos/nova/nova/notifications/objects/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/fibrechannel.py": ["CONF", "False", "LOG", "LibvirtFibreChannelVolumeDriver", "__name__", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "host", "libvirt_volume", "logging", "nova", "self", "super", "utils", "Driver", "to", "attach", "Fibre", "Channel", "Network", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt.\nAttach", "the", "volume", "to", "instance_name.\nDetach", "the", "volume", "from", "instance_name.", "Call", "the", "factory", "here", "so", "we", "can", "support\n", "more", "than", "x86", "architectures.\n", "TODO(walter-boring)", "eliminated", "the", "need", "for", "preserving\n", "multipath_id.", "Use", "scsi_id", "instead", "of", "multipath", "-ll\n", "This", "will", "then", "eliminate", "the", "need", "to", "pass", "anything", "in\n", "the", "2nd", "param", "of", "disconnect_volume", "and", "be", "consistent\n", "with", "the", "rest", "of", "the", "connectors."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/admin_actions.py": ["ALIAS", "AdminActionsController", "None", "True", "aa_policies", "alias", "args", "body", "common", "compute", "context", "controller", "dict", "e", "exc", "exception", "extension", "extensions", "id", "instance", "kwargs", "name", "req", "reset_server_state", "self", "state", "state_map", "super", "validation", "version", "vm_states", "wsgi", "Permit", "admins", "to", "reset", "networking", "on", "a", "server.\nPermit", "admins", "to", "inject", "network", "info", "into", "a", "server.\nPermit", "admins", "to", "reset", "the", "state", "of", "a", "server.", "States", "usable", "in", "resetState", "action\n", "NOTE:", "It", "is", "necessary", "to", "update", "the", "schema", "of", "nova/api/openstack/compute/\n", "schemas/reset_server_state.py,", "when", "updating", "this", "state_map.\n", "Identify", "the", "desired", "state", "from", "the", "body"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_uuid_sentinels.py": ["self", "str", "testtools", "uuid1", "uuid2", "uuidsentinel", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/329_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/284_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/cells/filters/different_cell.py": ["False", "True", "cell", "cell_route", "cell_routes", "cell_state", "cells", "cells_utils", "filter_properties", "filtered_cells", "filters", "isinstance", "routing_path", "scheduler_hints", "self", "six", "No", "filtering,", "if", "not", "authorized."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_status.py": ["ExtendedStatusTestV21", "UUID1", "UUID2", "UUID3", "args", "body", "content_type", "db_list", "enumerate", "exception", "fake_compute_get", "fake_compute_get_all", "fake_instance", "fake_url", "fakes", "fields", "i", "inst", "instance_obj", "int", "jsonutils", "objects", "power_state", "prefix", "req", "res", "return_server", "self", "server", "super", "task_state", "test", "url", "vm_state"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_security_groups.py": ["False", "None", "SecurityGroupsJsonTest", "True", "USE_NEUTRON", "astb", "context", "description", "detailed", "fake_add_to_instance", "fake_create_security_group", "fake_get", "fake_get_instance_security_groups", "fake_get_instances_security_groups_bindings", "fake_list", "fake_remove_from_instance", "fixtures", "ids", "instance", "instance_uuid", "name", "names", "nova_group", "path", "project", "response", "result", "s", "sample_dir", "search_opts", "security_group_id", "security_group_name", "self", "servers", "subs", "super", "test_servers", "uuid", "Get", "api", "sample", "of", "security", "groups", "get", "list", "request.\n", "Get", "api", "sample", "of", "security", "groups", "get", "request.\n", "Get", "api", "sample", "of", "security", "groups", "for", "a", "specific", "server."], "/Users/mehranhassani/repos/nova/nova/conf/configdrive.py": ["False", "cfg", "conf", "config_drive_opts"], "/Users/mehranhassani/repos/nova/nova/policies/multiple_create.py": ["POLICY_ROOT", "base", "multiple_create_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/cloudpipe.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "cloudpipe_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_resource_provider.py": ["False", "IPV4_ADDRESS_ID", "None", "TestResourceClass", "USES_DB", "VCPU_ID", "ValueError", "_ALLOCATION_DB", "_ALLOCATION_ID", "_INVENTORY_DB", "_INVENTORY_ID", "_RESOURCE_CLASS_ID", "_RESOURCE_CLASS_NAME", "_RESOURCE_PROVIDER_DB", "_RESOURCE_PROVIDER_ID", "_RESOURCE_PROVIDER_NAME", "_RESOURCE_PROVIDER_UUID", "_fake_ensure_cache", "allocations", "bdm", "cache", "context", "ctxt", "db_inv1", "db_inv2", "db_inventory", "db_rp", "db_rp1", "db_rp2", "dict", "error", "exc", "exception", "expected", "expected_inv1", "expected_inv2", "field", "fields", "found", "int", "inv", "inv_list", "inventories", "inventory", "inventory_dict", "kwargs", "len", "mock", "mock_db_create", "mock_db_get", "mock_db_save", "mock_ensure_cache", "mock_get", "mock_get_allocations_from_db", "name", "obj", "objects", "objs", "rc", "records", "resource_provider", "resource_provider_object", "retrieved_inv", "retrieved_inventories", "retrieved_rp", "rp", "rp_id", "rp_uuid", "self", "setattr", "six", "str", "super", "test", "test_objects", "updates", "usage", "uuid", "uuids", "values", "NOTE(cdent):", "Just", "checking,", "useless", "to", "be", "actually\n", "comprehensive", "here.\n", "TODO(cdent):", "This", "and", "other", "nearby", "tests", "are", "functional\n", "and", "should", "be", "moved.\n", "Create", "2", "resource", "providers", "with", "DISK_GB", "resources.", "And\n", "update", "total", "value", "for", "second", "one.\n", "Create", "IPV4_ADDRESS", "resources", "for", "each", "provider.\n", "Get", "inventories", "for", "each", "resource", "provider", "and", "validate\n", "that", "the", "inventory", "records", "for", "that", "resource", "provider", "uuid\n", "and", "match", "expected", "total", "value.\n", "Try", "an", "integer", "resource", "class", "identifier...\n", "Use", "an", "invalid", "string...\n", "NOTE(danms):", "We", "don't", "include", "an", "actual", "resource", "provider\n", "here", "because", "chained", "backporting", "of", "that", "is", "handled", "by\n", "the", "infrastructure", "and", "requires", "us", "to", "have", "a", "manifest\n", "NOTE(danms):", "We", "don't", "include", "an", "actual", "resource", "provider\n", "here", "because", "chained", "backporting", "of", "that", "is", "handled", "by\n", "the", "infrastructure", "and", "requires", "us", "to", "have", "a", "manifest"], "/Users/mehranhassani/repos/nova/nova/policies/server_external_events.py": ["POLICY_ROOT", "base", "policy", "server_external_events_policies"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/331_add_tag_to_vifs_and_bdm.py": ["Column", "MetaData", "String", "api", "bdm", "hasattr", "meta", "migrate_engine", "shadow_bdm", "shadow_prefix", "shadow_vifs", "tag", "utils", "vifs"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute_api.py": ["AttributeError", "ComputeAPIAPICellUnitTestCase", "ComputeAPIComputeCellUnitTestCase", "ComputeAPIUnitTestCase", "FAKE_IMAGE_REF", "False", "NODENAME", "None", "SHELVED_IMAGE", "SHELVED_IMAGE_EXCEPTION", "SHELVED_IMAGE_NOT_AUTHORIZED", "SHELVED_IMAGE_NOT_FOUND", "SecurityGroupAPITest", "True", "_ComputeAPIUnitTestMixIn", "_action", "_check_auto_disk_config", "_check_mig", "_check_state", "_checks_for_create_and_rebuild", "_create_image", "_get_image", "_get_migration", "_mock_cinder_check_attach", "_mock_cinder_get", "_mock_create", "_mock_create_bdm", "_mock_ensure_default", "_mock_inst_mapping_create", "_record_action_start", "_save", "access_ip_v4", "access_ip_v6", "action_start", "add_instance_fault_from_exc", "address", "admin_context", "admin_pass", "allow_same_host", "api", "args", "attrs", "auto_disk_config", "base_options", "bdm", "bdm_create", "bdm_get_by_instance_uuid", "bdms", "block_device_mapping", "block_device_mappings", "block_device_obj", "boot_from_volume", "boot_meta", "br", "build_instances", "build_req_instances", "build_req_mock", "build_req_mocks", "build_req_obj", "build_reqs", "c", "cast", "cast_reservations", "cast_to_cells", "cell0_instances", "cell_instances", "cell_mapping", "cells_support_mock", "check_auto_disk_config", "check_limit", "check_requested_networks", "check_server_group_quota", "check_state", "cinder", "classmethod", "clean_shutdown", "cls", "commit_quotas", "compute_api", "compute_cells_api", "compute_rpcapi", "compute_rpcapi_mock", "compute_utils", "conductor", "config_drive", "conn_info", "context", "context_elevated", "count", "create_fails", "create_image", "create_info", "ctxt", "current_flavor", "data", "datetime", "db", "db_instance_system_metadata_get", "delete_time", "delete_type", "delta", "deltas", "description", "dict", "diff", "do_test", "e", "enumerate", "ephemeral_size", "events", "exc", "exception", "exclude_states", "exp", "expect_meta", "expect_statuses", "expected", "expected_exception", "expected_meta", "expected_reservations", "expected_snapshot", "expected_state", "expected_task_state", "extra_kwargs", "extra_props", "fake_bdm", "fake_bdm_list_get_by_instance_uuid", "fake_block_device", "fake_build_request", "fake_flavor", "fake_image", "fake_image_create", "fake_image_meta", "fake_inst", "fake_instance", "fake_keypair", "fake_mig", "fake_quiesce_instance", "fake_quotas", "fake_show", "fake_snapshot", "fake_spec", "fake_swap_volume_exc", "fake_sys_meta", "fake_unquiesce_instance", "fake_vol_api_begin_detaching", "fake_vol_api_reserve", "fake_vol_api_roll_detaching", "fake_vol_api_unreserve", "fake_volume", "fake_volume_create_snapshot", "fake_volume_get", "fields_obj", "files_to_inject", "filter_properties", "filters", "fixtures", "flavor", "flavor_id_passed", "flavors", "force", "get_by_id_and_instance", "get_by_inst", "get_flavor", "get_flavor_by_flavor_id", "get_image", "get_spec", "get_vol_data", "getattr", "got_exc", "groups", "host_statuses", "i", "id", "im", "image", "image_api", "image_delete", "image_href", "image_id", "image_meta", "image_type", "injected_files", "inst", "inst_destroy", "inst_from_build_req", "inst_from_get", "inst_get_calls", "inst_map", "inst_map_calls", "inst_map_mocks", "inst_mapping_mock", "inst_mock", "inst_mocks", "instance", "instance_actions", "instance_bdms", "instance_group", "instance_num", "instance_save", "instance_save_mock", "instance_type", "instance_uuid", "instance_vm_state", "instances", "instances_to_build", "invalid_vm_states", "is_bootable", "is_snapshot", "iso8601", "jsonutils", "k", "kernel_id", "key", "key_data", "key_name", "key_pair", "kwargs", "legacy_bdm", "len", "length", "list_obj", "lm_force_complete", "loc_bdm", "local", "map", "mapping", "marker", "matchers", "max_count", "max_net_count", "max_network_count", "message", "meta", "metadata", "method", "mig", "mig_ref_passed", "migration", "migration_get", "migration_id", "migration_type", "migrations", "min_count", "min_disk", "min_ram", "mock", "mock_attach", "mock_attempt", "mock_attempt_delete", "mock_bdm_v", "mock_br", "mock_build_req", "mock_buildreq_get", "mock_buildreq_save", "mock_cbdm", "mock_cdb", "mock_cell_map_get", "mock_cell_mapping_get", "mock_check_attach", "mock_check_num_inst_quota", "mock_cniq", "mock_create_res", "mock_delete", "mock_destroy", "mock_detach", "mock_elevated", "mock_flavor", "mock_get", "mock_get_build_req", "mock_get_by_inst", "mock_get_flavor", "mock_get_image", "mock_get_inst", "mock_get_inst_map", "mock_get_migration", "mock_get_min_service", "mock_get_service_version", "mock_get_snapshot", "mock_im", "mock_inst", "mock_inst_get", "mock_inst_mapping", "mock_inst_save", "mock_instance", "mock_instmap_get", "mock_is_volume_backed", "mock_limit_check", "mock_lm_abort", "mock_lookup", "mock_map_get", "mock_method", "mock_msl", "mock_objects", "mock_reboot_instance", "mock_rec_action", "mock_record_action", "mock_req_spec_from_components", "mock_reserve", "mock_resume_instance", "mock_rs", "mock_save", "mock_secgroup", "mock_sg", "mock_start_instance", "mock_stop_instance", "mock_suspend_instance", "mock_target_cell", "mock_terminate", "mock_upsize", "mock_v_api", "mock_volume", "mock_volume_api", "mox", "name", "names", "net_api_deallocate_for_instance", "network", "new", "new_flavor", "new_image", "new_image_href", "new_volume_id", "notify_about_instance_usage", "now", "obj", "obj_base", "object", "objects", "old", "old_flavor", "old_volume_id", "orig_image", "orig_image_href", "orig_system_metadata", "oslo_exceptions", "over_quota_args", "overs", "params", "paused_state", "port", "project_id", "provision_instances", "quiesce_expected", "quiesce_fails", "quiesce_required", "quiesced", "quota", "quota_commit", "quota_exception", "quota_mock", "quota_reserve", "quotas", "quotas_obj", "r", "ramdisk_id", "range", "reboot_type", "rebuild_instance", "record_action_start", "record_mock", "req_spec_get_by_inst_uuid", "req_spec_mock", "requested_networks", "requested_secgroups", "res", "rescue_image", "rescue_password", "reservation_id", "reservations", "resize_instance_mock", "result", "resvs", "ret", "ret_instance", "returned_inst", "returned_instance", "rpc", "rpcapi", "rpcapi_rescue_instance", "rpcapi_shelve_instance", "rpcapi_shelve_offload_instance", "rpcapi_unrescue_instance", "rs", "rservations", "same_flavor", "same_host", "save", "scget", "scheduler_hint", "secgroup_obj", "secgroups", "security_groups", "self", "sent_meta", "set", "shutdown_terminate", "side_effect", "snapshot", "snapshot_id", "snapshot_instance", "soft_delete", "sorted", "state", "status", "str", "super", "swap_size", "sys_meta", "task", "task_state", "task_states", "test", "test_flavor", "test_migration", "timeutils", "trigger_crash_dump", "updates", "usage", "usages", "user_data", "user_id", "utils", "utils_fixture", "uuids", "uuidutils", "v", "validate", "validate_and_build_base_options", "value", "vm_state", "vm_states", "vol_bdm", "volume", "volume_backed_inst", "volume_get", "volume_get_snapshot", "volume_id", "volume_info", "volumes", "with_base_ref", "zip", "Unit", "tests", "for", "compute", "API.\nCreate", "a", "test", "instance.\nUnit", "tests", "for", "_diff_dict().", "Make", "sure", "max_count", "is", "checked", "for", "None,", "as", "Python3", "doesn't", "allow\n", "comparison", "between", "NoneType", "and", "Integer,", "something", "that's", "allowed", "in\n", "Python", "2.\n", "We", "don't", "care", "about", "network", "validation", "in", "this", "test.\n", "Test", "when", "max_net_count", "is", "zero.\n", "Test", "when", "max_net_count", "is", "nonzero", "but", "less", "than", "min_count.\n", "Tests", "that", "if", "port", "is", "specified", "there", "is", "only", "one", "instance", "booting\n", "(i.e", "max_count", "==", "1)", "as", "we", "can't", "share", "the", "same", "port", "across", "multiple\n", "instances.\n", "Tests", "that", "if", "ip", "is", "specified", "there", "is", "only", "one", "instance", "booting\n", "(i.e", "max_count", "==", "1)\n", "Ensure", "instance", "can", "be", "suspended.\n", "Ensure", "instance", "can", "be", "resumed", "(if", "suspended).\n", "Make", "sure", "'progress'", "gets", "reset\n", "cell", "api", "has", "not", "been", "implemented.\n", "assert", "field", "values", "set", "on", "the", "instance", "object\n", "assert", "our", "mock", "calls\n", "assert", "field", "values", "set", "on", "the", "instance", "object\n", "Ensure", "instance", "can", "be", "soft", "rebooted.\n", "NOTE(comstud):", "This", "is", "getting", "messy.", "But", "what", "we", "are", "wanting\n", "to", "test", "is:\n", "If", "cells", "is", "enabled", "and", "we're", "the", "API", "cell:\n", "*", "Cast", "to", "cells_rpcapi.<method>", "with", "reservations=None\n", "*", "Commit", "reservations\n", "Otherwise:\n", "*", "Check", "for", "downed", "host\n", "*", "If", "downed", "host:\n", "*", "Clean", "up", "instance,", "destroying", "it,", "sending", "notifications.\n", "(Tested", "in", "_test_downed_host_part())\n", "*", "Commit", "reservations\n", "*", "If", "not", "downed", "host:\n", "*", "Record", "the", "action", "start.\n", "*", "Cast", "to", "compute_rpcapi.<method>", "with", "the", "reservations\n", "Happens", "on", "the", "manager", "side\n", "Local", "delete", "or", "when", "we're", "testing", "API", "cell.\n", "create", "two", "fake", "bdms,", "one", "is", "a", "volume", "and", "one", "isn't,", "both", "will", "be\n", "destroyed", "but", "we", "only", "cleanup", "the", "volume", "bdm", "in", "cinder\n", "connection_info", "isn't", "set\n", "connection_info", "is", "None\n", "connector", "is", "not", "set", "in", "connection_info\n", "connector", "is", "set", "but", "different", "host\n", "To", "test", "instance", "w/", "different", "project", "id", "than", "context", "(admin)\n", "Should", "never", "reach", "these.\n", "Should", "never", "reach", "these.\n", "Should", "never", "reach", "these.\n", "Ensure", "instance", "can", "be", "paused.\n", "Ensure", "instance", "can", "be", "unpaused.\n", "TODO(gilliard):", "This", "logic", "is", "upside-down", "(different\n", "behaviour", "depending", "on", "which", "class", "this", "method", "is", "mixed-into.", "Once\n", "we", "have", "cellsv2", "we", "can", "remove", "this", "kind", "of", "logic", "from", "this", "test\n", "This", "test", "ensures", "that", "volume_id", "arguments", "are", "passed", "to", "volume_api\n", "and", "that", "volumes", "return", "to", "previous", "states", "in", "case", "of", "error.\n", "Random", "exception\n", "Should", "fail", "if", "VM", "state", "is", "not", "valid\n", "Should", "fail", "if", "old", "volume", "is", "not", "attached\n", "Should", "fail", "if", "old", "volume's", "instance_uuid", "is", "not", "that", "of", "the", "instance\n", "Should", "fail", "if", "new", "volume", "is", "attached\n", "Should", "fail", "if", "new", "volume", "is", "smaller", "than", "the", "old", "volume\n", "Fail", "call", "to", "swap_volume\n", "Should", "succeed\n", "'cache_in_nova'", "is", "for", "testing", "non-inheritable", "properties\n", "'user_id'", "should", "also", "not", "be", "carried", "from", "sys_meta", "into\n", "image", "property...since", "it", "should", "be", "set", "explicitly", "by\n", "_create_image()", "in", "compute", "api.\n", "No", "block", "devices", "defined\n", "All", "the", "db_only", "fields", "and", "the", "volume", "ones", "are", "removed\n", "Check", "that", "the", "mappings", "from", "the", "image", "properties", "are", "not", "included\n", "This", "is", "the", "first", "call", "to", "limit_check.\n", "This", "is", "the", "second", "call", "to", "limit_check.\n", "This", "is", "the", "second", "call", "to", "limit_check", "but", "with", "different", "overs.\n", "Since", "we're", "patching", "the", "db's", "migration_get(),", "use", "a", "dict", "here", "so\n", "that", "we", "can", "validate", "the", "id", "is", "making", "its", "way", "correctly", "to", "the", "db", "api\n", "Tests", "that", "an", "InvalidVolume", "exception", "raised", "from\n", "volume_api.check_attach", "due", "to", "the", "volume", "status", "not", "being\n", "'available'", "results", "in", "_validate_bdm", "re-raising", "InvalidVolume.\n", "First", "instance,", "build_req,", "mapping", "is", "created", "and", "destroyed\n", "Second", "instance,", "build_req,", "mapping", "is", "not", "created", "nor", "destroyed\n", "assert", "field", "values", "set", "on", "the", "instance", "object\n", "assert", "our", "mock", "calls\n", "assert", "field", "values", "set", "on", "the", "instance", "object\n", "assert", "our", "mock", "calls\n", "Tests", "that", "InstanceInvalidState", "is", "raised", "when", "not", "ACTIVE.\n", "Ensure", "instance", "can", "have", "its", "admin", "password", "set.\n", "call", "the", "API\n", "make", "our", "assertions\n", "Check", "that", "the", "bdm", "matches", "what", "was", "asked", "for", "and", "that", "instance_uuid\n", "and", "volume_size", "are", "set", "properly.\n", "cell", "api", "has", "not", "been", "implemented.\n", "When", "there", "are", "no", "requested_networks", "we", "call", "validate_networks", "on\n", "the", "network", "API", "and", "return", "the", "results.\n", "When", "requested_networks", "is", "the", "single", "'none'", "case", "for", "no", "allocation,\n", "we", "don't", "validate", "networks", "and", "return", "the", "count", "passed", "in.\n", "When", "requested_networks", "is", "the", "single", "'auto'", "case", "for", "allocation,\n", "we", "validate", "networks", "and", "return", "the", "results.\n", "Just", "check", "that", "an", "InstanceMappingNotFound", "causes", "the", "instance", "to\n", "get", "looked", "up", "normally.\n", "This", "test", "checks", "the", "following", "scenario:\n", "The", "instance", "is", "not", "mapped", "to", "a", "cell,", "so", "it", "should", "be", "retrieved", "from\n", "a", "BuildRequest", "object.", "However", "the", "BuildRequest", "does", "not", "exist\n", "because", "the", "instance", "was", "put", "in", "a", "cell", "and", "mapped", "while", "while\n", "attempting", "to", "get", "the", "BuildRequest.", "So", "pull", "the", "instance", "from", "the\n", "cell.\n", "This", "test", "checks", "the", "following", "scenario:\n", "The", "instance", "is", "not", "mapped", "to", "a", "cell,", "so", "it", "should", "be", "retrieved", "from\n", "a", "BuildRequest", "object.", "However", "the", "BuildRequest", "does", "not", "exist", "which\n", "means", "it", "should", "now", "be", "possible", "to", "find", "the", "instance", "in", "a", "cell", "db.\n", "But", "the", "instance", "is", "not", "mapped", "which", "means", "the", "cellsv2", "migration", "has\n", "not", "occurred", "in", "this", "scenario,", "so", "the", "instance", "is", "pulled", "from", "the\n", "configured", "Nova", "db.\n", "TODO(alaski):", "The", "tested", "case", "will", "eventually", "be", "an", "error", "condition.\n", "But", "until", "we", "force", "cellsv2", "migrations", "we", "need", "this", "to", "work.\n", "This", "just", "checks", "that", "the", "instance", "is", "looked", "up", "normally", "and", "not\n", "synthesized", "from", "a", "BuildRequest", "object.", "Verification", "of", "pulling", "the\n", "instance", "from", "the", "proper", "cell", "will", "be", "added", "when", "that", "capability", "is.\n", "Insert", "one", "of", "the", "build_req_instances", "here", "so", "it", "shows", "up", "twice\n", "simulate", "calling", "_get_instances_by_filters", "twice,", "once", "for", "cell0\n", "which", "raises", "a", "MarkerNotFound", "and", "once", "from", "the", "cell", "DB", "which\n", "returns", "two", "instances\n", "Just", "making", "sure", "that", "the", "instance", "has", "been", "created\n", "Just", "making", "sure", "that", "the", "instance", "has", "been", "created\n", "This", "test", "checks", "that", "a", "new", "instance", "which", "is", "not", "yet", "peristed", "in\n", "DB", "can", "be", "found", "by", "looking", "up", "the", "BuildRequest", "object", "so", "we", "can\n", "update", "it.\n", "Fake", "the", "fact", "that", "the", "instance", "is", "not", "yet", "persisted", "in", "DB\n", "This", "test", "is", "for", "covering", "the", "following", "case:\n", "-", "when", "we", "lookup", "the", "instance", "initially,", "that", "one", "is", "not", "yet", "mapped\n", "to", "a", "cell", "and", "consequently", "we", "retrieve", "it", "from", "the", "BuildRequest\n", "-", "when", "we", "update", "the", "instance,", "that", "one", "could", "have", "been", "mapped\n", "meanwhile", "and", "the", "BuildRequest", "was", "deleted\n", "-", "if", "the", "instance", "is", "mapped,", "lookup", "the", "cell", "DB", "to", "find", "the", "instance\n", "Fake", "the", "fact", "that", "the", "instance", "is", "not", "yet", "persisted", "in", "DB\n", "This", "test", "is", "for", "covering", "the", "following", "case:\n", "-", "when", "we", "lookup", "the", "instance", "initially,", "that", "one", "is", "not", "yet", "mapped\n", "to", "a", "cell", "and", "consequently", "we", "retrieve", "it", "from", "the", "BuildRequest\n", "-", "when", "we", "update", "the", "instance,", "that", "one", "could", "have", "been", "mapped\n", "meanwhile", "and", "the", "BuildRequest", "was", "deleted\n", "-", "if", "the", "instance", "is", "not", "mapped,", "lookup", "the", "API", "DB", "to", "find", "whether\n", "the", "instance", "was", "deleted,", "or", "if", "the", "cellv2", "migration", "is", "not", "done\n", "Fake", "the", "fact", "that", "the", "instance", "is", "not", "yet", "persisted", "in", "DB\n", "Let's", "do", "a", "quick", "verification", "on", "the", "same", "unittest", "to", "see", "what\n", "happens", "if", "the", "instance", "was", "deleted", "meanwhile.\n", "This", "tests", "that", "'default'", "is", "unchanged,", "but", "'fake-security-group'\n", "will", "be", "translated", "to", "a", "uuid", "for", "Neutron.\n", "This", "will", "short-circuit", "_check_requested_networks\n", "Assert", "the", "neutron", "security", "group", "API", "get", "method", "was", "called", "once\n", "and", "only", "for", "the", "non-default", "security", "group", "name.\n", "Assert", "we", "translated", "the", "non-default", "secgroup", "name", "to", "uuid.\n", "In", "the", "cells", "rpcapi", "there", "isn't", "the", "call", "for", "the\n", "reserve_block_device_name", "so", "the", "volume_bdm", "returned\n", "by", "the", "_create_volume_bdm", "is", "None\n", "The", "API", "cell", "just", "returns", "the", "number", "of", "instances", "passed", "in", "since", "the\n", "actual", "validation", "happens", "in", "the", "child", "(compute)", "cell.\n", "The", "API", "cell", "just", "returns", "the", "number", "of", "instances", "passed", "in", "since", "the\n", "actual", "validation", "happens", "in", "the", "child", "(compute)", "cell."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_notifier.py": ["cases", "conf", "config", "mock", "mock_noti_trans", "mock_notifier", "mock_transport", "rpc", "self", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_aggregate.py": ["False", "NOW", "None", "SUBS", "True", "_TestAggregateObject", "agg", "aggregate", "aggs", "api_create_mock", "api_delete_mock", "api_update_mock", "create_mock", "db", "delete_mock", "dict", "exception", "fake_agg", "fake_aggregate", "fake_api_aggregate", "fake_notifier", "get_by_metadata_key", "get_by_uuid", "get_by_uuid_api", "len", "mock", "mock_api_get_all", "mock_api_get_by_host", "mock_api_get_by_metadata_key", "mock_api_metadata_add", "mock_api_metadata_delete", "mock_g", "mock_get", "mock_get_all", "mock_get_api", "mock_get_by_host", "mock_get_by_metadata_key", "mock_host_add", "mock_host_add_api", "mock_host_delete", "mock_host_delete_api", "mock_in_api", "mock_metadata_add", "mock_metadata_delete", "mock_save", "msg", "obj", "object", "self", "test_objects", "timeutils", "update_mock", "uuid", "uuidsentinel"], "/Users/mehranhassani/repos/nova/nova/console/api.py": ["CONF", "None", "base", "compute_rpcapi", "console", "console_rpcapi", "console_uuid", "context", "instance", "instance_host", "instance_uuid", "nova", "objects", "rpcapi", "self", "server", "topic", "Handles", "ConsoleProxy", "API", "requests.\nAPI", "for", "spinning", "up", "or", "down", "console", "proxy", "connections.", "NOTE(mdragon):", "If", "we", "wanted", "to", "return", "this", "the", "console", "info\n", "here,", "as", "we", "would", "need", "to", "do", "a", "call.\n", "They", "can", "just", "do", "an", "index", "later", "to", "fetch\n", "console", "info.", "I", "am", "not", "sure", "which", "is", "better\n", "here."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/aggregate_multitenancy_isolation.py": ["False", "LOG", "True", "__name__", "configured_tenant_ids", "filters", "host_state", "logging", "metadata", "run_filter_once_per_request", "self", "spec_obj", "tenant_id", "utils", "Isolate", "tenants", "in", "specific", "aggregates.", "Aggregate", "data", "and", "tenant", "do", "not", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/virt/disk/vfs/localfs.py": ["Exception", "LOG", "None", "True", "VFSLocalFS", "_", "__name__", "_err", "args", "canonpath", "cmd", "content", "dict", "e", "err", "exception", "excutils", "exists", "group", "image", "imgdir", "kwargs", "logging", "mnt", "mode", "mount", "mount_api", "os", "out", "owner", "partition", "path", "self", "super", "tempfile", "user", "utils", "vfs"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/server_metadata.py": ["False", "copy", "create", "metadata_update", "parameter_types", "update", "update_all"], "/Users/mehranhassani/repos/nova/nova/tests/unit/servicegroup/test_mc_servicegroup.py": ["False", "MemcachedServiceGroupTestCase", "None", "True", "fn", "mgc_mock", "mock", "self", "service", "service_ref", "servicegroup", "super", "test"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/001_cell_mapping.py": ["Column", "DateTime", "False", "Index", "Integer", "MetaData", "String", "Table", "Text", "True", "UniqueConstraint", "cell_mappings", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_cache.py": ["False", "None", "RuntimeError", "True", "cache_utils", "client", "mock", "mock_cacheregion", "region", "self", "test", "default", "oslo.cache", "expiration_time", "value", "600", "was", "taken"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_scheduler_utils.py": ["False", "None", "SchedulerUtilsTestCase", "True", "compute_utils", "converter", "dict", "enable_retry_force_hosts", "enable_retry_force_nodes", "event_type", "exc_info", "exception", "expected", "expected_filter_props", "expected_limits", "expected_uuid", "fake_instance", "filt_props", "filter_properties", "filter_props", "flavors", "float", "force_hosts", "force_nodes", "forced_host", "forced_node", "get_group", "get_hosts", "good", "group", "group_hosts", "group_info", "host", "host_state", "host_state_obj", "instance", "instance_type", "item", "len", "limits", "method", "mock", "mock_add", "mock_extract", "mock_get", "mock_ggd", "mock_save", "msg", "nodename", "nvh", "object", "objects", "opts", "payload", "policies", "policy", "request_spec", "rpc", "sched_hints", "scheduler_utils", "self", "sep", "service", "set", "six", "spec", "super", "test", "test_flavor", "tuple", "updates", "uuids", "with_retry", "Test", "case", "for", "scheduler", "utils", "methods.", "So", "we", "can", "check", "for", "2", "hosts\n", "make", "sure", "'msg'", "is", "a", "substring", "of", "the", "complete", "exception", "text\n", "check", "normal\n", "check", "convert", "error\n", "check", "separator", "missing\n", "check", "key", "missing"], "/Users/mehranhassani/repos/nova/nova/policies/deferred_delete.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "deferred_delete_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/objects/bandwidth_usage.py": ["BandwidthUsage", "False", "None", "True", "VERSION", "base", "bw_in", "bw_out", "bw_usage", "cls", "context", "db", "db_bw_usage", "db_bw_usages", "field", "fields", "instance_uuid", "last_ctr_in", "last_ctr_out", "last_refreshed", "mac", "self", "setattr", "start_period", "staticmethod", "update_cells", "use_slave", "uuid", "uuids", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "use_slave", "to", "get_by_instance_uuid_and_mac\n", "Version", "1.2:", "Add", "update_cells", "to", "create\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "use_slave", "to", "get_by_uuids\n", "Version", "1.2:", "BandwidthUsage", "<=", "version", "1.2"], "/Users/mehranhassani/repos/nova/tools/reserve-migrations.py": ["API_BASE", "BASE", "False", "STUB", "True", "__name__", "argparse", "args", "base", "f", "fn", "get_last_migration", "git_add", "glob", "i", "int", "last", "main", "migrations", "name", "number", "open", "os", "parser", "path", "range", "reserve_migrations", "sorted", "subprocess", "tuple", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/312_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_build_request.py": ["None", "True", "_TestBuildRequestListObject", "_TestBuildRequestObject", "_test_create_args", "build_request", "changes", "context", "destroy_in_db", "exception", "fake_build_request", "fake_instance", "fake_req", "fake_reqs", "field", "fields", "get_all", "get_by_uuid", "getattr", "i", "instance", "jsonutils", "len", "mock", "mock_obj_set_defaults", "o_vo_base", "object", "objects", "range", "req_obj", "req_objs", "save_in_db", "self", "self2", "test_objects", "uuids", "x", "We", "need", "to", "simulate", "the", "BuildRequest", "object", "being", "persisted", "before\n", "that", "call.\n", "Assert", "that", "we", "create", "a", "very", "dirty", "object", "from", "the", "cleaned", "one\n", "on", "build_request\n", "Assert", "that", "if", "we", "persisted", "an", "instance", "not", "yet", "having", "the", "deleted\n", "field", "being", "set,", "we", "still", "return", "a", "value", "for", "that", "field."], "/Users/mehranhassani/repos/nova/nova/scheduler/chance.py": ["CONF", "None", "_", "context", "dests", "dict", "driver", "elevated", "exception", "host", "host_state", "hosts", "i", "ignore_hosts", "len", "msg", "nova", "num_instances", "random", "range", "reason", "self", "spec_obj", "topic", "Implements", "Scheduler", "as", "a", "random", "node", "selector.\nFilter", "a", "list", "of", "hosts", "based", "on", "RequestSpec.\nPicks", "a", "host", "that", "is", "up", "at", "random.\nSelects", "random", "destinations.", "NOTE(timello):", "Returns", "a", "list", "of", "dicts", "with", "'host',", "'nodename'", "and\n", "'limits'", "as", "keys", "for", "compatibility", "with", "filter_scheduler."], "/Users/mehranhassani/repos/nova/nova/availability_zones.py": ["AZ_CACHE_SECONDS", "CONF", "False", "MC", "None", "True", "_available_zones", "_build_metadata_by_host", "_get_cache", "_make_cache_key", "_not_available_zones", "aggregate", "aggregates", "availability_zone", "available_zones", "az", "az_inst", "azs", "cache", "cache_key", "cache_utils", "collections", "context", "dict", "disabled_services", "elevated", "enabled_services", "get_host_availability_zone", "get_only_available", "host", "hosts", "instance", "isinstance", "list", "metadata", "not_available_zones", "nova", "objects", "service", "services", "set", "six", "update_host_availability_zone_cache", "with_hosts", "zone", "zone_hosts", "zones", "Availability", "zone", "helper", "functions.\nReturn", "availability", "zone", "of", "specified", "instance.", "NOTE(vish):", "azs", "don't", "change", "that", "often,", "so", "cache", "them", "for", "an", "hour", "to\n", "avoid", "hitting", "the", "db", "multiple", "times", "on", "every", "request.\n", "Makes", "sure", "services", "isn't", "a", "sqlalchemy", "object\n", "gather", "all", "of", "the", "availability", "zones", "associated", "with", "a", "service", "host\n", "update", "the", "cache\n", ".items()", "returns", "a", "view", "in", "Py3,", "casting", "it", "to", "list", "for", "Py2", "compat\n", ".items()", "returns", "a", "view", "in", "Py3,", "casting", "it", "to", "list", "for", "Py2\n", "compat\n", "Likely", "hasn't", "reached", "a", "viable", "compute", "node", "yet", "so", "give", "back", "the\n", "desired", "availability_zone", "in", "the", "instance", "record", "if", "the", "boot", "request\n", "specified", "one.\n", "NOTE(sbauza):", "Cache", "is", "wrong,", "we", "need", "to", "invalidate", "it", "by", "fetching\n", "again", "the", "right", "AZ", "related", "to", "the", "aggregate", "the", "host", "belongs", "to.\n", "As", "the", "API", "is", "also", "calling", "this", "method", "for", "setting", "the", "instance\n", "AZ", "field,", "we", "don't", "need", "to", "update", "the", "instance.az", "field.\n", "This", "case", "can", "happen", "because", "the", "cache", "is", "populated", "before", "the\n", "instance", "has", "been", "assigned", "to", "the", "host", "so", "that", "it", "would", "keep", "the\n", "former", "reference", "which", "was", "incorrect.", "Instead", "of", "just", "taking", "the\n", "instance", "AZ", "information", "for", "refilling", "the", "cache,", "we", "prefer", "to\n", "invalidate", "the", "cache", "and", "fetch", "it", "again", "because", "there", "could", "be", "some\n", "corner", "cases", "where", "this", "method", "could", "be", "called", "before", "the", "instance\n", "has", "been", "assigned", "to", "the", "host", "also."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/221_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/277_add_fixed_ip_updated_index.py": ["INDEX_COLUMNS", "INDEX_NAME", "Index", "LOG", "MetaData", "None", "Table", "True", "_LI", "__name__", "_get_table_index", "col_name", "columns", "getattr", "idx", "index", "logging", "meta", "migrate_engine", "table"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_snapshots.py": ["FAKE_UUID", "False", "SnapshotApiTestV21", "TestSnapshotAPIDeprecation", "True", "body", "cinder", "controller", "delete", "dict", "exception", "fakes", "force", "isinstance", "len", "mock", "mock_mr", "resp_dict", "resp_snapshot", "resp_snapshots", "result", "self", "snapshot", "snapshot_id", "status_int", "str", "super", "test", "validation_error", "volumes_v21", "webob", "#@@'}}\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/objects/pci_device_pool.py": ["None", "True", "TypeError", "VERSION", "ValueError", "base", "classmethod", "cls", "copy", "fields", "isinstance", "jsonutils", "k", "list", "objects", "pci_pool", "pci_stats", "pool", "pool_dict", "pools", "primitive", "self", "six", "stat", "tags", "target_version", "v", "value", "versionutils", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "numa_node", "field\n", "NOTE(pmurray):", "before", "this", "object", "existed", "the", "pci", "device", "pool", "data", "was\n", "stored", "as", "a", "dict.", "For", "backward", "compatibility", "we", "need", "to", "be", "able", "to", "read\n", "it", "in", "from", "a", "dict\n", "NOTE(sbauza):", "Before", "using", "objects,", "pci", "stats", "was", "a", "list", "of\n", "dictionaries", "not", "having", "tags.", "For", "compatibility", "with", "other", "modules,", "let's\n", "create", "a", "reversible", "method\n", "Version", "1.0:", "Initial", "version\n", "PciDevicePool", "<=", "1.0\n", "Version", "1.1:", "PciDevicePool", "version", "1.1\n", "Check", "for", "object-ness,", "or", "old-style", "storage", "format.\n", "This", "can", "be", "either", "a", "dict", "or", "a", "list", "of", "dicts"], "/Users/mehranhassani/repos/nova/nova/db/migration.py": ["False", "IMPL", "None", "context", "database", "delete", "migration", "version", "Database", "setup", "and", "migration", "commands.\nMigrate", "the", "database", "to", "`version`", "or", "the", "most", "recent", "version.\nDisplay", "the", "current", "database", "version.\nThe", "starting", "version", "for", "the", "database."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/livemigrationops.py": ["CONF", "Exception", "False", "LOG", "None", "True", "__name__", "block_device_info", "block_device_manager", "block_migration", "boot_from_volume", "context", "ctxt", "dest", "dest_check_data", "disk_over_commit", "disk_path_mapping", "dst_compute_info", "excutils", "imagecache", "instance", "instance_name", "instance_ref", "logging", "migrate_data", "migrate_data_obj", "network_info", "nova", "object", "pathutils", "post_method", "recover_method", "self", "serialconsoleops", "shared_storage", "src_compute_info", "utilsfactory", "vmops", "volumeops", "We", "must", "make", "sure", "that", "the", "console", "log", "workers", "are", "stopped,\n", "otherwise", "we", "won't", "be", "able", "to", "delete", "/", "move", "VM", "log", "files.\n", "We", "create", "a", "planned", "VM,", "ensuring", "that", "volumes", "will", "remain\n", "attached", "after", "the", "VM", "is", "migrated."], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/test_rpcapi.py": ["CONF", "None", "cfg", "console_rpcapi", "context", "csv_mock", "ctxt", "getattr", "kwargs", "method", "mock", "orig_prepare", "prepare_mock", "retval", "rpc_method", "rpc_mock", "rpcapi", "self", "test", "v"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_rescue.py": ["CONF", "False", "None", "RescuePolicyEnforcementV21", "RescueTestV21", "UUID", "args", "body", "compute", "context", "dict", "exc", "exception", "fake_compute_get", "fake_instance", "fakes", "get_instance_mock", "image_href", "image_uuid", "instance", "isinstance", "kwargs", "len", "mock", "mock_compute_api_rescue", "mock_rescue", "mock_unrescue", "nova", "rescue", "rescue_image_ref", "rescue_mock", "rescue_password", "rescue_v21", "resp", "resp_json", "rule_name", "self", "status_int", "super", "test", "unrescue", "webob", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_vif.py": ["False", "None", "True", "VMwareVifTestCase", "_add_vswitch", "_call_method", "_get_host", "call", "constants", "exception", "expected", "expected_arg", "expected_ref", "fake", "fake_call_method", "fake_network_obj", "matchers", "method", "mock", "mock_check", "mock_get_network_ref", "mock_network_name", "mock_version", "mock_warning", "module", "network", "network_info", "network_model", "network_ref", "network_util", "ref", "self", "super", "test", "utils", "version_arg_found", "vexc", "vif", "vif_info", "vim_util", "vm_network", "vm_util", "FlatDHCP", "network", "mode", "without", "vlan", "-", "network", "doesn't", "exist", "with", "the", "host\n", "FlatDHCP", "network", "mode", "without", "vlan", "-", "network", "exists", "with", "the", "host\n", "Get", "vswitch", "and", "check", "vlan", "interface", "should", "not", "be", "called\n", "Flat", "network", "mode", "with", "DVS\n", "assert", "that", "the", "min", "version", "is", "in", "a", "warning", "message"], "/Users/mehranhassani/repos/nova/nova/wsgi/nova-metadata.py": ["CONF", "application", "cfg", "conf", "config", "config_files", "deploy", "logging", "name", "objects", "options", "utils", "noqa"], "/Users/mehranhassani/repos/nova/nova/servicegroup/__init__.py": ["API", "api"], "/Users/mehranhassani/repos/nova/nova/api/openstack/urlmap.py": ["Accept", "False", "LOG", "None", "True", "URLMap", "ValueError", "__name__", "_option_header_piece_re", "_quoted_string_re", "_tokenize", "accept", "app", "app_name", "app_url", "best_content_type", "best_match", "best_params", "best_quality", "content_mask", "content_type", "content_type_major", "dict", "domain", "environ", "extra", "float", "global_conf", "host", "item", "key", "len", "list", "loader", "local_conf", "logging", "mask", "mask_major", "match", "mime_type", "name", "next", "not_found_app", "object", "params", "parse_list_header", "parse_options_header", "parts", "paste", "path", "path_info", "port", "possible_app", "possible_app_url", "possible_mime_type", "possible_type", "quality", "re", "result", "self", "six", "start_response", "string", "supported_content_types", "unquote_header_value", "urllib2", "urlmap", "v", "value", "wrap", "wsgi", "Find", "longest", "match", "for", "a", "given", "URL", "path.\nCheck", "path", "suffix", "for", "MIME", "type", "and", "path", "prefix", "for", "API", "version.\nCheck", "Content-Type", "header", "for", "API", "version.\nCheck", "Accept", "header", "for", "best", "matching", "MIME", "type", "and", "API", "version.", "this", "is", "not", "the", "real", "unquoting,", "but", "fixing", "this", "so", "that", "the\n", "RFC", "is", "met", "will", "result", "in", "bugs", "with", "internet", "explorer", "and\n", "probably", "some", "other", "browsers", "as", "well.", "IE", "for", "example", "is\n", "uploading", "files", "with", "\"C:\\foo\\bar.txt\"", "as", "filename\n", "FIXME:", "Should", "we", "have", "a", "more", "sophisticated", "matching", "algorithm", "that\n", "takes", "into", "account", "the", "version", "as", "well?\n", "Don't", "use", "prefix", "if", "it", "ends", "up", "matching", "default\n", "Find", "the", "best", "match", "in", "the", "Accept", "header\n", "The", "MIME", "type", "for", "the", "response", "is", "determined", "in", "one", "of", "two", "ways:\n", "1)", "URL", "path", "suffix", "(eg", "/servers/detail.json)\n", "2)", "Accept", "header", "(eg", "application/json;q=0.8,", "application/xml;q=0.2)\n", "The", "API", "version", "is", "determined", "in", "one", "of", "three", "ways:\n", "1)", "URL", "path", "prefix", "(eg", "/v1.1/tenant/servers/detail)\n", "2)", "Content-Type", "header", "(eg", "application/json;version=1.1)\n", "3)", "Accept", "header", "(eg", "application/json;q=0.8;version=1.1)\n", "Accept", "application/atom+xml", "for", "the", "index", "query", "of", "each", "API\n", "version", "mount", "point", "as", "well", "as", "the", "root", "index\n", "Didn't", "match", "a", "particular", "version,", "probably", "matches", "default"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_images.py": ["CONF", "api_sample_base", "fake", "image_id", "key", "nova", "response", "sample_dir", "self", "subs", "Get", "api", "sample", "of", "images", "get", "list", "request.\n", "Get", "api", "sample", "of", "one", "single", "image", "details", "request.\n", "Get", "api", "sample", "of", "all", "images", "details", "request.\n", "Get", "api", "sample", "of", "an", "image", "metadata", "request.\n", "Get", "api", "sample", "to", "update", "metadata", "of", "an", "image", "metadata", "request.\n", "Get", "api", "sample", "of", "image", "metadata", "put", "request.\n", "Get", "api", "sample", "of", "an", "image", "metadata", "key", "request.\n", "Get", "api", "sample", "of", "image", "metadata", "key", "put", "request."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/__init__.py": ["LibvirtDriver", "driver"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_group_quotas.py": ["AttrDict", "CONF", "False", "None", "ServerGroupQuotasTestV21", "True", "attrs", "cfg", "context", "ctxt", "dict", "fakes", "group_id", "i", "id", "in_use", "isinstance", "k", "kwargs", "members", "policies", "project_id", "quota", "range", "req", "res", "res_dict", "resp", "result", "return_server_group", "self", "server_group_db", "server_group_delete", "server_group_template", "sg", "sg_id", "sg_v21", "sgroup", "status_int", "super", "test", "user_id", "uuids", "uuidutils", "webob", "Start", "by", "creating", "as", "many", "server", "groups", "as", "we're", "allowed", "to.\n", "Then,", "creating", "a", "server", "group", "should", "fail.\n", "Delete", "the", "server", "group", "we've", "just", "created.\n", "Make", "sure", "the", "quota", "in", "use", "has", "been", "released.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/legacy_v2/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/volumes.py": ["False", "copy", "create", "create_volume_attachment", "parameter_types", "snapshot_create", "update_volume_attachment", "NOTE:", "The", "validation", "pattern", "from", "match_device()", "in\n", "nova/block_device.py."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_limits.py": ["ADMIN_API", "LimitsSampleJsonTest", "True", "api_sample_base", "microversion", "response", "sample_dir", "scenarios", "self", "super", "NOTE(gmann):", "We", "have", "to", "separate", "the", "template", "files", "between", "V2\n", "and", "V2.1", "as", "the", "response", "are", "different."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/firewall.py": ["CONF", "Exception", "False", "ImportError", "IptablesFirewallDriver", "LOG", "NWFilterFirewall", "None", "True", "_LI", "_LW", "__name__", "_base_filter", "_conn", "_get_connection", "_nw", "allow_dhcp", "base_filter", "base_firewall", "callable", "cnt", "ctxt", "dhcp_base_filter", "dhcp_server", "doc", "e", "errcode", "errmsg", "etree", "ex", "excutils", "execute", "f", "filter_set", "filters", "flt", "format_parameter", "gateway", "greenthread", "host", "importutils", "instance", "instance_filter_name", "ip", "ipv4_cidr", "ipv6_cidr", "kwargs", "libvirt", "logging", "mask", "max_retry", "name", "net", "netutils", "network", "network_info", "nic_id", "nodhcp_base_filter", "nova", "parameter", "parameters", "pipelib", "prefix", "property", "ra_server", "range", "s", "self", "staticmethod", "subnet", "super", "u", "uuid", "v4_subnets", "v6_subnets", "value", "vif", "xml", "No-op.", "Everything", "is", "done", "in", "prepare_instance_filter.\nSet", "up", "basic", "filtering", "(MAC,", "IP,", "and", "ARP", "spoofing", "protection).\nClear", "out", "the", "nwfilter", "rules.\nCheck", "nova-instance-instance-xxx", "exists.\nSet", "up", "basic", "NWFilter.\nNo-op.", "Everything", "is", "done", "in", "prepare_instance_filter.\nCheck", "nova-instance-instance-xxx", "exists.", "No", "point", "in", "setting", "up", "a", "filter", "set", "that", "we'll", "be", "overriding\n", "anyway.\n", "Since", "libvirt", "1.2.7", "this", "operation", "can", "fail", "if", "the", "filter\n", "with", "the", "same", "name", "already", "exists", "for", "the", "given", "uuid.\n", "Unfortunately", "there", "is", "not", "a", "specific", "error", "code", "for", "this\n", "so", "we", "have", "to", "parse", "the", "error", "message", "to", "see", "if", "that", "was\n", "the", "failure.\n", "nwfilters", "may", "be", "defined", "in", "a", "separate", "thread", "in", "the", "case\n", "of", "libvirt", "non-blocking", "mode,", "so", "we", "wait", "for", "completion\n", "This", "happens", "when", "the", "instance", "filter", "is", "still", "in", "use\n", "(ie.", "when", "the", "instance", "has", "not", "terminated", "properly)\n", "NOTE(salvatore-orlando):\n", "Overriding", "base", "class", "method", "for", "applying", "nwfilter", "operation"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_block_device_manager.py": ["BlockDeviceManagerTestCase", "False", "None", "True", "attr", "available_slots", "bdi", "bdm", "bdm1", "bdm2", "bdm_metadata", "block_device_info", "block_device_manager", "boot_from_volume", "bus", "constants", "ctrl_disk_addr", "disk_addr", "disk_bus", "disk_format", "eph", "ephemeral", "exception", "expected", "expected_calls", "expected_res", "fail", "fake_bdi", "fake_bdm", "fake_eph1", "fake_eph2", "fake_ephemerals", "fake_root_disk", "fake_vol1", "fake_vol2", "fake_volumes", "getattr", "image_meta", "image_type", "kwargs", "mock", "mock_DiskMetadata", "mock_cfg_drive_req", "mock_check_and_update_bdm", "mock_check_and_update_eph", "mock_check_and_update_root", "mock_check_and_update_vol", "mock_config_drive_req", "mock_get_avail_ctrl_slot", "mock_get_boot_order", "mock_get_by_inst_uuid", "mock_get_ctrl_slot", "mock_get_device_bus", "mock_get_root_dev_bdm", "mock_init_ctrl_cntr", "mock_instance", "mock_is_boot_from_vol", "mock_is_boot_vol", "mock_required_by", "mount_device", "original", "os_win_const", "res", "ret", "root_disk", "self", "slot_map", "staticmethod", "super", "test_base", "vm_gen", "vol", "Unit", "tests", "for", "the", "Hyper-V", "BlockDeviceInfoManager", "class."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cert/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/026_add_resource_classes.py": ["Column", "DateTime", "False", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "meta", "migrate_engine", "resource_classes"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/image/vdi_through_dev.py": ["NotImplementedError", "TarGzProducer", "True", "UploadToGlanceAsRawTgz", "args", "command", "consumer", "context", "contextlib", "dev", "devpath", "eventlet", "fname", "glance", "greenio", "image_id", "input_file", "instance", "int", "object", "open", "os", "pool", "producer", "readfile", "rfile", "rpipe", "self", "session", "size", "tarfile", "tfile", "tinfo", "utils", "vdi_ref", "vdi_uuids", "vm_utils", "wfile", "wpipe", "writefile", "TODO(matelakat)", "Move", "through-dev", "image", "download", "functionality", "to", "this\n", "method."], "/Users/mehranhassani/repos/nova/nova/cmd/api_os_compute.py": ["CONF", "config", "gmr", "logging", "nova", "objects", "server", "service", "should_use_ssl", "sys", "utils", "version", "Starter", "script", "for", "Nova", "OS", "API.", "NOTE(mriedem):", "This", "is", "needed", "for", "caching", "the", "nova-compute", "service\n", "version", "which", "is", "looked", "up", "when", "a", "server", "create", "request", "is", "made", "with\n", "network", "id", "of", "'auto'", "or", "'none'.\n", "TODO(mriedem):", "Remove", "this", "in", "Ocata", "when", "all", "computes", "should", "be", "Newton."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_console_output.py": ["response", "sample_dir", "self", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/services.py": ["False", "parameter_types", "service_update", "service_update_v211"], "/Users/mehranhassani/repos/nova/nova/network/security_group/security_group_base.py": ["Exception", "False", "None", "NotImplementedError", "SecurityGroupBase", "True", "ValueError", "_", "allowed", "cidr", "context", "decoding_exception", "description", "detailed", "e", "encodeutils", "exception", "from_port", "grantee_cidr", "grantee_group_id", "group_id", "group_ids", "id", "ids", "instance", "int", "ip_proto_upper", "ip_protocol", "key", "keys", "map_exception", "msg", "name", "names", "new_rule", "object", "project", "property", "protocol", "rule", "rule_ids", "search_opts", "security_group", "security_group_name", "security_group_obj", "security_groups", "self", "staticmethod", "str", "to_port", "urllib", "utils", "vals", "value", "values", "Called", "when", "a", "rule", "is", "added", "to", "or", "removed", "from", "a", "security_group.", "Open", "everything", "if", "an", "explicit", "port", "range", "or", "type/code", "are", "not\n", "specified,", "but", "only", "if", "a", "source", "group", "was", "specified.\n", "Verify", "integer", "conversions\n", "Verify", "that", "from_port", "must", "always", "be", "less", "than\n", "or", "equal", "to", "to_port\n", "Verify", "valid", "TCP,", "UDP", "port", "ranges\n", "Verify", "ICMP", "type", "and", "code\n", "If", "cidr", "based", "filtering,", "protocol", "and", "ports", "are", "mandatory\n", "Make", "sure", "it's", "an", "empty", "SecurityGroupList", "and", "not", "None"], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/test_service_update.py": ["TestServiceUpdateNotificationSample", "True", "body", "notification_sample_base", "self", "super", "test_services", "utils_fixture"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/258_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/tools/install_venv.py": ["__file__", "__name__", "argv", "help", "install", "install_venv", "main", "options", "os", "pip_requires", "print", "print_help", "project", "py_version", "root", "sys", "test_requires", "venv"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_password.py": ["mock", "mock_extract_password", "password", "response", "sample_dir", "self", "subs", "test_servers", "uuid", "Mock", "password", "since", "there", "is", "no", "api", "to", "set", "it"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_flavor.py": ["False", "None", "True", "_TestFlavor", "_TestFlavorList", "_fake_api_flavor", "add", "altid", "api_flavors", "api_models", "context", "ctxt", "datetime", "db", "db_api", "db_exc", "db_flavor", "db_flavors", "destroy", "dict", "elevated", "exception", "extra_specs", "fake", "fake_api_flavor", "fake_db_extra_spec", "fake_db_flavor", "fake_flavor", "field", "fields", "filters", "flavor", "flavor_es", "flavor_obj", "flavors", "get", "get_by_id", "get_by_name", "getattr", "isinstance", "len", "m", "mock", "mock_add", "mock_api_add", "mock_api_del", "mock_api_get", "mock_create", "mock_delete", "mock_destroy", "mock_flavors", "mock_g", "mock_get", "mock_get_projects", "mock_main_add", "mock_main_del", "mock_main_get", "mock_remove", "mock_update", "obj", "object", "objects", "pid", "projects", "remove", "self", "set", "staticmethod", "test", "test_objects", "value", "NOTE(danms):", "The", "datetimes", "on", "SQLA", "models", "are", "tz-unaware,\n", "but", "the", "object", "has", "tz-aware", "datetimes.", "If", "we're", "comparing\n", "a", "model", "to", "an", "object", "(as", "opposed", "to", "a", "fake", "dict),", "just\n", "ignore", "the", "datetimes", "in", "the", "comparison.\n", "NOTE(danms):", "Orphan", "this", "to", "avoid", "lazy-loads\n", "NOTE(danms):", "Orphan", "this", "to", "avoid", "lazy-loads\n", "Test", "deleting", "an", "extra_specs", "key", "and", "project\n", "Test", "updating", "an", "extra_specs", "key", "value\n", "Test", "adding", "an", "extra_specs", "and", "project\n", "Test", "deleting", "an", "extra_specs", "key", "and", "project\n", "Test", "updating", "an", "extra_specs", "key", "value\n", "Test", "adding", "an", "extra_specs", "and", "project\n", "First", "call,", "flavor", "not", "found,", "should", "be", "false\n", "Second", "call,", "still", "not", "found,", "make", "sure", "we", "checked", "again\n", "Third,", "flavor", "found,", "should", "be", "true\n", "Fourth,", "flavor", "was", "already", "found,", "shouldn't", "check", "again,", "still", "true\n", "NOTE(danms):", "Run", "this", "test", "local-only", "because", "we", "would", "otherwise\n", "have", "to", "do", "a", "bunch", "of", "change-resetting", "to", "handle", "the", "way", "we", "do\n", "our", "change", "tracking", "for", "special", "attributes", "like", "projects.", "There", "is\n", "nothing", "remotely-concerning", "(see", "what", "I", "did", "there?)", "so", "this", "is", "fine.\n", "Get", "a", "list", "of", "the", "actual", "flavors", "in", "the", "API", "DB\n", "Return", "a", "fake", "flavor", "from", "the", "main", "DB", "query\n", "Make", "sure", "we're", "getting", "all", "flavors", "from", "the", "api", "and", "main\n", "db", "queries"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/238_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_network_util.py": ["DynamicProperty", "False", "GetNetworkWithTheNameTestCase", "None", "ObjectContent", "ResultSet", "True", "collections", "driver", "exception", "fake", "method", "mock", "mock_call_method", "mock_get_host_ref", "module", "name", "net_morefs", "network", "network_util", "networks", "obj", "objects", "port_group", "port_group_spec", "res", "response", "result", "self", "session", "stubs", "super", "test", "token", "value", "vim_util", "vlanid", "vm_util", "vswitch"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/__init__.py": ["XenAPIDriver", "driver"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/250_remove_instance_groups_metadata.py": ["MetaData", "Table", "True", "group_metadata", "meta", "migrate_engine", "shadow_group_metadata", "Remove", "the", "instance_group_metadata", "table."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_wsgi.py": ["CONF", "False", "None", "SSL_CERT_DIR", "TestLoaderNormalFilesystem", "TestLoaderNothingExists", "TestWSGIServerWithSSL", "True", "_", "__file__", "_paste_config", "cfg", "env", "eventlet", "fake_server", "fake_ssl_server", "greetings", "hasattr", "hello_world", "kwargs", "mock", "mock_spawn", "mock_waitall", "nova", "os", "req", "requests", "resp", "response", "self", "server", "sock", "socket", "start_response", "super", "tempfile", "test", "test_app", "testtools", "uri", "url_parser", "utils", "webob", "Unit", "tests", "for", "`nova.wsgi`.\nLoader", "tests", "where", "os.path.exists", "always", "returns", "False.\nLoader", "tests", "with", "normal", "filesystem", "(unmodified", "os.path", "module).\nWSGI", "server", "tests.\nWSGI", "server", "with", "SSL", "tests.static\n", "Default", "is", "16384\n", "test", "normal", "socket", "options", "has", "set", "properly\n", "test", "pools", "waitall", "method", "gets", "called", "while", "stopping", "server\n", "Stopping", "the", "server,", "which", "in", "turn", "sets", "pool", "size", "to", "0\n", "Resetting", "pool", "size", "to", "default\n", "mocking", "eventlet", "spawn", "method", "to", "check", "it", "is", "called", "with\n", "configured", "'client_socket_timeout'", "value.\n", "mocking", "eventlet", "spawn", "method", "to", "check", "it", "is", "called", "with\n", "configured", "'keep_alive'", "value.\n", "test", "normal", "socket", "options", "has", "set", "properly"], "/Users/mehranhassani/repos/nova/nova/tests/unit/keymgr/fake.py": ["None", "configuration", "mock_key_manager", "Implementation", "of", "a", "fake", "key", "manager."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/fixed_ips.py": ["False", "parameter_types", "reserve", "unreserve"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_groups.py": ["ServerGroupsSampleJsonTest", "ServerGroupsV213SampleJsonTest", "api_sample_base", "response", "sample_dir", "scenarios", "self", "subs", "super", "uuid", "Get", "api", "sample", "of", "server", "groups", "get", "request."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_simple_tenant_usage.py": ["CONF", "EPHEMERAL_GB", "FAKE_INST_TYPE", "False", "HOURS", "MEMORY_MB", "NOW", "None", "ROOT_GB", "SERVERS", "START", "STOP", "SimpleTenantUsageControllerTestV21", "SimpleTenantUsageLimitsTestV21", "SimpleTenantUsageTestV21", "TENANTS", "True", "VCPUS", "_fake_instance", "begin", "classmethod", "cls", "context", "controller", "date_url_param", "datetime", "delta", "detailed", "dt", "end", "exception", "expected_attrs", "fake_get_active_by_window_joined", "fake_get_flavor", "fakes", "flavor", "future", "getattr", "host", "i", "instance_id", "int", "j", "len", "limit", "marker", "mock", "mock_get", "nova", "objects", "orig_get_active_by_window_joined", "oslo_policy", "policy", "policy_rule_prefix", "project_id", "range", "req", "res", "res_dict", "rules", "self", "server_uuids", "servers", "simple_tenant_usage", "simple_tenant_usage_v21", "start", "stop", "super", "tenant_id", "test", "timeutils", "type", "uptime", "url", "usage", "usages", "use_slave", "uuids", "version", "vm_state", "vm_states", "webob", "x", "Make", "sure", "that", "get_active_by_window_joined", "is", "only", "called", "with\n", "expected_attrs=['flavor'].\n", "NOTE(lzyeval):", "'detailed=&start=..&end=..'\n", "NOTE(javeme):", "cast", "seconds", "from", "float", "to", "int", "for", "clarity\n", "If", "an", "instance", "is", "not", "deleted", "and", "missing", "type", "information", "from\n", "instance.flavor,", "then", "that's", "a", "bug\n", "If", "the", "flavor", "is", "not", "found", "from", "the", "instance", "and", "the", "instance", "is\n", "deleted,", "attempt", "to", "look", "it", "up", "from", "the", "DB", "and", "if", "found", "we're", "OK.\n", "Verify", "the", "legacy", "behavior", "of", "instance_type_id", "pointing", "to", "a\n", "missing", "type", "being", "non-fatal"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_driver.py": ["FAKE_WIN_2008R2_VERSION", "False", "HyperVDriverTestCase", "NotImplementedError", "_", "_livemigrops", "attr", "bar", "base_driver", "callable", "class_member", "driver", "exception", "fake_event_handler", "fake_instance", "finish_revert_migr", "foo", "getattr", "method", "migr_power_off", "migrate_data", "mock", "mock_InstanceEventHandler", "mock_check_minimum_windows_version", "mock_destroy", "mock_get_console_output", "mock_get_hostutils", "mock_get_serial_console", "mock_hostutils", "mock_instance", "mock_start_console_handlers", "mocked_method", "mtd", "os_win_exc", "platform", "post_live_migration", "pre_live_migration", "response", "safe_utils", "self", "super", "sys", "test_base", "trace", "NOTE(claudiub):", "wrapped", "functions", "do", "not", "keep", "the", "same", "signature", "in\n", "Python", "2.7,", "which", "causes", "this", "test", "to", "fail.", "Instead,", "we", "should\n", "compare", "the", "public", "API", "signatures", "of", "the", "unwrapped", "methods.\n", "exception", "has", "been", "raised", "as", "expected.\n", "iterate", "until", "the", "original", "exception", "source,", "bar.\n", "original", "frame", "will", "contain", "the", "'foo'", "variable."], "/Users/mehranhassani/repos/nova/nova/cmd/xvpvncproxy.py": ["config", "gmr", "logging", "service", "sys", "version", "wsgi_server", "xvp_proxy", "XVP", "VNC", "Console", "Proxy", "Server."], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/vim_util.py": ["CONF", "False", "None", "all", "base_obj", "base_type", "client_factory", "collector", "d", "dict", "entity", "get_obj_spec", "get_prop_filter_spec", "get_prop_spec", "hasattr", "inner_type", "isinstance", "item", "k", "len", "list", "list_depth", "lst_obj_specs", "mobj", "nova", "obj", "obj_list", "obj_spec", "object_spec", "object_to_dict", "options", "path", "prop_filter_spec", "prop_spec", "properties", "properties_to_collect", "property_filter_spec", "property_spec", "select_set", "session", "six", "spec_type", "traversal_spec", "type", "usecoll", "used", "v", "vim", "vutil", "Gets", "the", "properties", "of", "the", "Managed", "object", "specified.\nGets", "the", "list", "of", "objects", "of", "the", "type", "specified.\nGets", "the", "list", "of", "inner", "objects", "of", "the", "type", "specified.\nBuilds", "the", "Property", "Spec", "Object.\nBuilds", "the", "Object", "Spec", "object.\nBuilds", "the", "Property", "Filter", "Spec", "Object.\nGet", "the", "About", "Info", "from", "the", "service", "content."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/aoe.py": ["CONF", "LOG", "LibvirtAOEVolumeDriver", "None", "True", "__name__", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "host", "libvirt_volume", "logging", "mount_device", "nova", "self", "super", "utils", "Driver", "to", "attach", "AoE", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt.\nDetach", "the", "volume", "from", "instance_name.", "Call", "the", "factory", "here", "so", "we", "can", "support\n", "more", "than", "x86", "architectures."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/022_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/scheduler/driver.py": ["CONF", "True", "abc", "context", "driver", "nova", "object", "objects", "self", "service", "servicegroup", "services", "six", "spec_obj", "topic", "The", "base", "class", "that", "all", "Scheduler", "classes", "should", "inherit", "from.\nManager", "calls", "this", "so", "drivers", "can", "perform", "periodic", "tasks.\nReturn", "the", "list", "of", "hosts", "that", "have", "a", "running", "service", "for", "topic."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_image_props_filters.py": ["None", "TestImagePropsFilter", "True", "capabilities", "fakes", "host", "hypervisor_version", "image_props_filter", "img_props", "obj_fields", "objects", "self", "spec_obj", "super", "test", "versionutils", "if", "an", "old", "image", "has", "'pv'", "for", "a", "vm_mode", "it", "should", "be", "treated", "as", "xen\n", "if", "an", "old", "image", "has", "'hv'", "for", "a", "vm_mode", "it", "should", "be", "treated", "as", "xen\n", "if", "an", "old", "image", "has", "'x86_32'", "for", "arch", "it", "should", "be", "treated", "as", "i686\n", "if", "an", "old", "image", "has", "'xapi'", "for", "hv_type", "it", "should", "be", "treated", "as", "xen\n", "if", "an", "old", "image", "has", "'baremetal'", "for", "vmmode", "it", "should", "be\n", "treated", "as", "hvm"], "/Users/mehranhassani/repos/nova/nova/conf/cinder.py": ["True", "cfg", "cinder_group", "cinder_opts", "conf", "ks_loading"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_flavor_model.py": ["False", "True", "api_models", "columns_flavor_extra_specs", "columns_flavor_projects", "columns_flavors", "columns_instance_type_extra_specs", "columns_instance_type_projects", "columns_instance_types", "columns_list", "columns_new", "columns_old", "flavor_extra_specs", "flavor_projects", "flavors", "instance_type_extra_specs", "instance_types", "instance_types_projects", "intersect", "m", "model", "models", "self", "set", "test"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/volumeops.py": ["BaseVolumeDriver", "CONF", "Exception", "FCVolumeDriver", "False", "ISCSIVolumeDriver", "LOG", "None", "SMBFSVolumeDriver", "True", "VolumeOps", "_", "_LE", "_LI", "_LW", "__name__", "_extra_connector_args", "_is_block_dev", "_protocol", "actual_disk_mapping", "actual_disk_path", "args", "block_device_info", "block_mapping", "conn", "connection_info", "connector", "constants", "ctrller_path", "dev_info", "dict", "disk_bus", "disk_number", "disk_path", "disk_path_mapping", "disk_paths", "disk_qos_specs", "disk_res_path", "disk_serial", "driver", "driver_type", "err_msg", "ex", "exception", "export_path", "export_path_synchronized", "f", "inner", "inst", "instance_name", "int", "kwargs", "logging", "mapping", "msg", "no_bytes", "nova", "object", "property", "qos_specs", "scan_attempts", "scan_interval", "self", "serial", "set", "slot", "staticmethod", "strutils", "super", "supported_qos_specs", "time", "total_bytes_sec", "total_iops_sec", "tries_left", "unsupported_specs", "utils", "utilsfactory", "vm_disk", "vm_disk_mapping", "vol", "vol_id", "volume_driver", "volumes", "wrapper", "Mapping", "containing", "the", "current", "disk", "paths", "for", "each", "volume.\n", "Mapping", "containing", "virtual", "disk", "resource", "path", "and", "the", "physical\n", "disk", "path", "for", "each", "volume", "serial", "number.", "The", "physical", "path\n", "associated", "with", "this", "resource", "may", "not", "be", "the", "right", "one,\n", "as", "physical", "disk", "paths", "can", "get", "swapped", "after", "host", "reboots.\n", "NOTE(lpetrut):", "the", "Windows", "os-brick", "connectors\n", "do", "not", "use", "a", "root", "helper.\n", "Hyper-v", "uses", "normalized", "IOPS", "(8", "KB", "increments)\n", "as", "IOPS", "allocation", "units.\n", "We", "need", "the", "Msvm_DiskDrive", "resource", "path", "as", "this\n", "will", "be", "used", "when", "the", "disk", "is", "attached", "to", "an", "instance.\n", "We", "need", "to", "tag", "physical", "disk", "resources", "with", "the", "volume\n", "serial", "number,", "in", "order", "to", "be", "able", "to", "retrieve", "them\n", "during", "live", "migration.\n", "Find", "the", "IDE", "controller", "for", "the", "vm.\n", "Attaching", "to", "the", "first", "slot\n", "Find", "the", "SCSI", "controller", "for", "the", "vm\n", "We", "synchronize", "those", "operations", "based", "on", "the", "share", "path", "in", "order", "to\n", "avoid", "the", "situation", "when", "a", "SMB", "share", "is", "unmounted", "while", "a", "volume\n", "exported", "by", "it", "is", "about", "to", "be", "attached", "to", "an", "instance."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/scaleio.py": ["CONF", "False", "LOG", "LibvirtScaleIOVolumeDriver", "None", "__name__", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "host", "libvirt_volume", "logging", "nova", "self", "super", "utils", "Libvirt", "volume", "driver", "for", "ScaleIO."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_baserpc.py": ["BaseAPITestCase", "CONF", "baserpc", "context", "nova", "res", "self", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_vmops.py": ["DsPathMatcher", "False", "None", "True", "VMwareVMOpsTestCase", "_call_method", "_fetch_image", "_find_rescue", "_generate_uuid", "_get_dc_ref_and_name", "_get_extra_specs", "_get_img_svc", "_get_instance_metadata", "_get_inventory_path", "_get_vm_ref", "_mock_cont", "_network_api", "_power_off", "_power_on_instance", "_vcvmops", "_volumeops", "_wait_for_task", "actual", "adapter_type", "admin_password", "args", "backing", "base_folder", "base_name", "bdi", "bdm", "bdms", "block_device_info", "build_virtual_machine", "c", "cache", "cache_image_folder", "cache_image_path", "cache_path", "cache_root_folder", "calls", "cluster", "config_drive", "connection_info", "connection_info1", "connection_info2", "connection_info3", "console", "constants", "context", "cookies", "cpu_limits", "create_and_attach", "create_and_attach_thin_disk", "create_folders", "data", "datacenter_moref", "datastore", "datastores", "dc", "dc_info", "dc_name", "dc_ref", "dest_file", "detach_devices", "device", "devices", "disk_type", "driver", "ds", "ds_browser", "ds_name", "ds_obj", "ds_path_param", "ds_ref", "ds_ref_exists", "ds_util", "enlist_image", "eph0_path", "eph1_path", "ephemerals", "exception", "expected", "expected_args", "expected_calls", "expected_ds_path_str", "expected_image_path", "expected_image_path_parent", "expected_method", "expected_methods", "expected_path_to_create", "expected_tmp_dir_path", "extra_specs", "extras", "fake_call", "fake_call_method", "fake_copy_task", "fake_debug", "fake_disk_copy", "fake_disk_delete", "fake_disk_move", "fake_ds_ref", "fake_extend", "fake_flavor", "fake_get_browser", "fake_get_dc_ref_and_name", "fake_get_extra_specs", "fake_get_metadata", "fake_get_vm_ref", "fake_get_vmdk_info", "fake_instance", "fake_invoke", "fake_objects", "fake_original_exists", "fake_path", "fake_power_off", "fake_power_on", "fake_progress", "fake_reconfigure", "fake_reconfigure_vm", "fake_remove_ephemerals_and_swap", "fake_resize_create_ephemerals_and_swap", "fake_resize_disk", "fake_resize_spec", "fake_resize_vm", "fake_update_instance_progress", "fake_vmdk_info", "fetch_image", "file_path", "file_size", "file_type", "flavor", "flavor_extra_specs", "flavor_fits_image", "flavor_root_gb", "folder_name", "from_image", "get_ephemerals", "get_extra_specs", "get_swap", "get_vm_config_info", "hardware", "host", "i", "image", "image_ds_loc", "image_id", "image_info", "image_size", "image_size_bytes", "images", "info", "injected_files", "instance_ds_ref", "int", "invalid_vm1", "invalid_vm2", "invoke_api", "is_image_used", "is_iso", "is_sparse_disk", "jsonutils", "kwargs", "len", "linked_clone", "memory_limits", "metadata", "method", "method_list", "mock", "mock_attach", "mock_attach_cdrom", "mock_attach_cdrom_to_vm", "mock_attach_disk", "mock_attach_disk_to_vm", "mock_attach_root", "mock_build_virtual_machine", "mock_caa", "mock_cache", "mock_cache_flat_image", "mock_cache_iso_image", "mock_cache_sparse_image", "mock_call_method", "mock_check_cache_folder", "mock_configure_config_drive", "mock_copy_virtual_disk", "mock_create", "mock_create_config_drive", "mock_create_ephemeral", "mock_create_folder", "mock_create_folders", "mock_create_swap", "mock_create_virtual_disk", "mock_create_vm", "mock_debug", "mock_delete_datastore_file", "mock_detach_disk", "mock_disk_copy", "mock_disk_move", "mock_enlist_image", "mock_extend_virtual_disk", "mock_extra_specs", "mock_fetch_image", "mock_fetch_image_as_file", "mock_fetch_image_if_missing", "mock_file_move", "mock_find_rescue", "mock_generate_uuid", "mock_get_and_set_vnc_config", "mock_get_attach_port_index", "mock_get_boot_spec", "mock_get_create_spec", "mock_get_datacenter_ref_and_name", "mock_get_datastore", "mock_get_datastore_by_ref", "mock_get_dc_ref_and_name", "mock_get_detach_port_index", "mock_get_ds_by_ref", "mock_get_esx_host_and_cookies", "mock_get_inventory_path", "mock_get_network_attach_config_spec", "mock_get_network_detach_config_spec", "mock_get_network_device", "mock_get_vif_info", "mock_get_vm_config_info", "mock_get_vm_ref", "mock_get_vmdk_info", "mock_glance", "mock_imagecache", "mock_is_neutron", "mock_lock", "mock_mkdir", "mock_power_off", "mock_power_on", "mock_power_on_instance", "mock_prepare", "mock_prepare_flat_image", "mock_prepare_iso_image", "mock_prepare_sparse_image", "mock_reconfigure", "mock_reconfigure_vm", "mock_save", "mock_set_machine_id", "mock_sized_image_exists", "mock_update_image_size", "mock_update_vnic_index", "mock_vi", "mock_vo", "module", "moref", "name", "network", "network_info", "network_model", "nova", "obj_content", "object", "objects", "ops", "optval", "path", "power_on", "power_on_instance", "power_state", "prop_cpu", "prop_list", "prop_mem", "prop_state", "props", "pure_IPv6_network", "range", "reboot_type", "recorded_methods", "rename_vm", "rescue_path", "resize_instance", "result", "ret", "self", "setattr", "six", "size", "sized_cached_image_ds_loc", "snap", "source_file", "sparse_disk_path", "str", "stubs", "subnet_4", "subnet_6", "super", "swap", "swap_path", "target_disk_path", "task_info", "test", "ticket", "tmp_dir_loc", "tmp_dir_path", "tmp_image_ds_loc", "tmp_image_path", "tool_status", "units", "upload_file_name", "upload_iso_path", "use_disk_image", "utils", "uuid", "uuidsentinel", "uuidutils", "valid_vm", "version", "vexc", "vi", "vif", "vif_info", "vif_limits", "vim_util", "vm", "vm_ref", "vm_util", "vmdk", "vmops", "vms", "vmwareapi_fake", "volumeops", "vsphere_location", "vutil", "wait_for_task", "with_root_disk", "x", "Tests", "the", "finish_revert_migration", "method", "on", "vmops.\nTests", "the", "confirm_migration", "method", "on", "vmops.',", "result)\n',", "result)\n", "Token", "is", "set", "for", "the", "fake_object1,", "so", "it", "will", "continue", "to\n", "fetch", "the", "next", "object.\n", "Validate", "VM", "reconfiguration\n", "Validate", "disk", "configuration\n", "Very", "simple", "test", "that", "just", "ensures", "block_device_info", "auth_password\n", "is", "masked", "when", "logged;", "the", "rest", "of", "the", "test", "just", "fails", "out", "early.\n", "Tests", "that", "the", "parameters", "to", "the", "to_xml", "method", "are", "sanitized", "for\n", "passwords", "when", "logged.\n", "Call", "spawn().", "We", "don't", "care", "what", "it", "does", "as", "long", "as", "it", "generates\n", "the", "log", "message,", "which", "we", "check", "below.\n", "Check", "that", "the", "relevant", "log", "message", "was", "generated,", "and", "therefore\n", "that", "we", "checked", "it", "was", "scrubbed\n", "TODO(vui):", "More", "explicit", "assertions", "of", "spawn()", "behavior\n", "are", "waiting", "on", "additional", "refactoring", "pertaining", "to", "image\n", "handling/manipulation.", "Till", "then,", "we", "continue", "to", "assert", "on", "the\n", "sequence", "of", "VIM", "operations", "invoked.\n", "Last", "call", "should", "be", "renaming", "the", "instance\n", "TODO(dims):", "Need", "to", "add", "tests", "for", "create_virtual_disk", "after", "the\n", "disk/image", "code", "in", "spawn", "gets", "refactored\n", "TODO(dims):", "add", "more", "tests", "for", "copy_virtual_disk", "after\n", "the", "disk/image", "code", "in", "spawn", "gets", "refactored\n", "_create_and_attach_thin_disk", "should", "be", "called", "for", "each", "ephemeral\n", "and", "swap", "disk\n", "Test", "basic", "VM", "parameters\n", "Test", "NSX", "config\n", "Test", "that", "the", "VM", "is", "associated", "with", "the", "specified", "datastore\n", "Test", "that", "the", "VM's", "network", "is", "configured", "as", "specified\n", "Validate", "that", "the", "extra", "specs", "are", "parsed", "correctly"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/267_instance_uuid_non_nullable.py": ["False", "MetaData", "True", "UC_NAME", "UniqueConstraint", "_", "check_fkeys", "col_name", "exception", "fkey", "fkey_found", "fkeys", "instances", "len", "list", "meta", "migrate_engine", "msg", "null", "process_null_records", "records", "reversed", "scan", "scan_for_null_records", "table", "table_name", "NOTE(mriedem):", "filter", "out", "tables", "that", "don't", "have", "a", "foreign", "key", "back\n", "to", "the", "instances", "table", "since", "they", "could", "have", "stale", "data", "even", "if\n", "instances.uuid", "wasn't", "NULL.\n", "NOTE(mriedem):", "There", "is", "a", "periodic", "task", "in", "the", "network", "manager\n", "that", "calls", "nova.db.api.fixed_ip_disassociate_all_by_timeout", "which\n", "will", "set", "fixed_ips.instance_uuid", "to", "None", "by", "design,", "so", "we", "have", "to\n", "skip", "the", "fixed_ips", "table", "otherwise", "we'll", "wipeout", "the", "pool", "of\n", "fixed", "IPs.\n", "The", "record", "is", "gone", "so", "make", "the", "uuid", "column", "non-nullable.\n", "NOTE(mriedem):", "We're", "going", "to", "load", "up", "all", "of", "the", "tables", "so", "we", "can", "find\n", "any", "with", "an", "instance_uuid", "column", "since", "those", "may", "be", "foreign", "keys", "back\n", "to", "the", "instances", "table", "and", "we", "want", "to", "cleanup", "those", "records", "first.", "We\n", "have", "to", "do", "this", "explicitly", "because", "the", "foreign", "keys", "in", "nova", "aren't\n", "defined", "with", "cascading", "deletes.\n", "Scan", "the", "database", "first", "and", "fail", "if", "any", "NULL", "records", "found.\n", "Now", "run", "the", "alter", "statements.\n", "Create", "a", "unique", "constraint", "on", "instances.uuid", "for", "foreign", "keys.\n", "NOTE(mriedem):", "We", "now", "have", "a", "unique", "index", "on", "instances.uuid", "from", "the\n", "216_havana", "migration", "and", "a", "unique", "constraint", "on", "the", "same", "column,", "which\n", "is", "redundant", "but", "should", "not", "be", "a", "big", "performance", "penalty.", "We", "should\n", "clean", "this", "up", "in", "a", "later", "(separate)", "migration", "since", "it", "involves", "dropping\n", "any", "ForeignKeys", "on", "the", "instances.uuid", "column", "due", "to", "some", "index", "rename\n", "issues", "in", "older", "versions", "of", "MySQL.", "That", "is", "beyond", "the", "scope", "of", "this\n", "migration."], "/Users/mehranhassani/repos/nova/nova/ipv6/account_identifier.py": ["TypeError", "_", "addr", "address", "hashlib", "i", "int", "ipv6_address", "isinstance", "mac", "mac_addr", "mac_suffix", "mask1", "maskIP", "netaddr", "prefix", "project_hash", "project_id", "six", "static_num", "IPv6", "address", "generation", "with", "account", "identifier", "embedded."], "/Users/mehranhassani/repos/nova/nova/objects/instance_info_cache.py": ["Exception", "LOG", "None", "True", "VERSION", "_LE", "__name__", "base", "cell_type", "cells_api", "cells_opts", "cells_rpcapi", "classmethod", "cls", "context", "ctxt", "current", "db", "db_obj", "exception", "field", "fields", "getattr", "info_cache", "instance_uuid", "logging", "nw_info_json", "rv", "self", "setattr", "stale_instance", "staticmethod", "update_cells", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Converted", "network_info", "to", "store", "the", "model.\n", "Version", "1.2:", "Added", "new()", "and", "update_cells", "kwarg", "to", "save().\n", "Version", "1.3:", "Added", "delete()\n", "Version", "1.4:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.5:", "Actually", "set", "the", "deleted,", "created_at,", "updated_at,", "and\n", "deleted_at", "attributes\n", "Leave", "the", "fields", "dirty\n", "Send", "a", "copy", "of", "ourselves", "before", "updates", "are", "applied", "so\n", "that", "cells", "can", "tell", "what", "changed."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_blockinfo.py": ["DefaultDeviceNamesTestCase", "False", "LibvirtBlockInfoTest", "None", "True", "_assert_volume_in_mapping", "args", "bdi", "bdm", "bdm_obj", "bdms", "block_dev_info", "block_device", "block_device_info", "block_device_mapping", "blockinfo", "bus", "bus_aarch64", "bus_ppc", "cbus", "config_drive_type", "context", "copy", "dbus", "defaulted", "dev", "device_name", "disk_info", "driver", "driver_bdm", "driver_block_device", "eph", "ephemerals", "exception", "expect", "expect_bus", "expected", "expected_bdm", "expected_ephemeral", "expected_order", "expected_swap", "fake_block_device", "fakelibosinfo", "find_dev", "fixtures", "flavor", "get_bus", "get_flavor", "get_flavor_mock", "got", "guestarch", "has_disk_dev_mock", "hv", "image_meta", "info", "instance", "instance_ref", "mapping", "mock", "mock_find_dev", "mock_get_bus", "mock_get_info", "nova", "obj_fields", "objects", "original", "original_bdm", "patcher", "props", "res", "root_bdm", "self", "super", "swap", "test", "test_instance_with_config", "true_or_false", "uuids", "zip", "m1.tiny\n", "Tests", "that", "an", "exception", "is", "raised", "when", "all", "devices", "for", "a", "given", "prefix\n", "are", "already", "reserved.\n", "The", "simplest", "possible", "disk", "mapping", "setup,", "all", "defaults\n", "Since", "there", "was", "no", "block_device_info", "passed", "to", "get_disk_mapping", "we\n", "expect", "to", "get", "the", "swap", "info", "from", "the", "flavor", "in", "the", "instance.\n", "A", "simple", "disk", "mapping", "setup,", "but", "with", "custom", "root", "device", "name\n", "A", "simple", "disk", "mapping", "setup,", "but", "in", "rescue", "mode\n", "A", "simple", "disk", "mapping", "setup,", "but", "in", "rescue", "mode", "with", "a", "config", "drive\n", "A", "simple", "disk", "mapping", "setup,", "but", "for", "lxc\n", "A", "simple", "disk", "mapping", "setup,", "but", "with", "a", "ISO", "for", "root", "device\n", "A", "simple", "disk", "mapping", "setup,", "but", "with", "a", "swap", "device", "added\n", "A", "disk", "mapping", "setup", "with", "volumes", "attached,", "then", "a", "swap", "device", "added\n", "A", "simple", "disk", "mapping", "setup,", "but", "with", "configdrive", "added\n", "It's", "necessary", "to", "check", "if", "the", "architecture", "is", "power,", "because\n", "power", "doesn't", "have", "support", "to", "ide,", "and", "so", "libvirt", "translate\n", "all", "ide", "calls", "to", "scsi\n", "Pick", "the", "first", "drive", "letter", "on", "the", "bus", "that", "is", "available\n", "as", "the", "config", "drive.", "Delete", "the", "last", "device", "hardcode", "as\n", "the", "config", "drive", "here.\n", "A", "simple", "disk", "mapping", "setup,", "with", "configdrive", "added", "as", "cdrom\n", "It's", "necessary", "to", "check", "if", "the", "architecture", "is", "power,", "because\n", "power", "doesn't", "have", "support", "to", "ide,", "and", "so", "libvirt", "translate\n", "all", "ide", "calls", "to", "scsi\n", "A", "simple", "disk", "mapping", "setup,", "with", "configdrive", "added", "as", "disk\n", "A", "disk", "mapping", "with", "ephemeral", "devices\n", "A", "disk", "mapping", "with", "a", "swap", "device", "at", "position", "vdb.", "This\n", "should", "cause", "disk.local", "to", "be", "removed\n", "A", "disk", "mapping", "with", "a", "blockdev", "replacing", "the", "default", "root\n", "A", "disk", "mapping", "with", "a", "blockdev", "initializing", "the", "default", "root\n", "A", "disk", "mapping", "with", "a", "blockdev", "replacing", "the", "ephemeral", "device\n", "A", "disk", "mapping", "with", "a", "blockdev", "replacing", "all", "devices\n", "The", "strangest", "possible", "disk", "mapping", "setup\n", "we", "should", "have", "gotten", "the", "swap", "info", "from", "block_device_info", "rather\n", "than", "the", "flavor", "information", "on", "the", "instance\n", "Test", "that", "passed", "bus", "and", "type", "are", "considered\n", "Test", "that", "lame", "bus", "values", "are", "defaulted", "properly\n", "Test", "that", "missing", "device", "is", "defaulted", "as", "expected\n", "The", "evacuate", "operation", "passes", "image_ref=None", "to", "the", "compute", "node", "for\n", "rebuild", "which", "then", "defaults", "image_meta", "to", "{},", "so", "we", "don't", "have", "any\n", "attributes", "in", "the", "ImageMeta", "object", "passed", "to", "get_root_info", "and", "we\n", "need", "to", "make", "sure", "we", "don't", "try", "lazy-loading", "anything.\n", "No", "root_device_name\n", "Both", "device", "names\n", "Missing", "device", "names\n", "Test", "no-op\n", "Assert", "it", "defaults", "the", "missing", "one", "as", "expected\n", "Test", "ephemeral", "gets", "assigned\n", "Test", "swap", "only\n", "Test", "swap", "and", "block_device_mapping\n", "Test", "swap", "missing\n", "Test", "swap", "and", "eph", "missing\n", "Test", "all", "missing"], "/Users/mehranhassani/repos/nova/nova/policies/admin_actions.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "admin_actions_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/327_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_instance_group.py": ["InstanceGroupObjectTestCase", "None", "_mock_notify", "api_groups", "api_models", "base", "context", "create_group", "db_api", "db_group", "done", "exception", "field", "get_group", "get_groups", "group", "i", "ignore_fields", "instance_group", "key_func", "len", "main_groups", "members", "mock", "model", "new_member", "objects", "orig_main_models", "ovo_fixture", "policies", "range", "self", "sorted", "super", "test", "total", "uuids", "vals", "values", "x", "This", "only", "fetches", "from", "the", "api", "db\n", "This", "only", "fetches", "from", "the", "main", "db\n", "Verify", "the", "api_models", "have", "all", "their", "attributes", "set", "properly\n", "Filter", "out", "the", "group", "that", "was", "created", "in", "the", "api", "db", "originally"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_migrate_data.py": ["False", "None", "True", "_TestHyperVLiveMigrateData", "_TestLibvirtLiveMigrateData", "_TestLiveMigrateData", "_TestPowerVMLiveMigrateData", "_TestXenapiLiveMigrateData", "dict", "expected", "expected_info", "field", "getattr", "leg", "legacy", "migrate_data", "migration", "obj", "obj2", "object", "objects", "primitive", "props", "self", "staticmethod", "test_bdmi", "test_objects"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_rdpconsoleops.py": ["RDPConsoleOpsTestCase", "connect_info", "mock", "mock_get_host_ip", "mock_get_rdp_port", "mock_get_vm_id", "rdpconsoleops", "self", "super", "test_base"], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/027_quotas.py": ["Column", "DateTime", "False", "ForeignKey", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "meta", "migrate_engine", "project_user_quotas", "quota_classes", "quota_usages", "quotas", "reservations", "uniq_name", "API", "Database", "migrations", "for", "quotas"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_tags.py": ["ALIAS", "ServerTagsController", "_", "_get_tags_names", "_view_builder_class", "action", "alias", "body", "common", "compute", "context", "dict", "e", "exc", "exception", "exists", "extensions", "id", "instance", "jsonschema", "len", "msg", "name", "objects", "parameter_types", "req", "res", "response", "schema", "self", "server_id", "server_tags", "st_policies", "super", "t", "tag", "tags", "validation", "version", "vm_states", "webob", "wsgi", "Server", "tags", "support.", "NOTE(snikitin):", "server", "already", "has", "specified", "tag"], "/Users/mehranhassani/repos/nova/nova/objects/monitor_metric.py": ["FIELDS_REQUIRING_CONVERSION", "False", "MonitorMetric", "MonitorMetricList", "True", "VERSION", "base", "classmethod", "cls", "dict_to_return", "fields", "jsonutils", "m", "metric", "metric_list", "metrics", "primitive", "self", "super", "target_version", "utils", "versionutils", "NOTE(jwcroppe):", "Used", "to", "determine", "which", "fields", "whose", "value", "we", "need", "to", "adjust\n", "(read:", "divide", "by", "100.0)", "before", "sending", "information", "to", "the", "RPC", "notifier", "since\n", "these", "values", "were", "expected", "to", "be", "within", "the", "range", "[0,", "1].\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "NUMA", "support\n", "This", "will", "be", "the", "stevedore", "extension", "full", "class", "name\n", "for", "the", "plugin", "from", "which", "the", "metric", "originates.\n", "NOTE(jaypipes):", "This", "method", "exists", "to", "convert", "the", "object", "to", "the\n", "format", "expected", "by", "the", "RPC", "notifier", "for", "metrics", "events.\n", "NOTE(jaypipes):", "This", "is", "what", "jsonutils.dumps()", "does", "to\n", "datetime.datetime", "objects,", "which", "is", "what", "timestamp", "is", "in\n", "this", "object", "as", "well", "as", "the", "original", "simple", "dict", "metrics\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "MonitorMetric", "version", "1.1\n", "NOTE(suro-patz):", "While", "instantiating", "the", "MonitorMetric()", "from\n", "JSON-ified", "string,", "we", "need", "to", "re-convert", "the\n", "normalized", "metrics", "to", "avoid", "truncation", "to", "0", "by\n", "typecasting", "into", "an", "integer.\n", "NOTE(jaypipes):", "This", "method", "exists", "to", "convert", "the", "object", "to", "the\n", "format", "expected", "by", "the", "RPC", "notifier", "for", "metrics", "events."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/retry_filter.py": ["LOG", "True", "_LI", "__name__", "cn", "filters", "host", "host_state", "hosts", "logging", "passes", "retry", "self", "spec_obj", "Skip", "nodes", "that", "have", "already", "been", "attempted.", "Re-scheduling", "is", "disabled\n", "TODO(sbauza):", "Once", "the", "HostState", "is", "actually", "a", "ComputeNode,", "we", "could\n", "easily", "get", "this", "one...\n", "TODO(sbauza)...", "and", "we", "wouldn't", "need", "to", "primitive", "the", "hosts", "into\n", "lists\n", "Host", "passes", "if", "it's", "not", "in", "the", "list", "of", "previously", "attempted", "hosts:"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_fixed_ips.py": ["FakeModel", "False", "FixedIpDeprecationTest", "FixedIpTestV21", "None", "NotImplementedError", "True", "action", "address", "api_version_request", "body", "columns_to_join", "context", "exception", "exp", "fake_fixed_ip_get_by_address", "fake_fixed_ip_update", "fake_fixed_ips", "fakes", "fixed_ip", "fixed_ips", "fixed_ips_v21", "key", "msg", "name", "network", "object", "os_wsgi", "req", "res_dict", "response", "result", "ret", "self", "super", "test", "test_network", "url", "uuids", "values", "webob", "wsgi_api_version", "Stubs", "out", "for", "model."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/hgst.py": ["CONF", "LibvirtHGSTVolumeDriver", "None", "True", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "host", "libvirt_volume", "mount_device", "nova", "self", "super", "utils", "Driver", "to", "attach", "HGST", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_migrationops.py": ["False", "IOError", "MigrationOpsTestCase", "None", "True", "_FAKE_DISK", "_FAKE_RETRY_INTERVAL", "_FAKE_TIMEOUT", "base_vhd_copy_path", "bdi", "block_device_info", "check_remove_dir", "check_shared_storage", "constants", "dest_instance_path", "dict", "disk_files", "disk_name", "disk_type", "eph", "ephemerals", "exception", "existing_eph_path", "expected", "expected_check_resize", "expected_get_dir", "expected_get_info", "expected_move_calls", "fake_base_vhd", "fake_base_vhd_path", "fake_dest_path", "fake_diff_vhd_path", "fake_disk_file", "fake_disk_files", "fake_instance", "fake_src_vhd_path", "fake_vhd_path", "flavor", "get_cached_image", "get_image_vm_gen", "get_instance_migr_revert_dir", "get_revert_dir", "get_vhd_info", "get_vhd_parent_path", "instance", "instance_path", "len", "lookup_eph_path", "lookup_root_vhd", "migrationops", "mock", "mock_check_attach_config_drive", "mock_check_base_disk", "mock_check_eph_disks", "mock_check_flavor", "mock_check_resize_vhd", "mock_cleanup", "mock_ephemerals", "mock_flavor", "mock_get_eph_vhd_path", "mock_get_vhd_format", "mock_get_vm_st_path", "mock_image", "mock_instance", "mock_merge_base_vhd", "mock_migrate_disk_files", "mock_pathutils", "mock_resize_vhd", "mock_revert_migration_files", "mock_vhd_info", "mock_vhdutils", "mock_vmops", "mock_warn", "move_folder_files", "network_info", "new_eph_size", "new_vhd_size", "objects", "os", "os_win_exc", "recon_parent_vhd", "root_device", "root_device_path", "self", "shared_storage", "super", "test", "test_base", "units", "volume_drives", "Unit", "tests", "for", "the", "Hyper-V", "MigrationOps", "class."], "/Users/mehranhassani/repos/nova/nova/policies/hypervisors.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "hypervisors_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/conf/ipv6.py": ["IPV6_OPTS", "cfg", "conf"], "/Users/mehranhassani/repos/nova/nova/servicegroup/drivers/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/conf/workarounds.py": ["ALL_OPTS", "False", "True", "cfg", "conf", "workarounds_group"], "/Users/mehranhassani/repos/nova/nova/pci/stats.py": ["CONF", "False", "LOG", "None", "PciDeviceStats", "True", "_LE", "__name__", "all", "alloc_devices", "any", "cell", "cfg", "copy", "count", "d", "dev", "dev_filter", "dev_pool", "devspec", "entry", "exception", "fields", "free_devs", "getattr", "item", "iter", "k", "len", "logging", "matching_keys", "matching_pools", "num_alloc", "numa_cells", "object", "other", "parent", "pci_dev", "pci_device_pool", "pci_pool", "pci_requests", "pool", "pool_keys", "pool_list", "pools", "prop", "r", "range", "request", "request_specs", "requests", "self", "six", "spec", "staticmethod", "stats", "sum", "super", "tags", "tmp", "utils", "v", "vf", "vfs_list", "whitelist", "x", "Return", "the", "first", "pool", "that", "matches", "dev.\nAdd", "a", "device", "to", "its", "matching", "pool.\nRemove", "one", "device", "from", "the", "first", "pool", "that", "it", "matches.\nClear", "all", "the", "stats", "maintained.\nReturn", "the", "contents", "of", "the", "pools", "as", "a", "PciDevicePoolList", "object.", "NOTE(sbauza):", "Stats", "are", "a", "PCIDevicePoolList", "object\n", "Don't", "add", "a", "device", "that", "doesn't", "have", "a", "matching", "device", "spec.\n", "This", "can", "happen", "during", "initial", "sync", "up", "with", "the", "controller\n", "For", "now,", "keep", "the", "same", "algorithm", "as", "during", "scheduling:\n", "a", "spec", "may", "be", "able", "to", "match", "multiple", "pools.\n", "Failed", "to", "allocate", "the", "required", "number", "of", "devices\n", "Return", "the", "devices", "already", "allocated", "back", "to", "their", "pools\n", "Make", "sure", "not", "to", "decrease", "PF", "pool", "count", "if", "this", "parent", "has\n", "been", "already", "removed", "from", "pools\n", "Some", "systems", "don't", "report", "numa", "node", "info", "for", "pci", "devices,", "in\n", "that", "case", "None", "is", "reported", "in", "pci_device.numa_node,", "by", "adding", "None\n", "to", "numa_cells", "we", "allow", "assigning", "those", "devices", "to", "instances", "with\n", "numa", "topology\n", "filter", "out", "pools", "which", "numa_node", "is", "not", "included", "in", "numa_cells\n", "Remove", "SRIOV_PFs", "from", "pools,", "unless", "it", "has", "been", "explicitly", "requested\n", "This", "is", "especially", "needed", "in", "cases", "where", "PFs", "and", "VFs", "has", "the", "same\n", "product_id.\n", "NOTE(vladikr):", "This", "code", "maybe", "open", "to", "race", "conditions.\n", "Two", "concurrent", "requests", "may", "succeed", "when", "called", "support_requests\n", "because", "this", "method", "does", "not", "remove", "related", "devices", "from", "the", "pools\n", "note", "(yjiang5):", "this", "function", "has", "high", "possibility", "to", "fail,\n", "so", "no", "exception", "should", "be", "triggered", "for", "performance", "reason.\n", "'devices'", "shouldn't", "be", "part", "of", "stats"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extensions.py": ["alias", "app", "compute", "exception", "ext", "ext_has_inherits", "ext_no_inherits", "extension_info", "extensions", "fake_bad_extension", "fake_func", "loaded_ext_info", "mock", "mock_register", "name", "name_list", "object", "self", "test", "webob", "os-volumes", "inherits", "from", "servers"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/floating_ip_dns.py": ["ALIAS", "FloatingIPDNSDomainController", "FloatingIPDNSEntryController", "MAX_PROXY_API_SUPPORT_VERSION", "None", "NotImplementedError", "_", "_create_dns_entry", "_create_domain_entry", "_translate_dns_entries_view", "_translate_dns_entry_view", "_translate_domain_entries_view", "_translate_domain_entry_view", "_unquote_domain", "address", "alias", "area", "area_name", "av_zone", "body", "common", "context", "create_dns_domain", "dns_entries", "dns_entry", "dns_type", "domain", "domain_entries", "domain_entry", "domain_id", "domainlist", "domains", "e", "entries", "entry", "entrylist", "exception", "explanation", "extensions", "fid_policies", "floating_ip", "floating_ip_dns", "fqdomain", "id", "ip", "msg", "name", "netutils", "network", "project", "req", "res", "resources", "result", "scope", "self", "super", "urllib", "validation", "version", "webob", "wsgi", "DNS", "domain", "controller", "for", "OpenStack", "API.\nReturn", "a", "list", "of", "available", "DNS", "domains.\nAdd", "or", "modify", "domain", "entry.\nDelete", "the", "domain", "identified", "by", "id.\nDNS", "Entry", "controller", "for", "OpenStack", "API.\nReturn", "the", "DNS", "entry", "that", "corresponds", "to", "domain_id", "and", "id.\nAdd", "or", "modify", "dns", "entry.\nDelete", "the", "entry", "identified", "by", "req", "and", "id.\nFloating", "IP", "DNS", "support.", "Delete", "the", "whole", "domain\n", "Check", "whether", "id", "is", "a", "valid", "ipv4/ipv6", "address.\n", "create!\n", "modify!"], "/Users/mehranhassani/repos/nova/nova/api/auth.py": ["CONF", "InjectContext", "LOG", "None", "ValueError", "_", "_LW", "__name__", "_load_pipeline", "app", "args", "catalog_header", "context", "ctx", "filter", "filters", "global_conf", "jsonutils", "kwargs", "loader", "local_conf", "logging", "n", "nova", "pipeline", "remote_address", "req", "self", "service_catalog", "super", "user_auth_plugin", "versionutils", "webob", "wsgi", "A", "paste", "pipeline", "replica", "that", "keys", "off", "of", "auth_strategy.\nA", "paste", "pipeline", "replica", "that", "keys", "off", "of", "auth_strategy.\nAdd", "a", "'nova.context'", "to", "WSGI", "environ.\nMake", "a", "request", "context", "from", "keystone", "headers.", "Build", "a", "context,", "including", "the", "auth_token...\n", "NOTE(jamielennox):", "This", "is", "a", "full", "auth", "plugin", "set", "by", "auth_token\n", "middleware", "in", "newer", "versions."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/225_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/cells/messaging.py": ["AttributeError", "CONF", "Exception", "False", "ImportError", "KeyError", "LOG", "None", "NotImplementedError", "Response", "True", "TypeError", "_", "_BaseMessage", "_BaseMessageMethods", "_BroadcastMessage", "_BroadcastMessageMethods", "_CELL_MESSAGE_TYPE_TO_MESSAGE_CLS", "_CELL_MESSAGE_TYPE_TO_METHODS_CLS", "_LE", "_LI", "_LW", "_PATH_CELL_SEP", "_REMOTE_POSTFIX", "_ResponseMessage", "_ResponseMessageMethods", "_TargetedMessage", "_TargetedMessageMethods", "__name__", "_dict", "_response_cell_name_from_path", "_reverse_path", "_sep", "action", "action_events", "action_id", "actions", "admin_password", "admin_state_reset", "allowed_remote_exmods", "args", "backup_type", "base", "base_attrs_to_json", "bdm", "binary", "block_migration", "build_inst_kwargs", "bw_update_info", "call", "capabilities", "capabs", "capacities", "cctxt", "cell", "cell_name", "cell_type", "cells_scheduler_cls", "cells_state", "cells_utils", "child_cell", "child_cells", "classmethod", "clean_shutdown", "cls", "cls_name", "compute", "compute_id", "compute_rpcapi", "console_port", "console_type", "consoleauth_rpcapi", "context", "create", "ctxt", "current_hops", "data", "delete_type", "deleted", "deserialize_remote_exception", "dest_hops", "dest_name_parts", "detail", "dev_name", "device_name", "dict", "direction", "disabled", "disk_over_commit", "do_cast", "err_str", "ex_type", "exc_info", "exception", "excutils", "expected_attrs", "expected_task_state", "expected_task_state_map", "expected_vm_state", "expected_vm_state_map", "extra_instance_updates", "extra_kwargs", "failure", "failure_info", "fanout", "fault", "files_to_inject", "filters", "flavor", "fn", "getattr", "hasattr", "hop_count", "host", "host_name", "hypervisor_match", "image_href", "image_id", "importutils", "instance", "instance_bdm", "instance_bdms", "instance_fault", "instance_uuid", "instances", "isinstance", "issubclass", "items_to_remove", "json_data", "json_message", "json_response", "json_responses", "jsonutils", "k", "key", "klass", "kwargs", "len", "list", "local_response", "log_failure", "logging", "max_hop_count", "message", "message_cls", "message_dict", "message_type", "messaging", "method", "method_info", "method_kwargs", "method_name", "methods", "mod", "mod_name", "module", "msg_runner", "msg_type", "my_cell_info", "name", "need_response", "neighbor_only", "new_ex_type", "new_pass", "next_hop", "next_hop_name", "next_hop_num", "next_hops", "nova", "num_responses", "object", "objects", "objects_base", "orig_message", "params_to_update", "parent_cell_names", "parent_cells", "path", "path_parts", "period_beginning", "period_ending", "preserve_ephemeral", "project_id", "projid_str", "queue", "range", "reason", "reason_args", "reboot_type", "remote_response", "remote_responses", "request_id", "resp_queue", "resp_value", "response", "response_kwargs", "response_uuid", "responses", "ret_services", "rotation", "routing_path", "rpc", "rpc_message", "run_locally", "self", "serialize_remote_exception", "server", "service", "service_id", "services", "since_str", "six", "state", "state_manager", "staticmethod", "str", "str_override", "super", "sys", "target_cell", "target_cells", "target_hops", "task_logs", "task_name", "task_states", "tb", "timeout", "timeutils", "topic", "trace", "traceback", "tuple", "type", "updated_since", "user_id", "utils", "uuid", "uuidutils", "v", "val", "value", "values", "vm_states", "vol_id", "volume_id", "wait_for_response", "wait_time", "x", "Reverse", "a", "path.", "Used", "for", "sending", "responses", "upstream.\nAdd", "our", "hop", "to", "the", "routing_path.\nShortcut", "to", "creating", "a", "response", "queue", "in", "the", "MessageRunner.\nShortcut", "to", "deleting", "a", "response", "queue", "in", "the", "MessageRunner.\nConvert", "a", "message", "to", "a", "dictionary.", "Only", "used", "internally.\nConvert", "a", "message", "into", "JSON", "for", "sending", "to", "a", "sibling", "cell.\nDid", "this", "cell", "create", "this", "message?\nSend", "a", "message", "to", "multiple", "cells.\nBase", "class", "for", "defining", "methods", "by", "message", "types.\nParent", "cell", "told", "us", "to", "schedule", "new", "instance", "creation.\nRun", "a", "method", "in", "the", "compute", "api", "class.\nA", "child", "cell", "told", "us", "about", "their", "capabilities.\nA", "child", "cell", "told", "us", "about", "their", "capacity.\nReturn", "the", "service", "entry", "for", "a", "compute", "host.\nDeletes", "the", "specified", "service.\nProxy", "RPC", "to", "the", "given", "compute", "topic.\nGet", "compute", "node", "by", "ID.\nValidate", "console", "port", "with", "child", "cell", "compute", "node.\nUpdate", "an", "instance", "in", "this", "cell.\nStart", "an", "instance", "via", "compute_api.start().\nStop", "an", "instance", "via", "compute_api.stop().\nReboot", "an", "instance", "via", "compute_api.reboot().\nSuspend", "an", "instance", "via", "compute_api.suspend().\nResume", "an", "instance", "via", "compute_api.suspend().\nPause", "an", "instance", "via", "compute_api.pause().\nUnpause", "an", "instance", "via", "compute_api.pause().\nResize", "an", "instance", "via", "compute_api.resize().\nLive", "migrate", "an", "instance", "via", "compute_api.live_migrate().\nRevert", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nConfirm", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nReset", "networking", "for", "an", "instance", "in", "its", "cell.\nInject", "networking", "for", "an", "instance", "in", "its", "cell.\nSnapshot", "an", "instance", "in", "its", "cell.\nBackup", "an", "instance", "in", "its", "cell.\nAre", "we", "the", "API", "level?\nUpdate", "an", "instance", "in", "the", "DB", "if", "we're", "a", "top", "level", "cell.\nDestroy", "an", "instance", "from", "the", "DB", "if", "we're", "a", "top", "level", "cell.\nDestroy", "an", "instance", "from", "the", "DB", "if", "we're", "a", "top", "level", "cell.\nUpdate", "Bandwidth", "usage", "in", "the", "DB", "if", "we're", "a", "top", "level", "cell.\nReturn", "compute", "nodes", "in", "this", "cell.\nReturn", "compute", "node", "stats", "from", "this", "cell.\nDelete", "consoleauth", "tokens", "for", "an", "instance", "in", "API", "cells.\nSend", "our", "capabilities", "to", "parent", "cells.\nSend", "our", "capacities", "to", "parent", "cells.\nCall", "a", "compute", "API", "method", "in", "a", "specific", "cell.\nUpdate", "an", "instance", "at", "the", "top", "level", "cell.\nDestroy", "an", "instance", "at", "the", "top", "level", "cell.\nCreate", "an", "instance", "fault", "at", "the", "top", "level", "cell.\nUpdate", "bandwidth", "usage", "at", "top", "level", "cell.\nDeletes", "the", "specified", "service.\nReturn", "list", "of", "compute", "nodes", "in", "all", "child", "cells.\nReturn", "compute", "node", "stats", "from", "all", "child", "cells.\nReturn", "compute", "node", "entry", "from", "a", "specific", "cell", "by", "ID.\nDelete", "consoleauth", "tokens", "for", "an", "instance", "in", "API", "cells.\nValidate", "console", "port", "with", "child", "cell", "compute", "node.\nUpdate/Create", "a", "BDM", "at", "top", "level", "cell.\nDestroy", "a", "BDM", "at", "top", "level", "cell.\nCall", "instance_<method>", "in", "correct", "cell", "for", "instance.\nUpdate", "an", "instance", "object", "in", "its", "cell.\nStart", "an", "instance", "in", "its", "cell.\nStop", "an", "instance", "in", "its", "cell.\nReboot", "an", "instance", "in", "its", "cell.\nSuspend", "an", "instance", "in", "its", "cell.\nResume", "an", "instance", "in", "its", "cell.\nPause", "an", "instance", "in", "its", "cell.\nUnpause", "an", "instance", "in", "its", "cell.\nResize", "an", "instance", "in", "its", "cell.\nLive", "migrate", "an", "instance", "in", "its", "cell.\nRevert", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nConfirm", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nReset", "networking", "for", "an", "instance", "in", "its", "cell.\nInject", "networking", "for", "an", "instance", "in", "its", "cell.\nSnapshot", "an", "instance", "in", "its", "cell.\nBackup", "an", "instance", "in", "its", "cell.\nGet", "Key", "Pair", "by", "name", "at", "top", "level", "cell.", "Separator", "used", "between", "cell", "names", "for", "the", "'full", "cell", "name'", "and", "routing\n", "path.\n\n", "Message", "classes.\n\n", "Override", "message_type", "in", "a", "subclass\n", "Copy", "these.\n", "Normally", "this", "would", "just", "be", "CONF.cells.name,", "but", "going", "through\n", "the", "msg_runner", "allows", "us", "to", "stub", "it", "more", "easily.\n", "Each", "sub-class", "should", "set", "this", "when", "the", "message", "is", "initialized\n", "Source", "is", "not", "actually", "expecting", "a", "response\n", "Convert", "context", "to", "dict.\n", "NOTE(comstud):", "'method_kwargs'", "needs", "special", "serialization\n", "because", "it", "may", "contain", "objects.\n", "Neighbor", "cell", "or", "ourselves.", "Convert", "it", "to", "a", "'full", "path'.\n", "NOTE(alaski):", "This", "occurs", "when", "hosts", "are", "specified", "with", "no", "cells\n", "routing", "information.\n", "Final", "destination.\n", "Need", "to", "forward", "via", "neighbor", "cell.\n", "A", "response", "is", "needed", "and", "the", "source", "of", "the", "message", "is\n", "this", "cell.", "Create", "the", "eventlet", "queue.\n", "This", "is", "inside", "the", "try", "block,", "so", "we", "can", "encode", "the\n", "exception", "and", "return", "it", "to", "the", "caller.\n", "Targeted", "messages", "only", "have", "1", "response.\n", "The", "local", "cell", "creating", "this", "message", "has", "the", "option\n", "to", "be", "able", "to", "process", "the", "message", "locally", "or", "not.\n", "Short", "circuit", "if", "we", "don't", "need", "to", "respond\n", "We'll", "need", "to", "aggregate", "all", "of", "the", "responses", "(from", "ourself\n", "and", "our", "sibling", "cells)", "into", "1", "response\n", "Error", "just", "trying", "to", "send", "to", "cells.", "Send", "a", "single", "response\n", "with", "the", "failure.\n", "Run", "locally", "and", "store", "the", "Response.\n", "Error", "waiting", "for", "responses,", "most", "likely", "a", "timeout.\n", "Send", "a", "single", "response", "back", "with", "the", "failure.\n", "Really", "there's", "1", "more", "hop", "on", "each", "of", "these", "below,", "but\n", "it", "doesn't", "matter", "for", "this", "logic.\n", "Next", "hop", "is", "the", "target..", "so", "we", "must", "fanout.", "See\n", "DocString", "above.\n\n", "Methods", "that", "may", "be", "called", "when", "processing", "messages", "after", "reaching\n", "a", "target", "cell.\n\n", "1st", "arg", "is", "instance_uuid", "that", "we", "need", "to", "turn", "into", "the\n", "instance", "object.\n", "NOTE:", "compute/api.py", "loads", "these", "when", "retrieving", "an", "instance", "for", "an\n", "API", "request,", "so", "there's", "a", "good", "chance", "that", "this", "is", "what", "was", "loaded.\n", "Must", "be", "a", "race", "condition.", "Let's", "try", "to", "resolve", "it", "by\n", "telling", "the", "top", "level", "cells", "that", "this", "instance", "doesn't\n", "exist.\n", "Go", "ahead", "and", "update", "our", "parents", "now", "that", "a", "child", "updated", "us\n", "Go", "ahead", "and", "update", "our", "parents", "now", "that", "a", "child", "updated", "us\n", "Check", "that", "the", "host", "exists.\n", "1st", "arg", "is", "instance_uuid", "that", "we", "need", "to", "turn", "into", "the\n", "instance", "object.\n", "Must", "be", "a", "race", "condition.", "Let's", "try", "to", "resolve", "it", "by\n", "telling", "the", "top", "level", "cells", "that", "this", "instance", "doesn't\n", "exist.\n", "NOTE(comstud):", "We", "don't", "want", "to", "nuke", "this", "cell's", "view\n", "of", "vm_state", "and", "task_state", "unless", "it's", "a", "forced", "reset\n", "via", "admin", "API.\n", "NOTE(alaski):", "A", "cell", "should", "be", "authoritative", "for", "its", "system_metadata\n", "and", "metadata", "so", "we", "don't", "want", "to", "sync", "it", "down", "from", "the", "api.\n", "NOTE(comstud):", "We", "need", "to", "refresh", "the", "instance", "from", "this\n", "cell's", "view", "in", "the", "DB.\n", "Must", "be", "a", "race", "condition.", "Let's", "try", "to", "resolve", "it", "by\n", "telling", "the", "top", "level", "cells", "that", "this", "instance", "doesn't\n", "exist.\n", "For", "updates", "containing", "'vm_state'", "of", "'building',\n", "only", "allow", "them", "to", "occur", "if", "the", "DB", "already", "says\n", "'building'", "or", "if", "the", "vm_state", "is", "None.", "None\n", "really", "shouldn't", "be", "possible", "as", "instances", "always\n", "start", "out", "in", "'building'", "anyway..", "but", "just", "in", "case.\n", "Always", "allow", "updates", "when", "task_state", "doesn't", "change,\n", "but", "also", "make", "sure", "we", "don't", "set", "resize/rebuild", "task\n", "states", "for", "old", "messages", "when", "we've", "potentially", "already\n", "processed", "the", "ACTIVE/None", "messages.", "Ie,", "these", "checks\n", "will", "prevent", "stomping", "on", "any", "ACTIVE/None", "messages\n", "we", "already", "processed.\n", "Remove", "things", "that", "we", "can't", "update", "in", "the", "top", "level", "cells.\n", "'metadata'", "is", "only", "updated", "in", "the", "API", "cell,", "so", "don't", "overwrite\n", "it", "based", "on", "what", "child", "cells", "say.", "Make", "sure", "to", "update\n", "'cell_name'", "based", "on", "the", "routing", "path.\n", "It's", "possible", "due", "to", "some", "weird", "condition", "that", "the", "instance\n", "was", "already", "set", "as", "deleted...", "so", "we'll", "attempt", "to", "update\n", "it", "with", "permissions", "that", "allows", "us", "to", "read", "deleted.\n", "FIXME(comstud):", "Strange.", "Need", "to", "handle", "quotas", "here,\n", "if", "we", "actually", "want", "this", "code", "to", "remain..\n", "Can", "happen", "if", "we", "try", "to", "update", "a", "deleted", "instance's\n", "network", "information,", "for", "example.\n", "NOTE(alaski):", "instance_destroy_at_top", "will", "sometimes", "be", "called\n", "when", "an", "instance", "does", "not", "exist", "in", "a", "cell", "but", "does", "in", "the", "parent.\n", "In", "that", "case", "instance.id", "is", "not", "set", "which", "causes", "instance.destroy\n", "to", "fail", "thinking", "that", "the", "object", "has", "already", "been", "destroyed.\n", "That's", "the", "right", "assumption", "for", "it", "to", "make", "because", "without", "cells\n", "that", "would", "be", "true.", "But", "for", "cells", "we'll", "try", "to", "pull", "the", "actual\n", "instance", "and", "try", "to", "delete", "it", "again.\n", "Unfortunately", "this", "update", "call", "wants", "BDM", "ID...", "but", "we", "don't", "know\n", "what", "it", "is", "in", "this", "cell.", "Search", "for", "it..", "try", "matching", "either\n", "device_name", "or", "volume_id.\n\n", "Below", "are", "the", "public", "interfaces", "into", "this", "module.\n\n", "Response", "queue", "is", "gone.", "We", "must", "have", "restarted", "or", "we\n", "received", "a", "response", "after", "our", "timeout", "period.\n", "Ignore", "if", "queue", "is", "gone", "already", "somehow.\n", "Need", "to", "convert", "context", "back.\n", "NOTE(comstud):", "We", "also", "need", "to", "re-serialize", "any", "objects", "that\n", "exist", "in", "'method_kwargs'.\n", "We", "have", "to", "turn", "the", "sets", "into", "lists", "so", "they", "can", "potentially\n", "be", "json", "encoded", "when", "the", "raw", "message", "is", "sent.\n", "Caller", "should", "get", "a", "list", "of", "Responses.\n", "NOTE(matiu):", "With", "cells,", "it's", "possible", "to", "re-raise", "remote,", "remote\n", "exceptions.", "Lets", "turn", "it", "back", "into", "the", "original", "exception", "type.\n", "NOTE(ameade):", "We", "DO", "NOT", "want", "to", "allow", "just", "any", "module", "to", "be", "imported,", "in\n", "order", "to", "prevent", "arbitrary", "code", "execution.\n", "NOTE(ameade):", "Dynamically", "create", "a", "new", "exception", "type", "and", "swap", "it", "in\n", "as", "the", "new", "type", "for", "the", "exception.", "This", "only", "works", "on", "user", "defined\n", "Exceptions", "and", "not", "core", "python", "exceptions.", "This", "is", "important", "because\n", "we", "cannot", "necessarily", "change", "an", "exception", "message", "so", "we", "must", "override\n", "the", "__str__", "method.\n", "NOTE(ameade):", "If", "a", "core", "exception", "then", "just", "add", "the", "traceback", "to", "the\n", "first", "exception", "argument."], "/Users/mehranhassani/repos/nova/nova/scheduler/client/__init__.py": ["LazyLoader", "None", "__name", "aggregate", "aggregates", "args", "compute_node", "context", "functools", "getattr", "host_name", "importutils", "instance_info", "instance_uuid", "instance_uuids", "klass", "kwargs", "name", "object", "self", "spec_obj", "utils", "Client", "library", "for", "placing", "calls", "to", "the", "scheduler."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/volume_utils.py": ["CHUNK_SIZE", "CONF", "Exception", "False", "LOG", "None", "SR_NAMESPACE", "True", "_", "_LE", "_LW", "__name__", "_create_pbd", "_get_target_host", "_get_target_port", "_get_vdi_import_path", "_get_vdi_ref", "_handle_sr_params", "_mountpoint_to_number", "_parse_volume_info", "_requires_backend_kind", "_stream_to_vdi", "_unplug_pbds", "conn", "connection_data", "curr_rec", "curr_ref", "description", "dev_number", "device_number", "disk_format", "e", "exc", "exception", "excutils", "file_obj", "file_size", "find_vbd_by_number", "forget_sr", "greenthread", "headers", "host", "instance", "int", "iscsi_string", "isinstance", "k", "label", "len", "log_params", "logging", "mountpoint", "msg", "nova", "ord", "params", "pbd", "pbd_rec", "pbd_ref", "pbds", "re", "remain_size", "requested_device", "resp", "session", "session_id", "six", "sr_desc", "sr_identity", "sr_ref", "sr_type", "sr_uuid", "str", "str_fmt", "strutils", "target_host", "target_iqn", "target_lun", "target_port", "target_portal", "task_name_label", "task_ref", "trunk", "user_device", "uuid", "v", "vbd_other_config", "vbd_ref", "vbd_refs", "vdi_import_path", "vdi_rec", "vdi_ref", "vdi_refs", "vdi_uuid", "version", "version_as_string", "versionutils", "vm_ref", "volume_id", "volume_info", "Retrieve", "target", "host.\nRetrieve", "target", "port.\nIntroduce", "VDI", "in", "the", "host.\nForgets", "the", "storage", "repository", "without", "destroying", "the", "VDIs", "within.\nTranslate", "a", "mountpoint", "like", "/dev/sdc", "into", "a", "numeric.\nReturn", "the", "storage", "repository", "given", "a", "uuid.\nFind", "the", "SR", "reference", "from", "the", "VBD", "reference.\nFind", "the", "SR", "reference", "from", "the", "VDI", "reference.\nGet", "the", "VBD", "reference", "from", "the", "device", "number.\nDetermine", "if", "the", "root", "device", "is", "a", "volume.", "Namespace", "for", "SRs", "so", "we", "can", "reliably", "generate", "a", "UUID\n", "Generated", "from", "uuid.uuid5(uuid.UUID(int=0),", "'volume_utils-SR_UUID')\n", "PY2", "can", "only", "support", "taking", "an", "ascii", "string", "to", "uuid5\n", "Fix", "for", "Bug", "#1502929\n", "We", "do", "not", "need", "to", "introduce", "the", "vdi\n", "Make", "sure", "no", "VBDs", "are", "referencing", "the", "SR", "VDIs"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/snapshotops.py": ["Exception", "False", "LOG", "None", "_LE", "__name__", "basename", "context", "dest_base_disk_path", "dest_vhd_path", "export_dir", "f", "glance", "glance_image_service", "image_id", "image_metadata", "image_vhd_path", "instance", "instance_name", "logging", "object", "os", "pathutils", "self", "snapshot_path", "src_base_disk_path", "src_vhd_path", "task_states", "update_task_state", "utilsfactory", "Create", "snapshot", "from", "a", "running", "VM", "instance."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/placement/test_util.py": ["False", "TestJSONErrorFormatter", "TestPlacementURLs", "True", "_versions", "body", "data", "environ", "error", "expected_url", "fixtures", "microversion", "mod_str", "objects", "req", "request_id", "resource_class", "result", "schema", "self", "staticmethod", "status", "str", "super", "test", "title", "util", "uuidsentinel", "version_obj", "webob", "Unit", "tests", "for", "the", "utility", "functions", "used", "by", "the", "placement", "API.\nConfirm", "behavior", "of", "util.check_accept.\nFake", "handler", "to", "test", "decorator.\nConfirm", "behavior", "of", "util.require_accept.\nFake", "handler", "to", "test", "decorator.", "Although", "the", "intent", "of", "this", "test", "class", "is", "not", "to", "test", "that\n", "schemas", "work,", "we", "may", "as", "well", "use", "a", "real", "one", "to", "ensure", "that\n", "behaviors", "are", "what", "we", "expect.\n", "TODO(jaypipes):", "Remove", "this", "when", "we", "get", "more", "than", "a", "single", "version\n", "in", "the", "placement", "API.", "The", "fact", "that", "we", "only", "had", "a", "single", "version", "was\n", "masking", "a", "bug", "in", "the", "utils", "code.\n", "no", "request", "id", "in", "environ,", "none", "in", "error\n", "request", "id", "in", "environ,", "request", "id", "in", "error\n", "Not", "a", "406,", "no", "version", "info", "required.\n", "A", "406", "but", "not", "because", "of", "microversions", "(microversion\n", "parsing", "was", "successful),", "no", "version", "info\n", "required.\n", "Microversion", "parsing", "failed,", "status", "is", "406,", "send", "version", "info.\n", "SCRIPT_NAME", "represents", "the", "mount", "point", "of", "a", "WSGI\n", "application", "when", "it", "is", "hosted", "at", "a", "path/prefix.\n", "SCRIPT_NAME", "represents", "the", "mount", "point", "of", "a", "WSGI\n", "application", "when", "it", "is", "hosted", "at", "a", "path/prefix."], "/Users/mehranhassani/repos/nova/nova/policies/image_size.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "image_size_policies", "policy"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/ipxe.py": ["ISOLINUX_CFG", "NETCFG_IPXE", "RuntimeError", "__name__", "_create_iso", "_unbundle_iso", "_write_file", "boot_menu_url", "data", "dns", "f", "filename", "gateway", "inject", "ip_address", "iso_filename", "logging", "mkisofs_cmd", "netmask", "open", "orig_dir", "os", "path", "pluginlib_nova", "read_only_path", "session", "shutil", "sr_path", "staging_path", "utils", "vdi_uuid", "Inject", "network", "configuration", "into", "iPXE", "ISO", "for", "boot.", "Copyright", "(c)", "2013", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "FIXME(sirp):", "should", "this", "use", "pluginlib", "from", "5.6?\n!ipxe\n", "If", "the", "ISO", "was", "tampered", "with", "such", "that", "the", "destination", "is", "a", "symlink,\n", "that", "could", "allow", "a", "malicious", "user", "to", "write", "to", "protected", "areas", "of", "the\n", "dom0", "filesystem.", "/HT", "to", "comstud", "for", "pointing", "this", "out.\n\n", "Short-term,", "checking", "that", "the", "destination", "is", "not", "a", "symlink", "should", "be\n", "sufficient.\n\n", "Long-term,", "we", "probably", "want", "to", "perform", "all", "file", "manipulations", "within", "a\n", "chroot", "jail", "to", "be", "extra", "safe.\n", "Create", "staging", "area", "so", "we", "have", "a", "unique", "path", "but", "remove", "it", "since\n", "shutil.copytree", "will", "recreate", "it\n", "Write", "Configs"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/flavor_manage.py": ["False", "True", "copy", "create", "create_v20", "db", "parameter_types", "in", "nova/flavors.py,", "name", "with", "all", "white", "spaces", "is", "forbidden.\n", "forbid", "leading/trailing", "whitespaces\n", "positive", "(", ">", "0)", "float\n", "TODO(oomichi):", "'id'", "should", "be", "required", "with", "v2.1+microversions.\n", "On", "v2.0", "API,", "nova-api", "generates", "a", "flavor-id", "automatically", "if\n", "specifying", "null", "as", "'id'", "or", "not", "specifying", "'id'.", "Ideally", "a", "client\n", "should", "specify", "null", "as", "'id'", "for", "requesting", "auto-generated", "id\n", "exactly.", "However,", "this", "strict", "limitation", "causes", "a", "backwards\n", "incompatible", "issue", "on", "v2.1.", "So", "now", "here", "relaxes", "the", "requirement\n", "of", "'id'."], "/Users/mehranhassani/repos/nova/nova/virt/disk/vfs/guestfs.py": ["AttributeError", "CONF", "Exception", "False", "LOG", "None", "RuntimeError", "True", "TypeError", "VFSGuestFS", "_", "_LW", "__name__", "_get_item_id", "array", "buf", "content", "e", "eh", "ev", "events", "ex", "exception", "force", "forceTCG", "g", "gid", "group", "guestfs", "id_path", "image", "imgmodel", "importutils", "int", "isinstance", "kernel_file", "len", "log_callback", "logging", "mode", "mount", "mounts", "msg", "nova", "os", "partition", "path", "root", "root_mounted", "roots", "self", "six", "staticmethod", "str", "super", "tpool", "uid", "user", "vfs", "Determines", "whether", "guestfs", "is", "well", "configured.\nConfigures", "guestfs", "to", "be", "verbose.", "sic\n", "just", "traces", "libguestfs", "API", "calls\n", "the", "root", "directory", "must", "be", "mounted", "first\n", "NOTE(russellb)", "In", "case", "we're", "not", "using", "a", "version", "of\n", "libguestfs", "new", "enough", "to", "support", "parameters", "close_on_exit\n", "and", "python_return_dict", "which", "were", "added", "in", "libguestfs", "1.20.\n", "set_backend_settings", "method", "doesn't", "exist", "in", "older\n", "libguestfs", "versions,", "so", "nothing", "we", "can", "do", "but", "ignore\n", "explicitly", "teardown", "instead", "of", "implicit", "close()\n", "to", "prevent", "orphaned", "VMs", "in", "cases", "when", "an", "implicit\n", "close()", "is", "not", "enough\n", "explicitly", "teardown", "instead", "of", "implicit", "close()\n", "to", "prevent", "orphaned", "VMs", "in", "cases", "when", "an", "implicit\n", "close()", "is", "not", "enough\n", "Older", "libguestfs", "versions", "haven't", "an", "explicit", "shutdown\n", "Older", "libguestfs", "versions", "haven't", "an", "explicit", "close\n", "dereference", "object", "and", "implicitly", "close()"], "/Users/mehranhassani/repos/nova/nova/tests/functional/wsgi/test_flavor_manage.py": ["False", "FlavorManageFullstack", "True", "_additional_fixtures", "api_fixture", "context", "ctx", "db", "ex", "fix", "flav", "flav1", "flav1db", "flavapi", "flavdb", "flavlist", "helper", "int", "item", "k", "kwargs", "mapping", "new_flav", "nova_fixtures", "objects", "policy_fixture", "rand_flavor", "resp", "scenarios", "self", "six", "super", "test", "testscenarios", "v", "string,", "required", "unique\n", "string,", "required", "unique\n", "in", "MB,", "required\n", "int", "value,", "required\n", "in", "GB,", "required\n", "in", "GB,", "ephemeral", "disk", "size\n", "boolean\n", "in", "GB?\n", "???\n", "test", "v2.1", "base", "microversion\n", "load", "any", "additional", "fixtures", "specified", "by", "the", "scenario\n", "NOTE(sdague):", "because", "this", "test", "is", "primarily", "an", "admin", "API\n", "test", "default", "self.api", "to", "the", "admin", "api.\n", "a", "mapping", "of", "the", "REST", "params", "to", "the", "db", "fields\n", "for", "all", "keys", "in", "the", "flavor,", "ensure", "they", "are", "correctly", "set", "in\n", "flavapi", "response.\n", "Test", "for", "various", "API", "failure", "conditions\n", "bad", "body", "is", "400\n", "get", "unknown", "flavor", "is", "404\n", "delete", "unknown", "flavor", "is", "404\n", "bounds", "conditions", "-", "invalid", "vcpus\n", "...", "and", "ensure", "that", "we", "didn't", "leak", "it", "into", "the", "db\n", "bounds", "conditions", "-", "invalid", "ram\n", "...", "and", "ensure", "that", "we", "didn't", "leak", "it", "into", "the", "db\n", "NOTE(sdague):", "if", "there", "are", "other", "bounds", "conditions", "that\n", "should", "be", "checked,", "stack", "them", "up", "here.\n", "create", "a", "deleted", "flavor\n", "deleted", "flavor", "should", "not", "show", "up", "in", "a", "list\n", "Create", "flavor", "and", "ensure", "it", "made", "it", "to", "the", "database\n", "Ensure", "new", "flavor", "is", "seen", "in", "the", "listing\n", "Delete", "flavor", "and", "ensure", "it", "was", "removed", "from", "the", "database\n", "Ensure", "user", "can't", "create", "flavor\n", "...", "and", "that", "it", "didn't", "leak", "through\n", "Create", "the", "flavor", "as", "the", "admin", "user\n", "Ensure", "user", "can't", "delete", "flavors", "from", "our", "cloud\n", "...", "and", "ensure", "that", "we", "didn't", "actually", "delete", "the", "flavor,\n", "this", "will", "throw", "an", "exception", "if", "we", "did."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_config_drive.py": ["CONF", "ConfigDriveTestV21", "None", "ServersControllerCreateTestV21", "True", "args", "bad_request", "base_url", "body", "cfg", "compute_api", "context", "create", "datetime", "def_image_ref", "dict", "exception", "ext_info", "extension_info", "fake", "fake_instance", "fakes", "flavor_ref", "flavors", "image_href", "image_uuid", "inst", "inst_type", "instance", "instance_create", "jsonutils", "kwargs", "len", "mock", "mock_get_all", "objects", "old_create", "override_controller", "param", "params", "req", "res", "res_dict", "response", "self", "server", "server_dict", "server_dicts", "servers_v21", "super", "test", "uuids", "Shared", "implementation", "for", "tests", "below", "that", "create", "instance.", "NOTE(sdague):", "because", "of", "the", "way", "extensions", "work,", "we", "have", "to\n", "also", "stub", "out", "the", "Request", "compute", "cache", "with", "a", "real", "compute\n", "object.", "Delete", "this", "once", "we", "remove", "all", "the", "gorp", "of\n", "extensions", "modifying", "the", "server", "objects.\n", "NOTE(danms):", "Orphan", "these", "fakes", "(no", "context)", "so", "that", "we\n", "are", "sure", "that", "the", "API", "is", "requesting", "what", "it", "needs", "without\n", "having", "to", "lazy-load."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/floating_ips_bulk.py": ["False", "create", "delete", "ip_range", "TODO(eliqiao)", "need", "to", "find", "a", "better", "pattern"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/serialconsoleops.py": ["Exception", "IOError", "LOG", "None", "_LE", "_LI", "__name__", "_console_handlers", "active_instances", "args", "console_log_paths", "err", "exc", "exception", "fp", "func", "functools", "handler", "inner", "instance_name", "instance_path", "instance_synchronized", "kwargs", "log", "log_path", "logging", "object", "open", "os", "pathutils", "reversed", "self", "serialconsolehandler", "six", "utils", "utilsfactory", "wrapper", "Cleanup", "existing", "workers.\n", "Start", "with", "the", "oldest", "console", "log", "file.\n", "Skip", "instances", "that", "are", "not", "created", "by", "Nova"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/233_add_stats_in_compute_nodes.py": ["Column", "MetaData", "Table", "Text", "True", "engine", "meta", "stats", "table", "table_name", "table_names", "Drop", "the", "compute_node_stats", "table", "and", "add", "a", "'stats'", "column", "to\n", "compute_nodes", "directly.", "The", "data", "itself", "is", "transient", "and", "doesn't\n", "need", "to", "be", "copied", "over.\n", "Add", "a", "new", "stats", "column", "to", "compute", "nodes"], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/test_migration_utils.py": ["Column", "CustomType", "False", "Integer", "MetaData", "NoSuchTableError", "SA_VERSION", "String", "Table", "TestMigrationUtilsSQLite", "True", "UserDefinedType", "c", "column", "compat_utils", "conn", "d", "db", "delete_statement", "exception", "ins_stmt", "len", "nova_fixtures", "oslodbutils", "query_all", "query_delete", "range", "result_delete", "rows", "self", "shadow_table", "sql", "super", "table", "table_name", "test_base", "test_table", "unused", "utils", "uuid", "uuidstr", "uuidstrs", "Dummy", "column", "type", "for", "testing", "unsupported", "types.\nClass", "for", "testing", "utils", "that", "are", "used", "in", "db", "migrations.", "TODO(sdague):", "no", "tests", "in", "the", "nova/tests", "tree", "should", "inherit", "from\n", "base", "test", "classes", "in", "another", "library.", "This", "causes", "all", "kinds", "of", "havoc\n", "in", "these", "doing", "things", "incorrectly", "for", "what", "we", "need", "in", "subunit\n", "reporting.", "This", "is", "a", "long", "unwind,", "but", "should", "be", "done", "in", "the", "future\n", "and", "any", "code", "needed", "out", "of", "oslo_db", "should", "be", "exported", "/", "accessed", "as\n", "a", "fixture.\n", "NOTE(sdague):", "the", "oslo_db", "base", "test", "case", "completely\n", "invalidates", "our", "logging", "setup,", "we", "actually", "have", "to", "do", "that\n", "before", "it", "is", "called", "to", "keep", "this", "from", "vomitting", "all", "over", "our\n", "test", "output.\n", "Add", "10", "rows", "to", "table\n", "Delete", "4", "rows", "in", "one", "chunk\n", "Verify", "we", "delete", "4", "rows\n", "Verify", "we", "still", "have", "6", "rows", "in", "table\n", "check", "missing", "shadow", "table\n", "check", "missing", "column\n", "check", "when", "all", "is", "ok\n", "check", "extra", "column\n", "reflection", "of", "custom", "types", "has", "been", "fixed", "upstream"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_keypair.py": ["False", "NOW", "None", "_TestKeyPairObject", "api_keypair", "api_kp_name", "copy", "dict", "exception", "fake_keypair", "fake_keypair_copy", "first_api_kp_name", "first_main_kp_name", "keypair", "keypair_obj", "keypairs", "kp_name", "len", "mock", "mock_api_count", "mock_api_get", "mock_kp_count", "mock_kp_create", "mock_kp_destroy", "mock_kp_get", "object", "self", "test_objects", "timeutils"], "/Users/mehranhassani/repos/nova/nova/policies/floating_ip_pools.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "floating_ip_pools_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/275_add_keypair_type.py": ["Column", "Enum", "False", "MetaData", "Table", "True", "enum", "hasattr", "key_pairs", "keypair", "keypair_type", "meta", "migrate_engine", "shadow_key_pairs", "Function", "adds", "key_pairs", "type", "field."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/host.py": ["AttributeError", "CONF", "Exception", "False", "HV_DRIVER_QEMU", "HV_DRIVER_XEN", "Host", "IOError", "ImportError", "LOG", "None", "NotImplementedError", "True", "TypeError", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_c", "addr", "alldoms", "args", "auth", "avail", "bits", "c", "close_info", "conn", "conn_event_handler", "context", "cpu", "cpu_map", "cpus", "creds", "csock", "detail", "dict", "dom", "dom_mem", "domain", "doms", "e", "err", "error_code", "event", "event_cleanup", "ex", "exception", "excutils", "fd", "features", "flags", "fp", "greenio", "greenthread", "gsock", "gt", "guest", "handler", "hasattr", "hostname", "hv_type", "hv_ver", "hypervisor_type", "hypervisor_version", "id_", "idx1", "idx2", "idx3", "importutils", "instance", "int", "isinstance", "kwargs", "last_close_event", "len", "libvirt", "libvirt_guest", "libvirt_version", "lifecycle_event_handler", "line", "logging", "lv_ver", "m", "msg", "name", "native_Queue", "native_socket", "native_threading", "nova", "nova_context", "nsock", "object", "online", "online_cpus", "only_guests", "only_running", "op", "opaque", "open", "operator", "os", "password", "patcher", "payload", "range", "read_only", "reason", "rpc", "rpipe", "secret", "secret_conf", "self", "set", "six", "sock", "socket", "staticmethod", "stats", "str", "sys", "threading", "tpool", "transition", "units", "uri", "usage_id", "usage_type", "usage_type_const", "used", "utils", "uuid", "vconfig", "versionutils", "virtevent", "wpipe", "wrapped_conn", "xml", "xmlDesc", "xml_str", "xmlstr", "Dispatches", "async", "connection", "events\nEmit", "events", "-", "possibly", "delayed.\nReturns", "the", "hostname", "of", "the", "hypervisor.\nReturns", "the", "total", "numbers", "of", "cpu", "in", "the", "host.\nReturns", "the", "current", "CPU", "state", "of", "the", "host", "with", "frequency.\nCompares", "the", "given", "CPU", "description", "with", "the", "host", "CPU.", "This", "list", "is", "for", "libvirt", "hypervisor", "drivers", "that", "need", "special", "handling.\n", "This", "is", "*not*", "the", "complete", "list", "of", "supported", "hypervisor", "drivers.\n", "Note(toabctl):", "During", "a", "reboot", "of", "a", "domain,", "STOPPED", "and\n", "STARTED", "events", "are", "sent.", "To", "prevent", "shutting\n", "down", "the", "domain", "during", "a", "reboot,", "delay", "the\n", "STOPPED", "lifecycle", "event", "some", "seconds.\n", "NOTE(mdbooth):", "This", "thread", "doesn't", "need", "to", "jump", "through", "the", "same\n", "hoops", "as", "_dispatch_thread", "because", "it", "doesn't", "interact", "directly\n", "with", "the", "libvirt", "native", "thread.\n", "NOTE(mdbooth):", "Splitting", "out", "this", "loop", "looks", "redundant,", "but", "it\n", "means", "we", "can", "easily", "dispatch", "events", "synchronously", "from", "tests", "and\n", "it", "isn't", "completely", "awful.\n", "tpool.proxy_call", "creates", "a", "native", "thread.", "Due", "to", "limitations\n", "with", "eventlet", "locking", "we", "cannot", "use", "the", "logging", "API", "inside\n", "the", "called", "function.\n", "Queue", "the", "event...\n", "...then", "wakeup", "the", "green", "thread", "to", "dispatch", "it\n", "Wait", "to", "be", "notified", "that", "there", "are", "some\n", "events", "pending\n", "will", "be", "raised", "when", "pipe", "is", "closed\n", "Process", "as", "many", "events", "as", "possible", "without\n", "blocking\n", "call", "possibly", "with", "delay\n", "get_new_connection", "may", "already", "have", "disabled", "the", "host,\n", "in", "which", "case", "_wrapped_conn", "is", "None.\n", "Cleanup", "possible", "delayed", "stop", "events.\n", "Delay", "STOPPED", "event,", "as", "they", "may", "be", "followed", "by", "a", "STARTED\n", "event", "in", "case", "the", "instance", "is", "rebooting\n", "add", "callback", "to", "cleanup", "self._events_delayed", "dict", "after\n", "event", "was", "called\n", "This", "is", "Windows", "compatibility", "--", "use", "a", "socket", "instead\n", "of", "a", "pipe", "because", "pipes", "don't", "really", "exist", "on", "Windows.\n", "call", "with", "_wrapped_conn_lock", "held\n", "This", "will", "raise", "an", "exception", "on", "failure\n", "NOTE:", "The", "registerCloseCallback", "of", "python-libvirt", "1.0.1+\n", "is", "defined", "with", "3", "arguments,", "and", "the", "above", "registerClose-\n", "Callback", "succeeds.", "However,", "the", "one", "of", "python-libvirt", "1.0.0\n", "is", "defined", "with", "4", "arguments", "and", "TypeError", "happens", "here.\n", "Then", "python-libvirt", "0.9", "does", "not", "define", "a", "method", "register-\n", "CloseCallback.\n", "multiple", "concurrent", "connections", "are", "protected", "by", "_wrapped_conn_lock\n", "Drop", "the", "existing", "connection", "if", "it", "is", "not", "usable\n", "Connection", "was", "previously", "up,", "and", "went", "down\n", "This", "will", "raise", "if", "it", "fails", "to", "get", "a", "connection\n", "If", "we", "previously", "had", "a", "connection", "and", "it", "went", "down,\n", "we", "generated", "a", "down", "event", "for", "that", "above.\n", "We", "also", "want", "to", "generate", "a", "down", "event", "for", "an", "initial\n", "failure,", "which", "won't", "be", "handled", "above.\n", "Just", "ignore", "instead", "of", "default", "outputting", "to", "stderr.\n", "NOTE(dkliban):", "Error", "handler", "needs", "to", "be", "registered", "before", "libvirt\n", "connection", "is", "used", "for", "the", "first", "time.", "Otherwise,", "the\n", "handler", "does", "not", "get", "registered.\n", "TODO(sahid):", "needs", "to", "be", "private\n", "NOTE(mriedem):", "Don't", "attempt", "to", "get", "baseline", "CPU", "features\n", "if", "libvirt", "can't", "determine", "the", "host", "cpu", "model.\n", "TODO(sahid):", "Use", "get_info...\n", "skip", "dom0\n", "the", "mem", "reported", "by", "dom0", "is", "be", "greater", "of", "what\n", "it", "is", "being", "used\n", "Convert", "it", "to", "MB\n", "Convert", "it", "to", "MB\n", "getInfo()", "returns", "various", "information", "about", "the", "host", "node\n", "No.", "3", "is", "the", "expected", "CPU", "frequency.\n", "mount", "options", "and", "split", "options"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_processutils.py": ["False", "LOG", "None", "True", "__name__", "_fake_execute_log", "_fake_execute_repliers", "attempts", "check_exit_code", "cmd_parts", "cmd_str", "delay_on_retry", "e", "fake_execute", "fake_execute_clear_log", "fake_execute_default_reply_handler", "fake_execute_set_repliers", "fake_replier", "greenthread", "isinstance", "kwargs", "logging", "part", "process_input", "processutils", "re", "repliers", "reply", "reply_handler", "run_as_root", "six", "str", "test", "This", "modules", "stubs", "out", "functions", "in", "oslo_concurrency.processutils.\nAllows", "the", "client", "to", "configure", "replies", "to", "commands.", "If", "the", "reply", "handler", "is", "a", "string,", "return", "it", "as", "stdout\n", "Alternative", "is", "a", "function,", "so", "call", "it\n", "Replicate", "the", "sleep", "call", "in", "the", "real", "function"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/015_build_request_nullable_columns.py": ["ForeignKeyConstraint", "MetaData", "Table", "True", "UniqueConstraint", "build_requests", "column", "columns_to_nullify", "constr", "constr_names", "constrs", "fkey", "getattr", "inspector", "meta", "migrate_engine", "reflection", "request_specs", "These", "are", "being", "made", "nullable", "because", "they", "are", "no", "longer", "used", "after", "the\n", "addition", "of", "the", "instance", "column.", "However", "they", "need", "a", "deprecation", "period\n", "before", "they", "can", "be", "dropped."], "/Users/mehranhassani/repos/nova/nova/policies/agents.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "agents_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/test_db_api.py": ["AgentBuildTestCase", "AggregateDBApiTestCase", "ArchiveTestCase", "BaseInstanceTypeTestCase", "BlockDeviceMappingTestCase", "BwUsageTestCase", "CONF", "CellTestCase", "CertificateTestCase", "Column", "ComputeNodeTestCase", "ConsoleAuthTokenTestCase", "ConsolePoolTestCase", "ConsoleTestCase", "DbTestCase", "DnsdomainTestCase", "Ec2TestCase", "FIXED_IP_ADDRESS", "FIXED_IP_ADDRESS_1", "FIXED_IP_ADDRESS_2", "FakeFiltered", "FakeModelQuery", "False", "FloatingIpTestCase", "IGNORED_FIELDS", "InstanceActionTestCase", "InstanceExtraTestCase", "InstanceFaultTestCase", "InstanceGroupDBApiTestCase", "InstanceMetadataTestCase", "InstanceSystemMetadataTestCase", "InstanceTestCase", "InstanceTypeExtraSpecsTestCase", "Integer", "KeyPairTestCase", "MetaData", "MigrationTestCase", "ModelsObjectComparatorMixin", "NetworkTestCase", "None", "OperationalError", "PciDeviceDBApiTestCase", "ProviderFwRuleTestCase", "QuotaClassTestCase", "QuotaTestCase", "RefreshUsageTestCase", "ReservationTestCase", "S3ImageTestCase", "SQLAlchemyError", "SecurityGroupRuleTestCase", "SecurityGroupTestCase", "ServiceTestCase", "Table", "TaskLogTestCase", "TestDBInstanceTags", "TestInstanceInfoCache", "TestInstanceTagsFiltering", "TestSqlalchemyTypesRepr", "True", "TypeError", "ValueError", "VirtualInterfaceTestCase", "VolumeUsageDBApiTestCase", "_", "_compare", "_create_aggregate", "_create_aggregate_with_hosts", "_get_fake_aggr_hosts", "_get_fake_aggr_metadata", "_get_fake_aggr_values", "_ignored_keys", "_make_compute_node", "_meta", "_quota_reserve", "_reservation_get", "a1", "a2", "a2_hosts", "a2_metadata", "a3", "a3_hosts", "a3_metadata", "a5", "access", "access_it", "access_it1", "access_it2", "action", "action1", "action2", "action_id", "action_values", "actions", "actual", "actual_uuids", "add_counter", "addr", "address", "address1", "address2", "address_1", "address_2", "addresses", "addrs", "agent_build", "aggregate", "aggregate_id", "aggregate_uuid", "aggregates", "all_agent_builds", "all_flavors", "alloc_addrs", "another_instance", "another_vif", "args", "asc", "assert_multi_filter_flavor_get", "assert_sorted_by_key_both_dir", "assert_sorted_by_key_dir", "attr", "b", "base_values", "bdm", "bdm1", "bdm2", "bdm_real", "bdms", "bdms_values", "block_dev", "block_device", "bool", "bw_in", "bw_out", "bw_usage", "bw_usages", "bwusage", "c", "call_api", "cell", "cell_get", "cells", "cells_byname", "cert", "changes_since", "check_exc_format", "child_session", "cid", "cidr", "cidr_samples", "cidr_v6", "classes", "cn", "code", "col_types", "columns", "columns_to_join", "columns_to_join2", "comp", "compares", "compute_node_another_host", "compute_node_data", "compute_node_dict", "compute_node_id", "compute_node_old_host", "compute_node_old_host_dict", "compute_node_same_host", "compute_nodes", "conn", "console", "console_get", "console_id", "console_pool", "consoles_get", "constraint", "content", "context", "context1", "context2", "conv", "conv_and_sort", "copy", "correct", "correct_order", "count", "count_1", "count_2", "counted", "counted_groups", "counter", "cp", "create", "create_ips", "created", "ctx", "ctxt", "ctxt2", "current_specs", "current_usage", "d", "d_list", "data", "datetime", "datetime_keys", "db", "db_bdm", "db_conf", "db_cp", "db_domain_list", "db_exc", "db_keys", "db_list", "db_network", "db_obj1", "db_obj2", "db_obj3", "db_obj4", "db_obj5", "db_obj6", "db_service2", "db_utils", "dct", "decorated_func", "decorator", "default_group", "default_params", "defaults", "deltas", "dest_compute", "dest_node", "dests", "device_name", "dialect", "dict", "dirs", "disabled", "disabled_filts", "disabled_services", "doit", "domain", "done", "dt", "dt_keys", "dt_utc", "elevated", "enginefacade", "enumerate", "errors", "event", "event1", "event2", "event3", "event_val1", "event_val2", "event_val3", "event_values", "events", "ex", "exc", "exception", "exceptions", "existing_node", "exp_count", "exp_current_workload", "exp_free_disk_gb", "exp_free_ram_mb", "exp_local_gb", "exp_local_gb_used", "exp_memory_mb", "exp_memory_mb_used", "exp_running_vms", "exp_vcpus", "exp_vcpus_used", "expected", "expected1", "expected2", "expected_addresses", "expected_bw_usage", "expected_bw_usages", "expected_dict", "expected_ips", "expected_it", "expected_keys", "expected_len", "expected_metadata", "expected_pools", "expected_results", "expected_uuids", "expected_vol_usage", "expected_vol_usages", "expire_offset", "extra", "extra1", "extra2", "extra_specs", "f", "fake_admin_context", "fake_child_method", "fake_console_auth_token", "fake_filtered_cn", "fake_first", "fake_method", "fake_parent_method", "fake_update", "fault", "fault_codes", "fault_values", "faults", "fields", "filt", "filter", "filtered_instances", "filters", "filts", "fip", "first", "fixed", "fixed_addr", "fixed_address", "fixed_addresses", "fixed_addrs", "fixed_float", "fixed_id", "fixed_ip", "fixed_ip_addr", "fixed_ip_after_update", "fixed_ip_data", "fixed_ip_id", "fixed_ip_ref", "flavor", "flavor1", "flavor2", "flavor_by_fid", "flavor_by_flavorid", "flavor_by_id", "flavor_by_name", "flavor_id", "flavorid", "flavors", "float", "float_addr", "float_address", "float_addresses", "float_ip", "float_ip1", "float_ip2", "float_ips", "floating", "floating_ip", "floating_ips", "floating_ref", "found", "found_rules", "func", "get_engine", "get_id", "get_query", "get_sync", "getattr", "group", "group1", "group2", "group_ids", "groups", "h1", "h2", "hasattr", "hash1", "hash2", "hash3", "host", "host_ips", "hosts", "hosts_with_float_ips", "hv_type", "i", "i1", "i2", "i3", "i_rows", "id", "id1", "idx", "ignored", "ignored_keys", "iim_rows", "in_use", "info_cache", "info_cache1", "info_cache2", "ins_stmt", "ins_stmt2", "inspect", "inst", "inst1", "inst2", "inst3", "inst4", "inst_extra", "inst_uuid", "inst_uuid2", "instance", "instance1", "instance2", "instance3", "instance_id", "instance_meta", "instance_migration", "instance_migrations", "instance_uuid", "instance_uuid_1", "instance_uuid_2", "instance_uuids", "instances", "insts", "int", "ip", "ips", "ips_for_delete", "ips_for_non_delete", "ips_list", "ips_on_host", "is_public", "is_public_filts", "isinstance", "iso8601", "it", "it1", "it2", "item", "item_old", "item_updated", "itm", "j", "jsonutils", "k", "key", "key_pair", "key_pair_created", "key_pair_deleted", "key_pairs", "key_pairs_user_1", "key_pairs_user_2", "keys", "keys1", "keys2", "kw", "kwargs", "lambda_filters", "last_ctr_in", "last_ctr_out", "last_refreshed", "len", "limit", "limited_flavors", "list", "list1", "list2", "mac", "main_table", "manual_joins", "map", "marked_flavors", "marker", "marker_flavorid", "match_keys", "matchers", "mem", "mem_filts", "members", "members2", "members3", "meta", "metadata", "metadata_type", "method", "migration", "migration_id", "migration_type", "migrations", "migrations_values", "mock", "mock_all", "mock_check_inst_exists", "mock_clone", "mock_conf_group", "mock_create_facade", "mock_delete", "mock_facade", "mock_fill", "mock_first", "mock_get", "mock_get_all_filters_sort", "mock_get_model", "mock_get_regexp", "mock_getall", "mock_insert", "mock_joinedload", "mock_model_query", "mock_paginate", "mock_sg", "mock_undefer", "mock_update", "mock_using", "mock_uuids", "model_class", "models", "modified_val", "msg", "multi_host", "n", "name", "net", "net1", "net2", "net3", "netaddr", "network", "network1", "network2", "network_db", "network_id", "network_id_1", "network_id_2", "network_info", "network_info1", "network_info2", "network_new", "network_ref", "new", "new_cells", "new_current_workload", "new_free_disk_gb", "new_free_ram_mb", "new_insp", "new_local_gb", "new_local_gb_used", "new_memory_mb", "new_memory_mb_used", "new_metadata", "new_ref", "new_running_vms", "new_service", "new_stats", "new_values", "new_vcpus", "new_vcpus_used", "new_zone", "newcell", "node", "nodes", "nodes_created", "non_bulk_ips", "non_bulk_ips_for_delete", "non_bulk_ips_for_non_delete", "non_disabled_services", "normal_ctxt", "nova", "nova_fixtures", "now", "now1", "now2", "now3", "num", "o", "obj", "obj1", "obj2", "obj_to_dict", "object", "objects", "objs", "objs1", "objs2", "observed_instances", "observed_uuids", "old", "old_insp", "old_ref", "op", "order_mock", "orig", "orig_update_on_match", "oslo_db_api", "other_active", "other_error", "other_service", "overs", "p", "param", "param_1", "param_2", "param_dict", "params", "params1", "params2", "parent_session", "per_project_quotas", "policies", "pool", "pools", "pools_data", "prepare_ips", "primitive", "primitives1", "primitives2", "project", "project_id", "project_quotas", "project_usages", "projects", "projects_with_float_ips", "property", "qc", "qc_db", "qdd", "qi", "qiim", "qmt", "qsdd", "qsi", "qsiim", "qst", "quc", "query", "quota", "quota_db", "quota_usage", "quota_usages", "quotas", "quotas_db", "r", "r1", "r2", "r_flavor2", "r_vif", "range", "read_deleted", "real", "real1", "real2", "real_access_it", "real_float_addresses", "real_float_ip", "real_float_ips", "real_floating_ip", "real_it", "real_key", "real_keys_1", "real_keys_2", "real_pools", "real_security_group", "real_security_group1", "real_security_group2", "real_security_group_rule", "real_service", "real_service1", "real_specs", "real_specs1", "real_vif", "real_vifs", "real_vifs1", "real_vifs2", "ref", "refresh", "remove_counter", "request_id", "res", "reservable_resources", "reservation", "reservation_uuid", "reservations", "reservations_uuids", "resource", "resources", "resources_names", "result", "result1", "result2", "results", "ret", "root", "root_filts", "row", "rows", "rows_updated", "rule", "rules", "rules_by_group", "rules_ids", "sample_data", "saved_event", "secgroup", "secgroup1", "secgroup2", "secgroup3", "secgroup4", "second", "security_group", "security_group1", "security_group2", "security_group_rule", "security_group_rule1", "security_group_rule2", "security_group_rule_ids", "security_groups", "self", "serv", "service", "service1", "service2", "service_data", "service_dict", "service_id", "services", "session", "set", "set_and_check", "setattr", "sg1", "sg2", "sg_mock", "shadow_table", "si_rows", "sid", "siim_rows", "six", "skip_tables", "snap", "snap2", "some_context", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "sorted", "source_compute", "source_node", "sources", "specs", "specs1", "specs2", "sql", "sqlalchemy_api", "sqlalchemyutils", "sqlite", "sqlite3", "start", "start_period", "start_period_str", "start_time", "stats", "status", "stdlib_uuid", "step", "str", "super", "sync", "sync_name", "sys_meta", "system_meta", "system_metadata", "t", "t1", "t2", "t2_utc", "t3", "t3_utc", "table", "table_name", "tablename", "tablenames", "tag", "tag1", "tag2", "tag3", "tag4", "tag_ref", "tag_refs", "tags", "task_states", "test", "test1", "test1_active", "test1_error", "test1_error2", "test2", "test2_active", "test2_error", "test2_error2", "test3", "test_base", "test_cellname", "test_func", "test_values", "time_fixture", "timeout", "timeutils", "token_hash", "total", "tup", "tuple", "type", "until_refresh", "update", "update_match", "update_statement", "update_statement2", "updated", "updated_at", "updated_bw_usage", "updated_cell", "updated_float_ip", "updated_group", "updated_service", "updated_vif", "usage", "usages", "use_slave", "user_id", "user_quotas", "user_usages", "utils", "utils_fixture", "uuid", "uuid1", "uuid2", "uuid3", "uuid3_refreshed", "uuid3_refreshed_str", "uuids", "uuidsentinel", "uuidstr", "uuidstr0", "uuidutils", "v", "v1", "v2", "val", "val1", "val2", "vals", "value", "values", "values1", "values2", "values3", "values4", "values5", "vif", "vif_addr", "vifs", "vifs1", "vifs1_real", "vifs2", "vifs2_real", "virtual_interface", "vm_states", "vol", "vol2", "vol_id1", "vol_id2", "vol_usage", "vol_usages", "with_device_name", "without_device_name", "x", "zip", "Unit", "tests", "for", "the", "DB", "API.\nTest", "docstring.\nNo-DB", "test", "class", "for", "simple", "test", "cases", "that", "do", "not", "require", "a", "backend.\nTests", "for", "db.api.instance_system_metadata_*", "methods.\nTests", "for", "the", "db.api.quota_usage_refresh", "method.", "\nTests", "for", "db.api.reservation_*", "methods.\nTests", "for", "db.api.instance_*", "methods.\nTests", "for", "db.api.instance_metadata_*", "methods.\nRetrieve", "the", "action", "to", "ensure", "it", "was", "successfully", "added.\nCreate", "an", "instance", "action.\nCreate", "an", "instance", "action.\nCreate", "an", "instance", "finish", "action.\nEnsure", "we", "can", "get", "actions", "by", "UUID.\nEnsure", "retrived", "actions", "are", "in", "order.\nEnsure", "we", "can", "get", "an", "action", "by", "instance", "UUID", "and", "action", "id.\nCreate", "an", "instance", "action", "event.\nCreate", "an", "instance", "action", "event.\nFinish", "an", "instance", "action", "event.\nFinish", "an", "instance", "action", "event.\nFinish", "an", "instance", "action", "event.\nFinish", "an", "instance", "action", "event", "with", "an", "error.\nCreate", "an", "instance", "action", "and", "event", "with", "a", "string", "start_time.\nEnsure", "retrived", "action", "events", "are", "in", "order.\nGet", "a", "specific", "instance", "action", "event.\nEnsure", "we", "can", "create", "an", "instance", "fault.\nEnsure", "we", "can", "retrieve", "faults", "for", "instance.\nEnsure", "we", "can", "retrieve", "only", "latest", "faults", "for", "instance.\nTests", "for", "db.api.agent_build_*", "methods.\nTests", "for", "db.api.network_*", "methods.\nTests", "for", "db.api.quota_*", "methods.\nTests", "quota", "reserve/refresh", "operations", "using", "mock.\n:returns:", "0", "on", "success,", "1", "if", "no", "uuid", "column,", "2", "if", "insert", "failed.", "Copyright", "2010", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "add", "some", "random", "stats\n", "test", "for", "project", "level", "resources\n", "Instances", "that", "will", "reply", "to", "the", "query\n", "Other", "instances", "in", "the", "DB,", "will", "not", "match", "name", "filter\n", "Verify", "different", "sort", "key/direction", "combinations\n", "created_at", "is", "added", "by", "default", "if", "not", "supplied,", "descending", "order\n", "Now", "created_at", "should", "be", "in", "ascending", "order", "(defaults", "to", "the", "first\n", "sort", "dir", "direction)\n", "Remove", "name", "filter,", "get", "all", "instances\n", "Default", "sorting,", "'created_at'", "then", "'id'", "in", "desc", "order\n", "Instances", "that", "will", "reply", "to", "the", "query\n", "Other", "instances", "in", "the", "DB,", "will", "not", "match", "name", "filter\n", "Common", "sort", "information", "for", "every", "query\n", "Overall", "correct", "instance", "order", "based", "on", "the", "sort", "keys\n", "Limits", "of", "1,", "2,", "and", "3,", "verify", "that", "the", "instances", "returned", "are", "in", "the\n", "correct", "sorted", "order,", "update", "the", "marker", "to", "get", "the", "next", "correct", "page\n", "Include", "the", "maximum", "number", "of", "instances", "(ie,", "6)", "to", "ensure", "that\n", "the", "last", "query", "(with", "marker", "pointing", "to", "the", "last", "instance)\n", "returns", "0", "servers\n", "Instances", "that", "will", "reply", "to", "the", "query\n", "Other", "instances", "in", "the", "DB,", "will", "not", "match", "name", "filter\n", "Common", "sort", "information", "for", "every", "query\n", "Overall", "correct", "instance", "order", "based", "on", "the", "sort", "keys\n", "Limits", "of", "1,", "2,", "and", "3,", "verify", "that", "the", "instances", "returned", "are", "in", "the\n", "correct", "sorted", "order,", "update", "the", "marker", "to", "get", "the", "next", "correct", "page\n", "Include", "the", "maximum", "number", "of", "instances", "(ie,", "6)", "to", "ensure", "that\n", "the", "last", "query", "(with", "marker", "pointing", "to", "the", "last", "instance)\n", "returns", "0", "servers\n", "read_deleted", "shouldn't", "accept", "invalid", "values\n", "Check", "model", "is", "a", "valid", "model\n", "Checks", "that", "session", "in", "context", "would", "not", "be", "overwritten", "by\n", "annotation", "@sqlalchemy_api.main_context_manager.writer", "if", "annotation\n", "is", "used", "twice.\n", "Checks", "that", "session", "in", "context", "would", "not", "be", "overwritten", "by\n", "annotation", "@sqlalchemy_api.main_context_manager.reader", "if", "annotation\n", "is", "used", "twice.\n", "this", "does", "not", "exist!\n", "this", "does", "not", "exist!\n", "test", "for", "bug", "1052479\n", "a3", "has", "no", "hosts", "and", "should", "not", "be", "in", "the", "results.\n", "a4", "has", "no", "matching", "hosts.\n", "a5", "has", "no", "matching", "hosts", "after", "deleting", "the", "only", "matching", "host.\n", "filter", "result", "by", "key\n", "Delete", "metadata\n", "this", "does", "not", "exist!\n", "this", "does", "not", "exist!\n", "this", "does", "not", "exist!\n", "Tests", "that", "_manual_join_columns", "doesn't", "modify", "the", "list", "passed", "in.\n", "no", "limit", "or", "marker\n", "just", "limit\n", "limit", "&", "marker\n", "unknown", "marker\n", "used", "for", "testing", "columns_to_join\n", "verify", "that", "all", "default", "columns", "are", "joined\n", "verify", "that", "only", "info_cache", "is", "loaded\n", "verify", "that", "only", "system_metadata", "is", "loaded\n", "verify", "that", "only", "metadata", "and", "info_cache", "are", "loaded\n", "sort", "parameters", "should", "be", "wrapped", "in", "a", "list,", "all", "other", "parameters\n", "should", "be", "passed", "through\n", "First", "sort_dir", "in", "list", "is", "used", "when", "adding", "the", "default", "keys\n", "Include", "default", "key", "value,", "rely", "on", "default", "direction\n", "Direction", "is", "set,", "ignore", "default", "dir\n", "But", "should", "be", "used", "if", "no", "direction", "is", "set\n", "Default", "direction", "is", "the", "first", "key", "in", "the", "list\n", "2", "as", "source", "+", "1", "as", "dest\n", "some", "migrations", "are", "to/from", "host1,", "but", "none", "with", "a", "node", "'b'\n", "2", "as", "dest,", "1", "as", "source\n", "Ensure", "no", "migrations", "are", "returned.\n", "Ensure", "no", "migrations", "are", "returned.\n", "Ensure", "different", "host", "is", "not", "returned\n", "Ensure", "one", "migration", "older", "than", "10", "seconds", "is", "returned.\n", "Ensure", "the", "new", "migration", "is", "not", "returned.\n", "test", "for", "project", "level", "resources\n", "test", "for", "project", "level", "resources\n", "The", "refresh", "will", "create", "the", "usages", "and", "then", "sync\n", "in_use", "from", "0", "to", "3", "for", "fixed_ips", "and", "0", "to", "4", "for", "floating_ips.\n", "User", "ID", "will", "be", "none", "for", "per-project", "resources\n", "The", "refresh", "will", "create", "the", "usages", "and", "then", "sync\n", "in_use", "from", "0", "to", "1", "for", "resource0", "and", "0", "to", "2", "for", "resource1.\n", "make", "sure", "NotFound", "is", "always", "raised", "here", "to", "trick", "Nova", "to", "insert", "the\n", "duplicate", "security", "group", "entry\n", "create", "the", "first", "db", "entry\n", "create", "the", "second", "one", "and", "ensure", "the", "exception", "is", "handled", "properly\n", "Update", "the", "metadata\n", "Retrieve", "the", "user-provided", "metadata", "to", "ensure", "it", "was", "successfully\n", "updated\n", "With", "scope", "'global'", "any", "duplicate", "should", "fail,", "be", "it", "this", "project:\n", "or", "another:\n", "With", "scope", "'project'", "a", "duplicate", "in", "the", "project", "should", "fail:\n", "With", "scope", "'project'", "a", "duplicate", "in", "a", "different", "project", "should", "work:\n", "For", "format", "'tag-'\n", "For", "format", "'tag:'\n", "For", "non-existent", "tag\n", "Confirm", "with", "deleted", "tags\n", "For", "format", "'tag-'\n", "For", "format", "'tag:'\n", "Ensure", "no", "instances", "are", "returned.\n", "Ensure", "one", "rebooting", "instance", "with", "updated_at", "older", "than", "10", "seconds\n", "is", "returned.\n", "Ensure", "the", "newly", "rebooted", "instance", "is", "not", "returned.\n", "test", "instance_update()", "works", "when", "an", "instance", "UUID", "is", "passed.\n", "Create", "an", "instance", "with", "some", "metadata\n", "Update", "the", "metadata\n", "Retrieve", "the", "user-provided", "metadata", "to", "ensure", "it", "was", "successfully\n", "updated\n", "Retrieve", "the", "system", "metadata", "to", "ensure", "it", "was", "successfully", "updated\n", "Makes", "sure", "that", "the", "block", "device", "mapping", "is", "deleted", "when", "the\n", "related", "instance", "is", "deleted.\n", "make", "sure", "the", "bdm", "is", "deleted", "as", "well\n", "Create", "an", "instance", "with", "some", "metadata\n", "Make", "sure", "instance", "metadata", "is", "deleted", "as", "well\n", "Create", "faults\n", "Retrieve", "the", "fault", "to", "ensure", "it", "was", "successfully", "added\n", "Make", "sure", "instance", "faults", "is", "deleted", "as", "well\n", "test", "some", "regular", "persisted", "fields\n", "after", "a", "copy", "operation,", "we", "can", "assert:\n", "1.", "the", "two", "states", "have", "their", "own", "InstanceState\n", "2.", "only", "one", "of", "the", "objects", "is", "still", "in", "our", "Session\n", "3.", "The", "\"new\"", "object", "remains", "persistent", "and", "ready\n", "for", "updates\n", "4.", "the", "\"old\"", "object", "is", "detached", "from", "this", "Session.\n", "Ensure", "that", "we", "retry", "if", "update_on_match", "fails", "for", "no", "discernable\n", "reason\n", "Reproduce", "the", "conditions", "of", "a", "race", "between", "fetching", "and", "updating", "the\n", "instance", "by", "making", "update_on_match", "fail", "for", "no", "discernable", "reason", "the\n", "first", "time", "it", "is", "called,", "but", "work", "normally", "the", "second", "time.\n", "Ensure", "that", "is", "update_match", "continuously", "fails", "for", "no", "discernable\n", "reason,", "we", "evantually", "raise", "UnknownInstanceUpdateConflict\n", "Reproduce", "the", "conditions", "of", "a", "race", "between", "fetching", "and", "updating", "the\n", "instance", "by", "making", "update_on_match", "fail", "for", "no", "discernable", "reason.\n", "Ensure", "that", "we", "allow", "update", "when", "expecting", "a", "host", "field\n", "Ensure", "that", "we", "detect", "a", "changed", "expected", "host", "and", "raise\n", "InstanceUpdateConflict\n", "Ensure", "that", "we", "allow", "update", "when", "expecting", "a", "host", "field", "of", "None\n", "Ensure", "that", "we", "detect", "a", "changed", "expected", "host", "of", "None", "and", "raise\n", "InstanceUpdateConflict\n", "noqa\n", "Ensure", "that", "we", "detect", "a", "changed", "expected", "task", "and", "raise\n", "UnexpectedTaskStateError\n", "noqa\n", "Ensure", "that", "we", "allow", "an", "update", "when", "expected", "task", "is", "correct\n", "noqa\n", "Ensure", "that", "we", "detect", "a", "changed", "expected", "task", "and", "raise\n", "UnexpectedTaskStateError", "when", "there", "are", "multiple", "potential", "expected\n", "tasks\n", "noqa\n", "Ensure", "that", "we", "allow", "an", "update", "when", "expected", "task", "is", "in", "a", "list", "of\n", "expected", "tasks\n", "noqa\n", "Ensure", "that", "we", "raise", "UnepectedDeletingTaskStateError", "when", "task", "state\n", "is", "not", "as", "expected,", "and", "it", "is", "DELETING\n", "osapi_compute_unique_server_name_scope", "is", "unset", "so", "this", "should", "work:\n", "With", "scope", "'global'", "any", "duplicate", "should", "fail.\n", "But", "we", "should", "definitely", "be", "able", "to", "update", "our", "name", "if", "we", "aren't\n", "really", "changing", "it.\n", "With", "scope", "'project'", "a", "duplicate", "in", "the", "project", "should", "fail:\n", "With", "scope", "'project'", "a", "duplicate", "in", "a", "different", "project", "should", "work:\n", "Ensure", "that", "system_metadata", "is", "updated", "during", "instance_update\n", "Ensure", "that", "metadata", "is", "updated", "during", "instance_update\n", "Check", "that", "method", "works", "correctly", "with", "admin", "context\n", "This", "should", "add", "new", "key/value", "pair\n", "This", "should", "leave", "only", "one", "key/value", "pair\n", "Retrieve", "the", "event", "to", "ensure", "it", "was", "successfully", "added\n", "Create", "some", "extra", "actions\n", "Retrieve", "the", "action", "to", "ensure", "it", "was", "successfully", "added\n", "NOTE(rpodolyaka):", "ensure", "we", "use", "a", "different", "req", "id", "for", "the", "2nd", "req\n", "self.fail(self._dict_from_object(event,", "None))\n", "Retrieve", "the", "event", "to", "ensure", "it", "was", "successfully", "added\n", "init_host", "case\n", "init_host", "case\n", "Ensure", "no", "faults", "registered", "for", "this", "instance\n", "Create", "a", "fault\n", "Retrieve", "the", "fault", "to", "ensure", "it", "was", "successfully", "added\n", "Create", "faults\n", "We", "expect", "the", "faults", "to", "be", "returned", "ordered", "by", "created_at", "in\n", "descending", "order,", "so", "insert", "the", "newly", "created", "fault", "at", "the\n", "front", "of", "our", "list.\n", "Ensure", "faults", "are", "saved\n", "Create", "faults\n", "We", "are", "only", "interested", "in", "the", "latest", "fault", "for", "each", "instance\n", "Ensure", "faults", "are", "saved\n", "None", "should", "be", "returned", "when", "no", "faults", "exist.\n", "NOTE(boris-42):", "Remove", "base", "instance", "types\n", "no", "filter\n", "test", "only", "with", "one", "filter\n", "test", "all", "filters", "together\n", "Manually", "sort", "the", "results", "as", "we", "would", "expect", "them\n", "Set", "the", "3rd", "result", "as", "the", "marker\n", "We", "expect", "everything", "/after/", "the", "3rd", "result\n", "Admin", "can", "see", "it\n", "Regular", "user", "can", "not\n", "Regular", "user", "can", "see", "it", "after", "being", "granted", "access\n", "Admin", "can", "see", "it\n", "Regular", "user", "can", "not\n", "Regular", "user", "can", "see", "it", "after", "being", "granted", "access\n", "Admin", "can", "see", "it\n", "Regular", "user", "can", "not\n", "Regular", "user", "can", "see", "it", "after", "being", "granted", "access\n", "NOTE(wingwj):", "Aims", "to", "test", "difference", "between", "mysql", "and", "postgresql\n", "for", "bug", "1288636\n", "Recreate", "the", "flavor", "with", "the", "same", "params\n", "NOTE(boris-42):", "We", "have", "already", "tested", "flavor_create", "method\n", "with", "extra_specs", "in", "InstanceTypeTestCase.\n", "NOTE(boris-42):", "Check", "that", "flavor_access_add", "doesn't", "fail", "and\n", "returns", "correct", "value.", "This", "is", "enough", "because", "other\n", "logic", "is", "checked", "by", "other", "methods.\n", "should", "deallocate\n", "still", "allocated\n", "wrong", "network\n", "too", "new\n", "5", "reties", "+", "initial", "attempt\n", "Tests", "that", "trying", "to", "associate", "an", "instance", "to", "a", "fixed", "IP", "on", "a", "network\n", "but", "without", "specifying", "the", "network", "ID", "during", "associate", "will", "fail.\n", "5", "retries", "+", "initial", "attempt\n", "In", "this", "case", "the", "transaction", "will", "be", "rolled", "back", "and", "none", "of", "the", "ips\n", "will", "make", "it", "to", "the", "database.\n", "we", "have", "no", "`id`", "in", "incoming", "data", "so", "we", "can", "not", "use\n", "_assertEqualListsOfObjects", "to", "compare", "incoming", "data", "and", "received\n", "objects\n", "5", "retries", "+", "initial", "attempt\n", "NOTE(boris-42):", "Create", "more", "than", "256", "ip", "to", "check", "that\n", "_ip_range_splitter", "works", "properly.\n", "Instance", "rebooted", "or", "crashed.", "block", "device", "stats", "were", "reset", "and", "are\n", "less", "than", "the", "previous", "values\n", "This", "is", "unlikely", "to", "happen,", "but", "could", "when", "a", "volume", "is", "detached\n", "right", "after", "an", "instance", "has", "rebooted", "/", "recovered", "and", "before\n", "the", "system", "polled", "and", "updated", "the", "volume", "usage", "cache", "table.\n", "Instance", "rebooted", "or", "crashed.", "block", "device", "stats", "were", "reset", "and", "are\n", "less", "than", "the", "previous", "values\n", "Also", "make", "sure", "the", "update", "call", "returned", "correct", "data\n", "check", "create\n", "check", "update\n", "check", "create", "without", "device_name\n", "check", "create", "multiple", "devices", "without", "device_name\n", "check", "that", "old", "swap", "bdms", "are", "deleted", "on", "create\n", "multiple", "nic", "of", "same", "instance\n", "5", "retries", "+", "initial", "attempt\n", "network", "with", "host", "set\n", "network", "with", "fixed", "ip", "with", "host", "set\n", "network", "with", "instance", "with", "host", "set\n", "disassociate", "project\n", "disassociate", "host\n", "check", "all", "3", "keypairs\n", "check", "only", "1", "keypair\n", "check", "keypairs", "after", "'test_1'\n", "check", "only", "1", "keypairs", "after", "'test_1'\n", "check", "non-existing", "keypair\n", "create", "keypairs", "for", "two", "users\n", "check", "all", "2", "keypairs", "for", "test_user_1\n", "check", "all", "2", "keypairs", "for", "test_user_2\n", "check", "only", "1", "keypair", "for", "test_user_1\n", "check", "keypairs", "after", "'test_1'", "for", "test_user_2\n", "check", "only", "1", "keypairs", "after", "'test_1'", "for", "test_user_1\n", "check", "non-existing", "keypair", "for", "test_user_2\n", "Tests", "that", "QuotaUsage", "isn't", "created", "if", "it's", "already", "in", "user_usages.\n", "Tests", "that", "the", "QuotaUsage", "is", "created.\n", "Now", "test", "if", "the", "QuotaUsage", "was", "created", "with", "a", "user_id", "or", "not.\n", "Tests", "when", "a", "quota", "refresh", "is", "needed", "based", "on", "the", "in_use", "value.\n", "We", "have", "to", "set", "until_refresh=None", "otherwise", "mock", "will", "give", "it\n", "a", "value", "which", "runs", "some", "code", "we", "don't", "want.\n", "Tests", "different", "values", "for", "the", "until_refresh", "counter.\n", "In", "this", "test,", "user", "quotas", "are", "fine", "but", "project", "quotas", "are", "over.\n", "In", "this", "test,", "project", "quotas", "are", "fine", "but", "user", "quotas", "are", "over.\n", "add", "some", "random", "stats\n", "Create", "a", "service", "and", "compute", "node", "and", "ensure", "we", "can", "find", "its", "stats;\n", "delete", "the", "service", "and", "compute", "node", "when", "done", "and", "loop", "again\n", "Create", "a", "service\n", "Create", "a", "compute", "node\n", "Ensure", "the", "\"new\"", "compute", "node", "is", "found\n", "Now", "ensure", "the", "match", "has", "stats!\n", "Now", "delete", "the", "newly-created", "compute", "node", "to", "ensure", "the", "related\n", "compute", "node", "stats", "are", "wiped", "in", "a", "cascaded", "fashion\n", "Clean", "up", "the", "service\n", "Create", "another", "service", "with", "another", "node\n", "Create", "another", "node", "on", "top", "of", "the", "same", "service\n", "Create", "another", "node", "on", "top", "of", "the", "same", "service\n", "Create", "another", "node", "on", "top", "of", "the", "same", "service\n", "change", "some", "values:\n", "Define", "the", "various", "values", "for", "the", "new", "compute", "node\n", "Calculate", "the", "expected", "values", "by", "adding", "the", "values", "for", "the", "new\n", "compute", "node", "to", "those", "for", "self.item\n", "Create", "the", "new", "compute", "node\n", "Get", "the", "stats,", "and", "make", "sure", "the", "stats", "agree", "with", "the", "expected\n", "amounts.\n", "NOTE(sbauza):", "This", "test", "is", "only", "for", "checking", "backwards", "compatibility\n", "with", "old", "versions", "of", "compute_nodes", "not", "providing", "host", "column.\n", "This", "test", "could", "be", "removed", "once", "we", "are", "sure", "that", "all", "compute", "nodes\n", "are", "populating", "the", "host", "field", "thanks", "to", "the", "ResourceTracker\n", "Update", "the", "record", "once", "so", "updated_at", "is", "set.\n", "Update", "a", "second", "time.", "Make", "sure", "that", "the", "updated_at", "value", "we", "send\n", "is", "overridden.\n", "NOTE(sbauza):", "This", "test", "is", "only", "for", "checking", "backwards", "compatibility\n", "with", "old", "versions", "of", "compute_nodes", "not", "providing", "host", "column.\n", "This", "test", "could", "be", "removed", "once", "we", "are", "sure", "that", "all", "compute", "nodes\n", "are", "populating", "the", "host", "field", "thanks", "to", "the", "ResourceTracker\n", "No", "matches\n", "Add", "3", "entries\n", "Test", "explicit", "refreshed", "time\n", "Update", "2nd", "entry\n", "create", "two", "equal", "bw_usages", "with", "IDs", "1", "and", "2\n", "check", "that", "we", "have", "two", "equal", "bw_usages\n", "update", "'last_ctr_in'", "field", "in", "one", "bw_usage\n", "check", "that", "only", "bw_usage", "with", "ID", "1", "was", "updated\n", "NOTE(rpodolyaka):", "migration", "209", "introduced", "a", "few", "new", "tables,\n", "which", "don't", "have", "shadow", "tables", "and", "it's\n", "completely", "OK,", "so", "we", "should", "skip", "them", "here\n", "NOTE(snikitin):", "migration", "266", "introduced", "a", "new", "table", "'tags',\n", "which", "have", "no", "shadow", "table", "and", "it's\n", "completely", "OK,", "so", "we", "should", "skip", "it", "here\n", "NOTE(cdent):", "migration", "314", "introduced", "three", "new\n", "('resource_providers',", "'allocations'", "and", "'inventories')\n", "with", "no", "shadow", "table", "and", "it's", "OK,", "so", "skip.\n", "318", "adds", "one", "more:", "'resource_provider_aggregates'.\n", "NOTE(PaulMurray):", "migration", "333", "adds", "'console_auth_tokens'\n", "Add", "6", "rows", "to", "table\n", "Set", "4", "to", "deleted\n", "Verify", "we", "have", "6", "in", "main\n", "Verify", "we", "have", "0", "in", "shadow\n", "Archive", "2", "rows\n", "Verify", "we", "have", "4", "left", "in", "main\n", "Verify", "we", "have", "2", "in", "shadow\n", "Archive", "2", "more", "rows\n", "Verify", "we", "have", "2", "left", "in", "main\n", "Verify", "we", "have", "4", "in", "shadow\n", "Try", "to", "archive", "more,", "but", "there", "are", "no", "deleted", "rows", "left.\n", "Verify", "we", "still", "have", "2", "left", "in", "main\n", "Verify", "we", "still", "have", "4", "in", "shadow\n", "Ensure", "only", "deleted", "rows", "were", "deleted\n", "NOTE(cdent):", "migration", "314", "adds", "the", "resource_providers\n", "table", "with", "a", "uuid", "column", "that", "does", "not", "archive,", "so", "skip.\n", "Not", "a", "uuid", "table,", "so", "skip", "it.\n", "Add", "6", "rows", "to", "table\n", "This", "table", "has", "constraints", "that", "require", "a", "table-specific\n", "insert,", "so", "skip", "it.\n", "Set", "4", "to", "deleted\n", "Verify", "we", "have", "6", "in", "main\n", "Verify", "we", "have", "0", "in", "shadow\n", "Archive", "2", "rows\n", "Verify", "we", "have", "4", "left", "in", "main\n", "Verify", "we", "have", "2", "in", "shadow\n", "Archive", "2", "more", "rows\n", "Verify", "we", "have", "2", "left", "in", "main\n", "Verify", "we", "have", "4", "in", "shadow\n", "Try", "to", "archive", "more,", "but", "there", "are", "no", "deleted", "rows", "left.\n", "Verify", "we", "still", "have", "2", "left", "in", "main\n", "Verify", "we", "still", "have", "4", "in", "shadow\n", "SQLite", "doesn't", "enforce", "foreign", "key", "constraints", "without", "a", "pragma.\n", "We're", "seeing", "issues", "with", "foreign", "key", "support", "in", "SQLite", "3.6.20\n", "SQLAlchemy", "doesn't", "support", "it", "at", "all", "with", "<", "SQLite", "3.6.19\n", "It", "works", "fine", "in", "SQLite", "3.7.\n", "So", "return", "early", "to", "skip", "this", "test", "if", "running", "SQLite", "<", "3.7\n", "consoles.pool_id", "depends", "on", "console_pools.id\n", "The", "first", "try", "to", "archive", "console_pools", "should", "fail,", "due", "to", "FK.\n", "Then", "archiving", "consoles", "should", "work.\n", "Then", "archiving", "console_pools", "should", "work.\n", "migrations.instance_uuid", "depends", "on", "instances.uuid\n", "The", "first", "try", "to", "archive", "instances", "should", "fail,", "due", "to", "FK.\n", "Then", "archiving", "migrations", "should", "work.\n", "Then", "archiving", "instances", "should", "work.\n", "Add", "6", "rows", "to", "each", "table\n", "Set", "4", "of", "each", "to", "deleted\n", "Verify", "we", "have", "6", "in", "each", "main", "table\n", "Verify", "we", "have", "0", "in", "each", "shadow", "table\n", "Archive", "7", "rows,", "which", "should", "be", "4", "in", "one", "table", "and", "3", "in", "the", "other.\n", "Verify", "we", "have", "5", "left", "in", "the", "two", "main", "tables", "combined\n", "Verify", "we", "have", "7", "in", "the", "two", "shadow", "tables", "combined.\n", "Archive", "the", "remaining", "deleted", "rows.\n", "Verify", "we", "have", "4", "total", "left", "in", "both", "main", "tables.\n", "Verify", "we", "have", "8", "in", "shadow\n", "Try", "to", "archive", "more,", "but", "there", "are", "no", "deleted", "rows", "left.\n", "Verify", "we", "have", "4", "total", "left", "in", "both", "main", "tables.\n", "Verify", "we", "have", "8", "in", "shadow\n", "update", "update", "members\n", "update", "update", "policies\n", "test", "invalid", "ID\n", "check", "add", "with", "existing", "keys\n", "NOTE(sdague):", "the", "oslo_db", "base", "test", "case", "completely\n", "invalidates", "our", "logging", "setup,", "we", "actually", "have", "to", "do", "that\n", "before", "it", "is", "called", "to", "keep", "this", "from", "vomitting", "all", "over", "our\n", "test", "output.\n", "Check", "the", "tag", "for", "the", "instance", "was", "added\n", "Check", "the", "only", "one", "tag", "for", "the", "instance", "was", "added\n", "Set", "tags", "to", "the", "instance\n", "Check", "the", "tags", "for", "the", "instance", "were", "set\n", "Set", "new", "tags", "to", "the", "instance\n", "Check", "the", "tags", "for", "the", "instance", "were", "replaced\n", "Check", "insert()", "was", "called", "to", "insert", "'tag1'", "and", "'tag2'\n", "Check", "insert()", "wasn't", "called", "because", "there", "are", "no", "tags", "for", "creation\n", "Check", "delete()", "wasn't", "called", "because", "there", "are", "no", "tags", "for", "deletion\n", "Check", "delete()", "was", "called", "to", "delete", "'tag2'\n", "Check", "the", "tags", "for", "the", "first", "instance\n", "Check", "the", "tags", "for", "the", "second", "instance\n", "Check", "the", "tags", "for", "the", "instance", "were", "added\n", "Check", "the", "tags", "for", "the", "instance", "were", "added\n", "NOTE(snikitin):", "Make", "sure", "it's", "actually", "a", "bool\n", "updating", "of", "instance_uuid", "causes", "unique", "constraint", "failure,\n", "using", "of", "savepoint", "helps", "to", "continue", "working", "with", "existing", "session\n", "after", "DB", "errors,", "so", "exception", "was", "successfully", "handled\n", "the", "api", "only", "supports", "getting", "unexpired", "tokens\n", "but", "by", "rolling", "back", "time", "we", "can", "see", "if", "a", "token", "that\n", "should", "be", "deleted", "is", "still", "there"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_request_spec.py": ["False", "IMAGE_META", "INSTANCE_NUMA_TOPOLOGY", "None", "PCI_REQUESTS", "True", "context", "ctxt", "db_request_spec", "fake_flavor", "fake_spec_obj", "jsonutils", "objects", "remove_id", "req_obj", "set", "uuidutils", "This", "should", "never", "be", "a", "changed", "field"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_flavor_manage.py": ["ADMIN_API", "True", "api_sample_base", "response", "sample_dir", "self", "subs", "Create", "a", "flavor.", "Get", "api", "sample", "to", "create", "and", "delete", "a", "flavor."], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_request.py": ["_fake_alias1", "_fake_alias11", "_fake_alias2", "_fake_alias3", "_fake_alias4", "als", "exception", "exp", "exp_real", "expect_dict", "expect_dict1", "expect_dict2", "expect_request", "expected", "flavor", "list", "p", "real", "request", "requests", "self", "set", "test", "zip", "Tests", "for", "PCI", "request."], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_server_actions.py": ["FAKE_ACTIONS", "FAKE_ACTION_ID1", "FAKE_ACTION_ID2", "FAKE_EVENTS", "FAKE_REQUEST_ID1", "FAKE_REQUEST_ID2", "FAKE_UUID", "False", "None", "datetime", "fake_action_event_finish", "fake_action_event_start", "test"], "/Users/mehranhassani/repos/nova/nova/objects/base.py": ["False", "None", "NotImplementedError", "NovaObject", "NovaObjectDictCompat", "OBJ_PROJECT_NAMESPACE", "OBJ_SERIAL_NAMESPACE", "ObjectListBase", "True", "_strip", "action_fn", "arg", "args", "callable", "classmethod", "cls", "conductor", "context", "contextlib", "cur_version", "datetime", "default", "dict", "entity", "exception", "field", "fields", "fn", "functools", "getattr", "hasattr", "ignore", "index", "isinstance", "issubclass", "item_key", "iterable", "k", "key", "keys", "kwargs", "list", "list_cls", "messaging", "name", "netaddr", "notification_classes", "notification_cls", "obj", "obj_1", "obj_2", "obj_fields", "obj_list", "obj_lists", "obj_make_list", "obj_to_primitive", "object", "objects", "objinst", "objname", "objprim", "objver", "original_context", "ovoo_base", "ovoo_exc", "prim", "prim_1", "prim_2", "primitive", "property", "remotable", "remotable_classmethod", "result", "self", "set", "setattr", "six", "staticmethod", "str", "traceback", "tuple", "utils", "v", "value", "values", "version", "version_manifest", "versionutils", "wrapper", "x", "Nova", "common", "internal", "object", "model\nReturn", "the", "mangled", "name", "of", "the", "attribute's", "underlying", "storage.\nDecorator", "that", "will", "do", "the", "arguments", "serialization", "before", "remoting.", "FIXME(danms):", "This", "is", "just", "until", "we", "use", "o.vo's", "class", "properties\n", "and", "object", "base.\n", "NOTE(danms):", "This", "is", "called", "when", "an", "object", "is", "registered,\n", "and", "is", "responsible", "for", "maintaining", "nova.objects.$OBJECT\n", "as", "the", "highest-versioned", "implementation", "of", "a", "given", "object.\n", "NOTE(ndipanov):", "This", "is", "nova-specific\n", "NOTE(danms):", "This", "is", "nova-specific\n", "NOTE(danms):", "This", "is", "nova-specific\n", "NOTE(danms):", "These", "are", "for", "transition", "to", "using", "the", "oslo\n", "base", "object", "and", "can", "be", "removed", "when", "we", "move", "to", "it.\n", "NOTE(danms):", "For", "our", "purposes,", "the", ".z", "part", "of", "the", "version\n", "should", "be", "safe", "to", "accept", "without", "requiring", "a", "backport\n", "NOTE(danms,", "gibi)", "A", "set", "can't", "have", "an", "unhashable", "value", "inside,\n", "such", "as", "a", "dict.", "Convert", "the", "set", "to", "list,", "which", "is", "fine,", "since", "we\n", "can't", "send", "them", "over", "RPC", "anyway.", "We", "convert", "it", "to", "list", "as", "this\n", "way", "there", "will", "be", "no", "semantic", "change", "between", "the", "fake", "rpc", "driver\n", "used", "in", "functional", "test", "and", "a", "normal", "rpc", "driver.\n", "NOTE(danms):", "We", "wrap", "a", "descriptor,", "so", "use", "that", "protocol\n", "NOTE(danms):", "Make", "this", "discoverable"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_certificates.py": ["CertificatesTestV21", "None", "cert", "certificate_create_extension", "certificate_show_extension", "certificates", "certificates_v21", "context", "exc", "exception", "fakes", "mock", "mock_fetch_ca", "mock_generate_x509_cert", "oslo_policy", "pk", "policy", "res_dict", "response", "rpcapi", "rules", "self", "super", "test", "url", "view"], "/Users/mehranhassani/repos/nova/nova/conf/consoleauth.py": ["True", "cfg", "conf", "consoleauth_group", "consoleauth_opts", "default_opts"], "/Users/mehranhassani/repos/nova/nova/virt/virtapi.py": ["None", "NotImplementedError", "contextlib", "deadline", "error_callback", "event_names", "instance", "object", "self"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/disco.py": ["CONF", "False", "LibvirtDISCOVolumeDriver", "None", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "host", "libvirt_volume", "nova", "self", "super", "utils", "Libvirt", "volume", "driver", "for", "DISCO.\nInit", "DISCO", "connector", "for", "LibVirt.\nGet", "DISCO", "volume", "attachment", "configuration.\nConnect", "a", "DISCO", "volume", "to", "a", "compute", "node.\nDisconnect", "a", "DISCO", "volume", "of", "a", "compute", "node."], "/Users/mehranhassani/repos/nova/nova/tests/unit/image/test_transfer_modules.py": ["CONF", "copy_mock", "dst_file", "exception", "fs_id", "loc_meta", "mock", "mountpoint", "nova", "self", "test", "tm", "tm_file", "url", "url_parts", "urlparse", "register", "opts", "for", "dynamically", "created", "group", "'image_file_url:gluster'\n", "NOTE(Jbresnah)", "The", "following", "options", "must", "be", "added", "after", "the", "module\n", "has", "added", "the", "specific", "groups.\n", "register", "opts", "for", "dynamically", "created", "group", "'image_file_url:gluster'\n", "Should", "include", "the", "mountpoint", "before", "my/image/path\n", "register", "opts", "for", "dynamically", "created", "group", "'image_file_url:gluster'\n", "Should", "include", "the", "mountpoint", "before", "my/image/path"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_neutron_security_groups.py": ["False", "KeyError", "MockClient", "None", "TestNeutronSecurityGroupRulesTestCase", "TestNeutronSecurityGroupsOutputTest", "TestNeutronSecurityGroupsTestCase", "True", "UUID_SERVER", "_TestNeutronSecurityGroupRulesBase", "_context", "_fake_networks", "_fake_ports", "_fake_security_group_rules", "_fake_security_groups", "_fake_subnets", "_params", "admin", "bindings", "body", "cfg", "cmd_resource", "compute", "content_type", "context", "ctx", "db_inst", "device_id", "dict", "encodeutils", "enumerate", "exception", "expected", "fake_compute_get", "fake_get_instance_security_groups", "fakes", "field", "fields", "get_client", "group", "i", "id", "id1", "id2", "ids", "image_uuid", "inst", "instance", "instance_obj", "isinstance", "j", "jsonutils", "kwargs", "len", "list", "list_dict", "mock", "model", "msg", "n", "n_exc", "name", "name_or_id", "names", "net", "network", "neutron", "neutron_api", "neutron_driver", "neutron_sg_bind_mock", "nova", "object", "p", "parent_id", "port", "port_security", "ports", "project_id", "r", "refresh_info_cache_mock", "req", "res", "res_dict", "resource", "ret", "rule", "s", "security_group", "security_group_api", "security_group_rule", "security_groups", "self", "server", "servers", "sg", "sg1", "sg2", "sg3", "sg_port", "sg_template1", "sg_template2", "sgs", "shared", "six", "subnet", "super", "test", "test_security_groups", "url", "use_neutron", "uuids", "uuidutils", "webob", "Used", "to", "override", "set", "config", "in", "the", "base", "test", "in", "test_security_groups.\n", "Neutron's", "security", "group", "description", "field", "is", "optional.\n", "Neutron's", "security", "group", "description", "field", "is", "optional.\n", "Neutron's", "security", "group", "name", "field", "is", "optional.\n", "Neutron", "allows", "security", "group", "name", "to", "be", "whitespace.\n", "Neutron's", "security", "group", "description", "field", "is", "optional.\n", "Neutron", "allows", "description", "to", "be", "whitespace.\n", "Neutron", "allows", "duplicate", "names", "for", "security", "groups.\n", "Neutron", "allows", "security", "group", "name", "to", "be", "non", "string.\n", "Neutron", "allows", "non", "string", "description.\n", "Enforced", "by", "Neutron", "server.\n", "Enforced", "by", "Neutron", "server.\n", "Neutron", "does", "not", "care", "if", "the", "instance", "is", "running", "or", "not.", "When", "the\n", "instances", "is", "detected", "by", "neutron", "it", "will", "push", "down", "the", "security\n", "group", "policy", "to", "it.\n", "Neutron", "security", "groups", "does", "not", "raise", "an", "error", "if", "you", "update", "a\n", "port", "adding", "a", "security", "group", "to", "it", "that", "was", "already", "associated\n", "to", "the", "port.", "This", "is", "because", "PUT", "semantics", "are", "used.\n", "Neutron", "does", "not", "care", "if", "the", "instance", "is", "running", "or", "not.", "When", "the\n", "instances", "is", "detected", "by", "neutron", "it", "will", "push", "down", "the", "security\n", "group", "policy", "to", "it.\n", "Neutron", "security", "groups", "does", "not", "raise", "an", "error", "if", "you", "update", "a\n", "port", "adding", "a", "security", "group", "to", "it", "that", "was", "already", "associated\n", "to", "the", "port.", "This", "is", "because", "PUT", "semantics", "are", "used.\n", "test", "name=''", "is", "replaced", "with", "id\n", "test", "name=''", "is", "replaced", "with", "id\n", "Enforced", "by", "neutron\n", "Used", "to", "override", "set", "config", "in", "the", "base", "test", "in", "test_security_groups.\n", "NOTE:", "This", "'os-security-groups'", "is", "for", "enabling", "security_groups\n", "attribute", "on", "response", "body.\n", "Test", "that", "show", "(GET)", "returns", "the", "same", "information", "as", "create", "(POST)\n", "Needs", "to", "be", "global", "to", "survive", "multiple", "calls", "to", "get_client.\n", "add", "default", "security", "group\n", "port_security", "must", "be", "True", "if", "security", "groups", "are", "present\n", "does", "not", "handle", "bulk", "case", "so", "just", "picks", "rule[0]\n", "neutronv2/api.py", "_get_available_networks", "calls", "this", "assuming\n", "search_opts", "filter", "\"shared\"", "is", "implemented", "and", "not", "ignored\n", "lookup", "first", "by", "unique", "id\n", "lookup", "by", "name,", "raise", "an", "exception", "on", "duplicates"], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/test_instance.py": ["None", "TestInstanceNotificationSample", "True", "_build_resources", "action", "actions", "attachement_id", "context", "create_steps", "delete_steps", "enumerate", "exception", "expected_notifications", "fake_notifier", "fixtures", "i", "idx", "initial", "instance_updates", "len", "mock", "mock_build", "notification", "notification_sample_base", "notifications", "other_flavor_body", "other_flavor_id", "post", "range", "replacements", "self", "server", "step", "steps", "super", "time", "volume_attachment", "volume_attachments", "volume_id", "A", "single", "test", "case", "is", "used", "to", "test", "most", "of", "the", "instance", "action\n", "notifications", "to", "avoid", "booting", "up", "an", "instance", "for", "every", "action\n", "separately.\n", "Every", "instance", "action", "test", "function", "shall", "make", "sure", "that", "after", "the\n", "function", "the", "instance", "is", "in", "active", "state", "and", "usable", "by", "other", "actions.\n", "Therefore", "some", "action", "especially", "delete", "cannot", "be", "used", "here", "as\n", "recovering", "from", "that", "action", "would", "mean", "to", "recreate", "the", "instance", "and\n", "that", "would", "go", "against", "the", "whole", "purpose", "of", "this", "optimization\n", "This", "list", "needs", "to", "be", "in", "order.\n", "This", "makes", "server", "network", "creation", "synchronous", "which", "is", "necessary\n", "for", "notification", "samples", "that", "expect", "instance.info_cache.network_info\n", "to", "be", "set.\n", "The", "first", "notification", "comes", "from", "the", "nova-api", "the", "rest", "is", "from", "the\n", "nova-compute.", "To", "keep", "the", "test", "simpler", "assert", "this", "fact", "and", "then\n", "modify", "the", "publisher_id", "of", "the", "first", "notification", "to", "match", "the\n", "template\n", "nothing", "->", "scheduling\n", "scheduling", "->", "building\n", "scheduled\n", "building", "->", "networking\n", "networking", "->", "block_device_mapping\n", "block_device_mapping", "->", "spawning\n", "spawning", "->", "active\n", "Let's", "generate", "some", "bandwidth", "usage", "data.\n", "Just", "call", "the", "periodic", "task", "directly", "for", "simplicity\n", "active", "->", "deleting\n", "deleting", "->", "deleted\n", "setting", "the", "shelved_offload_time", "to", "0", "should", "set", "the\n", "instance", "status", "to", "'SHELVED_OFFLOADED'\n", "This", "list", "needs", "to", "be", "in", "order.\n", "Five", "versioned", "notifications", "are", "generated.", "We", "only", "rely", "on", "the\n", "first", "four", "because", "_wait_until_swap_volume_error", "will", "return", "True\n", "after", "volume_api.unreserve", "is", "called", "on", "the", "cinder", "fixture,", "and", "that\n", "happens", "before", "the", "instance", "fault", "is", "handled", "in", "the", "compute", "manager\n", "which", "generates", "the", "5th", "notification", "(compute.exception).\n", "0.", "instance-create-start\n", "1.", "instance-create-start\n", "2.", "instance-volume_swap-start\n", "3.", "instance-volume_swap-error\n", "4.", "compute.exception"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/xenstore.py": ["False", "ImportError", "True", "ValueError", "XenAPIPlugin", "XenstoreError", "__name__", "_paths_from_ls", "_run_command", "arg_dict", "args", "barename", "base_path", "cmd", "delete_record", "dirpath", "e", "fnc", "json", "jsonify", "kwargs", "last_nm", "len", "level", "list_records", "ln", "msg", "nm", "path", "paths", "pluginlib", "read_record", "rec", "record_exists", "recs", "result", "ret", "return_code", "self", "stderr", "stdout", "this_level", "utils", "val", "wrapper", "write_record", "Errors", "that", "occur", "when", "calling", "xenstore-*", "through", "subprocesses.", "Copyright", "(c)", "2010", "Citrix", "Systems,", "Inc.\n", "Copyright", "2010", "OpenStack", "Foundation\n", "Copyright", "2010", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n\n", "XenAPI", "plugin", "for", "reading/writing", "information", "to", "xenstore\n\n", "noqa\n", "noqa\n", "noqa\n", "Value", "should", "already", "be", "JSON-encoded,", "but", "some", "operations\n", "may", "write", "raw", "sting", "values;", "this", "will", "catch", "those", "and\n", "properly", "encode", "them.\n", "noqa\n", "if", "stderr", "was", "empty,", "this", "just", "means", "the", "path", "did", "not", "exist\n", "otherwise", "there", "was", "a", "real", "problem\n", "noqa\n", "Just", "try", "again", "in", "case", "the", "agent", "write", "won", "the", "race", "against\n", "the", "record_exists", "check.", "If", "this", "fails", "again,", "it", "will", "likely", "raise\n", "an", "equally", "meaningful", "XenstoreError", "as", "the", "one", "we", "just", "caught\n", "noqa\n", "Just", "try", "again", "in", "case", "the", "path", "was", "created", "in", "between\n", "the", "\"ls\"", "and", "the", "existence", "check.", "If", "this", "fails", "again,", "it", "will\n", "likely", "raise", "an", "equally", "meaningful", "XenstoreError\n", "noqa\n", "Entry", "already", "gone.", "We're", "good", "to", "go.\n", "child", "of", "same", "parent\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/objects/virt_cpu_topology.py": ["True", "VERSION", "base", "classmethod", "cls", "data", "fields", "self", "Version", "1.0:", "Initial", "version\n", "NOTE(jaypipes):", "for", "backward", "compatibility,", "the", "virt", "CPU", "topology\n", "data", "is", "stored", "in", "the", "database", "as", "a", "nested", "dict."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/scheduler_hints.py": ["ALIAS", "alias", "create_kwargs", "extensions", "name", "req_body", "scheduler_hints", "schema", "self", "server_dict", "version", "Pass", "arbitrary", "key/value", "pairs", "to", "the", "scheduler.", "NOTE(gmann):", "Accepting", "request", "body", "in", "this", "function", "to", "fetch", "\"scheduler\n", "hint\".", "This", "is", "a", "workaround", "to", "allow", "OS_SCH-HNT", "at", "the", "top", "level\n", "of", "the", "body", "request,", "but", "that", "it", "will", "be", "changed", "in", "the", "future", "to", "be", "a\n", "subset", "of", "the", "servers", "dict."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_rpc_driver.py": ["CONF", "CellsRPCDriverTestCase", "FakeInterCellRPCDispatcher", "FakeRPCServer", "False", "True", "_fake_message_from_json", "_fake_process", "_self", "call_info", "cell_state", "check_transport_url", "context", "dispatcher", "endpoints", "expected_server_params", "expected_url", "fake_msg_runner", "fake_servers", "fakes", "get_trans", "json_message", "message", "message_type", "messaging", "mock", "mox", "msg_runner", "next_hop", "nova", "object", "oslo_messaging", "range", "rpc", "rpc_driver", "rpcapi", "rpcclient", "rpcserver", "self", "super", "target", "test", "topic", "transport", "transport2", "transport_url", "x", "Test", "case", "for", "Cells", "communication", "via", "RPC.", "should", "only", "construct", "each", "Transport", "once\n", "first", "call", "to", "_get_transport", "creates", "a", "oslo.messaging.Transport", "obj\n", "subsequent", "calls", "should", "return", "the", "pre-created", "Transport", "obj"], "/Users/mehranhassani/repos/nova/nova/compute/vm_states.py": ["ACTIVE", "ALLOW_HARD_REBOOT", "ALLOW_RESOURCE_REMOVAL", "ALLOW_SOFT_REBOOT", "ALLOW_TRIGGER_CRASH_DUMP", "BUILDING", "DELETED", "ERROR", "PAUSED", "RESCUED", "RESIZED", "SHELVED", "SHELVED_OFFLOADED", "SOFT_DELETED", "STOPPED", "SUSPENDED", "fields", "VM", "is", "running\n", "VM", "only", "exists", "in", "DB\n", "VM", "is", "suspended", "to", "disk.\n", "VM", "is", "powered", "off,", "the", "disk", "image", "is", "still", "there.\n", "A", "rescue", "image", "is", "running", "with", "the", "original", "VM", "image", "attached\n", "a", "VM", "with", "the", "new", "size", "is", "active.", "The", "user", "is", "expected", "to", "manually", "confirm\n", "or", "revert.\n", "VM", "is", "marked", "as", "deleted", "but", "the", "disk", "images", "are", "still", "available", "to", "restore.\n", "VM", "is", "permanently", "deleted.\n", "VM", "is", "powered", "off,", "resources", "still", "on", "hypervisor\n", "VM", "and", "associated", "resources", "are", "not", "on", "hypervisor\n", "states", "we", "can", "soft", "reboot", "from\n", "states", "we", "allow", "hard", "reboot", "from\n", "states", "we", "allow", "to", "trigger", "crash", "dump\n", "states", "we", "allow", "resources", "to", "be", "freed", "in"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/hypervisors.py": ["ALIAS", "False", "HypervisorsController", "LOG", "None", "NotImplementedError", "True", "ValueError", "_", "__name__", "_view_builder_class", "alias", "alive", "api_version_request", "common", "compute", "compute_node", "compute_nodes", "context", "detail", "dict", "e", "exception", "extensions", "field", "getattr", "host", "hv_policies", "hyp", "hyp_dict", "hyper_view", "hypervisor", "hypervisors", "hypervisors_dict", "hypervisors_links", "hypervisors_list", "id", "instances", "jsonutils", "kwargs", "limit", "links", "logging", "marker", "msg", "name", "req", "resources", "self", "serv", "servers", "service", "servicegroup", "stats", "super", "uptime", "version", "webob", "wsgi", "The", "hypervisors", "admin", "extension.\nThe", "Hypervisors", "API", "controller", "for", "the", "OpenStack", "API.\nAdmin-only", "hypervisor", "administration.", "Add", "any", "additional", "info\n", "noqa\n", "noqa\n", "The", "compute", "service", "could", "be", "deleted", "which", "doesn't", "delete\n", "the", "compute", "node", "record,", "that", "has", "to", "be", "manually", "removed\n", "from", "the", "database", "so", "we", "just", "ignore", "it", "when", "listing", "nodes.\n", "noqa\n", "noqa\n", "The", "compute", "service", "could", "be", "deleted", "which", "doesn't", "delete\n", "the", "compute", "node", "record,", "that", "has", "to", "be", "manually", "removed\n", "from", "the", "database", "so", "we", "just", "ignore", "it", "when", "listing", "nodes.\n", "Get", "the", "uptime"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/fake.py": ["Exception", "Failure", "FakeXenAPI", "False", "IndexError", "KeyError", "LOG", "None", "NotImplementedError", "True", "VDI_resize", "VDI_resize_online", "VM_clean_shutdown", "VM_hard_shutdown", "_", "_1", "_2", "_CLASSES", "_Dispatcher", "__name__", "_after_create_functions", "_create_local_pif", "_create_local_srs", "_create_object", "_create_pool", "_create_sr", "_create_vlan", "_db_content", "_destroy_functions", "_plugin_glance_upload_vhd2", "_plugin_kernel_copy_vdi", "_plugin_kernel_create_kernel_ramdisk", "_plugin_kernel_remove_kernel_ramdisk", "_plugin_migration_move_vhds_into_sr", "_plugin_noop", "_plugin_pickle_noop", "_plugin_poweraction", "_plugin_xenhost_host_reboot", "_plugin_xenhost_host_shutdown", "_plugin_xenhost_host_startup", "_query_matches", "_session_info", "actual", "add_to_dict", "address", "after_VBD_create", "after_VDI_create", "after_VM_create", "after_hook", "and_clauses", "arg", "args", "as_json", "as_value", "attached", "base64", "bits", "bridge", "c", "callit", "clause", "cls", "config", "content_type", "create_host", "create_pbd", "create_sr", "create_task", "create_vdi", "create_vm", "db_ref", "decorator", "desc", "destref", "destroy_func", "destroy_vbd", "details", "dev_bad1", "dev_bad2", "dev_good", "dict", "dom_id", "domid", "enabled", "exc", "exception", "expected", "field", "full_params", "func", "functions", "get_all", "get_all_records", "get_all_records_where", "get_record", "getattr", "getter", "host_default_sr_ref", "host_ref", "hostname", "i", "impl", "is_sr_create", "is_vlan_create", "isinstance", "jsonutils", "k", "key", "kwargs", "label", "len", "list", "live", "logging", "lspci_output", "matches", "matching_records", "md5", "message", "meth", "method", "methodname", "migrate_data", "mref", "name", "name_label", "network_ref", "nwref", "obj", "object", "options", "or_clauses", "other_config", "params", "password", "pbd_rec", "pbd_ref", "pickle", "pif_rec", "pif_ref", "plugin", "pool_ref", "query", "random", "range", "read_only", "rec", "record", "recs", "ref", "resident_on", "result", "return_singleton", "s", "saxutils", "self", "send", "session", "sharable", "shared", "six", "sm_config", "sr_ref", "sr_type", "sr_uuid", "status", "str", "table", "table_name", "task", "task_ref", "timeutils", "type", "units", "uri", "url", "userdevice", "username", "uuidutils", "v", "val", "value", "vbd_rec", "vbd_ref", "vbd_refs", "vdi_map", "vdi_per_lun", "vdi_rec", "vdi_ref", "vdi_to_clone_ref", "vdi_to_copy_ref", "vif_map", "vif_rec", "vif_ref", "vlan_num", "vlan_pif_ref", "vm_name_label", "vm_rec", "vm_ref", "vmref", "xenapi_session", "zlib", "A", "decorator", "that", "adds", "a", "function", "to", "dictionary.\nCreate", "read-only", "fields", "in", "the", "VM", "record.\nBase", "class", "for", "Fake", "Sessions.", "Parts", "of", "this", "file", "are", "based", "upon", "xmlrpclib.py,", "the", "XML-RPC", "client\n", "interface", "included", "in", "the", "Python", "distribution.\n\n", "Copyright", "(c)", "1999-2002", "by", "Secret", "Labs", "AB\n", "Copyright", "(c)", "1999-2002", "by", "Fredrik", "Lundh\n\n", "By", "obtaining,", "using,", "and/or", "copying", "this", "software", "and/or", "its\n", "associated", "documentation,", "you", "agree", "that", "you", "have", "read,", "understood,\n", "and", "will", "comply", "with", "the", "following", "terms", "and", "conditions:\n\n", "Permission", "to", "use,", "copy,", "modify,", "and", "distribute", "this", "software", "and\n", "its", "associated", "documentation", "for", "any", "purpose", "and", "without", "fee", "is\n", "hereby", "granted,", "provided", "that", "the", "above", "copyright", "notice", "appears", "in\n", "all", "copies,", "and", "that", "both", "that", "copyright", "notice", "and", "this", "permission\n", "notice", "appear", "in", "supporting", "documentation,", "and", "that", "the", "name", "of\n", "Secret", "Labs", "AB", "or", "the", "author", "not", "be", "used", "in", "advertising", "or", "publicity\n", "pertaining", "to", "distribution", "of", "the", "software", "without", "specific,", "written\n", "prior", "permission.\n\n", "SECRET", "LABS", "AB", "AND", "THE", "AUTHOR", "DISCLAIMS", "ALL", "WARRANTIES", "WITH", "REGARD\n", "TO", "THIS", "SOFTWARE,", "INCLUDING", "ALL", "IMPLIED", "WARRANTIES", "OF", "MERCHANT-\n", "ABILITY", "AND", "FITNESS.", "IN", "NO", "EVENT", "SHALL", "SECRET", "LABS", "AB", "OR", "THE", "AUTHOR\n", "BE", "LIABLE", "FOR", "ANY", "SPECIAL,", "INDIRECT", "OR", "CONSEQUENTIAL", "DAMAGES", "OR", "ANY\n", "DAMAGES", "WHATSOEVER", "RESULTING", "FROM", "LOSS", "OF", "USE,", "DATA", "OR", "PROFITS,\n", "WHETHER", "IN", "AN", "ACTION", "OF", "CONTRACT,", "NEGLIGENCE", "OR", "OTHER", "TORTIOUS\n", "ACTION,", "ARISING", "OUT", "OF", "OR", "IN", "CONNECTION", "WITH", "THE", "USE", "OR", "PERFORMANCE\n", "OF", "THIS", "SOFTWARE.\n", "--------------------------------------------------------------------\n", "Create", "a", "pool", "if", "we", "don't", "have", "one", "already\n", "NOTE(johannes):", "Shallow", "copy", "since", "destroy_vbd", "will", "remove", "itself\n", "from", "the", "list\n", "NOTE(johannes):", "Shallow", "copy", "since", "destroy_vbd", "will", "remove", "itself\n", "from", "the", "list\n", "Forces", "fake", "to", "support", "iscsi", "only\n", "Simple", "support", "for", "the", "XenServer", "query", "language:\n", "'field", "\"host\"=\"<uuid>\"", "and", "field", "\"SR\"=\"<sr", "uuid>\"'\n", "Tested", "through", "existing", "tests", "(e.g.", "calls", "to", "find_network_with_bridge)\n", "Now", "it", "must", "be", "a", "single", "field", "-", "bad", "queries", "never", "match\n", "Some", "fields", "(e.g.", "name_label,", "memory_overhead)", "have", "double\n", "underscores", "in", "the", "DB,", "but", "only", "single", "underscores", "when", "querying\n", "Strings", "should", "be", "directly", "compared\n", "But", "for", "all", "other", "value-checks,", "convert", "to", "a", "string", "first\n", "(Notably", "used", "for", "booleans", "-", "which", "can", "be", "lower", "or", "camel\n", "case", "and", "are", "interpreted/sanitised", "by", "XAPI)\n", "make", "forgotten", "=", "0", "and", "return", "ref\n", "SR", "not", "found", "in", "db,", "so", "we", "create", "one\n", "Just", "to", "be", "clear\n", "we", "need", "to", "create", "a", "vdi", "because", "this", "introduce\n", "is", "likely", "meant", "for", "a", "single", "vdi\n", "Always", "return", "12GB", "available\n", "Driver", "is", "not", "pciback\n", "Driver", "is", "pciback", "but", "vendor", "and", "device", "are", "bad\n", "Driver", "is", "pciback", "and", "vendor,", "device", "are", "used", "for", "matching\n", "operation", "is", "idempotent,", "XenServer", "doesn't", "care", "if", "the", "key", "exists\n", "Storage", "Repositories", "have", "a", "different", "API\n", "Call", "hook", "to", "provide", "any", "fixups", "needed", "(ex.", "creating", "backrefs)\n", "Add", "RO", "fields\n", "Call", "destroy", "function", "(if", "exists)\n", "Based", "upon", "_Method", "from", "xmlrpclib."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_virtual_interfaces.py": ["VirtualInterfacesJsonTest", "microversion", "response", "sample_dir", "scenarios", "self", "subs", "super", "test_servers", "uuid", "NOTE(gmann):", "microversion", "tests", "do", "not", "need", "to", "run", "for", "v2", "API\n", "so", "defining", "scenarios", "only", "for", "v2.12", "which", "will", "run", "the", "original", "tests\n", "by", "appending", "'(v2_12)'", "in", "test_id."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/aggregates.py": ["False", "add_host", "availability_zone", "availability_zone_with_leading_trailing_spaces", "copy", "create", "create_v20", "parameter_types", "remove_host", "set_metadata", "update", "update_v20"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/ironic/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/flavors.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "flavors_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/network/driver.py": ["CONF", "LOG", "None", "_LE", "_LI", "__name__", "importutils", "logging", "network_driver", "nova", "sys"], "/Users/mehranhassani/repos/nova/nova/pci/whitelist.py": ["CONF", "False", "None", "True", "ValueError", "Whitelist", "_", "dev", "dev_spec", "devspec", "dict", "ds", "exception", "isinstance", "jsonspec", "jsonutils", "list", "nova", "object", "pci_dev", "self", "spec", "specs", "super", "whitelist_spec", "whitelists", "Parse", "and", "validate", "the", "pci", "whitelist", "from", "the", "nova", "config."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_ips.py": ["ALL_IPS", "ExtendedIpsTestV21", "NW_CACHE", "None", "UUID1", "UUID2", "UUID3", "body", "cache", "content_type", "dict", "enumerate", "fake_compute_get", "fake_compute_get_all", "fakes", "fixed", "floating", "i", "inst", "inst_list", "ip", "jsonutils", "network", "objects", "prefix", "req", "res", "results", "sanitized", "self", "server", "six", "str", "subnet", "super", "test", "url", "x"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_cloudpipe_update.py": ["CloudpipeUpdateTestV21", "True", "associate", "bad_request", "body", "clup_v21", "context", "controller_method", "exception", "expected_status", "fake_network", "fake_network_update", "fake_networks", "fake_project_get_networks", "fakes", "key", "network", "network_id", "project_id", "res", "result", "self", "super", "test", "values", "webob"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/reset_server_state.py": ["False", "reset_state"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/keypairs.py": ["ALIAS", "Controller", "False", "KeypairController", "None", "True", "_", "_view_builder_class", "alias", "api_version_request", "attr", "attrs", "body", "body_deprecated_param", "clean", "common", "compute_api", "context", "controller", "create_kwargs", "db_server", "e", "exc", "exception", "extension", "extensions", "id", "key_pair", "key_pairs", "key_type", "keypair", "keypair_filters", "keypair_obj", "keypairs", "keypairs_dict", "keypairs_links", "keypairs_list", "keypairs_view", "kp_policies", "limit", "links", "marker", "msg", "name", "params", "private_key", "req", "resources", "resp_obj", "self", "server", "server_dict", "servers", "super", "user_id", "validation", "version", "webob", "wsgi", "Keypair", "management", "extension.\nKeypair", "API", "controller", "for", "the", "OpenStack", "API.\nDelete", "a", "keypair", "with", "a", "given", "name.\nReturn", "data", "for", "the", "given", "key", "name.\nList", "of", "keypairs", "for", "a", "user.\nKeypair", "Support.", "TODO(claudiub):", "After", "v2", "and", "v2.1", "is", "no", "longer", "supported,\n", "keypair.type", "can", "be", "added", "to", "the", "clean", "dict", "below\n", "handle", "optional", "user-id", "for", "admin", "only\n", "noqa\n", "noqa\n", "noqa\n", "noqa\n", "handle", "optional", "user-id", "for", "admin", "only\n", "handle", "optional", "user-id", "for", "admin", "only\n", "handle", "optional", "user-id", "for", "admin", "only\n", "noqa\n", "noqa\n", "The", "return", "object", "needs", "to", "be", "a", "dict", "in", "order", "to", "pop", "the", "'type'\n", "field,", "if", "the", "api_version", "<", "2.2.\n", "TODO(oomichi):", "It", "is", "necessary", "to", "filter", "a", "response", "of", "keypair", "with\n", "_filter_keypair()", "when", "v2.1+microversions", "for", "implementing", "consistent\n", "behaviors", "in", "this", "keypair", "resource.\n", "noqa\n", "handle", "optional", "user-id", "for", "admin", "only\n", "noqa\n", "noqa\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'show'/'detail'", "methods.\n", "use", "nova.api.extensions.server.extensions", "entry", "point", "to", "modify\n", "server", "create", "kwargs\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1.\n", "NOTE(alex_xu):", "The", "v2.1", "API", "compat", "mode,", "we", "strip", "the", "spaces", "for\n", "keypair", "create.", "But", "we", "didn't", "strip", "spaces", "at", "here", "for\n", "backward-compatible", "some", "users", "already", "created", "keypair", "and", "name", "with\n", "leading/trailing", "spaces", "by", "legacy", "v2", "API."], "/Users/mehranhassani/repos/nova/nova/network/l3.py": ["False", "L3Driver", "LOG", "None", "NotImplementedError", "True", "__name__", "cidr", "dev", "fixed_ip", "fixed_range", "floating_ip", "is_ext", "is_external", "kwargs", "l3_interface_id", "l3_lib", "linux_net", "logging", "mac_address", "network", "network_ref", "networks", "object", "port", "private_ip", "public_ip", "self", "utils", "Abstract", "class", "that", "defines", "a", "generic", "L3", "API.\nSet", "up", "basic", "L3", "networking", "functionality.\nEnable", "rules", "for", "a", "specific", "network.\nSet", "up", "a", "gateway", "on", "this", "network.\nRemove", "an", "existing", "gateway", "on", "this", "network.\n:returns:", "True/False", "(whether", "the", "driver", "is", "initialized).\nL3", "driver", "that", "uses", "linux_net", "as", "the", "backend.", "Linux", "net", "currently", "doesn't", "implement", "any", "way", "of", "removing\n", "the", "VPN", "forwarding", "rules"], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/tasks/test_migrate.py": ["FakeContext", "MigrationTaskTestCase", "None", "True", "compute_rpcapi", "dict", "expected_props", "fake_flavor", "fake_instance", "inst", "inst_object", "legacy_request_spec", "migrate", "mock", "objects", "prep_resize_mock", "quotas_mock", "request_spec_from_components", "scheduler_client", "scheduler_utils", "sel_dest_mock", "self", "sig_mock", "super", "task", "test"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/glance.py": ["Exception", "ImportError", "None", "PluginError", "RetryableError", "SOCKET_TIMEOUT_SECONDS", "__name__", "_create_connection", "_download_tarball_and_verify", "_download_tarball_by_url_v1", "_download_tarball_by_url_v2", "_update_image_meta_v2", "_upload_tarball_by_url_v1", "_upload_tarball_by_url_v2", "api_version", "body", "body_data", "bytes_read", "bytes_written", "callback_data", "check_resp_status_and_retry", "checksum", "chunk", "chunk_len", "compression_level", "conn", "download_vhd2", "endpoint", "err_msg", "error", "etag", "extra_headers", "get_resp", "glance_endpoint", "glance_host", "glance_port", "glance_use_ssl", "head_resp", "header", "header_key", "headers", "httplib", "image_id", "image_status", "json", "key", "len", "logging", "md5", "msg", "netloc", "parts", "path", "pluginlib_nova", "prop", "properties", "request", "resp", "response", "scheme", "send_chunked_transfer_encoded", "session", "socket", "sr_path", "staging_path", "str", "update_md5", "upload_vhd2", "url", "urllib2", "urlparse", "utils", "uuid_stack", "validate_image_status_before_upload_v1", "validate_image_status_before_upload_v2", "value", "vdi_uuids", "Handle", "the", "uploading", "and", "downloading", "of", "images", "via", "Glance.", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n", "Copyright", "(c)", "2010", "Citrix", "Systems,", "Inc.\n", "Copyright", "2010", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "noqa\n", "NOTE(johngarbutt)", "By", "default,", "there", "is", "no", "timeout.\n", "To", "ensure", "the", "script", "does", "not", "hang", "if", "we", "lose", "connection\n", "to", "glance,", "we", "add", "this", "socket", "timeout.\n", "This", "is", "here", "so", "there", "is", "no", "chance", "the", "timeout", "out", "has\n", "been", "adjusted", "by", "other", "library", "calls.\n", "noqa\n", "noqa\n", "noqa\n", "httplib.HTTPException", "and", "derivatives", "(BadStatusLine", "in", "particular)\n", "don't", "have", "a", "useful", "__repr__", "or", "__str__\n", "noqa\n", "Use", "ETag", "if", "available,", "otherwise", "content-md5(v2)", "or\n", "X-Image-Meta-Checksum(v1)\n", "Verify", "checksum", "using", "ETag\n", "NOTE(johngarbutt)", "By", "default,", "there", "is", "no", "timeout.\n", "To", "ensure", "the", "script", "does", "not", "hang", "if", "we", "lose", "connection\n", "to", "glance,", "we", "add", "this", "socket", "timeout.\n", "This", "is", "here", "so", "there", "is", "no", "chance", "the", "timeout", "out", "has\n", "been", "adjusted", "by", "other", "library", "calls.\n", "NOTE(sdague):", "this", "is", "python", "2.4,", "which", "means", "urlparse", "returns", "a\n", "tuple,", "not", "a", "named", "tuple.\n", "0", "-", "scheme\n", "1", "-", "host:port", "(aka", "netloc)\n", "2", "-", "path\n", "noqa\n", "NOTE(sirp):", "httplib", "under", "python2.4", "won't", "accept\n", "a", "file-like", "object", "to", "request\n", "NOTE(sirp):", "There", "is", "some", "confusion", "around", "OVF.", "Here's", "a", "summary\n", "of", "where", "we", "currently", "stand:\n", "1.", "OVF", "as", "a", "container", "format", "is", "misnamed.", "We", "really", "should", "be\n", "using", "OVA", "since", "that", "is", "the", "name", "for", "the", "container", "format;\n", "OVF", "is", "the", "standard", "applied", "to", "the", "manifest", "file", "contained\n", "within.\n", "2.", "We're", "currently", "uploading", "a", "vanilla", "tarball.", "In", "order", "to", "be\n", "OVF/OVA", "compliant,", "we'll", "need", "to", "embed", "a", "minimal", "OVF\n", "manifest", "as", "the", "first", "file.\n", "NOTE(dprince):", "In", "order", "to", "preserve", "existing", "Glance", "properties\n", "we", "set", "X-Glance-Registry-Purge-Props", "on", "this", "request.\n", "noqa\n", "noqa\n", "Chunked-Transfer", "terminator\n", "NOTE(sirp):", "There", "is", "some", "confusion", "around", "OVF.", "Here's", "a", "summary\n", "of", "where", "we", "currently", "stand:\n", "1.", "OVF", "as", "a", "container", "format", "is", "misnamed.", "We", "really", "should", "be\n", "using", "OVA", "since", "that", "is", "the", "name", "for", "the", "container", "format;\n", "OVF", "is", "the", "standard", "applied", "to", "the", "manifest", "file", "contained\n", "within.\n", "2.", "We're", "currently", "uploading", "a", "vanilla", "tarball.", "In", "order", "to", "be\n", "OVF/OVA", "compliant,", "we'll", "need", "to", "embed", "a", "minimal", "OVF\n", "manifest", "as", "the", "first", "file.\n", "NOTE(johngarbutt)", "By", "default,", "there", "is", "no", "timeout.\n", "To", "ensure", "the", "script", "does", "not", "hang", "if", "we", "lose", "connection\n", "to", "glance,", "we", "add", "this", "socket", "timeout.\n", "This", "is", "here", "so", "there", "is", "no", "chance", "the", "timeout", "out", "has\n", "been", "adjusted", "by", "other", "library", "calls.\n", "NOTE(sdague):", "this", "is", "python", "2.4,", "which", "means", "urlparse", "returns", "a\n", "tuple,", "not", "a", "named", "tuple.\n", "0", "-", "scheme\n", "1", "-", "host:port", "(aka", "netloc)\n", "2", "-", "path\n", "noqa\n", "NOTE(sirp):", "httplib", "under", "python2.4", "won't", "accept\n", "a", "file-like", "object", "to", "request\n", "noqa\n", "noqa\n", "Chunked-Transfer", "terminator\n", "Note(Jesse):", "This", "branch", "sorts", "errors", "into", "those", "that", "are", "permanent,\n", "those", "that", "are", "ephemeral,", "and", "those", "that", "are", "unexpected.\n", "400\n", "401\n", "402\n", "403\n", "404\n", "405\n", "406\n", "407\n", "409\n", "410\n", "411\n", "412\n", "413\n", "414\n", "415\n", "416\n", "417\n", "422\n", "423\n", "424\n", "426\n", "501\n", "505\n", "510\n", "NOTE(nikhil):", "Only", "a", "sub-set", "of", "the", "500", "errors", "are", "retryable.", "We\n", "optimistically", "retry", "on", "500", "errors", "below.\n", "408\n", "500\n", "502\n", "503\n", "504\n", "507\n", "Note(Jesse):", "Assume", "unexpected", "errors", "are", "retryable.", "If", "you", "are\n", "seeing", "this", "error", "message,", "the", "error", "should", "probably", "be", "added\n", "to", "either", "the", "ephemeral", "or", "permanent", "error", "list.\n", "NOTE(nikhil):", "Attempt", "to", "determine", "if", "the", "Image", "has", "a", "status\n", "of", "'queued'.", "Because", "data", "will", "continued", "to", "be", "sent", "to", "Glance\n", "until", "it", "has", "a", "chance", "to", "check", "the", "Image", "state,", "discover", "that\n", "it", "is", "not", "'active'", "and", "send", "back", "a", "409.", "Hence,", "the", "data", "will", "be\n", "unnecessarily", "buffered", "by", "Glance.", "This", "wastes", "time", "and", "bandwidth.\n", "LP", "bug", "#1202785\n", "NOTE(nikhil):", "read", "the", "response", "to", "re-use", "the", "conn", "object.\n", "noqa\n", "NOTE(nikhil):", "Attempt", "to", "determine", "if", "the", "Image", "has", "a", "status\n", "of", "'queued'.", "Because", "data", "will", "continued", "to", "be", "sent", "to", "Glance\n", "until", "it", "has", "a", "chance", "to", "check", "the", "Image", "state,", "discover", "that\n", "it", "is", "not", "'active'", "and", "send", "back", "a", "409.", "Hence,", "the", "data", "will", "be\n", "unnecessarily", "buffered", "by", "Glance.", "This", "wastes", "time", "and", "bandwidth.\n", "LP", "bug", "#1202785\n", "noqa\n", "Download", "tarball", "into", "staging", "area", "and", "extract", "it\n", "TODO(mfedosin):", "remove", "this", "check", "when", "v1", "is", "deprecated.\n", "Move", "the", "VHDs", "from", "the", "staging", "area", "into", "the", "storage", "repository\n", "TODO(mfedosin):", "remove", "this", "check", "when", "v1", "is", "deprecated."], "/Users/mehranhassani/repos/nova/nova/policies/pause_server.py": ["POLICY_ROOT", "base", "pause_server_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/218_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_numa_topology_filters.py": ["False", "None", "TestNUMATopologyFilter", "True", "assertion", "cpu_policy", "cpu_thread_policy", "extra_specs", "fake_flavor", "fake_image", "fake_image_props", "fakes", "fields", "host", "image_meta", "image_props", "instance_topology", "itertools", "limits", "numa_topology", "numa_topology_filter", "objects", "passes", "props", "self", "set", "spec_obj", "specs", "super", "test", "uuids", "test", "combinations", "of", "image", "properties", "and", "extra", "specs\n", "...except", "for", "the", "one", "where", "no", "policy", "is", "specified"], "/Users/mehranhassani/repos/nova/nova/api/manager.py": ["MetadataManager", "args", "driver", "kwargs", "manager", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_configdrive.py": ["False", "None", "True", "configdrive", "instance", "objects", "self", "test"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/030_require_cell_setup.py": ["MetaData", "Table", "True", "_", "cell_mappings", "count", "exception", "flavors", "func", "host_mappings", "meta", "migrate_engine", "msg", "objects", "select", "NOTE(danms):", "We", "need", "to", "be", "careful", "here", "if", "this", "is", "a", "new\n", "installation,", "which", "can't", "possibly", "have", "any", "mappings.", "Check\n", "to", "see", "if", "any", "flavors", "are", "defined", "to", "determine", "if", "we", "are\n", "upgrading", "an", "existing", "system.", "If", "not,", "then", "don't", "obsess", "over\n", "the", "lack", "of", "mappings\n", "Two", "mappings", "are", "required", "at", "a", "minimum,", "cell0", "and", "your", "first", "cell"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/disk_filter.py": ["CONF", "DiskFilter", "False", "LOG", "True", "ValueError", "_LW", "__name__", "aggregate_vals", "disk_allocation_ratio", "disk_gb_limit", "disk_mb_limit", "e", "filters", "float", "free_disk_mb", "host_state", "logging", "nova", "ratio", "requested_disk", "self", "spec_obj", "total_usable_disk_mb", "usable_disk_mb", "used_disk_mb", "utils", "Disk", "Filter", "with", "over", "subscription", "flag.\nFilter", "based", "on", "disk", "usage.", "Do", "not", "allow", "an", "instance", "to", "overcommit", "against", "itself,", "only", "against\n", "other", "instances.", "In", "other", "words,", "if", "there", "isn't", "room", "for", "even", "just\n", "this", "one", "instance", "in", "total_usable_disk", "space,", "consider", "the", "host", "full."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_aggregates.py": ["ADMIN_API", "AggregatesSampleJsonTest", "True", "agg_id", "aggregate_id", "api_sample_base", "extra_subs", "host", "jsonutils", "microversion", "response", "sample_dir", "scenarios", "self", "subs", "extra_subs", "is", "a", "noop", "in", "the", "base", "v2.1", "test", "class;", "it's", "used", "to", "sub", "in\n", "additional", "details", "for", "response", "verification", "of", "actions", "performed", "on", "an\n", "existing", "aggregate.\n", "This", "feels", "like", "cheating", "since", "we're", "getting", "the", "uuid", "from", "the\n", "response", "before", "we", "even", "validate", "that", "it", "exists", "in", "the", "response", "based\n", "on", "the", "sample,", "but", "we'll", "fail", "with", "a", "KeyError", "if", "it", "doesn't", "which", "is\n", "maybe", "good", "enough.", "Alternatively", "we", "have", "to", "mock", "out", "the", "DB", "API\n", "to", "return", "a", "fake", "aggregate", "with", "a", "hard-coded", "uuid", "that", "matches", "the\n", "API", "sample", "which", "isn't", "fun", "either.\n", "save", "off", "the", "uuid", "for", "subs", "validation", "on", "other", "actions", "performed\n", "on", "this", "aggregate"], "/Users/mehranhassani/repos/nova/nova/virt/disk/mount/loop.py": ["False", "LOG", "None", "True", "_", "_LI", "__name__", "api", "err", "logging", "mode", "out", "self", "utils", "Support", "for", "mounting", "images", "with", "the", "loop", "device.\nloop", "back", "support", "for", "raw", "images.", "NOTE(mikal):", "the", "retry", "is", "required", "here", "in", "case", "we", "are", "low", "on", "loop\n", "devices.", "Note", "however", "that", "modern", "kernels", "will", "use", "more", "loop", "devices\n", "if", "they", "exist.", "If", "you're", "seeing", "lots", "of", "retries,", "consider", "adding\n", "more", "devices.\n", "NOTE(mikal):", "On", "some", "kernels,", "losetup", "-d", "will", "intermittently", "fail,\n", "thus", "leaking", "a", "loop", "device", "unless", "the", "losetup", "--detach", "is", "retried:\n", "https://lkml.org/lkml/2012/9/28/62"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/004_add_request_spec.py": ["Column", "DateTime", "False", "Index", "Integer", "MetaData", "String", "Table", "Text", "True", "UniqueConstraint", "meta", "migrate_engine", "request_specs"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/image/test_bittorrent.py": ["False", "LookupTorrentURLTestCase", "None", "NotImplementedError", "RuntimeError", "TestBittorrentStore", "any", "bittorrent", "client", "context", "driver", "exc", "fake", "fake_warn", "instance", "lookup_fn", "mock", "mock_call_plugin", "msg", "params", "self", "six", "stubs", "super", "test", "vm_utils", "warnings", "xenapi_conn", "Make", "sure", "a", "warning", "is", "logged", "when", "an", "invalid", "base", "URL", "is", "set,\n", "where", "invalid", "means", "it", "does", "not", "contain", "any", "slash", "characters"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_instance_group_model.py": ["False", "None", "True", "added", "api_models", "c", "c_a", "c_b", "column_list", "columns_new", "columns_old", "intersect", "m", "m_a", "m_b", "model", "models", "removed", "self", "set", "test"], "/Users/mehranhassani/repos/nova/nova/policies/floating_ip_dns.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "floating_ip_dns_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_legacy_v2_compatible_wrapper.py": ["LegacyV2CompatibleTestBase", "api_major_version", "client", "compute", "created_server", "exc", "fake_network", "openstack", "post", "response", "self", "server", "super", "test_servers", "wsgi"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/aggregates.py": ["ALIAS", "AggregateController", "None", "_", "_aggregate", "_get_context", "a", "agg", "aggr_policies", "aggregate", "aggregates", "alias", "api_version_request", "avail_zone", "body", "common", "compute_api", "context", "datetime", "e", "exc", "exception", "extensions", "getattr", "host", "host_aggregate", "id", "isinstance", "key", "keys", "metadata", "msg", "name", "req", "resources", "self", "show_uuid", "updates", "validation", "value", "version", "wsgi", "The", "Aggregate", "admin", "API", "extension.\nThe", "Host", "Aggregates", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "a", "list", "a", "host", "aggregate's", "id,", "name,", "availability_zone.\nShows", "the", "details", "of", "an", "aggregate,", "hosts", "and", "metadata", "included.\nUpdates", "the", "name", "and/or", "availability_zone", "of", "given", "aggregate.\nRemoves", "an", "aggregate", "by", "id.\nAdds", "a", "host", "to", "the", "specified", "aggregate.\nRemoves", "a", "host", "from", "the", "specified", "aggregate.\nReplaces", "the", "aggregate's", "existing", "metadata", "with", "new", "metadata.\nAdmin-only", "aggregate", "administration.", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "201\n", "as", "this", "operation", "complete", "the", "creation", "of", "aggregates", "resource.\n", "To", "maintain", "the", "same", "API", "result", "as", "before", "the", "changes", "for", "returning\n", "nova", "objects", "were", "made.\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "204\n", "as", "this", "operation", "complete", "the", "deletion", "of", "aggregate", "resource", "and", "return\n", "no", "response", "body.\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "202\n", "for", "representing", "async", "API", "as", "this", "API", "just", "accepts", "the", "request", "and\n", "request", "hypervisor", "driver", "to", "complete", "the", "same", "in", "async", "mode.\n", "NOTE(gmann):", "Returns", "200", "for", "backwards", "compatibility", "but", "should", "be", "202\n", "for", "representing", "async", "API", "as", "this", "API", "just", "accepts", "the", "request", "and\n", "request", "hypervisor", "driver", "to", "complete", "the", "same", "in", "async", "mode.\n", "NOTE(danms):", "The", "original", "API", "specified", "non-TZ-aware", "timestamps\n", "NOTE(rlrossit):", "Within", "the", "compute", "API,", "metadata", "will", "always", "be\n", "set", "on", "the", "aggregate", "object", "(at", "a", "minimum", "to", "{}).", "Because", "of", "this,\n", "we", "can", "freely", "use", "getattr()", "on", "keys", "in", "obj_extra_fields", "(in", "this\n", "case", "it", "is", "only", "['availability_zone'])", "without", "worrying", "about\n", "lazy-loading", "an", "unset", "variable"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/271_sqlite_postgresql_indexes.py": ["INDEXES", "column_names", "ensure_index_exists", "ensure_index_removed", "index_name", "migrate_engine", "table_name", "utils", "Add", "indexes", "missing", "on", "SQLite", "and", "PostgreSQL.", "PostgreSQL", "and", "SQLite", "namespace", "indexes", "at", "the", "database", "level,", "whereas\n", "MySQL", "namespaces", "indexes", "at", "the", "table", "level.", "Unfortunately,", "some", "of\n", "the", "missing", "indexes", "in", "PostgreSQL", "and", "SQLite", "have", "conflicting", "names\n", "that", "MySQL", "allowed.\n", "Rename", "some", "indexes", "with", "conflicting", "names"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_admin_password.py": ["CONF", "nova", "response", "sample_dir", "self", "subs", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_assisted_volume_snapshots.py": ["fakes", "response", "sample_dir", "self", "snapshot_id", "subs", "test_servers", "Create", "a", "volume", "snapshots."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api_samples_test_base/test_compare_result.py": ["KeyError", "None", "TestCompareResult", "TypeError", "api_samples_test_base", "ast_instance", "copy", "local_subs", "mock", "response_data", "result", "sample_data", "self", "super", "template_data", "test", "testtools", "Build", "an", "instance", "without", "running", "any", "unwanted", "test", "methods\ncompare", "2", "bare", "strings", "that", "match\ncheck", "2", "bare", "strings", "that", "don't", "match\ncompare", "2", "template", "strings", "(contain", "%)", "that", "match\ncheck", "2", "template", "strings", "(contain", "%)", "that", "don't", "match\ncheck", "2", "bare", "ints", "that", "match\ncheck", "2", "bare", "ints", "that", "don't", "match\ncheck", "template", "int", "against", "string", "containing", "digits\ncheck", "template", "int", "against", "a", "string", "containing", "no", "digits\ncheck", "an", "int", "value", "of", "a", "template", "int", "throws", "exception\ncheck", "2", "matching", "dictionaries\ncheck", "2", "dictionaries", "where", "one", "has", "a", "different", "value\ncheck", "2", "dictionaries", "where", "one", "has", "an", "extra", "key\ncheck", "expected", "is", "a", "dictionary", "and", "result", "is", "not", "a", "dictionary\ncheck", "2", "matching", "lists\ncheck", "extra", "list", "items", "in", "result", "\ncheck", "extra", "list", "items", "in", "template", "\ncheck", "2", "matching", "lists\ncheck", "that", "None", "matches\ncheck", "expected", "none", "and", "non-None", "response", "don't", "match\ncheck", "result", "none", "and", "expected", "non-None", "response", "don't", "match\ncheck", "an", "int", "value", "of", "a", "template", "int", "throws", "exception", "NOTE(auggy):", "TestCase", "takes", "a", "\"test\"", "method", "name", "to", "run", "in", "__init__\n", "calling", "this", "way", "prevents", "additional", "test", "methods", "from", "running\n", "required", "by", "ApiSampleTestBase\n", "automagically", "create", "magic", "methods", "usually", "handled", "by", "test", "classes\n", "NOTE(auggy):", "_compare_result", "will", "not", "return", "a", "matched", "value", "in", "the\n", "case", "of", "bare", "strings.", "If", "they", "don't", "match", "it", "will", "throw", "an", "exception,\n", "otherwise", "it", "returns", "\"None\".\n", "TODO(auggy):", "_compare_result", "needs", "a", "consistent", "return", "value\n", "In", "some", "cases", "it", "returns", "the", "value", "if", "it", "matched,", "in", "others", "it", "returns\n", "None.", "In", "all", "cases,", "it", "throws", "an", "exception", "if", "there's", "no", "match.\n", "TODO(auggy):", "_compare_result", "needs", "a", "consistent", "return", "value\n", "template_data", "=", "u'%(int_test)'\n", "response_data", "=", "42\n", "use", "an", "int", "instead", "of", "a", "string", "as", "the", "subs", "value\n", "TODO(auggy):", "_compare_result", "needs", "a", "consistent", "return", "value\n", "TODO(auggy):", "_compare_result", "needs", "a", "consistent", "return", "value\n", "extra", "field\n", "TODO(auggy):", "This", "error", "returns", "\"extra", "list", "items\"\n", "it", "should", "show", "the", "item/s", "in", "the", "list", "that", "didn't", "match\n", "NOTE(auggy):", "_compare_result", "will", "not", "return", "a", "matched", "value", "in", "the\n", "case", "of", "bare", "strings.", "If", "they", "don't", "match", "it", "will", "throw", "an", "exception,\n", "otherwise", "it", "returns", "\"None\"."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/driver.py": ["CONF", "Exception", "False", "KeyError", "LOG", "None", "NotImplementedError", "OVERHEAD_BASE", "OVERHEAD_PER_MB", "OVERHEAD_PER_VCPU", "True", "TypeError", "XenAPIDriver", "_", "_LE", "_LW", "__name__", "action", "admin_password", "aggregate", "all_counters", "allocated_disk_gb", "b64_contents", "b64_path", "bad_volumes_callback", "block_device_info", "block_migration", "bwcounters", "connection_info", "console_type", "context", "counters", "dest", "dest_check_data", "destroy_disks", "destroy_vifs", "device_type", "dic", "diff", "disk_bus", "disk_info", "disk_over_commit", "driver", "dst_compute_info", "enabled", "encryption", "err", "exception", "flavor", "free_ram_mb", "host", "host_stats", "hyper_ver", "image_id", "image_meta", "imap", "injected_files", "inst", "instance", "instance_info", "instance_name", "instances", "invalid_option", "is_bootable", "jsonutils", "kwargs", "logging", "math", "memory_mb", "migrate_data", "migration", "mode", "mountpoint", "msg", "network_info", "new_pass", "nodename", "nova", "nw_info", "op", "option_name", "overhead", "password", "pool", "post_method", "power_on", "property", "read_only", "reboot_type", "recommended_value", "recover_method", "refresh", "rescue_password", "resize_instance", "retry_interval", "security_group_id", "self", "session", "set_error", "six", "src_compute_info", "stats", "super", "timeout", "total_disk_gb", "total_ram_mb", "units", "update_task_state", "url", "urlparse", "used_disk_gb", "username", "vcpus", "versionutils", "vif_counter", "virtapi", "vm_utils", "vmops", "volumeops", "xs_url", "A", "connection", "to", "XenServer", "or", "Xen", "Cloud", "Platform.\nList", "VM", "instances.\nCreate", "VM", "instance.\nConfirms", "a", "resize,", "destroying", "the", "source", "VM.\nFinish", "reverting", "a", "resize.\nCompletes", "a", "resize,", "turning", "on", "the", "migrated", "instance.\nCreate", "snapshot", "from", "a", "running", "VM", "instance.\nCleans", "up", "any", "resources", "left", "after", "a", "failed", "snapshot.\nReboot", "VM", "instance.\nSet", "the", "root/admin", "password", "on", "the", "VM", "instance.\nApply", "a", "diff", "to", "the", "instance", "metadata.\nDestroy", "VM", "instance.\nCleanup", "after", "instance", "being", "destroyed", "by", "Hypervisor.\nPause", "VM", "instance.\nUnpause", "paused", "VM", "instance.\nsuspend", "the", "specified", "instance.\nresume", "the", "specified", "instance.\nRescue", "the", "specified", "instance.\nSet", "the", "ability", "to", "power", "on/off", "an", "instance.\nUnrescue", "the", "specified", "instance.\nPower", "off", "the", "specified", "instance.\nPower", "on", "the", "specified", "instance.\nSoft", "delete", "the", "specified", "instance.\nRestore", "the", "specified", "instance.\nPoll", "for", "rebooting", "instances.\nreset", "networking", "for", "specified", "instance.\ninject", "network", "info", "for", "specified", "instance.\nPlug", "VIFs", "into", "networks.\nUnplug", "VIFs", "from", "networks.\nReturn", "data", "about", "VM", "instance.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "snapshot", "of", "console.\nReturn", "link", "to", "instance's", "VNC", "console.\nReturn", "volume", "connector", "information.\nAttach", "volume", "storage", "to", "VM", "instance.\nDetach", "volume", "storage", "from", "VM", "instance.\nRemoves", "security", "groups", "configured", "for", "an", "instance.\nSets", "the", "compute", "host's", "ability", "to", "accept", "new", "instances.\nReturns", "the", "result", "of", "calling", "\"uptime\"", "on", "the", "target", "host.\nAdd", "a", "compute", "host", "to", "an", "aggregate.\nRemove", "a", "compute", "host", "from", "an", "aggregate.\nUndo", "aggregate", "operation", "when", "pool", "error", "raised.\nresume", "guest", "state", "when", "a", "host", "is", "booted.", "Check", "various", "options", "are", "in", "the", "correct", "state:\n", "XenServer", "memory", "overhead", "is", "proportional", "to", "the", "size", "of", "the\n", "VM.", "Larger", "flavor", "VMs", "become", "more", "efficient", "with", "respect", "to\n", "overhead.\n", "interpolated", "formula", "to", "predict", "overhead", "required", "per", "vm.\n", "based", "on", "data", "from:\n", "https://wiki.openstack.org/wiki/XenServer/Overhead\n", "Some", "padding", "is", "done", "to", "each", "value", "to", "fit", "all", "available", "VM", "data\n", "NOTE(vish):", "Xen", "currently", "does", "not", "use", "network", "info.\n", "NOTE(vish):", "Xen", "currently", "does", "not", "use", "network", "info.\n", "TODO(PhilDay):", "Add", "support", "for", "timeout", "(clean", "shutdown)\n", "TODO(PhilDay):", "Add", "support", "for", "timeout", "(clean", "shutdown)\n", "we", "only", "care", "about", "VMs", "that", "correspond", "to", "a", "nova-managed\n", "instance:\n", "get", "a", "dictionary", "of", "instance", "names.", "values", "are", "dictionaries\n", "of", "mac", "addresses", "with", "values", "that", "are", "the", "bw", "counters:\n", "e.g.", "{'instance-001'", ":", "{", "12:34:56:78:90:12", ":", "{'bw_in':", "0,", "....}}\n", "yes", "these", "are", "stats", "for", "a", "nova-managed", "vm\n", "correlate", "the", "stats", "with", "the", "nova", "instance", "uuid:\n", "If", "CONF.my_block_storage_ip", "is", "set,", "use", "it.\n", "Updating", "host", "information\n", "NOTE(belliott)", "memory-free-computed", "is", "a", "value", "provided", "by", "XenServer\n", "for", "gauging", "free", "memory", "more", "conservatively", "than", "memory-free.\n", "NOTE(salvatore-orlando):", "it", "enforces", "security", "groups", "on\n", "host", "initialization", "and", "live", "migration.\n", "In", "XenAPI", "we", "do", "not", "assume", "instances", "running", "upon", "host", "initialization\n", "NOTE(johngarbutt)", "Destroying", "the", "VM", "is", "not", "appropriate", "here\n", "and", "in", "the", "cases", "where", "it", "might", "make", "sense,\n", "XenServer", "has", "already", "done", "it.\n", "NOTE(sulo):", "The", "only", "cleanup", "we", "do", "explicitly", "is", "to", "forget\n", "any", "volume", "that", "was", "attached", "to", "the", "destination", "during\n", "live", "migration.", "XAPI", "should", "take", "care", "of", "all", "other", "cleanup."], "/Users/mehranhassani/repos/nova/nova/virt/image/model.py": ["ALL_FORMATS", "FORMAT_PLOOP", "FORMAT_QCOW2", "FORMAT_RAW", "Image", "LocalBlockImage", "LocalFileImage", "LocalImage", "RBDImage", "exception", "format", "hash", "msg", "name", "object", "other", "password", "path", "pool", "self", "servers", "str", "strutils", "super", "user"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_disk_config.py": ["API_DISK_CONFIG", "AUTO_INSTANCE_UUID", "DiskConfigTestCaseV21", "FAKE_INSTANCES", "False", "MANUAL_INSTANCE_UUID", "None", "True", "args", "auto_disk_config", "body", "columns_to_join", "compute", "compute_api", "context", "create", "datetime", "dict_", "disk_config", "expectations", "expected", "expected_msg", "fake_instance", "fake_instance_add_security_group", "fake_instance_create", "fake_instance_get", "fake_instance_get_all", "fake_instance_get_all_for_create", "fake_instance_get_by_uuid", "fake_instance_get_for_create", "fake_rebuild", "fakes", "flavors", "get_instance_mock", "id_", "image", "image_dict", "image_dicts", "inst", "inst_", "instance", "instance_id", "jsonutils", "kwargs", "mock", "nova", "objects", "old_create", "rebuild", "req", "res", "resize", "security_group_id", "self", "server_dict", "server_dicts", "session", "six", "stub_instance", "super", "test", "timestamp", "use_slave", "uuid", "value", "zip", "this", "is", "a", "property\n", "NOTE(sirp):", "image", "fixtures", "6", "and", "7", "are", "setup", "for\n", "auto_disk_config", "testing\n", "Return", "BadRequest", "if", "user", "passes", "an", "invalid", "diskConfig", "value."], "/Users/mehranhassani/repos/nova/nova/pci/request.py": ["CONF", "DEVICE_TYPE_FOR_VNIC_TYPE", "Exception", "False", "None", "PCI_DEVICE_TYPE_TAG", "PCI_NET_TAG", "_", "_ALIAS_CAP_TYPE", "_ALIAS_DEV_TYPE", "_ALIAS_SCHEMA", "_get_alias_from_config", "_translate_alias_to_requests", "alias_spec", "aliases", "copy", "count", "dev_type", "e", "exception", "flavor", "int", "jaliases", "jsonschema", "jsonspecs", "jsonutils", "name", "network_model", "nova", "obj_fields", "objects", "pci_aliases", "pci_requests", "reason", "request", "six", "spec", "utils", "Parse", "and", "validate", "PCI", "aliases", "from", "the", "nova", "config.\nGenerate", "complete", "pci", "requests", "from", "pci", "aliases", "in", "extra_spec.", "map", "alias", "name", "to", "alias", "spec", "list\n", "It", "should", "keep", "consistent", "behaviour", "in", "configuration\n", "and", "extra", "specs", "to", "call", "strip()", "function.\n", "list", "of", "a", "specs", "dict"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_service.py": ["CONF", "Exception", "ExtendedService", "FakeManager", "None", "RuntimeError", "ServiceTestCase", "TestException", "TestWSGIService", "True", "__name__", "_service", "app", "cfg", "ex", "exception", "exp", "manager", "mock", "mock_API", "mock_create", "mock_get", "mock_get_by_host_and_binary", "mock_launch", "mock_manager", "mock_reset", "mock_rpc", "mock_svc_get_by_host_and_binary", "mox", "objects", "processutils", "repr", "rpc", "self", "serv", "service", "service_obj", "super", "sys", "test", "test_service", "test_service_opts", "testtools", "utils", "wsgi", "Fake", "manager", "for", "tests.\nTest", "cases", "for", "Services.\nTest", "cases", "for", "Services.", "TODO(hanlind):", "This", "really", "tests", "code", "in", "the", "servicegroup", "api.\n", "NOTE(vish):", "Create", "was", "moved", "out", "of", "mox", "replay", "to", "make", "sure", "that\n", "the", "looping", "calls", "are", "created", "in", "StartService.\n", "Test", "if", "a", "Service", "object", "is", "correctly", "represented,", "for", "example", "in\n", "log", "files.\n", "init_host", "is", "called", "before", "any", "service", "record", "is", "created\n", "pre_start_hook", "is", "called", "after", "service", "record", "is", "created,\n", "but", "before", "RPC", "consumer", "is", "created\n", "post_start_hook", "is", "called", "after", "RPC", "consumer", "is", "created.\n", "test", "that", "the", "service", "version", "gets", "updated", "on", "services", "startup\n", "test", "service", "version", "got", "updated", "and", "saved:\n", "init_host", "is", "called", "before", "any", "service", "record", "is", "created\n", "init_host", "is", "called", "before", "any", "service", "record", "is", "created\n", "pre_start_hook", "is", "called", "after", "service", "record", "is", "created,\n", "but", "before", "RPC", "consumer", "is", "created\n", "post_start_hook", "is", "called", "after", "RPC", "consumer", "is", "created.\n", "Stopping", "the", "service,", "which", "in", "turn", "sets", "pool", "size", "to", "0\n", "Resetting", "pool", "size", "to", "default"], "/Users/mehranhassani/repos/nova/nova/debugger.py": ["CONF", "False", "ImportError", "LOG", "_LW", "__name__", "logging", "nova", "pydevd", "sys", "NOTE(markmc):", "this", "is", "imported", "before", "monkey", "patching", "in", "nova.cmd\n", "so", "we", "avoid", "extra", "imports", "here\n", "NOTE(markmc):", "gracefully", "handle", "the", "CLI", "options", "not", "being", "registered"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_diagnostics.py": ["Exception", "None", "NotImplementedError", "ServerDiagnosticsEnforcementV21", "ServerDiagnosticsTestV21", "UUID", "_context", "compute", "compute_api", "exc", "exception", "expected_attrs", "fake_get_diagnostics", "fake_instance_get", "fakes", "instance_uuid", "jsonutils", "mock", "mock_get", "mock_get_diagnostics", "output", "req", "res", "rule_name", "self", "server_diagnostics", "super", "test"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/347_add_updated_at_index.py": ["INDEX_COLUMNS_1", "INDEX_COLUMNS_2", "INDEX_NAME_1", "INDEX_NAME_2", "Index", "LOG", "MetaData", "None", "TABLE_NAME", "Table", "True", "_LI", "__name__", "_get_table_index", "col_name", "columns", "getattr", "idx", "index", "index_columns", "inspector", "logging", "meta", "migrate_engine", "reflection", "table", "table_name"], "/Users/mehranhassani/repos/nova/nova/policies/aggregates.py": ["POLICY_ROOT", "aggregates_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_hide_server_addresses.py": ["CONF", "ServersSampleHideAddressesJsonTest", "nova", "sample_dir", "self", "super", "test_servers", "vm_states", "We", "override", "hide_server_address_states", "in", "order\n", "to", "have", "an", "example", "of", "in", "the", "json", "samples", "of", "the\n", "addresses", "being", "hidden"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/allocation.py": ["ALLOCATION_SCHEMA", "False", "LOG", "None", "ValueError", "_", "_LE", "__name__", "_allocations_dict", "_extract_allocations", "_serialize_allocations_for_consumer", "_serialize_allocations_for_resource_provider", "allocation", "allocation_data", "allocation_objects", "allocations", "allocations_json", "body", "collections", "consumer_id", "consumer_uuid", "context", "data", "dict", "exc", "exception", "generation", "jsonschema", "jsonutils", "key", "key_fetcher", "logging", "objects", "req", "resource_class", "resource_provider", "resource_provider_uuid", "resources", "result", "schema", "util", "uuid", "webob", "x", "Placement", "API", "handlers", "for", "setting", "and", "deleting", "allocations.\nTurn", "allocations", "into", "a", "dict", "of", "resources", "keyed", "by", "key_fetcher.\nExtract", "allocation", "data", "from", "a", "JSON", "body.\nList", "allocations", "associated", "with", "a", "consumer.\nList", "allocations", "associated", "with", "a", "resource", "provider.", "NOTE(cdent):", "There", "is", "no", "way", "for", "a", "404", "to", "be", "returned", "here,\n", "only", "an", "empty", "result.", "We", "do", "not", "have", "a", "way", "to", "validate", "a\n", "consumer", "id.\n", "TODO(cdent):", "On", "a", "shared", "resource", "provider", "(for", "example", "a\n", "giant", "disk", "farm)", "this", "list", "could", "get", "very", "long.", "At", "the", "moment\n", "we", "have", "no", "facility", "for", "limiting", "the", "output.", "Given", "that", "we", "are\n", "using", "a", "dict", "of", "dicts", "for", "the", "output", "we", "are", "potentially", "limiting\n", "ourselves", "in", "terms", "of", "sorting", "and", "filtering.\n", "confirm", "existence", "of", "resource", "provider", "so", "we", "get", "a", "reasonable\n", "404", "instead", "of", "empty", "list\n", "If", "the", "body", "includes", "an", "allocation", "for", "a", "resource", "provider\n", "that", "does", "not", "exist,", "raise", "a", "400.\n", "InvalidInventory", "is", "a", "parent", "for", "several", "exceptions", "that\n", "indicate", "either", "that", "Inventory", "is", "not", "present,", "or", "that\n", "capacity", "limits", "have", "been", "exceeded.\n", "NOTE(pumaranikar):", "Following", "NotFound", "exception", "added", "in", "the", "case\n", "when", "allocation", "is", "deleted", "from", "allocations", "list", "by", "some", "other\n", "activity.", "In", "that", "case,", "delete_all()", "will", "throw", "a", "NotFound", "exception."], "/Users/mehranhassani/repos/nova/nova/tests/unit/image/fake.py": ["AUTO_DISK_CONFIG_ENABLED_IMAGE_UUID", "CONF", "FakeImageService", "False", "KeyError", "LOG", "None", "True", "_FakeImageService", "__name__", "_fakeImageService", "context", "copy", "data", "datetime", "dst_path", "exception", "image", "image1", "image2", "image3", "image4", "image5", "image6", "image7", "image_id", "image_service", "include_locations", "list", "logging", "metadata", "nova", "nova_fixtures", "obj_fields", "object", "open", "purge_props", "removed", "self", "show_deleted", "str", "super", "test", "timestamp", "uuidutils", "x", "y", "Implementation", "of", "a", "fake", "image", "service.\nMock", "(fake)", "image", "service", "for", "unit", "testing.\nReturn", "list", "of", "detailed", "image", "information.", "NOTE(justinsb):", "The", "OpenStack", "API", "can't", "upload", "an", "image?\n", "So,", "make", "sure", "we've", "got", "one..\n", "TODO(bcwaldon):", "implement", "optional", "kwargs", "such", "as", "limit,", "sort_dir"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/aggregate_instance_extra_specs.py": ["False", "LOG", "None", "True", "_SCOPE", "__name__", "aggregate_val", "aggregate_vals", "extra_specs_ops", "filters", "host_state", "instance_type", "key", "len", "logging", "metadata", "req", "run_filter_once_per_request", "scope", "self", "six", "spec_obj", "utils", "AggregateInstanceExtraSpecsFilter", "works", "with", "InstanceType", "records.", "Aggregate", "data", "and", "instance", "type", "does", "not", "change", "within", "a", "request\n", "If", "'extra_specs'", "is", "not", "present", "or", "extra_specs", "are", "empty", "then", "we\n", "need", "not", "proceed", "further\n", "Either", "not", "scope", "format,", "or", "aggregate_instance_extra_specs", "scope"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_versions.py": ["EXP_LINKS", "EXP_VERSIONS", "MAX_API_VERSION", "NS", "None", "True", "VersionBehindSslTestCase", "_get_self_href", "accept", "actual", "avr", "base_url", "builder", "copy", "data", "exp_versions", "expected", "expected_data", "fakes", "href", "jsonutils", "link", "matchers", "output", "path", "property", "redirect_req", "req", "res", "response", "self", "super", "test", "url", "uuid", "uuids", "version", "version_data", "versions", "views", "wsgi", "Extract", "the", "URL", "to", "self", "from", "response", "data.", "NOTE(oomichi):", "Now", "version", "API", "of", "v2.0", "covers", "\"/\"(root).\n", "So", "this", "class", "tests", "\"/v2.1\"", "only", "for", "v2.1", "API."], "/Users/mehranhassani/repos/nova/nova/config.py": ["CONF", "None", "True", "argv", "config", "configure_db", "default_config_files", "extra_default_log_levels", "init_rpc", "log", "nova", "rpc", "sqlalchemy_api", "version", "We", "use", "the", "oslo.log", "default", "log", "levels", "which", "includes", "suds=INFO\n", "and", "add", "only", "the", "extra", "levels", "that", "Nova", "needs"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_instance_actions.py": ["ADMIN_API", "None", "ServerActionsSampleJsonTest", "True", "_fake_get", "action_id", "api_sample_base", "context", "copy", "expected_attrs", "fake_action", "fake_instance", "fake_instance_action_events_get", "fake_instance_action_get_by_request_id", "fake_instance_get_by_uuid", "fake_request_id", "fake_server_actions", "fake_server_actions_get", "fake_uuid", "instance_id", "instance_uuid", "microversion", "request_id", "response", "sample_dir", "scenarios", "self", "six", "str", "stub_self", "subs", "super", "test_utils", "uuid", "value"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/mount/test_nbd.py": ["False", "NbdTestCase", "None", "ORIG_EXISTS", "ORIG_LISTDIR", "True", "_fake_detect_nbd_devices", "_fake_detect_nbd_devices_none", "_fake_exists_all_used", "_fake_exists_no_users", "_fake_listdir_nbd_devices", "_fake_noop", "chosen_devices", "delay_and_remove_device", "dev", "eventlet", "fake_exists", "fake_exists_two", "fake_find_unused", "fake_get_dev_fails", "fake_returns_true", "fake_trycmd", "fixtures", "free_devices", "get_a_device", "imgfile", "imgmodel", "isinstance", "len", "mount", "n", "nbd", "os", "path", "pid_exists", "pidfile", "self", "six", "super", "tempdir", "tempfile", "test", "thread1", "thread2", "time", "Fake", "out", "os.path.exists\n", "This", "should", "fail,", "as", "we", "don't", "have", "the", "module", "\"loaded\"\n", "TODO(mikal):", "work", "out", "how", "to", "force", "english", "as", "the", "gettext", "language\n", "so", "that", "the", "error", "check", "always", "passes\n", "Allocate", "a", "nbd", "device\n", "Fake", "out", "os.path.exists\n", "Allocate", "a", "nbd", "device,", "should", "not", "be", "the", "in", "use", "one\n", "TODO(mikal):", "Note", "that", "there", "is", "a", "leak", "here,", "as", "the", "in", "use", "nbd", "device\n", "is", "removed", "from", "the", "list,", "but", "not", "returned", "so", "it", "will", "never", "be\n", "re-added.", "I", "will", "fix", "this", "in", "a", "later", "patch.\n", "We", "have", "a", "trycmd", "that", "always", "fails\n", "Error", "logged,", "no", "device", "consumed\n", "We", "have", "a", "trycmd", "that", "always", "passed\n", "Error", "logged,", "no", "device", "consumed\n", "We", "need", "the", "pid", "file", "for", "the", "device", "which", "is", "allocated", "to", "exist,", "but\n", "only", "once", "it", "is", "allocated", "to", "us\n", "No", "error", "logged,", "device", "consumed\n", "Free\n", "This", "test", "is", "just", "checking", "we", "don't", "get", "an", "exception", "when", "we", "unget\n", "something", "we", "don't", "have\n", "No", "error", "logged,", "device", "consumed\n", "Free\n", "Always", "fail", "to", "get", "a", "device\n", "No", "error", "logged,", "device", "consumed\n", "NOTE(mikal):", "Bug", "1094373", "saw", "a", "regression", "where", "we", "failed", "to\n", "communicate", "a", "failed", "mount", "properly.\n", "Make", "sure", "that", "even", "if", "two", "threads", "create", "instances", "at", "the", "same", "time\n", "they", "cannot", "choose", "the", "same", "nbd", "number", "(see", "bug", "1207422)\n", "Ensure", "that", "context", "switch", "happens", "before", "the", "device", "is", "marked\n", "as", "used.", "This", "will", "cause", "a", "failure", "without", "nbd-allocation-lock\n", "in", "place.\n", "We", "always", "choose", "the", "top", "device", "in", "find_unused", "-", "remove", "it", "now."], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_stats.py": ["CONF", "None", "PciDeviceStatsTestCase", "PciDeviceStatsWithTagsTestCase", "PciDeviceVFPFStatsTestCase", "cells", "cfg", "count", "d", "dev", "dev1", "dev2", "dev_filter", "dev_obj", "devs", "dict", "exception", "fake_pci_1", "fake_pci_2", "fake_pci_3", "fake_pci_4", "fakes", "fields", "free_dev", "free_devs", "int", "k", "len", "list", "m", "map", "mock", "mock_whitelist_parse", "new_stats", "objects", "patcher", "pci_dev", "pci_dev_obj", "pci_request", "pci_requests", "pci_requests_multiple", "pci_stats", "pci_stats2", "pf_product_id", "pool", "product_id", "range", "self", "set", "six", "stats", "super", "tags", "test", "v", "vendor_id", "vf_product_id", "white_list", "whitelist", "The", "following", "two", "calls", "need", "to", "be", "made", "before", "adding", "the", "devices.\n", "Pools", "are", "ordered", "based", "on", "the", "number", "of", "keys.", "'product_id',\n", "'vendor_id'", "are", "always", "part", "of", "the", "keys.", "When", "tags", "are", "present,\n", "they", "are", "also", "part", "of", "the", "keys.", "In", "this", "test", "class,", "we", "have\n", "two", "pools", "with", "the", "second", "one", "having", "the", "tag", "'physical_network'\n", "and", "the", "value", "'physnet1'\n", "There", "should", "be", "no", "change\n", "There", "should", "be", "no", "change\n", "Validate", "that", "the", "parents", "of", "these", "VFs", "has", "been", "removed\n", "from", "pools.\n", "Validate", "that", "there", "are", "no", "free", "devices", "left,", "as", "when", "allocating\n", "both", "available", "PFs,", "its", "VFs", "should", "not", "be", "available."], "/Users/mehranhassani/repos/nova/nova/policies/servers.py": ["RULE_AOO", "SERVERS", "base", "policy", "rules", "the", "details", "in", "host_status", "are", "pretty", "sensitive,", "only", "admins\n", "should", "do", "that", "by", "default."], "/Users/mehranhassani/repos/nova/nova/objects/compute_node.py": ["AttributeError", "CONF", "ComputeNode", "ComputeNodeList", "False", "KeyError", "LOG", "None", "True", "VERSION", "__name__", "base", "cls", "compute", "compute_id", "computes", "context", "db", "db_compute", "db_computes", "exception", "fields", "getattr", "host", "host_ip", "hv_spec", "hv_specs", "hypervisor_match", "jsonutils", "key", "keys", "limit", "logging", "marker", "nodename", "nova", "objects", "pci_device_pool", "pci_stats", "pools", "primitive", "prune_stats", "resources", "s", "self", "service", "service_id", "set", "setattr", "si", "special_cases", "staticmethod", "stats", "str", "sup_insts", "super", "target_version", "updates", "use_slave", "uuidutils", "value", "versionutils", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "get_by_service_id()\n", "Version", "1.2:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.3:", "Added", "stats", "field\n", "Version", "1.4:", "Added", "host", "ip", "field\n", "Version", "1.5:", "Added", "numa_topology", "field\n", "Version", "1.6:", "Added", "supported_hv_specs\n", "Version", "1.7:", "Added", "host", "field\n", "Version", "1.8:", "Added", "get_by_host_and_nodename()\n", "Version", "1.9:", "Added", "pci_device_pools\n", "Version", "1.10:", "Added", "get_first_node_by_host_for_old_compat()\n", "Version", "1.11:", "PciDevicePoolList", "version", "1.1\n", "Version", "1.12:", "HVSpec", "version", "1.1\n", "Version", "1.13:", "Changed", "service_id", "field", "to", "be", "nullable\n", "Version", "1.14:", "Added", "cpu_allocation_ratio", "and", "ram_allocation_ratio\n", "Version", "1.15:", "Added", "uuid\n", "Version", "1.16:", "Added", "disk_allocation_ratio\n", "TODO(melwitt):", "cpu_info", "is", "non-nullable", "in", "the", "schema", "but", "we", "must\n", "wait", "until", "version", "2.0", "of", "ComputeNode", "to", "change", "it", "to", "non-nullable\n", "TODO(rlrossit):", "because", "of", "history,", "numa_topology", "is", "held", "here", "as", "a\n", "StringField,", "not", "a", "NUMATopology", "object.", "In", "version", "2", "of", "ComputeNode\n", "this", "will", "be", "converted", "over", "to", "a", "fields.ObjectField('NUMATopology')\n", "NOTE(pmurray):", "the", "supported_hv_specs", "field", "maps", "to", "the\n", "supported_instances", "field", "in", "the", "database\n", "NOTE(pmurray):", "the", "pci_device_pools", "field", "maps", "to", "the\n", "pci_stats", "field", "in", "the", "database\n", "service_id", "is", "non-nullable", "in", "versions", "before", "1.13\n", "NOTE(hanlind):", "In", "case", "anything", "goes", "wrong", "like", "service", "not\n", "found", "or", "host", "not", "being", "set,", "catch", "and", "set", "a", "fake", "value", "just\n", "to", "allow", "for", "older", "versions", "that", "demand", "a", "value", "to", "work.\n", "Setting", "to", "-1", "will,", "if", "value", "is", "later", "used", "result", "in", "a\n", "ServiceNotFound,", "so", "should", "be", "safe.\n", "pre", "1.3", "version", "does", "not", "have", "a", "stats", "field\n", "FIXME(sbauza)", ":", "Unconverted", "compute", "record,", "provide", "compatibility\n", "This", "has", "to", "stay", "until", "we", "can", "be", "sure", "that", "any/all", "compute", "nodes\n", "in", "the", "database", "have", "been", "converted", "to", "use", "the", "host", "field\n", "Service", "field", "of", "ComputeNode", "could", "be", "deprecated", "in", "a", "next", "patch,\n", "so", "let's", "use", "directly", "the", "Service", "object\n", "Host", "can", "be", "nullable", "in", "Service\n", "New-style", "DB", "having", "host", "as", "a", "field\n", "We", "assume", "it", "should", "not", "happen", "but", "in", "case,", "let's", "set", "it", "to", "None\n", "NOTE(sbauza):", "Since", "all", "compute", "nodes", "don't", "possibly", "run", "the\n", "latest", "RT", "code", "updating", "allocation", "ratios,", "we", "need", "to", "provide\n", "a", "backwards", "compatible", "way", "of", "hydrating", "them.\n", "As", "we", "want", "to", "care", "about", "our", "operators", "and", "since", "we", "don't", "want", "to\n", "ask", "them", "to", "change", "their", "configuration", "files", "before", "upgrading,", "we\n", "prefer", "to", "hardcode", "the", "default", "values", "for", "the", "ratios", "here", "until\n", "the", "next", "release", "(Newton)", "where", "the", "opt", "default", "values", "will", "be\n", "restored", "for", "both", "cpu", "(16.0),", "ram", "(1.5)", "and", "disk", "(1.0)\n", "allocation", "ratios.\n", "TODO(sbauza):", "Remove", "that", "in", "the", "next", "major", "version", "bump", "where\n", "we", "break", "compatibility", "with", "old", "Liberty", "computes\n", "Operator", "has", "not", "yet", "provided", "a", "new", "value", "for", "that", "ratio\n", "on", "the", "compute", "node\n", "ResourceTracker", "is", "not", "updating", "the", "value", "(old", "node)\n", "or", "the", "compute", "node", "is", "updated", "but", "the", "default", "value", "has\n", "not", "been", "changed\n", "It's", "not", "specified", "either", "on", "the", "controller\n", "It's", "not", "specified", "either", "on", "the", "controller\n", "It's", "not", "specified", "either", "on", "the", "controller\n", "Make", "sure", "that", "we", "correctly", "set", "the", "host", "field", "depending", "on", "either\n", "host", "column", "is", "present", "in", "the", "table", "or", "not\n", "NOTE(hanlind):", "This", "is", "deprecated", "and", "should", "be", "removed", "on", "the", "next\n", "major", "version", "bump\n", "NOTE(sbauza):", "Old", "version", "was", "returning", "an", "item,", "we", "need", "to", "keep", "this\n", "behaviour", "for", "backwards", "compatibility\n", "TODO(pkholkin):", "Remove", "this", "method", "in", "the", "next", "major", "version", "bump\n", "FIXME(sbauza):", "Some", "hypervisors", "(VMware,", "Ironic)", "can", "return", "multiple\n", "nodes", "per", "host,", "we", "should", "return", "all", "the", "nodes", "and", "modify", "the", "callers\n", "instead.\n", "Arbitrarily", "returning", "the", "first", "node.\n", "NOTE(belliott)", "ignore", "prune_stats", "param,", "no", "longer", "relevant\n", "NOTE(pmurray):", "the", "virt", "driver", "provides", "a", "dict", "of", "values", "that\n", "can", "be", "copied", "into", "the", "compute", "node.", "The", "names", "and", "representation\n", "do", "not", "exactly", "match.\n", "TODO(pmurray):", "the", "resources", "dict", "should", "be", "formalized.\n", "supported_instances", "has", "a", "different", "name", "in", "compute_node\n", "Version", "1.0:", "Initial", "version\n", "ComputeNode", "<=", "version", "1.2\n", "Version", "1.1", "ComputeNode", "version", "1.3\n", "Version", "1.2", "Add", "get_by_service()\n", "Version", "1.3", "ComputeNode", "version", "1.4\n", "Version", "1.4", "ComputeNode", "version", "1.5\n", "Version", "1.5", "Add", "use_slave", "to", "get_by_service\n", "Version", "1.6", "ComputeNode", "version", "1.6\n", "Version", "1.7", "ComputeNode", "version", "1.7\n", "Version", "1.8", "ComputeNode", "version", "1.8", "+", "add", "get_all_by_host()\n", "Version", "1.9", "ComputeNode", "version", "1.9\n", "Version", "1.10", "ComputeNode", "version", "1.10\n", "Version", "1.11", "ComputeNode", "version", "1.11\n", "Version", "1.12", "ComputeNode", "version", "1.12\n", "Version", "1.13", "ComputeNode", "version", "1.13\n", "Version", "1.14", "ComputeNode", "version", "1.14\n", "Version", "1.15", "Added", "get_by_pagination()\n", "NOTE(hanlind):", "This", "is", "deprecated", "and", "should", "be", "removed", "on", "the", "next\n", "major", "version", "bump\n", "NOTE(sbauza):", "Previous", "behaviour", "was", "returning", "an", "empty", "list\n", "if", "the", "service", "was", "created", "with", "no", "computes,", "we", "need", "to", "keep", "it."], "/Users/mehranhassani/repos/nova/nova/conf/vnc.py": ["ALL_OPTS", "CLI_OPTS", "True", "cfg", "conf", "vnc_group"], "/Users/mehranhassani/repos/nova/nova/network/__init__.py": ["CONF", "NEUTRON_NET_API", "NOVA_NET_API", "cls", "importutils", "is_neutron", "network_api_class", "nova"], "/Users/mehranhassani/repos/nova/nova/notifications/objects/service.py": ["SCHEMA", "ServiceStatusPayload", "True", "VERSION", "base", "fields", "nova_base", "self", "service", "super", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/extended_server_attributes.py": ["ALIAS", "ExtendedServerAttributesController", "False", "True", "alias", "api_version_request", "args", "attr", "authorize_extend", "authorize_host_status", "compute", "context", "controller", "db_instance", "esa_policies", "extension", "extensions", "host_status", "host_statuses", "id", "instance", "instances", "key", "kwargs", "list", "name", "properties", "req", "resp_obj", "self", "server", "servers", "servers_policies", "super", "version", "wsgi", "The", "Extended", "Server", "Attributes", "API", "extension.\nExtended", "Server", "Attributes", "support.", "NOTE(mriedem):", "These", "will", "use", "the", "OS-EXT-SRV-ATTR", "prefix", "below\n", "and", "that's", "OK", "for", "microversion", "2.3", "which", "is", "being", "compatible\n", "with", "v2.0", "for", "the", "ec2", "API", "split", "out", "from", "Nova.", "After", "this,\n", "however,", "new", "microversions", "should", "not", "be", "using", "the\n", "OS-EXT-SRV-ATTR", "prefix.\n", "NOTE(mriedem):", "Nothing", "after", "microversion", "2.3", "should", "use", "the\n", "OS-EXT-SRV-ATTR", "prefix", "for", "the", "attribute", "key", "name.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'show'", "method.\n", "NOTE(dinesh-bhor):", "Skipping", "fetching", "of", "instances", "from", "cache", "as\n", "servers", "list", "can", "be", "empty", "if", "invalid", "status", "is", "provided", "to", "the\n", "core", "API", "'detail'", "method."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/278_remove_service_fk_in_compute_nodes.py": ["ForeignKeyConstraint", "MetaData", "Table", "True", "UniqueConstraint", "_correct_sqlite_unique_constraints", "c", "compute_nodes", "constraint", "constraint_names", "constraints", "fk", "fkey", "index", "inspector", "meta", "migrate_engine", "reflection", "services", "shadow_compute_nodes", "table", "NOTE(sbauza):", "SQLAlchemy<1.0", "doesn't", "provide", "the", "unique", "keys", "in", "the\n", "constraints", "field", "of", "the", "Table", "object,", "so", "it", "would", "drop", "them", "if", "we", "change\n", "either", "the", "scheme", "or", "the", "constraints.", "Adding", "them", "back", "to", "the", "Table\n", "object", "before", "changing", "the", "model", "makes", "sure", "that", "they", "are", "not", "dropped.\n", "other", "engines", "don't", "have", "this", "problem\n", "the", "constraint", "is", "already", "in", "the", "table\n", "Make", "the", "service_id", "column", "nullable\n", "Delete", "the", "FK\n", "Delete", "the", "nested", "index", "which", "was", "created", "by", "the", "FK"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/error_util.py": ["_", "exception", "msg_fmt"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/260_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/232_drop_dump_tables.py": ["MetaData", "Table", "True", "meta", "migrate_engine", "table", "table_name", "table_names"], "/Users/mehranhassani/repos/nova/api-ref/source/conf.py": ["Exception", "False", "add_module_names", "copyright", "extensions", "git_cmd", "html_context", "html_last_updated_fmt", "html_theme", "html_theme_options", "html_theme_path", "htmlhelp_basename", "latex_documents", "master_doc", "openstackdocstheme", "os", "project", "pygments_style", "release", "show_authors", "source_suffix", "subprocess", "sys", "version", "version_info", "warnings", "If", "extensions", "(or", "modules", "to", "document", "with", "autodoc)", "are", "in", "another", "directory,\n", "add", "these", "directories", "to", "sys.path", "here.", "If", "the", "directory", "is", "relative", "to", "the\n", "documentation", "root,", "use", "os.path.abspath", "to", "make", "it", "absolute,", "like", "shown", "here.\n", "--", "General", "configuration", "----------------------------------------------------\n", "Add", "any", "Sphinx", "extension", "module", "names", "here,", "as", "strings.", "They", "can", "be\n", "extensions", "coming", "with", "Sphinx", "(named", "'sphinx.ext.*')", "or", "your", "custom", "ones.\n", "The", "suffix", "of", "source", "filenames.\n", "The", "encoding", "of", "source", "files.\n\n", "source_encoding", "=", "'utf-8'\n", "The", "master", "toctree", "document.\n", "General", "information", "about", "the", "project.\n", "The", "version", "info", "for", "the", "project", "you're", "documenting,", "acts", "as", "replacement", "for\n", "|version|", "and", "|release|,", "also", "used", "in", "various", "other", "places", "throughout", "the\n", "built", "documents.\n\n", "The", "full", "version,", "including", "alpha/beta/rc", "tags.\n", "The", "short", "X.Y", "version.\n", "The", "language", "for", "content", "autogenerated", "by", "Sphinx.", "Refer", "to", "documentation\n", "for", "a", "list", "of", "supported", "languages.\n\n", "language", "=", "None\n", "There", "are", "two", "options", "for", "replacing", "|today|:", "either,", "you", "set", "today", "to", "some\n", "non-false", "value,", "then", "it", "is", "used:\n", "today", "=", "''\n", "Else,", "today_fmt", "is", "used", "as", "the", "format", "for", "a", "strftime", "call.\n", "today_fmt", "=", "'%B", "%d,", "%Y'\n", "The", "reST", "default", "role", "(used", "for", "this", "markup:", "`text`)", "to", "use\n", "for", "all", "documents.\n", "default_role", "=", "None\n", "If", "true,", "'()'", "will", "be", "appended", "to", ":func:", "etc.", "cross-reference", "text.\n", "add_function_parentheses", "=", "True\n", "If", "true,", "the", "current", "module", "name", "will", "be", "prepended", "to", "all", "description\n", "unit", "titles", "(such", "as", "..", "function::).\n", "If", "true,", "sectionauthor", "and", "moduleauthor", "directives", "will", "be", "shown", "in", "the\n", "output.", "They", "are", "ignored", "by", "default.\n", "The", "name", "of", "the", "Pygments", "(syntax", "highlighting)", "style", "to", "use.\n", "--", "Options", "for", "man", "page", "output", "----------------------------------------------\n", "Grouping", "the", "document", "tree", "for", "man", "pages.\n", "List", "of", "tuples", "'sourcefile',", "'target',", "u'title',", "u'Authors", "name',", "'manual'\n", "--", "Options", "for", "HTML", "output", "--------------------------------------------------\n", "The", "theme", "to", "use", "for", "HTML", "and", "HTML", "Help", "pages.", "Major", "themes", "that", "come", "with\n", "Sphinx", "are", "currently", "'default'", "and", "'sphinxdoc'.\n", "html_theme_path", "=", "[\".\"]\n", "html_theme", "=", "'_theme'\n", "Theme", "options", "are", "theme-specific", "and", "customize", "the", "look", "and", "feel", "of", "a", "theme\n", "further.", "For", "a", "list", "of", "options", "available", "for", "each", "theme,", "see", "the\n", "documentation.\n", "html_theme_options", "=", "{}\n", "Add", "any", "paths", "that", "contain", "custom", "themes", "here,", "relative", "to", "this", "directory.\n", "html_theme_path", "=", "[]\n", "The", "name", "for", "this", "set", "of", "Sphinx", "documents.", "If", "None,", "it", "defaults", "to\n", "\"<project>", "v<release>", "documentation\".\n", "html_title", "=", "None\n", "A", "shorter", "title", "for", "the", "navigation", "bar.", "Default", "is", "the", "same", "as", "html_title.\n", "html_short_title", "=", "None\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top\n", "of", "the", "sidebar.\n", "html_logo", "=", "None\n", "The", "name", "of", "an", "image", "file", "(within", "the", "static", "path)", "to", "use", "as", "favicon", "of", "the\n", "docs.", "This", "file", "should", "be", "a", "Windows", "icon", "file", "(.ico)", "being", "16x16", "or", "32x32\n", "pixels", "large.\n", "html_favicon", "=", "None\n", "Add", "any", "paths", "that", "contain", "custom", "static", "files", "(such", "as", "style", "sheets)", "here,\n", "relative", "to", "this", "directory.", "They", "are", "copied", "after", "the", "builtin", "static", "files,\n", "so", "a", "file", "named", "\"default.css\"", "will", "overwrite", "the", "builtin", "\"default.css\".\n", "html_static_path", "=", "['_static']\n", "If", "not", "'',", "a", "'Last", "updated", "on:'", "timestamp", "is", "inserted", "at", "every", "page", "bottom,\n", "using", "the", "given", "strftime", "format.\n", "html_last_updated_fmt", "=", "'%b", "%d,", "%Y'\n", "If", "true,", "SmartyPants", "will", "be", "used", "to", "convert", "quotes", "and", "dashes", "to\n", "typographically", "correct", "entities.\n", "html_use_smartypants", "=", "True\n", "Custom", "sidebar", "templates,", "maps", "document", "names", "to", "template", "names.\n", "html_sidebars", "=", "{}\n", "Additional", "templates", "that", "should", "be", "rendered", "to", "pages,", "maps", "page", "names", "to\n", "template", "names.\n", "html_additional_pages", "=", "{}\n", "If", "false,", "no", "module", "index", "is", "generated.\n", "html_use_modindex", "=", "True\n", "If", "false,", "no", "index", "is", "generated.\n", "html_use_index", "=", "True\n", "If", "true,", "the", "index", "is", "split", "into", "individual", "pages", "for", "each", "letter.\n", "html_split_index", "=", "False\n", "If", "true,", "links", "to", "the", "reST", "sources", "are", "added", "to", "the", "pages.\n", "html_show_sourcelink", "=", "True\n", "If", "true,", "an", "OpenSearch", "description", "file", "will", "be", "output,", "and", "all", "pages", "will\n", "contain", "a", "<link>", "tag", "referring", "to", "it.", "The", "value", "of", "this", "option", "must", "be", "the\n", "base", "URL", "from", "which", "the", "finished", "HTML", "is", "served.\n", "html_use_opensearch", "=", "''\n", "If", "nonempty,", "this", "is", "the", "file", "name", "suffix", "for", "HTML", "files", "(e.g.", "\".xhtml\").\n", "html_file_suffix", "=", "''\n", "Output", "file", "base", "name", "for", "HTML", "help", "builder.\n", "--", "Options", "for", "LaTeX", "output", "-------------------------------------------------\n", "The", "paper", "size", "('letter'", "or", "'a4').\n", "latex_paper_size", "=", "'letter'\n", "The", "font", "size", "('10pt',", "'11pt'", "or", "'12pt').\n", "latex_font_size", "=", "'10pt'\n", "Grouping", "the", "document", "tree", "into", "LaTeX", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,", "author,", "documentclass\n", "[howto/manual]).\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top", "of\n", "the", "title", "page.\n", "latex_logo", "=", "None\n", "For", "\"manual\"", "documents,", "if", "this", "is", "true,", "then", "toplevel", "headings", "are", "parts,\n", "not", "chapters.\n", "latex_use_parts", "=", "False\n", "Additional", "stuff", "for", "the", "LaTeX", "preamble.\n", "latex_preamble", "=", "''\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\n", "latex_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\n", "latex_use_modindex", "=", "True"], "/Users/mehranhassani/repos/nova/nova/objects/external_event.py": ["EVENT_NAMES", "EVENT_STATUSES", "None", "True", "VERSION", "fields", "name", "obj_base", "property", "self", "staticmethod", "tag", "Network", "has", "changed", "for", "this", "instance,", "rebuild", "info_cache\n", "VIF", "plugging", "notifications,", "tag", "is", "port_id\n", "Version", "1.0:", "Initial", "version\n", "Supports", "network-changed", "and", "vif-plugged\n", "Version", "1.1:", "adds", "network-vif-deleted", "event"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/openstack/placement/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/rescue.py": ["ALIAS", "CONF", "None", "RescueController", "alias", "args", "body", "common", "compute", "context", "controller", "e", "exc", "exception", "extension", "extensions", "id", "instance", "kwargs", "name", "non_rescuable", "nova", "password", "req", "rescue", "rescue_image_ref", "rescue_policies", "self", "state_error", "super", "utils", "validation", "version", "volume_error", "wsgi", "The", "rescue", "mode", "extension.\nRescue", "an", "instance.\nUnrescue", "an", "instance.\nInstance", "rescue", "mode.", "TODO(cyeoh):", "Should", "be", "responding", "here", "with", "202", "Accept\n", "because", "rescue", "is", "an", "async", "call,", "but", "keep", "to", "200\n", "for", "backwards", "compatibility", "reasons."], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/test_conductor.py": ["CONF", "ConductorAPITestCase", "ConductorRPCAPITestCase", "ConductorTaskAPITestCase", "ConductorTaskRPCAPITestCase", "ConductorTaskTestCase", "ConductorTestCase", "Exception", "FakeContext", "False", "IOError", "None", "NotImplementedError", "TestObject", "True", "VERSION", "_", "_BaseTaskTestCase", "_BaseTestCase", "_build_and_run_instance", "_fake_bury", "_get_image", "_mock_refresh", "_mock_set_state", "_schedule_instances", "_test", "augmented_spec", "bare_br", "bdm", "br_destroy", "brs_mock", "bs_mock", "build_and_run", "build_and_run_instance", "build_req", "build_req_mocks", "build_request", "build_request2", "build_request3", "build_request_spec", "build_requests", "build_spec", "bury", "calls", "cast_as_call", "cctxt_mock", "classmethod", "clean_shutdown", "cleanup_mock", "cleanup_network_calls", "cls", "compute_args", "compute_rebuild_args", "compute_rpcapi", "conductor_api", "conductor_manager", "conductor_rpcapi", "conf", "context", "copy", "ctxt", "ctxt_dict", "db", "deallocate", "deleted_br", "deleted_inst", "dest_build_req_calls", "dest_build_req_mock", "destinations", "dict", "do_test", "e", "ex", "exc", "exc_info", "exception", "expected", "expected_ex", "expected_host", "expected_limits", "expected_node", "exs", "fake_args", "fake_build_request", "fake_deserialize_context", "fake_inst", "fake_instance", "fake_notifier", "fake_ping", "fake_request_spec", "fake_schedule_instances", "fake_server_actions", "fake_spec", "fakes", "fast_deleted_br", "fields", "filter_properties", "fixtures", "flavor", "flavor_new", "flavors", "fp_mock", "from_primitives", "get_hostmapping", "get_image_from_metadata", "get_migration_mock", "hasattr", "host", "hosts", "i", "im", "im2", "im3", "image", "image_api", "image_mock", "inst", "inst1_refresh", "inst2_refresh", "inst_br", "inst_map_mock", "inst_mapping", "inst_mapping_mocks", "inst_obj", "inst_states", "instance", "instance_properties", "instance_type", "instance_type_p", "instances", "is_classmethod", "isinstance", "kw", "kwargs", "legacy_filter_props", "legacy_request_spec", "len", "limits", "live_migrate", "m", "message", "messaging", "metadata_mock", "migrate", "migration", "migration_task_execute", "mock", "mock_build_and_run", "mock_build_req_get", "mock_clear_cache", "mock_cm_get", "mock_destroy_build_req", "mock_execute", "mock_get_by_host", "mock_get_image", "mock_get_inst_map_by_uuid", "mock_live_migrate", "mock_migrate_server", "mock_pop_inst_map", "mock_refresh", "mock_rpc", "mock_save", "mock_schedule_instances", "mock_select_dests", "mock_service_version", "mock_set", "mock_set_state", "mox", "node", "notify_mock", "num_instances", "nvh", "obj", "obj_base", "object", "objects", "old_rpcapi", "ovo_exc", "params", "populate_filter_properties", "populate_retry", "prep_resize_mock", "prepare_mock", "quotas_mock", "raise_exception", "range", "rebuild_args", "rebuild_mock", "req_net", "request_spec", "requested_networks", "reset_fd", "reset_forced_destinations", "result", "resvs", "rollback_mock", "rpc", "sched_instances", "schedule_mock", "scheduler_client", "scheduler_hint", "scheduler_utils", "sd_mock", "select_dest", "select_dest_mock", "select_destinations", "self", "serializer", "service_manager", "set_state_calls", "set_vm_mock", "set_vm_state_and_notify", "setup_instance_group", "shelved_image_id", "sig_mock", "six", "spec", "spec_fc_mock", "spec_from_components", "spec_save", "spec_save_mock", "spec_to_dict_mock", "state_mock", "str", "super", "system_metadata", "task", "task_exec_mock", "task_execute_mock", "task_rb_mock", "task_rollback_mock", "task_states", "test", "test_compute", "timeout", "timeouts", "timeutils", "to_filtprops", "to_reqspec", "tuple", "type", "unshelve_instance", "unshelve_mock", "update_args", "updates", "utils", "uuids", "version", "versions", "vm_st_mock", "vm_states", "Tests", "for", "the", "conductor", "service.\nReturn", "a", "consistent", "elevated", "context", "so", "we", "can", "detect", "it.\nConductor", "Manager", "Tests.\nConductor", "RPC", "API", "Tests.\nConductor", "API", "Tests.\nComputeTaskManager", "Tests.\nConductor", "compute_task", "RPC", "namespace", "Tests.\nCompute", "task", "API", "Tests.", "NOTE(danms):", "After", "a", "trip", "over", "RPC,", "any", "tuple", "will", "be", "a", "list,\n", "so", "use", "a", "list", "here", "to", "make", "sure", "we", "can", "handle", "it\n", "NOTE(danms):", "If", "conductor", "did", "not", "properly", "copy", "the", "object,", "then\n", "the", "new", "and", "reference", "copies", "of", "the", "nested", "dict", "object", "will", "be\n", "the", "same,", "and", "thus", "'dict'", "will", "not", "be", "reported", "as", "changed\n", "Make", "sure", "we", "return", "older", "than", "requested", "objects", "unmodified,\n", "see", "bug", "#1596119.\n", "Args", "that", "don't", "get", "passed", "in", "to", "the", "method", "but", "do", "get", "passed", "to", "RPC\n", "Args", "that", "are", "passed", "in", "to", "the", "method", "but", "don't", "get", "passed", "to", "RPC\n", "The", "API", "method", "is", "actually", "'resize_instance'.", "It", "gets\n", "converted", "into", "'migrate_server'", "when", "doing", "RPC.\n", "NOTE(danms):", "Avoid", "datetime", "timezone", "issues", "with", "converted", "flavors\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to\n", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "This", "test", "calls", "build_instances", "as", "if", "it", "was", "a", "reschedule.", "This", "means\n", "that", "the", "exc.BuildRequestNotFound()", "exception", "raised", "by\n", "conductor_manager._destroy_build_request()", "should", "not", "cause", "the\n", "build", "to", "stop.\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "FIXME(sbauza):", "Modify", "the", "fake", "RequestSpec", "object", "to", "either", "add", "a\n", "non-empty", "SchedulerRetries", "object", "or", "nullify", "the", "field\n", "FIXME(sbauza):", "Modify", "the", "fake", "RequestSpec", "object", "to", "either", "add", "a\n", "non-empty", "SchedulerLimits", "object", "or", "nullify", "the", "field\n", "FIXME(sbauza):", "Modify", "the", "fake", "RequestSpec", "object", "to", "either", "add", "a\n", "non-empty", "InstanceGroup", "object", "or", "nullify", "the", "field\n", "unshelve_instance()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "NOTE(sbauza):", "Since", "the", "instance", "is", "dehydrated", "when", "passing\n", "through", "the", "RPC", "API,", "we", "can", "only", "assert", "mock.ANY", "for", "it\n", "'shelved_image_id'", "is", "None", "for", "volumebacked", "instance\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "FIXME(danms):", "How", "to", "validate", "the", "db", "connection", "here?\n", "Because", "of", "the", "cache,", "this", "should", "only", "be", "called", "twice,\n", "once", "for", "the", "first", "and", "once", "for", "the", "third", "request.\n", "FIXME(danms):", "How", "to", "validate", "the", "db", "connection", "here?\n", "Without", "an", "iterable", "build_requests", "in", "the", "database,", "this\n", "wouldn't", "work", "if", "it", "continued", "past", "the", "cell0", "lookup.\n", "Filter", "properties", "are", "populated", "during", "code", "execution\n", "Filter", "properties", "are", "populated", "during", "code", "execution\n", "Filter", "properties", "are", "populated", "during", "code", "execution\n", "Just", "make", "sure", "we", "have", "an", "original", "flavor", "which", "is", "different", "from\n", "the", "new", "one\n", "Now", "the", "RequestSpec", "should", "be", "updated...\n", "...and", "persisted\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "build_instances()", "is", "a", "cast,", "we", "need", "to", "wait", "for", "it", "to", "complete\n", "NOTE(sbauza):", "Due", "to", "populate_retry()", "later", "in", "the", "code,\n", "filter_properties", "is", "dynamically", "modified\n", "Tests", "that", "we", "don't", "deallocate", "networks", "if", "'none'", "were", "specifically\n", "requested.\n", "Tests", "that", "we", "deallocate", "networks", "if", "auto-allocating", "networks", "or\n", "requested_networks=None."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/328_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_quota_classes.py": ["QuotaClassSetsTestV21", "QuotaClassesPolicyEnforcementV21", "body", "class_name", "exc", "exception", "ext_info", "extension_info", "fakes", "name", "qs", "quota_classes_v21", "quota_set", "raw_quota_set", "res_dict", "rule_name", "self", "super", "test", "validation_error", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavors_extra_specs.py": ["False", "FlavorsExtraSpecsTestV21", "None", "True", "bad_request", "body", "context", "delete_flavor_extra_specs", "dict", "exception", "extra_specs", "fakes", "flavor", "flavor_id", "flavorextraspecs", "flavorextraspecs_v21", "invalid_keys", "key", "len", "mock", "mock_add", "mock_flavor_extra_specs", "mock_get", "objects", "req", "req_url", "res_dict", "return_create_flavor_extra_specs", "self", "specs", "stub_flavor_extra_specs", "super", "test", "test_flavor", "url", "use_admin_context", "valid_keys", "value", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_pci_device.py": ["False", "None", "True", "_TestPciDeviceListObject", "_TestPciDeviceObject", "_TestSRIOVPciDeviceObject", "_fake_destroy", "_fake_update", "addr", "all", "changes", "context", "copy", "ctx", "ctxt", "db", "delattr", "dependents", "dev", "dev_dict", "dev_dict2", "devobj", "devs", "dict", "exception", "expected_updates", "extra_value", "fake_db_1", "fake_db_2", "fake_db_dev", "fake_db_dev_1", "fake_db_dev_old", "fake_dev_pre_1_5", "fake_pci_devs", "fields", "i", "inst_2", "instance", "int", "len", "mock", "mock_destroy", "mock_get", "mock_update", "node_id", "num_pfs", "num_vfs", "object", "objects", "parent", "pci_dev", "pci_dev_obj", "pci_device", "pci_device1", "pci_device2", "pci_device_list", "pf_product_id", "range", "return_dev", "self", "set", "test_objects", "timeutils", "updates", "uuids", "vf", "vf_devs", "vf_product_id", "check", "if", "the", "all", "the", "dependants", "are", "UNCLAIMABLE\n", "check", "if", "parent", "device", "status", "has", "been", "changed", "to", "UNCLAIMABLE\n", "check", "if", "the", "all", "the", "dependants", "are", "UNAVAILABLE\n", "check", "if", "parent", "device", "status", "has", "been", "changed", "to", "UNAVAILABLE\n", "check", "if", "the", "all", "the", "dependants", "are", "AVAILABLE\n", "check", "if", "parent", "device", "status", "is", "still", "UNAVAILABLE\n", "check", "if", "parent", "device", "status", "is", "now", "AVAILABLE"], "/Users/mehranhassani/repos/nova/nova/pci/utils.py": ["Exception", "False", "IOError", "LOG", "None", "PCI_VENDOR_PATTERN", "StopIteration", "VIRTFN_RE", "ValueError", "_LW", "_PCI_ADDRESS_PATTERN", "_PCI_ADDRESS_REGEX", "_SRIOV_TOTALVFS", "__name__", "_get_sysfs_netdev_path", "_matching_devices", "addr_file", "address", "all", "any", "bus", "dbs", "dev_info", "dev_path", "domain", "e", "exception", "f", "fd", "func", "function", "get_ifname_by_pci_address", "glob", "if_name", "ifname", "int", "k", "logging", "m", "mac", "next", "open", "os", "pci_addr", "pci_dev", "pf_interface", "re", "sep", "six", "slot", "spec", "specs", "sriov_totalvfs", "t", "v", "vf_num", "vf_path", "virtfns_path", "sriov_totalvfs", "contains", "the", "maximum", "possible", "VFs", "for", "this", "PF"], "/Users/mehranhassani/repos/nova/nova/conf/scheduler.py": ["False", "True", "cfg", "conf", "default_opts", "filter_scheduler_group", "filter_scheduler_opts", "float", "metrics_group", "metrics_weight_opts", "scheduler_group", "scheduler_opts", "trust_group", "trusted_opts", "TODO(sfinucan):", "Add", "'min'", "parameter\n", "TODO(mikal):", "replace", "this", "option", "with", "something", "involving", "host", "aggregates\n", "TODO(stephenfin):", "Add", "min", "parameter"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/261_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_networks.py": ["ADMIN_API", "NetworksJsonTests", "True", "_fixtures_passthrough", "api_sample_base", "args", "call", "exception", "fake_network_api", "getattr", "kwargs", "method", "method_name", "mock", "mock_create", "mock_get", "response", "sample_dir", "self", "super", "test_networks", "uuid", "This", "compensates", "for", "how", "fixtures", "3.x", "handles", "the", "signatures", "of\n", "MonkeyPatched", "functions", "vs", "fixtures", "<", "3.x.", "In", "fixtures", "3", "if", "a", "bound\n", "method", "is", "patched", "in", "for", "a", "bound", "method", "then", "both", "objects", "will", "be", "passed\n", "in", "when", "called.", "This", "means", "the", "patch", "method", "should", "have", "the", "signature", "of\n", "(self,", "targetself,", "*args,", "**kwargs).", "However", "that", "will", "not", "work", "for\n", "fixtures", "<", "3.", "This", "method", "captures", "self", "from", "the", "call", "point", "and", "discards\n", "it", "since", "it's", "not", "needed.\n", "self", "is", "the", "nova.network.api.API", "object", "that", "has", "been", "patched\n", "method", "is", "bound", "to", "FakeNetworkAPI", "so", "that", "will", "be", "passed", "in", "as", "self"], "/Users/mehranhassani/repos/nova/nova/objects/instance_action.py": ["InstanceAction", "None", "True", "VERSION", "action", "action_id", "action_name", "base", "cls", "context", "db", "db_action", "db_actions", "db_event", "db_events", "event", "event_id", "event_name", "exc_tb", "exc_val", "field", "fields", "instance_uuid", "objects", "request_id", "self", "staticmethod", "timeutils", "values", "want_result", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.0:", "Initial", "version\n", "InstanceAction", "<=", "version", "1.1\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "event_finish_with_failure", "decorated", "with", "serialize_args"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_claims.py": ["ClaimTestCase", "DummyTracker", "False", "None", "True", "claim", "claim_obj", "claims", "context", "ctxt", "db_numa_topology", "dev_dict", "dev_dict2", "exception", "fake_instance", "get_claim", "huge_instance", "icalled", "image_meta", "instance", "instance_type", "kwargs", "limit_topo", "limits", "mock", "mock_drop", "mock_extra_get", "mock_get_by_instance", "mock_numa_get", "mock_pci_supports_requests", "numa_topology", "object", "objects", "overhead", "pci_fakes", "pci_manager", "rcalled", "request", "requests", "resources", "self", "set", "str", "super", "test", "test_called", "usage", "usage_is_instance", "uuid", "values", "Tests", "for", "resource", "tracker", "claims."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_diagnostics.py": ["False", "None", "True", "cpu", "cpu_details", "diagnostics", "diags", "disk", "disk_details", "exception", "expected", "len", "memory", "nic", "nic_details", "result", "self", "test"], "/Users/mehranhassani/repos/nova/plugins/xenserver/networking/etc/xensource/scripts/vif_rules.py": ["None", "__name__", "apply_arptables_rules", "apply_ebtables_rules", "apply_iptables_rules", "arptables", "command", "data", "dict", "dom_id", "ebtables", "ip", "iptables", "json", "len", "line", "mac", "macs", "main", "novalib", "only_this_vif", "os", "params", "rule", "sys", "vif", "xsls", "xsread", "This", "is", "written", "to", "Python", "2.4,", "since", "that", "is", "what", "is", "available", "on", "XenServer\n", "noqa\n", "A", "note", "about", "adding", "rules:\n", "Whenever", "we", "add", "any", "rule", "to", "iptables,", "arptables", "or", "ebtables", "we", "first\n", "delete", "the", "same", "rule", "to", "ensure", "the", "rule", "only", "exists", "once."], "/Users/mehranhassani/repos/nova/nova/conductor/tasks/live_migrate.py": ["CONF", "LOG", "LiveMigrationTask", "None", "_", "__name__", "attempted_hosts", "avail", "base", "block_migration", "compute", "compute_rpcapi", "context", "dest", "destination", "destination_info", "destination_type", "destination_version", "dict", "disk_over_commit", "e", "ex", "exception", "filter_properties", "free_ram_mb", "host", "image", "instance", "instance_uuid", "len", "logging", "mem_inst", "messaging", "migration", "msg", "nova", "objects", "power_state", "ram_ratio", "reason", "request_spec", "retries", "scheduler_client", "scheduler_utils", "self", "service", "servicegroup_api", "six", "source_info", "source_type", "source_version", "super", "total_ram_mb", "utils", "TODO(johngarbutt)", "need", "to", "move", "complexity", "out", "of", "compute", "manager\n", "TODO(johngarbutt)", "disk_over_commit?\n", "TODO(johngarbutt)", "need", "to", "implement", "the", "clean", "up", "operation\n", "but", "this", "will", "make", "sense", "only", "once", "we", "pull", "in", "the", "compute\n", "calls,", "since", "this", "class", "currently", "makes", "no", "state", "changes,\n", "except", "to", "call", "the", "compute", "method,", "that", "has", "no", "matching\n", "rollback", "call", "right", "now.\n", "NOTE(sbauza):", "Now", "the", "ComputeNode", "object", "reports", "an", "allocation", "ratio\n", "that", "can", "be", "provided", "by", "the", "compute_node", "if", "new", "or", "by", "the", "controller\n", "NOTE(sbauza):", "Mimic", "the", "RAMFilter", "logic", "in", "order", "to", "have", "the", "same\n", "ram", "validation\n", "TODO(johngarbutt)", "this", "retry", "loop", "should", "be", "shared\n", "TODO(sbauza):", "Remove", "that", "once", "setup_instance_group()", "accepts", "a\n", "RequestSpec", "object\n", "NOTE(sbauza):", "We", "were", "unable", "to", "find", "an", "original", "RequestSpec\n", "object", "-", "probably", "because", "the", "instance", "is", "old.\n", "We", "need", "to", "mock", "that", "the", "old", "way\n", "NOTE(sbauza):", "Force_hosts/nodes", "needs", "to", "be", "reset\n", "if", "we", "want", "to", "make", "sure", "that", "the", "next", "destination\n", "is", "not", "forced", "to", "be", "the", "original", "host\n", "TODO(ShaoHe", "Feng)", "There", "maybe", "multi-scheduler,", "and", "the\n", "scheduling", "algorithm", "is", "R-R,", "we", "can", "let", "other", "scheduler", "try.\n", "Note(ShaoHe", "Feng)", "There", "are", "types", "of", "RemoteError,", "such", "as\n", "NoSuchMethod,", "UnsupportedVersion,", "we", "can", "distinguish", "it", "by\n", "ex.exc_type."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/344_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/scheduler/filter_scheduler.py": ["CONF", "FilterScheduler", "LOG", "None", "_", "__name__", "args", "chosen_host", "context", "dests", "dict", "driver", "elevated", "exception", "host", "host_subset_size", "hosts", "kwargs", "len", "logging", "nova", "num", "num_instances", "random", "range", "reason", "rpc", "selected_hosts", "self", "spec_obj", "super", "weighed_hosts", "Scheduler", "that", "can", "be", "used", "for", "filtering", "and", "weighing.\nSelects", "a", "filtered", "set", "of", "hosts", "and", "nodes.\nTemplate", "method,", "so", "a", "subclass", "can", "implement", "caching.", "Couldn't", "fulfill", "the", "request_spec\n", "NOTE(Rui", "Chen):", "If", "multiple", "creates", "failed,", "set", "the", "updated", "time\n", "of", "selected", "HostState", "to", "None", "so", "that", "these", "HostStates", "are\n", "refreshed", "according", "to", "database", "in", "next", "schedule,", "and", "release\n", "the", "resource", "consumed", "by", "instance", "in", "the", "process", "of", "selecting\n", "host.\n", "Log", "the", "details", "but", "don't", "put", "those", "into", "the", "reason", "since\n", "we", "don't", "want", "to", "give", "away", "too", "much", "information", "about", "our\n", "actual", "environment.\n", "Find", "our", "local", "list", "of", "acceptable", "hosts", "by", "repeatedly\n", "filtering", "and", "weighing", "our", "options.", "Each", "time", "we", "choose", "a\n", "host,", "we", "virtually", "consume", "resources", "on", "it", "so", "subsequent\n", "selections", "can", "adjust", "accordingly.\n", "Note:", "remember,", "we", "are", "using", "an", "iterator", "here.", "So", "only\n", "traverse", "this", "list", "once.", "This", "can", "bite", "you", "if", "the", "hosts\n", "are", "being", "scanned", "in", "a", "filter", "or", "weighing", "function.\n", "Filter", "local", "hosts", "based", "on", "requirements", "...\n", "Can't", "get", "any", "more", "locally.\n", "Now", "consume", "the", "resources", "so", "the", "filter/weights\n", "will", "change", "for", "the", "next", "instance.\n", "hosts", "has", "to", "be", "not", "part", "of", "the", "updates", "when", "saving"], "/Users/mehranhassani/repos/nova/nova/conf/flavors.py": ["True", "cfg", "conf", "flavor_opts"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_rpcapi.py": ["CONF", "CellsAPITestCase", "False", "None", "True", "args", "bw_update_info", "call_info", "capacity_info", "cell_service_id", "cells_rpcapi", "ctxt", "dict", "exception", "expected_args", "expected_method_info", "fake_attrs", "fake_bdm", "fake_cell_name", "fake_csv", "fake_filters", "fake_info_cache", "fake_instance", "fake_instance_fault", "fake_method", "fake_method_args", "fake_method_kwargs", "fake_response", "fake_rpc_method", "fake_rpc_prepare", "fake_sys_metadata", "filters", "instance", "instances", "kwargs", "method", "nova", "objects", "orig_prepare", "result", "rpc_method", "self", "self_rpcclient", "six", "super", "test", "update_args", "update_kwargs", "uuids", "version", "Test", "case", "for", "cells.api", "interfaces."], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_resource_provider.py": ["DISK_ALLOCATION", "DISK_INVENTORY", "None", "ResourceProviderBaseCase", "ResourceProviderListTestCase", "TestResourceProviderAggregates", "True", "USES_DB_SELF", "_", "_rp", "aggregate_uuids", "aggs", "alloc", "alloc3", "alloc4", "allocation", "allocation1", "allocation2", "allocation_1", "allocation_2", "allocation_list", "allocations", "bad_used", "c_id", "c_name", "conn", "consumer_allocations", "consumer_uuid", "consumer_uuid2", "context", "created_resource_provider", "custom", "customs", "db_exc", "db_rp", "dict", "disk_allocation", "disk_inv", "disk_inventory", "error", "exc", "exception", "expected_count", "fields", "fixtures", "get_rc", "getattr", "good_used", "ins", "int", "inv", "inv1", "inv2", "inv3", "inv_list", "inventories", "inventory_kwargs", "kwargs", "len", "max_unit", "min_id", "mock", "mock_get", "mock_log", "name", "names", "new_inv_list", "new_total", "nova", "objects", "r", "rc", "rc1", "rc2", "rc_ids", "rc_list", "rcs", "re_read_aggregate_uuids", "read_aggregate_uuids", "read_rp", "reloaded_inventories", "resource_class", "resource_classes", "resource_provider", "resource_providers", "result", "retrieved_resource_provider", "rp", "rp1", "rp1_class", "rp1_name", "rp1_usage", "rp1_used", "rp1_uuid", "rp2", "rp2_class", "rp2_name", "rp2_usage", "rp2_used", "rp2_uuid", "rp_class", "rp_i", "rp_id", "rp_name", "rp_obj", "rp_usage", "rp_uuid", "saved_generation", "self", "start_aggregate_uuids", "str", "super", "test", "usage", "usage_list", "usages", "uuid", "uuidsentinel", "vcpu_id", "vcpu_inv", "Test", "resource-provider", "objects'", "lifecycles.\nnegative", "case", "for", "test_create_duplicate_id_retry", "Allocate", "something", "reasonable", "for", "the", "above", "inventory\n", "Update", "our", "inventory", "to", "over-subscribe", "us", "after", "the", "above", "allocation\n", "We", "should", "succeed,", "but", "have", "logged", "a", "warning", "for", "going", "over", "on", "disk\n", "set", "to", "new", "list\n", "generation", "has", "bumped\n", "reset", "list", "to", "just", "disk_inv\n", "generation", "has", "bumped\n", "update", "existing", "disk", "inv", "to", "new", "settings\n", "generation", "has", "bumped\n", "fail", "when", "inventory", "bad\n", "generation", "has", "not", "bumped\n", "delete", "inventory\n", "generation", "has", "bumped\n", "check", "inventory", "list", "is", "empty\n", "add", "some", "inventory\n", "generation", "has", "bumped\n", "add", "same", "inventory", "again\n", "generation", "has", "not", "bumped\n", "fail", "when", "generation", "wrong\n", "Compute", "nodes", "that", "are", "reconfigured", "have", "to", "be", "able", "to", "set\n", "their", "inventory", "to", "something", "that", "violates", "allocations", "so\n", "we", "need", "to", "make", "that", "possible.\n", "attempt", "to", "set", "inventory", "to", "less", "than", "currently", "allocated\n", "amounts\n", "Write", "that", "specific", "inventory", "for", "testing", "min/max", "units", "and", "steps\n", "Create", "the", "VCPU", "allocation", "only", "for", "the", "first", "RP\n", "Both", "RPs", "should", "accept", "that", "request", "given", "the", "only", "current", "allocation\n", "for", "the", "first", "RP", "is", "leaving", "one", "VCPU\n", "Now,", "when", "asking", "for", "2", "VCPUs,", "only", "the", "second", "RP", "should", "accept", "that\n", "given", "the", "current", "allocation", "for", "the", "first", "RP\n", "Adding", "a", "second", "resource", "request", "should", "be", "okay", "for", "the", "2nd", "RP\n", "given", "it", "has", "enough", "disk", "but", "we", "also", "need", "to", "make", "sure", "that", "the\n", "first", "RP", "is", "not", "acceptable", "because", "of", "the", "VCPU", "request\n", "Now,", "we", "are", "asking", "for", "both", "disk", "and", "VCPU", "resources", "that", "all", "the", "RPs\n", "can't", "accept", "(as", "the", "2nd", "RP", "is", "having", "a", "reserved", "size)\n", "We", "also", "want", "to", "verify", "that", "asking", "for", "a", "specific", "RP", "can", "also", "be\n", "checking", "the", "resource", "usage.\n", "Let's", "verify", "that", "the", "min", "and", "max", "units", "are", "checked", "too\n", "Case", "1:", "amount", "is", "in", "between", "min", "and", "max", "and", "modulo", "step_size\n", "Case", "2:", "amount", "is", "less", "than", "min_unit\n", "Case", "3:", "amount", "is", "more", "than", "min_unit\n", "Case", "4:", "amount", "is", "not", "modulo", "step_size\n", "Since", "get_aggregates", "always", "does", "a", "new", "query", "this", "is\n", "mostly", "nonsense", "but", "is", "here", "for", "completeness.\n", "Empty", "list", "means", "delete.\n", "This", "confirms", "that", "the", "join", "with", "resource", "provider", "is\n", "behaving.\n", "add", "more", "allocations", "for", "the", "first", "resource", "provider\n", "of", "the", "same", "class\n", "add", "more", "allocations", "for", "the", "first", "resource", "provider\n", "of", "a", "different", "class\n", "Create", "one", "resource", "provider", "with", "2", "classes\n", "create", "the", "allocations", "for", "a", "first", "consumer\n", "create", "the", "allocations", "for", "a", "second", "consumer,", "until", "we", "have\n", "allocations", "for", "more", "than", "one", "consumer", "in", "the", "db,", "then", "we\n", "won't", "actually", "be", "doing", "real", "allocation", "math,", "which", "triggers\n", "the", "sql", "monster.\n", "If", "we", "are", "joining", "wrong,", "this", "will", "be", "a", "KeyError\n", "Create", "two", "resource", "providers\n", "Two", "allocations,", "one", "for", "each", "resource", "provider.\n", "There's", "no", "inventory,", "we", "have", "a", "failure.\n", "Confirm", "that", "the", "resource", "class", "string,", "not", "index,", "is", "in\n", "the", "exception", "and", "resource", "providers", "are", "listed", "by", "uuid.\n", "Add", "inventory", "for", "one", "of", "the", "two", "resource", "providers.", "This", "should", "also\n", "fail,", "since", "rp2", "has", "no", "inventory.\n", "Add", "inventory", "for", "the", "second", "resource", "provider\n", "Now", "the", "allocations", "will", "still", "fail", "because", "max_unit", "1\n", "Now", "we", "can", "finally", "allocate.\n", "Check", "that", "those", "allocations", "changed", "usage", "on", "each\n", "resource", "provider.\n", "redo", "one", "allocation\n", "TODO(cdent):", "This", "does", "not", "currently", "behave", "as", "expected\n", "because", "a", "new", "allocataion", "is", "created,", "adding", "to", "the", "total\n", "used,", "not", "replacing.\n", "delete", "the", "allocations", "for", "the", "consumer\n", "NOTE(cdent):", "The", "database", "uses", "'consumer_id'", "for", "the\n", "column,", "presumably", "because", "some", "ids", "might", "not", "be", "uuids,", "at\n", "some", "point", "in", "the", "future.\n", "Create", "one", "resource", "provider", "and", "set", "some", "inventory\n", "allocation,", "bad", "step_size\n", "correct", "for", "step", "size\n", "check", "usage\n", "This", "order", "of", "ID", "generation", "will", "create", "rc1", "with", "an", "ID", "of", "42,", "try", "to\n", "create", "rc2", "with", "the", "same", "ID,", "and", "then", "return", "43", "in", "the", "retry", "loop.\n", "This", "order", "of", "ID", "generation", "will", "create", "rc1", "with", "an", "ID", "of", "44,", "try", "to\n", "create", "rc2", "with", "the", "same", "ID,", "and", "then", "return", "45", "in", "the", "retry", "loop.\n", "Verify", "rc", "cache", "was", "purged", "of", "the", "old", "entry\n", "Verify", "rc", "cache", "was", "purged", "of", "the", "old", "entry"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_host_manager.py": ["FakeFilterClass1", "FakeFilterClass2", "False", "HostManagerChangedNodesTestCase", "HostManagerTestCase", "None", "True", "__name__", "_self", "_ts_now", "a", "agg_get_all", "aggr_list", "aggregate", "args", "bad_host", "calls", "cn1", "cn2", "cn_get_all", "cn_list", "collections", "compute", "compute_node", "context", "datetime", "dest", "dict", "enabled_filters", "exception", "exp_filters", "f", "fake_agg", "fake_filter", "fake_filter_one", "fake_host_numa_topology", "fake_info", "fake_instance", "fake_numa_topology", "fake_properties", "fake_requests", "fake_requests_obj", "fake_updated", "fakes", "filter_properties", "filter_props", "filters", "fixtures", "getter", "hm", "host", "host_a", "host_b", "host_filters", "host_manager", "host_name", "host_state", "host_states_map", "host_topo_mock", "hyper_ver_int", "i", "info", "inst1", "inst2", "inst3", "inst4", "inst_list3", "inst_topology", "instance_init_mock", "jsonutils", "len", "matchers", "metrics", "mock", "mock_get_all", "mock_get_all_comp", "mock_get_by_binary", "mock_get_by_filters", "mock_get_by_host", "mock_get_svc_by_binary", "mock_init_agg", "mock_init_info", "mock_init_inst", "mock_log", "n", "new_info", "new_inst_list", "node", "nova", "num", "numa_fit_mock", "numa_usage_mock", "obj", "obj_base", "objects", "orig_inst_dict", "pci_stats", "r", "range", "req_spec", "result", "running_nodes", "second_host_numa_topology", "second_numa_topology", "self", "set", "six", "spec_obj", "state_key", "stats", "str", "super", "svc_get_by_binary", "sync_mock", "task_states", "test", "update", "update_from_cn", "uuids", "versionutils", "vm_states", "x", "Test", "case", "for", "HostManager", "class.\nTest", "case", "for", "HostManager", "class.\nTest", "case", "for", "HostState", "class.", "should", "not", "be", "called", "if", "the", "list", "of", "nodes", "was", "passed", "explicitly\n", "Let's", "remove", "the", "host", "from", "the", "aggregate", "and", "update", "again\n", "Test", "we", "return", "1", "correct", "filter", "object\n", "[1]", "and", "[3]", "are", "host2", "and", "host4\n", "[1]", "and", "[3]", "are", "host2", "and", "host4\n", "[0]", "and", "[2]", "are", "host1", "and", "host3\n", "[1]", "and", "[3]", "are", "host2", "and", "host4\n", "Ensure", "ignore_hosts", "processed", "before", "force_hosts", "in", "host", "filters.\n", "only", "fake_host3", "should", "be", "left.\n", "Ensure", "all", "nodes", "returned", "for", "a", "host", "with", "many", "nodes\n", "[5]", "is", "fake-node2,", "[7]", "is", "fake-node4\n", "Ensure", "only", "overlapping", "results", "if", "both", "force", "host", "and", "node\n", "[5]", "is", "fake-node2\n", "Ensure", "non-overlapping", "force_node", "and", "force_host", "yield", "no", "result\n", "Ensure", "ignore_hosts", "can", "coexist", "with", "force_nodes\n", "Ensure", "ignore_hosts", "is", "processed", "before", "force_nodes\n", "Check", "that", ".service", "is", "set", "properly\n", "511GB\n", "1023GB\n", "3071GB\n", "8191GB\n", "first", "call:", "all", "nodes\n", "second", "call:", "just", "running", "nodes\n", "first", "call:", "all", "nodes\n", "second", "call:", "no", "nodes\n", "update_from_compute_node()", "and", "consume_from_request()", "are", "tested\n", "in", "HostManagerTestCase.test_get_all_host_states()\n", "Because", "compute", "record", "not", "ready,", "the", "update", "of", "free", "ram\n", "will", "not", "happen", "and", "the", "value", "will", "still", "be", "0"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_pci_device_pool.py": ["ValueError", "_TestPciDevicePoolObject", "bad_dict", "copy", "dict_notag", "fake_pci", "len", "object", "objects", "pci_device_pool", "pool_dict", "pool_obj", "pools", "prim", "primitive", "self", "tags", "test", "test_dict", "test_objects"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/assisted_volume_snapshots.py": ["ALIAS", "AssistedVolumeSnapshotsController", "KeyError", "ValueError", "alias", "assisted_volume_snapshots", "avs_policies", "body", "compute", "context", "create_info", "delete_info", "delete_metadata", "e", "error", "exc", "exception", "extensions", "id", "jsonutils", "name", "req", "res", "self", "six", "snapshot", "super", "validation", "version", "volume_id", "wsgi", "The", "Assisted", "volume", "snapshots", "extension.\nThe", "Assisted", "volume", "snapshots", "API", "controller", "for", "the", "OpenStack", "API.\nCreates", "a", "new", "snapshot.\nDelete", "a", "snapshot.\nAssisted", "volume", "snapshots."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/220_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_models.py": ["API_BASE", "AggregateHost", "AggregateMetadata", "Boolean", "Column", "DateTime", "Enum", "False", "Flavors", "Float", "ForeignKey", "Index", "InstanceGroupMember", "InstanceGroupPolicy", "Integer", "MEDIUMTEXT", "MediumText", "None", "String", "Text", "True", "Unicode", "_NovaAPIBase", "__table_args__", "__tablename__", "_hosts", "_members", "_metadata", "_policies", "aggregate_id", "allocation_ratio", "backref", "block_device_mappings", "can_host", "cell_id", "cell_mapping", "class_name", "consumer_id", "database_connection", "declarative_base", "delta", "disabled", "ephemeral_gb", "expire", "fingerprint", "flavor", "flavor_id", "flavorid", "generation", "group_id", "h", "hard_limit", "host", "host_mapping", "id", "in_use", "instance", "instance_uuid", "is_public", "key", "m", "max_unit", "memory_mb", "min_unit", "models", "name", "orm", "p", "policy", "project_id", "property", "public_key", "reserved", "resource", "resource_class_id", "resource_provider", "resource_provider_id", "root_gb", "rxtx_factor", "schema", "self", "spec", "step_size", "swap", "total", "transport_url", "type", "uniq_name", "until_refresh", "usage", "usage_id", "used", "user_id", "uuid", "value", "vcpu_weight", "vcpus", "Represents", "a", "host", "that", "is", "member", "of", "an", "aggregate.\nRepresents", "a", "metadata", "key/value", "pair", "for", "an", "aggregate.\nRepresents", "a", "cluster", "of", "hosts", "that", "exists", "in", "this", "zone.\nContains", "information", "on", "communicating", "with", "a", "cell\nContains", "the", "mapping", "of", "an", "instance", "to", "which", "cell", "it", "is", "in\nContains", "mapping", "of", "a", "compute", "host", "to", "which", "cell", "it", "is", "in\nRepresents", "the", "information", "passed", "to", "the", "scheduler.\nRepresents", "possible", "flavors", "for", "instances\nRepresents", "additional", "specs", "as", "key/value", "pairs", "for", "a", "flavor\nRepresents", "projects", "associated", "with", "flavors\nRepresents", "the", "information", "passed", "to", "the", "scheduler.\nRepresents", "a", "public", "key", "pair", "for", "ssh", "/", "WinRM.\nRepresents", "the", "type", "of", "resource", "for", "an", "inventory", "or", "allocation.\nRepresents", "a", "mapping", "to", "a", "providers", "of", "resources.\nRepresents", "a", "quantity", "of", "available", "resource.\nA", "use", "of", "inventory.\nAssociate", "a", "resource", "provider", "with", "an", "aggregate.\nA", "grouping", "of", "resource", "providers.\nRepresents", "the", "members", "for", "an", "instance", "group.\nRepresents", "the", "policy", "type", "for", "an", "instance", "group.\nRepresents", "a", "single", "quota", "override", "for", "a", "user", "with", "in", "a", "project.\nRepresents", "the", "current", "usage", "for", "a", "given", "resource.\nRepresents", "a", "resource", "reservation", "for", "quotas.", "TODO(alaski):", "Drop", "these", "from", "the", "db", "in", "Ocata\n", "columns_to_drop", "=", "['request_spec_id',", "'user_id',", "'display_name',\n", "'instance_metadata',", "'progress',", "'vm_state',", "'task_state',\n", "'image_ref',", "'access_ip_v4',", "'access_ip_v6',", "'info_cache',\n", "'security_groups',", "'config_drive',", "'key_name',", "'locked_by',\n", "'reservation_id',", "'launch_index',", "'hostname',", "'kernel_id',\n", "'ramdisk_id',", "'root_device_name',", "'user_data']"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/299_service_version_number.py": ["Column", "Integer", "MetaData", "Table", "True", "meta", "migrate_engine", "services", "shadow_services"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_cell_mapping.py": ["CellMappingListTestCase", "CellMappingTestCase", "SAMPLE_MAPPING", "True", "USES_DB_SELF", "args", "cell_mapping", "context", "create_mapping", "ctxt", "db_mapping", "db_mappings", "exception", "fixtures", "key", "kwargs", "mapping", "mappings", "self", "super", "test", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/db/base.py": ["Base", "CONF", "None", "db_driver", "importutils", "nova", "object", "self", "super", "Base", "class", "for", "classes", "that", "need", "modular", "database", "access.\nDB", "driver", "is", "injected", "in", "the", "init", "method."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/image/utils.py": ["IMAGE_API", "IterableToFileAdapter", "None", "StopIteration", "_VDI_FORMAT_RAW", "chunk", "context", "fileobj", "glance_image", "image", "image_href_or_id", "int", "iterable", "key", "next", "object", "property", "return_value", "self", "shutil", "size", "source_file", "tarfile", "target_file"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_rpcapi.py": ["CONF", "None", "True", "cfg", "context", "ctxt", "do_test", "expected_args", "expected_fanout", "expected_kwargs", "expected_retval", "expected_version", "fake_can_send_version", "fake_spec", "getattr", "kwargs", "method", "mock", "mock_csv", "mock_prepare", "mock_rpc_method", "objects", "orig_prepare", "prepare_kwargs", "retval", "rpc_method", "rpcapi", "scheduler_rpcapi", "self", "test", "to_props", "to_spec", "version", "NOTE(sbauza):", "We", "need", "to", "persist", "the", "method", "before", "mocking", "it"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/network_util.py": ["AttributeError", "False", "LOG", "None", "True", "_", "__name__", "_get_network_obj", "add_prt_grp_spec", "client_factory", "cluster", "dvs_props", "elem", "exception", "hasattr", "host_mor", "logging", "msg", "network", "network_name", "network_obj", "network_objects", "network_refs", "network_system_mor", "nic_elem", "obj_content", "p_gp", "p_grp_vswitch_name", "pg_name", "physical_nics", "physical_nics_ret", "pnic", "port_grps_on_host", "port_grps_on_host_ret", "prop_dict", "props", "session", "str", "vexc", "vim_util", "vlan_id", "vlan_interface", "vm_networks", "vm_util", "vswitch_name", "vswitches", "vswitches_ret", "vutil", "Checks", "if", "the", "vlan_interface", "exists", "on", "the", "esx", "host.\nGet", "the", "vlan", "id", "and", "vswitch", "associated", "with", "the", "port", "group.", "network_objects", "is", "actually", "a", "RetrieveResult", "object", "from", "vSphere", "API", "call\n", "the", "propset", "attribute", "\"need", "not", "be", "set\"", "by", "returning", "API\n", "Get", "network", "properties\n", "NOTE(asomya):", "This", "only", "works", "on", "ESXi", "if", "the", "port", "binding\n", "is", "set", "to", "ephemeral\n", "For", "a", "VLAN", "the", "network", "name", "will", "be", "the", "UUID.", "For", "a", "VXLAN\n", "network", "this", "will", "have", "a", "VXLAN", "prefix", "and", "then", "the\n", "network", "name.\n", "Get", "the", "list", "of", "vSwicthes", "on", "the", "Host", "System\n", "Meaning", "there", "are", "no", "vSwitches", "on", "the", "host.", "Shouldn't", "be", "the", "case,\n", "but", "just", "doing", "code", "check\n", "Get", "the", "vSwitch", "associated", "with", "the", "network", "adapter\n", "Catching", "Attribute", "error", "as", "a", "vSwitch", "may", "not", "be", "associated", "with", "a\n", "physical", "NIC.\n", "Meaning", "there", "are", "no", "physical", "nics", "on", "the", "host\n", "There", "can", "be", "a", "race", "condition", "when", "two", "instances", "try\n", "adding", "port", "groups", "at", "the", "same", "time.", "One", "succeeds,", "then\n", "the", "other", "one", "will", "get", "an", "exception.", "Since", "we", "are\n", "concerned", "with", "the", "port", "group", "being", "created,", "which", "is", "done\n", "by", "the", "other", "call,", "we", "can", "ignore", "the", "exception."], "/Users/mehranhassani/repos/nova/doc/ext/support_matrix.py": ["Exception", "NOTES", "None", "STATUS_ALL", "STATUS_CHOICE", "STATUS_COMPLETE", "STATUS_CONDITION", "STATUS_MANDATORY", "STATUS_MISSING", "STATUS_OPTIONAL", "STATUS_PARTIAL", "STATUS_UKNOWN", "SupportMatrix", "SupportMatrixDirective", "SupportMatrixFeature", "SupportMatrixImplementation", "SupportMatrixTarget", "app", "architecture", "blank", "c", "cfg", "cli", "cli_command", "cols", "commands", "configparser", "content", "details", "detailstitle", "driver", "env", "feature", "features", "fname", "fp", "fpath", "group", "header", "hypervisor", "i", "id", "impl", "implcol", "implref", "impls", "impltxt", "item", "key", "keycol", "keyref", "keytxt", "len", "link_end_idx", "link_idx", "link_idxs", "list", "m", "matrix", "name", "nodes", "note", "notes", "noteskey", "notestitle", "object", "offset", "open", "para", "para_divers", "range", "re", "rel_fpath", "required_arguments", "rst", "section", "self", "start_idx", "status", "statuscol", "subitem", "summary", "summarybody", "summarygroup", "summaryhead", "summarytitle", "sys", "target", "targets", "title", "uri", "List", "of", "SupportMatrixFeature", "instances,", "describing\n", "all", "the", "features", "present", "in", "Nova", "virt", "drivers\n", "Dict", "of", "(name,", "SupportMatrixTarget)", "enumerating\n", "all", "the", "hypervisor", "drivers", "that", "have", "data", "recorded\n", "for", "them", "in", "self.features.", "The", "'name'", "dict", "key", "is\n", "the", "value", "from", "the", "SupportMatrixTarget.key", "attribute\n", "A", "unique", "key", "(eg", "'foo.bar.wizz')", "to", "identify", "the", "feature\n", "A", "human", "friendly", "short", "title", "for", "the", "feature\n", "One", "of", "the", "status", "constants\n", "Detail", "string", "if", "status", "was", "choice/condition\n", "Arbitrarily", "long", "string", "describing", "the", "feature", "in", "detail\n", "Dict", "of", "(name,", "SupportMatrixImplementation)", "detailing\n", "the", "implementation", "for", "each", "hypervisor", "driver.", "The\n", "'name'", "dict", "key", "is", "the", "value", "from", "SupportMatrixTarget.key\n", "for", "the", "hypervisor", "in", "question\n", "A", "list", "of", "CLI", "commands", "which", "are", "related", "to", "that", "feature\n", "One", "of", "the", "status", "constants", "detailing", "the", "implementation\n", "level\n", "Arbitrary", "string", "describing", "any", "caveats", "of", "the", "implementation.\n", "Mandatory", "if", "status", "is", "'partial',", "optional", "otherwise.\n", "The", "argument", "is", "the", "filename,", "e.g.", "support-matrix.ini\n", "SafeConfigParser", "was", "deprecated", "in", "Python", "3.2\n", "This", "ensures", "that", "the", "docs", "are", "rebuilt", "whenever", "the\n", ".ini", "file", "changes\n", "The", "'targets'", "section", "is", "special", "-", "it", "lists", "all", "the\n", "hypervisors", "that", "this", "file", "records", "data", "for\n", "The", "driver", "string", "will", "optionally", "contain\n", "a", "hypervisor", "and", "architecture", "qualifier\n", "so", "we", "expect", "between", "1", "and", "3", "components\n", "in", "the", "name\n", "All", "sections", "except", "'targets'", "describe", "some", "feature", "of\n", "the", "Nova", "hypervisor", "driver", "implementation\n", "The", "value", "is", "a", "string", "\"status(group)\"", "where\n", "the", "'group'", "part", "is", "optional\n", "Now", "we've", "got", "the", "basic", "feature", "details,", "we", "must", "process\n", "the", "hypervisor", "driver", "implementation", "for", "each", "feature\n", "This", "sets", "up", "all", "the", "column", "headers", "-", "two", "fixed\n", "columns", "for", "feature", "name", "&", "status\n", "then", "one", "column", "for", "each", "hypervisor", "driver\n", "We", "now", "produce", "the", "body", "of", "the", "table,", "one", "row", "for\n", "each", "feature", "to", "report", "on\n", "the", "hyperlink", "target", "name", "linking", "to", "details\n", "first", "the", "to", "fixed", "columns", "for", "title/status\n", "and", "then", "one", "column", "for", "each", "hypervisor", "driver\n", "One", "list", "entry", "for", "each", "feature", "we're", "reporting", "on\n", "The", "hypervisor", "target", "name", "linked", "from", "summary", "table\n", "Highlight", "the", "feature", "title", "name\n", "A", "sub-list", "giving", "details", "of", "each", "hypervisor", "target\n", "links", "could", "start", "with", "http://", "or", "https://\n", "assume", "the", "notes", "start", "with", "text", "(could", "be", "empty)\n", "create", "a", "URL", "node", "until", "the", "next", "text", "or", "the", "end", "of", "the", "notes\n", "In", "case", "the", "notes", "end", "with", "a", "link", "without", "a", "blank\n", "get", "all", "text", "after", "the", "last", "link", "(could", "be", "empty)", "or", "all", "of", "the\n", "text", "if", "no", "link", "was", "given"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_safeutils.py": ["None", "args", "blue", "decorated_function", "func", "func_code", "function", "functools", "instance", "kwargs", "len", "red", "safe_utils", "self", "test", "wrapped", "Test", "the", "get_wrapped_function", "utility", "method."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/wsgi/nova-api.py": ["CONF", "application", "cfg", "conf", "config", "config_files", "deploy", "logging", "name", "objects", "options", "utils", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_osinfo.py": ["ImportError", "LibvirtOsInfoTest", "None", "exception", "fakelibosinfo", "fixtures", "image_meta", "img_meta", "mock", "mock_import", "mock_log", "objects", "os_info_db", "os_name", "osinfo", "osinfo_obj", "self", "super", "test"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/console.py": ["CONSOLE_LOG_DIR", "CONSOLE_LOG_FILE_PATTERN", "IOError", "KeyError", "MAX_CONSOLE_BYTES", "SEEK_END", "SEEK_SET", "ValueError", "XenAPIPlugin", "__name__", "_last_bytes", "arg_dict", "base64", "dom_id", "e", "file_like_object", "get_console_log", "int", "log_content", "logfile", "logging", "msg", "open", "pluginlib_nova", "raw_dom_id", "session", "zlib", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/012_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/microversion.py": ["AttributeError", "HEADER", "MAX_VERSION", "MICROVERSION_ENVIRON", "MIN_VERSION", "None", "SERVICE_TYPE", "True", "TypeError", "VERSIONED_METHODS", "VERSIONS", "ValueError", "Version", "_", "_find_method", "_fully_qualified_name", "application", "args", "className", "cls", "collections", "decorated_func", "decorator", "exc", "extract_version", "f", "float", "found_version", "func", "headers", "inspect", "int", "kwargs", "list", "max_ver", "max_version", "max_version_float", "max_version_string", "method_list", "microversion", "microversion_header", "microversion_parse", "min_ver", "min_version", "min_version_float", "min_version_string", "moduleName", "name", "nova", "obj", "object", "parse_version_string", "property", "qualified_name", "req", "request_version", "response", "self", "str", "util", "value", "version_float", "version_string", "want_version", "webob", "x", "Microversion", "handling.\nUtility", "to", "raise", "a", "404", "if", "the", "wanted", "microversion", "does", "not", "match.\nWSGI", "middleware", "for", "getting", "microversion", "info.", "NOTE(cdent):", "This", "code", "is", "taken", "from", "enamel:\n", "https://github.com/jaypipes/enamel", "and", "was", "the", "original", "source", "of\n", "the", "code", "now", "used", "in", "microversion_parse", "library.\n", "NOTE(cdent):", "avoid", "cyclical", "import", "conflict", "between", "util", "and\n", "microversion\n", "The", "Canonical", "Version", "List\n", "initial", "support", "for", "aggregate.get_aggregates", "and", "set_aggregates\n", "Adds", "/resource_classes", "resource", "endpoint\n", "Adds", "'member_of'", "query", "parameter", "to", "get", "resource", "providers\n", "that", "are", "members", "of", "any", "of", "the", "listed", "aggregates\n", "The", "combination", "of", "int", "and", "a", "limited", "split", "with", "the\n", "named", "tuple", "means", "that", "this", "incantation", "will", "raise\n", "ValueError", "or", "TypeError", "when", "the", "incoming", "data", "is\n", "poorly", "formed", "but", "will,", "however,", "naturally", "adapt", "to\n", "extraneous", "whitespace.\n", "If", "there", "was", "an", "error", "in", "the", "application", "we", "still", "need\n", "to", "send", "the", "microversion", "header,", "so", "add", "the", "header", "and\n", "re-raise", "the", "exception.\n", "We", "need", "a", "version", "that", "is", "in", "VERSION", "and", "within", "MIX", "and", "MAX.\n", "This", "gives", "us", "the", "option", "to", "administratively", "disable", "a\n", "version", "if", "we", "really", "need", "to.\n", "From", "twisted\n", "https://github.com/twisted/twisted/blob/trunk/twisted/python/deprecate.py\n", "Python", "3", "eliminates", "im_class,", "substitutes", "__module__", "and\n", "__qualname__", "to", "provide", "similar", "information.\n", "A", "KeyError", "shouldn't", "be", "possible", "here,", "but", "let's", "be", "robust\n", "just", "in", "case.\n", "Sort", "highest", "min", "version", "to", "beginning", "of", "list."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/334_device_metadata_in_extra.py": ["Column", "MetaData", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/security_group/test_neutron_driver.py": ["None", "TestNeutronDriver", "True", "TypeError", "admin_context", "body", "client", "context", "description", "device_ids", "exception", "expected", "expected_args", "expected_sg", "expected_sg_id", "i", "len", "max_query", "message", "mock", "mock_list_secgroup", "n_exc", "name", "neutron_driver", "neutronv20", "num_servers", "objects", "observed_sg", "port1_id", "port2_id", "port_id", "port_list", "ports", "project_id", "r", "range", "result", "return_values", "search_opts", "security_group_ids", "security_group_names", "security_groups_list", "self", "server_id", "servers", "setattr", "sg1", "sg1_id", "sg2", "sg2_id", "sg_api", "sg_bindings", "sg_name", "sorted", "super", "test", "uuids", "vals", "x", "User", "doesn't", "have", "access", "to", "sg2"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_configdrive.py": ["ConfigDriveTestCase", "FakeInstanceMetadata", "False", "None", "REQUIRES_LOCKING", "True", "_path", "_self", "admin_password", "block_device_info", "content", "context", "driver", "extra_md", "fake", "fake_get_instance_meta", "fake_instance", "fake_make_drive", "fake_upload_iso_to_datastore", "fixtures", "glance", "image_id", "image_ref", "image_service", "injected_files", "instance", "instance_values", "int", "iso_path", "metadata", "mock", "mock_register", "mock_service", "mox", "network_info", "nova", "object", "objects", "request_context", "self", "stubs", "super", "test", "utils", "uuidsentinel", "vm_util", "vmops", "vmwareapi_fake", "We", "can't", "actually", "make", "a", "config", "drive", "v2", "because", "ensure_tree", "has\n", "been", "faked", "out\n", "if", "spawn", "does", "not", "call", "the", "_create_config_drive", "or\n", "_attach_cdrom_to_vm", "call", "with", "the", "correct", "set", "of", "parameters\n", "then", "mox's", "VerifyAll", "will", "throw", "a", "Expected", "methods", "never", "called\n", "Exception\n", "if", "spawn", "ends", "up", "calling", "_create_config_drive", "or\n", "_attach_cdrom_to_vm", "then", "mox", "will", "log", "a", "Unexpected", "method", "call\n", "exception"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_lock_server.py": ["LockServerSamplesJsonTest", "response", "sample_dir", "self", "super", "test_servers", "Get", "api", "samples", "to", "lock", "server", "request.\n", "Get", "api", "samples", "to", "unlock", "server", "request."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_numa_topology.py": ["None", "_TestInstanceNUMATopology", "cell", "context", "copy", "dict", "exception", "fake_db_topology", "fake_instance_uuid", "fake_numa_topology", "fake_obj_numa_topology", "fake_obj_numa_topology_cpy", "fake_old_db_topology", "fake_topo_obj", "fields", "get_fake_obj_numa_topology", "inst_cell", "jsonutils", "len", "mock", "mock_get", "mock_update", "numa_topology", "obj_cell", "object", "objects", "ovo_base", "primitive", "self", "set", "test_objects", "topo", "topo_cell", "topo_obj", "uuids", "versions", "zip", "copy\n", "One", "thread", "actually", "means", "no", "threads"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_events.py": ["e", "event", "lifecycle", "self", "str", "t", "test", "time", "uuid"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/vm_utils.py": ["CONF", "DD_BLOCKSIZE", "DISK", "DISK_CONFIGDRIVE", "DISK_CONFIGDRIVE_STR", "DISK_ISO", "DISK_ISO_STR", "DISK_RAW", "DISK_RAW_STR", "DISK_STR", "DISK_VHD", "DISK_VHD_STR", "EMPTY_BLOCK", "Exception", "False", "IOError", "ImageType", "IndexError", "KERNEL", "KERNEL_DIR", "KERNEL_STR", "KeyError", "LOG", "MAX_VDI_CHAIN_SIZE", "MBR_SIZE_BYTES", "MBR_SIZE_SECTORS", "None", "ONE_MEG", "OSError", "PROGRESS_INTERVAL_SECONDS", "RAMDISK", "RAMDISK_STR", "SECTOR_SIZE", "True", "VHD_SIZE_CHECK_FUDGE_FACTOR_GB", "XENAPI_POWER_STATE", "_", "_LE", "_LI", "_LW", "__name__", "_auto_configure_disk", "_check_vdi_size", "_child_vhds", "_choose_download_handler", "_clone_vdi", "_copy_partition", "_count_children", "_create_cached_image", "_create_cached_image_impl", "_create_kernel_image", "_default_download_handler", "_delete_snapshots_in_vdi_chain", "_dummy_vm", "_err", "_fetch_disk_image", "_fetch_image", "_fetch_vhd_image", "_find_cached_image", "_find_cached_images", "_find_iso_sr", "_find_sr", "_generate_disk", "_get_all_vdis_in_sr", "_get_dom0_ref", "_get_image_vdi_label", "_get_partitions", "_get_resize_func_name", "_get_rrd", "_get_rrd_server", "_get_sys_hypervisor_uuid", "_get_this_vm_ref", "_get_vdi_chain_size", "_get_vdi_other_config", "_get_vhd_parent_uuid", "_hypervisor_supports_device_id", "_ids", "_image_uses_bittorrent", "_import_migrate_ephemeral_disks", "_import_migrated_root_disk", "_import_migrated_vhds", "_is_vdi_a_snapshot", "_log_progress_if_required", "_make_partition", "_make_uuid_stack", "_method", "_mount_filesystem", "_mounted_processing", "_out", "_ref", "_remap_vbd_dev", "_repair_filesystem", "_resize_part_and_fs", "_safe_copy_vdi", "_safe_find_iso_sr", "_scan_sr", "_set_vdi_info", "_should_retry_unplug_vbd", "_size", "_snapshot_attached_here_impl", "_sparse_copy", "_stream_disk", "_strs", "_try_strip_base_mirror_from_vdi", "_type", "_vbd_get_rec", "_vdi_get_rec", "_vdi_get_uuid", "_vdi_get_virtual_size", "_vdi_resize", "_vdi_snapshot", "_vm_get_vbd_refs", "_wait_for_device", "_wait_for_vhd_coalesce", "_walk_vdi_chain", "_write_partition", "admin_password", "agent", "all_cached", "allowed_size", "args", "attempt", "bittorrent", "block_size", "boot_menu_url", "bootable", "brand", "bw", "bytes_read", "cache", "cache_images", "cache_vdi_ref", "cached_images", "cd_vdi", "cdb", "chain", "chain_label", "chain_number", "check_rescue", "children", "classmethod", "clone_ref", "cls", "complete_pct", "compression_pct", "config_drive", "configdrive", "context", "contextlib", "cpu_mask", "cpu_mask_list", "cpu_num", "create_vbd", "create_vdi", "create_vm", "ctxt", "cur_vdi_uuid", "current_mode", "data", "data_len", "default_handler", "description", "dest", "destroy_cached_vdi", "destroy_vbd", "destroy_vdi", "destroy_vm", "destroyed", "dev", "dev_path", "device", "device_config", "device_id", "diagnostics", "diags", "dict", "dir", "disk", "disk_format_map", "disk_image_type", "disk_sizes", "disk_type", "dns", "do_scan", "dom0", "domid", "downloaded", "dry_run", "dst", "dst_path", "dst_ref", "duration", "e", "empty", "end", "ensure_correct_host", "enumerate", "eph_vdis", "ephemeral_gb", "ephemeral_number", "ephemeral_vdi", "ephemeral_vdis", "err", "error", "exc", "exception", "excutils", "existing_other_config", "expat", "extra_md", "f", "file_obj", "filename", "files", "filter_criteria", "filter_pattern", "first_userdevice", "flags", "flavor", "float", "found_path", "fs_label", "fs_type", "fstype", "gateway", "generate_single_ephemeral", "get_ephemeral_disk_sizes", "get_power_state", "get_sr_path", "get_this_vm_uuid", "get_vdi_for_vm_safely", "glance_image", "good_parent_uuids", "greenthread", "handler", "hardware", "host", "host_free_mem", "hypervisor_version", "i", "image", "image_id", "image_meta", "image_service_func", "image_type", "image_type_id", "image_type_str", "image_utils", "imgmodel", "import_root", "imported_vhds", "importutils", "inst_md", "instance", "instance_metadata", "instance_name", "instance_name_label", "instance_uuid", "int", "ip", "ip_address", "is_a_snapshot", "is_vm_shutdown", "is_windows", "j", "kernel", "kernel_file", "key", "keys", "label", "label_number", "last_log_time", "last_row", "left", "left_to_allocate", "len", "level", "line", "lines", "list", "logging", "lookup", "mapper_path", "max", "max_attempts", "max_mem", "max_mem_bytes", "max_seconds", "max_size", "max_size_gb", "mem", "metadata", "min", "min_userdevice", "minidom", "mkfs_in_dom0", "mount_required", "msg", "n", "name", "name_label", "net", "netmask", "netutils", "network", "network_info", "network_model", "network_name", "new_disk_size", "new_gb", "new_prefix", "new_ref", "new_sectors", "new_size", "new_uuid", "new_vdi_ref", "node", "nova", "num", "num_attempt", "num_blocks", "num_cpu", "number_found", "number_of_snapshots", "obj_fields", "object", "offset", "old_prefix", "old_sectors", "old_snapshots_only", "open", "orig_dev", "os", "os_type", "osvol", "other_config", "out", "params", "parent_uuid", "parent_vdi_uuid", "partition", "partition_end", "partition_path", "partition_start", "partitions", "pbd_rec", "pbd_rec_host", "pbd_ref", "pool_ref", "possible_snapshot_parents", "post_snapshot_callback", "power_state", "primary_first", "primary_last", "processutils", "r1_2_or_above", "r6_or_above", "ramdisk", "ramdisk_file", "range", "read_only", "reason", "rec", "rec_uuid", "recs", "ref", "remapped_dev", "resize_func_name", "result", "root_uuid", "root_vdi", "root_vdi_rec", "rows", "rrd", "safe_destroy_vdis", "safe_find_sr", "scan_default_sr", "seq_num", "server", "session", "set", "should_remap", "six", "size", "size_bytes", "size_gb", "size_mb", "sizes", "skipped_bytes", "sn", "snapshot_attached_here", "snapshot_ref", "snapshot_uuid", "snapshot_uuids", "sr_path", "sr_rec", "sr_ref", "sr_type", "sr_uuid", "src", "src_path", "src_ref", "start", "start_time", "state", "str", "strutils", "subnet", "swap_mb", "sys_meta", "task_states", "this_vm_ref", "this_vm_uuid", "time", "timeutils", "tmp_file", "tmp_path", "tmpdir", "tokens", "torrent_images", "total_size_gb", "type", "units", "unplug_vbd", "unpluggable", "urllib", "urlparse", "use_pv_kernel", "userdevice", "utils", "uuidutils", "v", "value", "vbd", "vbd_other_config", "vbd_rec", "vbd_ref", "vbd_refs", "vbd_type", "vcpu_params", "vcpu_weight", "vcpus", "vdi", "vdi_attached", "vdi_label", "vdi_rec", "vdi_ref", "vdi_refs", "vdi_role", "vdi_size", "vdi_size_bytes", "vdi_to_clone_ref", "vdi_to_copy_ref", "vdi_type", "vdi_uuid", "vdi_uuid_chain", "vdi_uuid_list", "vdi_uuids", "vdis", "version", "version_as_string", "versionutils", "vfs", "vfsimpl", "vhd_file", "vhd_file_size", "vif", "viridian", "virtual_size", "vm", "vm_key", "vm_power_state", "vm_power_state_int", "vm_rec", "vm_ref", "vm_refs", "vm_uuid", "vm_vdi_rec", "vm_vdi_ref", "vms", "volume_utils", "xapi_state", "xcp", "xenserver", "xml", "xs_url", "zip", "Get", "the", "role", "played", "by", "the", "image,", "based", "on", "its", "type.\nDestroys", "a", "VM", "record.\nDestroy", "VBD", "from", "host", "database.\nCreate", "a", "VBD", "record", "and", "returns", "its", "reference.\nCreate", "an", "empty", "VBD,", "then", "insert", "the", "CD.\nTries", "to", "destroy", "the", "requested", "VDIs,", "but", "ignores", "any", "errors.\nCreate", "a", "VDI", "record", "and", "returns", "its", "reference.\nClones", "a", "VDI", "and", "return", "the", "new", "VDIs", "reference.\nRetrieves", "the", "primary", "VDI", "for", "a", "VM.\nSee", "if", "there", "is", "an", "snapshot", "present", "that", "should", "be", "removed.\nReturn", "a", "dict(uuid=vdi_ref)", "representing", "all", "cached", "images.\nReturns", "the", "vdi-ref", "of", "the", "cached", "image.\nLook", "for", "the", "VDIs", "that", "are", "attached", "to", "the", "VM.\nFill", "record", "with", "VM", "status", "information.\nCompile", "VM", "diagnostics", "data.\nLooks", "for", "the", "system", "default", "SR", "and", "triggers", "a", "re-scan.\nReturn", "the", "storage", "repository", "to", "hold", "VM", "images.\nReturn", "the", "storage", "repository", "to", "hold", "ISO", "images.\nReturn", "server's", "scheme", "and", "address", "to", "use", "for", "retrieving", "RRD", "XMLs.\nReturn", "the", "VM", "RRD", "XML", "as", "a", "string.\nReturn", "opaqueRef", "for", "all", "the", "vdis", "which", "live", "on", "sr.\nYield", "vdi_recs", "for", "each", "element", "in", "a", "VDI", "chain.\nEnsure", "VDI", "is", "a", "snapshot,", "and", "not", "cached", "image.\nWait", "for", "device", "node", "to", "appear.\nUnplug", "any", "instance", "VDIs", "left", "after", "an", "unclean", "restart.\nReturn", "partition", "information", "(num,", "size,", "type)", "for", "a", "device.\nCopy", "data,", "skipping", "long", "runs", "of", "zeros", "to", "create", "a", "sparse", "file.\nmounts", "the", "device", "specified", "by", "dev_path", "in", "dir.\nCallback", "which", "runs", "with", "the", "image", "VDI", "attached.\nMove", "and", "possibly", "link", "VHDs", "via", "the", "XAPI", "plugin.\nSet", "the", "pci", "key", "of", "other-config", "parameter", "to", "params.", "Fudge", "factor", "to", "allow", "for", "the", "VHD", "chain", "to", "be", "slightly", "larger", "than\n", "the", "partitioned", "space.", "Otherwise,", "legitimate", "images", "near", "their\n", "maximum", "allowed", "size", "can", "fail", "on", "build", "with", "FlavorDiskSmallerThanImage.\n", "NOTE:", "device_id", "should", "be", "2", "for", "windows", "VMs", "which", "run", "new", "xentools\n", "(>=6.1).", "Refer", "to", "http://support.citrix.com/article/CTX135099", "for", "more\n", "information.\n", "The", "device_id", "is", "required", "to", "be", "set", "for", "hypervisor", "version", "6.1", "and", "above\n", "NOTE(johngarbutt)", "bug", "in", "XenServer", "6.1", "and", "6.2", "means\n", "we", "need", "to", "specify", "both", "weight", "and", "cap", "for", "either", "to", "apply\n", "Complete", "VM", "configuration", "record", "according", "to", "the", "image", "type\n", "non-raw/raw", "with", "PV", "kernel/raw", "in", "HVM", "mode\n", "1.", "Kernel", "explicitly", "passed", "in,", "use", "that\n", "2.", "Use", "kernel", "within", "the", "image\n", "3.", "Using", "hardware", "virtualization\n", "Retry", "if", "unplug", "failed", "with", "DEVICE_DETACH_REJECTED\n", "For", "reasons", "which", "we", "don't", "understand,\n", "we're", "seeing", "the", "device", "still", "in", "use,", "even", "when", "all", "processes\n", "using", "the", "device", "should", "be", "dead.\n", "Since", "XenServer", "6.2,", "we", "also", "need", "to", "retry", "if", "we", "get\n", "INTERNAL_ERROR,", "as", "that", "error", "goes", "away", "when", "you", "retry.\n", "make", "sure", "that", "perform", "at", "least", "once\n", "set", "osvol=True", "in", "other-config", "to", "indicate", "this", "is", "an\n", "attached", "nova", "(or", "cinder)", "volume\n", "destroy_vbd()", "will", "log", "error\n", "rescan", "to", "discover", "new", "VHDs\n", "create_vdi", "may", "be", "called", "simply", "while", "creating", "a", "volume\n", "hence", "information", "about", "instance", "may", "or", "may", "not", "be", "present\n", "Convention", "dictates", "the", "primary", "VDI", "will", "be", "userdevice", "0\n", "NOTE(johngarbutt)", "part", "of", "workaround", "for", "XenServer", "bug", "CA-98606\n", "ensure", "garbage", "collector", "has", "been", "run\n", "impl", "method", "allow", "easier", "patching", "for", "tests\n", "Memorize", "the", "VDI", "chain", "so", "we", "can", "poll", "for", "coalesce\n", "clean", "up", "after", "any", "interrupted", "snapshot", "attempts\n", "When", "the", "VDI", "snapshot", "is", "taken", "a", "new", "parent", "is", "introduced.\n", "If", "we", "have", "taken", "a", "snapshot", "before,", "the", "new", "parent", "can", "be", "coalesced.\n", "We", "need", "to", "wait", "for", "this", "to", "happen", "before", "trying", "to", "copy", "the", "chain.\n", "TODO(johngarbut)", "we", "need", "to", "check", "the", "snapshot", "has", "been", "coalesced\n", "now", "its", "associated", "VDI", "has", "been", "deleted.\n", "NOTE(bobball):", "There", "can", "only", "be", "one", "PBD", "for", "a", "host/SR", "pair,", "but", "path", "is\n", "not", "always", "present", "-", "older", "versions", "of", "XS", "do", "not", "set", "it.\n", "Unused-Only:", "Search", "for", "siblings\n", "Chain", "length", "greater", "than", "two", "implies", "a", "VM", "must", "be", "holding", "a", "ref", "to\n", "the", "base-copy", "(otherwise", "it", "would", "have", "coalesced),", "so", "consider", "this\n", "cached", "image", "used.\n", "Siblings", "imply", "cached", "image", "is", "used\n", "To", "maintain", "backwards", "compatibility.", "All", "recent", "versions\n", "should", "use", "VDI.resize\n", "For", "resize", "up.", "Simple", "VDI", "resize", "will", "do", "the", "trick\n", "NOTE(johngarbutt):", "we", "should", "never", "get", "here\n", "but", "if", "we", "don't", "raise", "an", "exception,", "a", "user", "might", "be", "able", "to", "use\n", "more", "storage", "than", "allowed", "by", "their", "chosen", "instance", "flavor\n", "Resize", "partition", "and", "filesystem", "down\n", "Create", "new", "VDI\n", "NOTE(johannes):", "No", "resizing", "allowed", "for", "rescue", "instances,", "so\n", "using", "instance['name']", "is", "safe", "here\n", "Manually", "copy", "contents", "over\n", "NOTE(bobball)", "If", "this", "runs", "in", "Dom0,", "parted", "will", "error", "trying\n", "to", "re-read", "the", "partition", "table", "and", "return", "a", "generic", "error\n", "Need", "to", "refresh", "the", "partitions\n", "Sometimes", "the", "partition", "gets", "created", "under", "/dev/mapper,", "depending\n", "on", "the", "setup", "in", "dom0.\n", "1.", "Create", "VDI\n", "2.", "Attach", "VDI", "to", "Dom0", "(VBD", "hotplug)\n", "3.", "Create", "partition\n", "3.a.", "dom0", "does", "not", "support", "nfs/ext4,", "so", "may", "have", "to", "mkfs", "in", "domU\n", "4.", "Create", "VBD", "between", "instance", "VM", "and", "VDI\n", "NOTE(jk0):", "We", "use", "a", "FAT32", "filesystem", "for", "the", "Windows", "swap\n", "partition", "because", "that", "is", "what", "parted", "supports.\n", "TODO(johngarbutt)", "need", "to", "move", "DEVICE_EPHEMERAL", "from", "vmops", "to", "use", "it", "here\n", "NOTE(johngarbutt):", "max", "possible", "size", "of", "a", "VHD", "disk", "is", "2043GB\n", "XAPI", "can", "only", "import", "a", "VHD", "file,", "so", "convert", "to", "vhd", "format\n", "Determine", "if", "the", "image", "is", "cacheable\n", "Fetch", "(and", "cache)", "the", "image\n", "NOTE(sirp):", "The", "XenAPI", "plugins", "run", "under", "Python", "2.4\n", "which", "does", "not", "have", "the", "`uuid`", "module.", "To", "work", "around", "this,\n", "we", "generate", "the", "uuids", "here", "(under", "Python", "2.6+)", "and\n", "pass", "them", "as", "arguments\n", "TODO(sirp):", "This", "should", "be", "configurable", "like", "upload_handler\n", "Using", "type()", "instead", "of", "isinstance()", "so", "instance", "of", "subclass", "doesn't\n", "test", "as", "equivalent\n", "Ensure", "we", "can", "see", "the", "import", "VHDs", "as", "VDIs\n", "root_gb=0", "indicates", "that", "we're", "disabling", "size", "checks\n", "FIXME(sirp):", "Since", "the", "Glance", "plugin", "seems", "to", "be", "required", "for", "the\n", "VHD", "disk,", "it", "may", "be", "worth", "using", "the", "plugin", "for", "both", "VHD", "and", "RAW", "and\n", "DISK", "restores\n", "Make", "room", "for", "MBR.\n", "From", "this", "point", "we", "have", "a", "VDI", "on", "Xen", "host;\n", "If", "anything", "goes", "wrong,", "we", "need", "to", "remember", "its", "uuid.\n", "We", "need", "to", "invoke", "a", "plugin", "for", "copying", "the\n", "content", "of", "the", "VDI", "into", "the", "proper", "path.\n", "Let", "the", "plugin", "copy", "the", "correct", "number", "of", "bytes.\n", "Remove", "the", "VDI", "as", "it", "is", "not", "needed", "anymore.\n", "We", "look", "for", "XenAPI", "and", "OS", "failures.\n", "disk_image_type", "specific", "default", "for", "backwards", "compatibility\n", "most", "images", "run", "OK", "as", "HVM\n", "Firstly", "we", "get", "the", "VBDs,", "then", "the", "VDIs.\n", "TODO(Armando):", "do", "we", "leave", "the", "read-only", "devices?\n", "Test", "valid", "VDI\n", "This", "is", "not", "an", "attached", "volume\n", "As", "mounting", "the", "image", "VDI", "is", "expensive,", "we", "only", "want", "do", "it", "once,\n", "if", "at", "all,", "so", "determine", "whether", "it's", "required", "first,", "and", "then", "do\n", "everything\n", "Provide", "the", "last", "update", "of", "the", "information\n", "Create", "a", "list", "of", "the", "diagnostic", "keys", "(in", "their", "order)\n", "Name", "and", "Value\n", "Read", "the", "last", "row", "of", "the", "first", "RRA", "to", "get", "the", "latest", "info\n", "NOTE(johngarbutt)", "xenapi", "will", "collapse", "any", "duplicate", "requests\n", "for", "SR.scan", "if", "there", "is", "already", "a", "scan", "in", "progress.\n", "However,", "we", "don't", "want", "that,", "because", "the", "scan", "may", "have", "started\n", "before", "we", "modified", "the", "underlying", "VHDs", "on", "disk", "through", "a", "plugin.\n", "Using", "our", "own", "mutex", "will", "reduce", "cases", "where", "our", "periodic", "SR", "scan\n", "in", "host.update_status", "starts", "racing", "the", "sr.scan", "after", "a", "plugin", "call.\n", "oops,", "flag", "is", "invalid\n", "No", "SR", "found!\n", "Check", "to", "make", "sure", "the", "record", "still", "exists.", "It", "may", "have\n", "been", "deleted", "between", "the", "get_all", "call", "and", "get_rec", "call\n", "Search", "for", "any", "other", "vdi", "which", "has", "the", "same", "parent", "as", "us", "to", "work", "out\n", "whether", "we", "have", "siblings", "and", "therefore", "if", "coalesce", "is", "possible\n", "If", "the", "base", "disk", "was", "a", "leaf", "node,", "there", "will", "be", "no", "coalescing\n", "after", "a", "VDI", "snapshot.\n", "If", "the", "parent", "of", "the", "original", "disk", "has", "other", "children,\n", "there", "will", "be", "no", "coalesce", "because", "of", "the", "VDI", "snapshot.\n", "For", "example,", "the", "first", "snapshot", "for", "an", "instance", "that", "has", "been\n", "spawned", "from", "a", "cached", "image,", "will", "not", "coalesce,", "because", "of", "this", "rule.\n", "When", "the", "VDI", "snapshot", "is", "taken,", "a", "new", "parent", "is", "created.\n", "Assuming", "it", "is", "not", "one", "of", "the", "above", "cases,", "that", "new", "parent\n", "can", "be", "coalesced,", "so", "we", "need", "to", "wait", "for", "that", "to", "happen.\n", "Remove", "the", "leaf", "node", "from", "list,", "to", "get", "possible", "good", "parents\n", "when", "the", "coalesce", "has", "completed.\n", "Its", "possible", "that", "other", "coalesce", "operation", "happen,", "so", "we", "need\n", "to", "consider", "the", "full", "chain,", "rather", "than", "just", "the", "most", "recent", "parent.\n", "NOTE(sirp):", "This", "rescan", "is", "necessary", "to", "ensure", "the", "VM's", "`sm_config`\n", "matches", "the", "underlying", "VHDs.\n", "This", "can", "also", "kick", "XenServer", "into", "performing", "a", "pending", "coalesce.\n", "NOTE(sirp):", "This", "hack", "can", "go", "away", "when", "we", "pull", "support", "for", "Maverick\n", "Belongs", "to", "an", "instance", "and", "probably", "left", "over", "after", "an\n", "unclean", "restart\n", "Make", "sure", "we", "are", "running", "as", "a", "domU.\n", "As", "we", "can", "not", "have", "filesystems", "mounted", "here", "(we", "cannot\n", "destroy", "the", "VBD", "with", "filesystems", "mounted),", "it", "is", "not\n", "useful", "to", "call", "sync.\n", "destroy_vbd()", "will", "log", "error\n", "UUID", "is", "the", "control", "domain", "running", "on", "this", "host\n", "Some", "guest", "kernels", "(without", "5c13f8067745efc15f6ad0158b58d57c44104c25)\n", "cannot", "read", "from", "uuid", "after", "a", "reboot.", "Fall", "back", "to", "trying", "xenstore.\n", "See", "https://bugs.launchpad.net/ubuntu/+source/xen-api/+bug/1081182\n", "Exit", "Code", "1", "=", "File", "system", "errors", "corrected\n", "2", "=", "File", "system", "errors", "corrected,", "system", "needs", "a", "reboot\n", "Replay", "journal", "if", "FS", "wasn't", "cleanly", "unmounted\n", "Remove", "ext3", "journal", "(making", "it", "ext2)\n", "Resizing", "down,", "resize", "filesystem", "before", "partition", "resize\n", "Resizing", "up,", "resize", "filesystem", "after", "partition", "resize\n", "Add", "back", "journal\n", "NOTE(sirp):", "we", "need", "read/write", "access", "to", "the", "devices;", "since", "we", "don't", "have\n", "the", "luxury", "of", "shelling", "out", "to", "a", "sudo'd", "command,", "we", "temporarily", "take\n", "ownership", "of", "the", "devices.\n", "Part", "of", "disk", "taken", "up", "by", "MBR\n", "NB:", "Partition", "1", "hardcoded\n", "Mount", "only", "Linux", "filesystems,", "to", "avoid", "disturbing", "NTFS", "images\n", "This", "try", "block", "ensures", "that", "the", "umount", "occurs\n", "TODO(berrange)", "passing", "in", "a", "None", "filename", "is\n", "rather", "dubious.", "We", "shouldn't", "be", "re-implementing\n", "the", "mount/unmount", "logic", "here", "either,", "when", "the\n", "VFSLocalFS", "impl", "has", "direct", "support", "for", "mount\n", "and", "unmount", "handling", "if", "it", "were", "passed", "a\n", "non-None", "filename\n", "for", "xenapi,", "we", "don't", "'inject'", "admin_password", "here,\n", "it's", "handled", "at", "instance", "startup", "time,", "nor", "do", "we\n", "support", "injecting", "arbitrary", "files", "here.\n", "TODO(johngarbutt)", "tidy", "up", "plugin", "params\n", "Now", "we", "rescan", "the", "SR", "so", "we", "find", "the", "VHDs\n", "Set", "name-label", "so", "we", "can", "find", "if", "we", "need", "to", "clean", "up", "a", "failed", "migration\n", "TODO(johngarbutt)", "tidy", "up", "plugin", "params\n", "Unpack", "IPv4", "network", "info"], "/Users/mehranhassani/repos/nova/nova/cmd/manage.py": ["AccountCommands", "AgentBuildCommands", "ApiDbCommands", "CATEGORIES", "CONF", "CellCommands", "CellV2Commands", "DbCommands", "Exception", "False", "FloatingIpCommands", "GetLogCommands", "HostCommands", "IPython", "ImportError", "KeyboardInterrupt", "NetworkCommands", "None", "ProjectCommands", "QUOTAS", "ShellCommands", "True", "ValueError", "_", "_EXTRA_DEFAULT_LOG_LEVELS", "_fmt", "add_command_parsers", "address", "addresses", "admin_context", "agent_build", "agent_build_ref", "aggregate_obj", "architecture", "args", "availability_zones", "bool", "bpython", "bridge", "bridge_interface", "broker_hostname", "broker_hosts", "broker_port", "build_request_obj", "buildlist", "by_hypervisor", "category_opt", "caught_exception", "cell", "cell0_default_connection", "cell0_mapping", "cell_mapping", "cell_mapping_uuid", "cell_mappings", "cell_name", "cell_type", "cell_uuid", "cells", "cfg", "cidr", "cidr_v6", "cmd_common", "code", "compile", "compute", "compute_host", "compute_node", "compute_nodes", "config", "context", "count", "ctxt", "database_connection", "db", "db_exc", "dbc", "decorator", "delete", "description", "dict", "dis_host", "dis_project", "dns1", "dns2", "done", "e", "ec2utils", "embed", "entries", "enumerate", "error_found", "error_msg", "exc", "exception", "ext", "f", "file", "filters", "fixed_cidr", "fixed_ip", "fixed_range", "flavor_obj", "float", "floating_ip", "floating_ips", "fmt", "fn", "fn_args", "fn_kwargs", "found", "fragment", "functools", "gateway", "gateway_v6", "globals", "h", "hits", "host", "host_mapping", "hostname", "hosts", "hypervisor", "importutils", "index", "info", "instance", "instance_group_obj", "instance_obj", "instance_uuid", "instances", "int", "interface", "ip_range", "ips", "is_parent", "k", "key", "keypair_obj", "keys", "kwargs", "label", "len", "limit", "line", "linenum", "lines", "local_cell", "locals", "log_file", "logging", "logs", "map_all", "mapping", "marker", "marker_mapping", "marker_project_id", "max_count", "max_rows", "maximum", "md5hash", "messaging", "migration", "migration_info", "migration_meth", "migrations", "minimum", "missing_nodes", "msg", "multi_host", "name", "net", "net_manager", "netaddr", "netloc", "network", "network_size", "networks", "next_marker", "nova", "num_entries", "num_networks", "object", "object_id", "objects", "online_migrations", "open", "os", "password", "path", "pool", "port", "prettytable", "print", "print_format", "print_name", "priority", "project", "project_id", "query", "quiet", "quota", "ran", "readline", "reason", "records", "records_found", "request_spec", "ret", "root", "rpc", "run", "s", "say", "scheme", "self", "services", "set", "settable_quotas", "shell", "six", "sorted", "srv", "staticmethod", "str", "string", "sum", "sys", "t", "table_name", "table_to_rows_archived", "traceback", "transport_hosts", "transport_url", "unlimited", "until_complete", "url", "urlparse", "user_id", "username", "utils", "uuid", "uuidutils", "v", "validate_network_plugin", "value", "values", "verbose", "version", "virtual_host", "vlan", "vlan_start", "vpn_start", "woffset", "wscale", "x", "zone", "Runs", "a", "Python", "interactive", "interpreter.\nClass", "for", "managing", "projects.\nClass", "for", "managing", "floating", "IP.\nCreates", "floating", "IPs", "for", "zone", "by", "range.\nDeletes", "floating", "IPs", "by", "range.\nDecorator", "to", "validate", "the", "network", "plugin.\nClass", "for", "managing", "networks.\nCreates", "fixed", "IPs", "for", "host", "by", "range.\nList", "all", "created", "networks.\nDeletes", "a", "network.\nList", "hosts.\nClass", "for", "managing", "the", "main", "database.\nSync", "the", "database", "up", "to", "the", "most", "recent", "version.\nPrint", "the", "current", "database", "version.\nClass", "for", "managing", "the", "api", "database.\nSync", "the", "database", "up", "to", "the", "most", "recent", "version.\nPrint", "the", "current", "database", "version.\nClass", "for", "managing", "agent", "builds.\nCreates", "a", "new", "agent", "build.\nDeletes", "an", "existing", "agent", "build.\nUpdate", "an", "existing", "agent", "build.\nGet", "logging", "information.\nGet", "all", "of", "the", "errors", "from", "the", "log", "files.\nGet", "<num_entries>", "of", "the", "nova", "syslog", "events.\nCommands", "for", "managing", "cells.\nReturns", "a", "list", "of", "oslo.messaging.TransportHost", "objects.\nCommands", "for", "managing", "cells", "v2.\nParse", "options", "and", "call", "the", "appropriate", "class/method.", "Interactive", "shell", "based", "on", "Django:\n\n", "Copyright", "(c)", "2005,", "the", "Lawrence", "Journal-World\n", "All", "rights", "reserved.\n\n", "Redistribution", "and", "use", "in", "source", "and", "binary", "forms,", "with", "or", "without\n", "modification,", "are", "permitted", "provided", "that", "the", "following", "conditions", "are", "met:\n\n", "1.", "Redistributions", "of", "source", "code", "must", "retain", "the", "above", "copyright", "notice,\n", "this", "list", "of", "conditions", "and", "the", "following", "disclaimer.\n\n", "2.", "Redistributions", "in", "binary", "form", "must", "reproduce", "the", "above", "copyright\n", "notice,", "this", "list", "of", "conditions", "and", "the", "following", "disclaimer", "in", "the\n", "documentation", "and/or", "other", "materials", "provided", "with", "the", "distribution.\n\n", "3.", "Neither", "the", "name", "of", "Django", "nor", "the", "names", "of", "its", "contributors", "may", "be\n", "used", "to", "endorse", "or", "promote", "products", "derived", "from", "this", "software", "without\n", "specific", "prior", "written", "permission.\n\n", "THIS", "SOFTWARE", "IS", "PROVIDED", "BY", "THE", "COPYRIGHT", "HOLDERS", "AND", "CONTRIBUTORS\n", "\"AS", "IS\"", "AND", "ANY", "EXPRESS", "OR", "IMPLIED", "WARRANTIES,", "INCLUDING,", "BUT", "NOT\n", "LIMITED", "TO,", "THE", "IMPLIED", "WARRANTIES", "OF", "MERCHANTABILITY", "AND", "FITNESS", "FOR\n", "A", "PARTICULAR", "PURPOSE", "ARE", "DISCLAIMED.", "IN", "NO", "EVENT", "SHALL", "THE", "COPYRIGHT\n", "OWNER", "OR", "CONTRIBUTORS", "BE", "LIABLE", "FOR", "ANY", "DIRECT,", "INDIRECT,", "INCIDENTAL,\n", "SPECIAL,", "EXEMPLARY,", "OR", "CONSEQUENTIAL", "DAMAGES", "(INCLUDING,", "BUT", "NOT\n", "LIMITED", "TO,", "PROCUREMENT", "OF", "SUBSTITUTE", "GOODS", "OR", "SERVICES;", "LOSS", "OF", "USE,\n", "DATA,", "OR", "PROFITS;", "OR", "BUSINESS", "INTERRUPTION)", "HOWEVER", "CAUSED", "AND", "ON", "ANY\n", "THEORY", "OF", "LIABILITY,", "WHETHER", "IN", "CONTRACT,", "STRICT", "LIABILITY,", "OR", "TORT\n", "(INCLUDING", "NEGLIGENCE", "OR", "OTHERWISE)", "ARISING", "IN", "ANY", "WAY", "OUT", "OF", "THE", "USE\n", "OF", "THIS", "SOFTWARE,", "EVEN", "IF", "ADVISED", "OF", "THE", "POSSIBILITY", "OF", "SUCH", "DAMAGE.\n", "Decorators", "for", "actions\n", "Ipython", "<", "0.11\n", "Explicitly", "pass", "an", "empty", "list", "as", "arguments,", "because\n", "otherwise", "IPython", "would", "use", "sys.argv", "from", "this", "script.\n", "no", "IPython", "module\n", "Try", "activating", "rlcompleter,", "because", "it's", "handy.\n", "We", "don't", "have", "to", "wrap", "the", "following", "import", "in", "a", "'try',\n", "because", "we", "already", "know", "'readline'", "was", "imported", "successfully.\n", "if", "key", "is", "None,", "that", "means", "we", "need", "to", "show", "the", "quotas", "instead\n", "of", "updating", "them\n", "Retrieve", "the", "quota", "after", "update\n", "NOTE(dripton):", "If", "we", "generate", "a", "million", "IPs", "and", "put", "them", "in\n", "the", "database,", "the", "system", "will", "slow", "to", "a", "crawl", "and/or", "run\n", "out", "of", "memory", "and", "crash.", "This", "is", "clearly", "a", "misconfiguration.\n", "NOTE(simplylizz):", "Maybe", "logging", "would", "be", "better", "here\n", "instead", "of", "printing,", "but", "logging", "isn't", "used", "here", "and", "I\n", "don't", "know", "why.\n", "NOTE(gmann):", "These", "checks", "are", "moved", "here", "as", "API", "layer", "does", "all", "these\n", "validation", "through", "JSON", "schema.\n", "Since", "network_get_all", "can", "throw", "exception.NoNetworksFound\n", "for", "this", "command", "to", "show", "a", "nice", "result,", "this", "exception\n", "should", "be", "caught", "and", "handled", "as", "such.\n", "delete", "the", "network\n", "User", "can", "choose", "the", "following", "actions", "each", "for", "project", "and", "host.\n", "1)", "Associate", "(set", "not", "None", "value", "given", "by", "project/host", "parameter)\n", "2)", "Disassociate", "(set", "None", "by", "disassociate", "parameter)\n", "3)", "Keep", "unchanged", "(project/host", "key", "is", "not", "added", "to", "'net')\n", "The", "--disassociate-X", "are", "boolean", "options,", "but", "if", "they", "user\n", "mistakenly", "provides", "a", "value,", "it", "will", "be", "used", "as", "a", "positional", "argument\n", "and", "be", "erroneously", "interpreted", "as", "some", "other", "parameter", "(e.g.\n", "a", "project", "instead", "of", "host", "value).", "The", "safest", "thing", "to", "do", "is", "error-out\n", "with", "a", "message", "indicating", "that", "there", "is", "probably", "a", "problem", "with\n", "how", "the", "disassociate", "modifications", "are", "being", "used.\n", "Added", "in", "Mitaka\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Newton\n", "Added", "in", "Ocata\n", "NOTE(mriedem):", "This", "online", "migration", "is", "going", "to", "be", "backported", "to\n", "Newton", "also", "since", "it's", "an", "upgrade", "issue", "when", "upgrading", "from", "Mitaka.\n", "NOTE(mdoff):", "Multiple", "cells", "not", "yet", "implemented.", "Currently\n", "fanout", "only", "looks", "for", "cell0.\n", "noqa\n", "noqa\n", "noqa\n", "NOTE(danms):", "Return", "nonzero", "if", "we", "archived", "something\n", "Don't", "print", "anything", "for", "0", "hits\n", "check", "to", "see", "if", "we", "didn't", "find", "anything\n", "Either", "broker-hosts", "or", "hostname", "should", "be", "set\n", "Set", "up", "the", "transport", "URL\n", "Run", "migrations", "so", "cell0", "is", "usable\n", "There", "are", "no", "compute", "hosts", "which", "means", "no", "cell_mapping", "was\n", "created.", "This", "should", "also", "mean", "that", "there", "are", "no", "instances.\n", "If", "no", "database", "connection", "is", "provided", "one", "is", "generated\n", "based", "on", "the", "API", "database", "connection", "url.\n", "The", "cell0", "database", "will", "use", "the", "same", "database", "scheme", "and\n", "netloc", "as", "the", "API", "database,", "with", "a", "related", "path.\n", "A", "transport", "url", "of", "'none://'", "is", "provided", "for", "cell0.", "RPC", "should", "not\n", "be", "used", "to", "access", "cell0", "objects.", "Cells", "transport", "switching", "will\n", "ignore", "any", "'none'", "transport", "type.\n", "We've", "hit", "the", "end", "of", "the", "instances", "table\n", "Validate", "the", "cell", "exists,", "this", "will", "raise", "if", "not\n", "Check", "for", "a", "marker", "from", "a", "previous", "run\n", "There", "should", "be", "only", "one", "here\n", "Don't", "judge", "me.", "There's", "already", "an", "InstanceMapping", "with", "this", "UUID\n", "so", "the", "marker", "needs", "to", "be", "non", "destructively", "modified.\n", "First,", "try", "to", "detect", "if", "a", "CellMapping", "has", "already", "been", "created\n", "Re-using", "the", "existing", "UUID", "in", "case", "there", "is", "already", "a", "mapping\n", "NOTE(sbauza):", "There", "could", "be", "possibly", "multiple", "CellMappings\n", "if", "the", "operator", "provides", "another", "configuration", "file", "and", "moves\n", "the", "hosts", "to", "another", "cell", "v2,", "but", "that's", "not", "really", "something\n", "we", "should", "support.\n", "Create", "the", "cell", "mapping", "in", "the", "API", "database\n", "Pull", "the", "hosts", "from", "the", "cell", "database", "and", "create", "the", "host", "mappings\n", "online_data_migrations", "established", "a", "pattern", "of", "0", "meaning", "everything\n", "is", "done,", "1", "means", "run", "again", "to", "do", "more", "work.", "This", "command", "doesn't", "do\n", "partial", "work", "so", "0", "is", "appropriate.\n", "TODO(alaski):", "If", "this", "is", "not", "run", "on", "a", "host", "configured", "to", "use", "the", "API\n", "database", "most", "of", "the", "lookups", "below", "will", "fail", "and", "may", "not", "provide", "a\n", "great", "error", "message.", "Add", "a", "check", "which", "will", "raise", "a", "useful", "error\n", "message", "about", "running", "this", "from", "an", "API", "host."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_image_metadata.py": ["CHK_QUOTA_STR", "IMAGE_FIXTURES", "ImageMetaDataTestV21", "ImageMetadataControllerV239", "None", "True", "_get_mocked", "_quota_mocked", "body", "controller_class", "copy", "exception", "expected", "expected_output", "fakes", "get_all_mocked", "get_image_123", "get_mocked", "image_fixtures", "image_id", "image_metadata_v21", "invalid_request", "jsonutils", "len", "mock", "mock_result", "quota_mocked", "req", "res", "res_dict", "self", "super", "test", "update_mocked", "webob", "existing", "meta\n", "new", "meta\n", "replace", "meta\n", "changed", "meta\n", "see", "nova.tests.unit.api.openstack.fakes:_make_image_fixtures\n", "see", "nova.tests.unit.api.openstack.fakes:_make_image_fixtures"], "/Users/mehranhassani/repos/nova/nova/conf/spice.py": ["ALL_OPTS", "CLI_OPTS", "False", "True", "cfg", "conf", "spice_opt_group"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/346_remove_scheduled_at_column.py": ["MetaData", "Table", "True", "column_name", "hasattr", "instances", "meta", "migrate_engine", "shadow_instances", "Remove", "scheduled_at", "column", "from", "instances", "table"], "/Users/mehranhassani/repos/nova/nova/compute/build_results.py": ["ACTIVE", "FAILED", "RESCHEDULED", "Instance", "is", "running\n", "Instance", "failed", "to", "build", "and", "was", "not", "rescheduled\n", "Instance", "failed", "to", "build,", "but", "was", "rescheduled"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/scheduler_hints.py": ["True", "_hints", "parameter_types", "server_create", "NOTE:", "The", "value", "of", "'different_host'", "is", "the", "set", "of", "server\n", "uuids", "where", "a", "new", "server", "is", "scheduled", "on", "a", "different", "host.\n", "A", "user", "can", "specify", "one", "server", "as", "string", "parameter", "and", "should\n", "specify", "multiple", "servers", "as", "array", "parameter", "instead.\n", "NOTE:", "The", "value", "of", "'different_host'", "is", "the", "set", "of", "server\n", "uuids", "where", "a", "new", "server", "is", "scheduled", "on", "the", "same", "host.\n", "NOTE:", "The", "value", "of", "'query'", "is", "converted", "to", "dict", "data", "with\n", "jsonutils.loads()", "and", "used", "for", "filtering", "hosts.\n", "NOTE:", "The", "value", "of", "'target_cell'", "is", "the", "cell", "name", "what", "cell\n", "a", "new", "server", "is", "scheduled", "on.\n", "NOTE:", "As", "this", "Mail:\n", "http://lists.openstack.org/pipermail/openstack-dev/2015-June/067996.html\n", "pointed", "out", "the", "limit", "the", "scheduler-hints", "in", "the", "API", "is", "problematic.", "So\n", "relax", "it."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/floating_ip_pools.py": ["ALIAS", "FloatingIPPoolsController", "MAX_PROXY_API_SUPPORT_VERSION", "_translate_floating_ip_pools_view", "_translate_floating_ip_view", "alias", "context", "extensions", "fip_policies", "name", "network", "pool_name", "pools", "req", "resource", "self", "super", "version", "wsgi", "The", "Floating", "IP", "Pool", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "a", "list", "of", "pools.\nFloating", "IPs", "support."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_keypairs.py": ["ADMIN_API", "False", "KeyPairsSampleJsonTest", "KeyPairsV210SampleJsonTest", "KeyPairsV235SampleJsonTest", "None", "True", "api_sample_base", "dict", "expected_delete_status_code", "expected_post_status_code", "fake_crypto", "i", "key_name", "keypair_obj", "keypair_type", "keypair_user1", "keypair_user2", "keypairs", "keypairs_user1", "keypairs_user2", "kp_name", "kp_names", "kwargs", "microversion", "params", "public_key", "range", "response", "sample_dir", "scenarios", "self", "sorted", "subs", "super", "user", "uuids", "uuidutils", "vanilla_regexes", "Get", "api", "sample", "of", "key", "pairs", "post", "request.\nGet", "api", "sample", "of", "key", "pairs", "post", "request.", "TODO(sdague):", "this", "is", "only", "needed", "because", "we", "randomly", "choose", "the\n", "uuid", "each", "time.\n", "NOTE(maurosr):", "return", "the", "key_name", "is", "necessary", "cause", "the\n", "verification", "returns", "the", "label", "of", "the", "last", "compared", "information", "in\n", "the", "response,", "not", "necessarily", "the", "key", "name.\n", "Get", "api", "sample", "of", "key", "pairs", "post", "to", "import", "user's", "key.\n", "Get", "api", "sample", "of", "key", "pairs", "list", "request.\n", "Get", "api", "sample", "of", "key", "pairs", "get", "request.\n", "Get", "api", "sample", "of", "key", "pairs", "delete", "request.\n", "NOTE(gmann):", "microversion", "tests", "do", "not", "need", "to", "run", "for", "v2", "API\n", "so", "defining", "scenarios", "only", "for", "v2.2", "which", "will", "run", "the", "original", "tests\n", "by", "appending", "'(v2_2)'", "in", "test_id.\n", "NOTE(claudiub):", "overrides", "the", "method", "with", "the", "same", "name", "in\n", "KeypairsSampleJsonTest,", "as", "it", "is", "used", "by", "other", "tests.\n", "NOTE(claudiub):", "overrides", "the", "method", "with", "the", "same", "name", "in\n", "KeypairsSampleJsonTest,", "since", "the", "API", "sample", "expects", "a", "keypair_type.\n", "NOTE(claudiub):", "overrides", "the", "method", "with", "the", "same", "name", "in\n", "KeypairsSampleJsonTest,", "since", "the", "API", "sample", "expects", "a", "keypair_type.\n", "Delete", "a", "keypair", "on", "behalf", "of", "a", "user\n", "Get", "api", "sample", "of", "key", "pairs", "list", "request.\n", "create", "common", "kp_name", "for", "two", "users\n", "get", "all", "keypairs", "for", "user1", "(only", "one)\n", "get", "all", "keypairs", "for", "user2", "(only", "one)\n", "get", "and", "post", "for", "other", "users", "is", "forbidden", "for", "non", "admin\n", "TODO(pkholkin):", "this", "is", "only", "needed", "because", "we", "randomly", "choose", "the\n", "uuid", "each", "time.\n", "Get", "api", "sample", "of", "key", "pairs", "list", "request.\n", "sort", "key_pairs", "by", "name", "before", "paging\n", "Get", "api", "sample", "of", "key", "pairs", "list", "request.\n", "create", "common", "kp_names", "for", "two", "users\n", "sort", "key_pairs", "by", "name", "before", "paging\n", "get", "all", "keypairs", "after", "the", "second", "for", "user1\n", "get", "only", "one", "keypair", "after", "the", "second", "for", "user2"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/quota_sets.py": ["False", "common_quota", "copy", "db", "parameter_types", "quota_resources", "update", "update_quota_set", "update_quota_set_v236", "update_v236", "-1", "is", "a", "flag", "value", "for", "unlimited"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_consoles.py": ["ConsolesControllerTestV21", "FAKE_UUID", "FakeInstanceDB", "False", "None", "True", "access_ipv4", "access_ipv6", "action", "cons1", "cons2", "cons_self", "console_id", "consoles_v21", "context", "data", "datetime", "dict", "exception", "expected", "fake_create_console", "fake_delete_console", "fake_get_console", "fake_get_consoles", "fakes", "flavor_id", "host", "id", "image_ref", "instance", "instance_id", "int", "key_data", "key_name", "matchers", "name", "object", "oslo_policy", "policy", "pool", "pool1", "pool2", "progress", "project_id", "req", "res_dict", "reservation_id", "rule", "rules", "self", "server_name", "str", "stub_instance", "super", "task_state", "test", "timeutils", "user_id", "uuid", "uuids", "vm_state", "vm_states", "webob", "ReservationID", "isn't", "sent", "back,", "hack", "it", "in", "there."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/hostops.py": ["CONF", "LOG", "None", "NotImplementedError", "_", "__name__", "action", "available_video_ram", "constants", "cpu_info", "cpu_topology", "datetime", "dic", "dict", "features", "fkey", "fname", "free_gb", "free_hdd_gb", "free_mem_kb", "free_mem_mb", "free_space", "gpu", "gpu_info", "gpus", "host_ip", "instances_dir", "int", "jsonutils", "len", "list", "logging", "nova", "obj_fields", "object", "os_win_const", "pathutils", "platform", "processors", "self", "size", "str", "tick_count64", "time", "topology", "total_gb", "total_hdd_gb", "total_mem_kb", "total_mem_mb", "total_video_ram", "units", "used_gb", "used_hdd_gb", "used_mem_mb", "utilsfactory", "vcpus", "version", "w32_arch_dict", "Reboots,", "shuts", "down", "or", "powers", "up", "the", "host.\nReturns", "the", "host", "uptime.", "NOTE(claudiub):", "The", "hypervisor_version", "will", "be", "stored", "in", "the", "database\n", "as", "an", "Integer", "and", "it", "will", "be", "used", "by", "the", "scheduler,", "if", "required", "by\n", "the", "image", "property", "'hypervisor_version_requires'.\n", "The", "hypervisor_version", "will", "then", "be", "converted", "back", "to", "a", "version\n", "by", "splitting", "the", "int", "in", "groups", "of", "3", "digits.\n", "E.g.:", "hypervisor_version", "6003", "is", "converted", "to", "'6.3'.\n", "Return", "the", "first", "available", "address\n", "format", "the", "string", "to", "match", "libvirt", "driver", "uptime\n", "Libvirt", "uptime", "returns", "a", "combination", "of", "the", "following\n", "-", "current", "host", "time\n", "-", "time", "since", "host", "is", "up\n", "-", "number", "of", "logged", "in", "users\n", "-", "cpu", "load\n", "Since", "the", "Windows", "function", "GetTickCount64", "returns", "only\n", "the", "time", "since", "the", "host", "is", "up,", "returning", "0s", "for", "cpu", "load\n", "and", "number", "of", "logged", "in", "users.\n", "This", "is", "done", "to", "ensure", "the", "format", "of", "the", "returned\n", "value", "is", "same", "as", "in", "libvirt"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_glusterfs.py": ["False", "None", "conf", "connection_info", "device_path", "disk_info", "expected_commands", "export_mnt_base", "export_string", "file_path", "glusterfs", "libvirt_driver", "libvirt_utils", "mnt_base", "mock", "mock_LOG_debug", "mock_LOG_exception", "mock_is_mounted", "mock_utils_exe", "name", "options", "os", "processutils", "self", "source", "test_volume", "tree", "utils", "Test", "default", "format", "-", "raw\n", "Test", "specified", "format", "-", "qcow2"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/extension_info.py": ["ALIAS", "AttributeError", "ExtensionInfoController", "FAKE_UPDATED_DATE", "FAKE_XML_URL", "FakeExtension", "False", "KeyError", "LOG", "True", "_LE", "__name__", "_alias", "action", "alias", "base_policies", "context", "copy", "description", "dict", "discoverable_extensions", "exception", "ext", "ext_data", "ext_policies", "extension", "extension_info", "extensions", "extra_ext", "extra_exts", "hardcoded_extensions", "id", "item", "logging", "mod_ext", "name", "new_name", "object", "rename_ext", "req", "resources", "self", "sorted", "sorted_ext_list", "suppress_ext", "v21_to_v2_alias_mapping", "v21_to_v2_extension_list_mapping", "v2_extension_suppress_list", "version", "vif_extension", "vif_extension_info", "webob", "wsgi", "Filter", "extensions", "list", "based", "on", "policy.\nExtension", "information.\nKeep", "track", "of", "all", "loaded", "API", "extensions.\nChecks", "for", "required", "methods", "in", "extension", "objects.", "NOTE(cyeoh):", "The", "following", "mappings", "are", "currently", "incomplete\n", "Having", "a", "v2.1", "extension", "loaded", "can", "imply", "that", "several", "v2", "extensions\n", "should", "also", "appear", "to", "be", "loaded", "(although", "they", "no", "longer", "do", "in", "v2.1)\n", "v2.1", "plugins", "which", "should", "never", "appear", "in", "the", "v2", "extension", "list\n", "This", "should", "be", "the", "v2.1", "alias,", "not", "the", "V2.0", "alias\n", "v2.1", "plugins", "which", "should", "appear", "under", "a", "different", "name", "in", "v2\n", "NOTE(sdague):", "this", "is", "the", "list", "of", "extension", "metadata", "that", "we", "display\n", "to", "the", "user", "for", "features", "that", "we", "provide.", "This", "exists", "for", "legacy\n", "purposes", "because", "applications", "were", "once", "asked", "to", "look", "for", "these\n", "things", "to", "decide", "if", "a", "feature", "is", "enabled.", "As", "we", "remove", "extensions\n", "completely", "from", "the", "code", "we're", "going", "to", "have", "a", "static", "list", "here", "to\n", "keep", "the", "surface", "metadata", "the", "same.\n", "V2.1", "does", "not", "support", "XML", "but", "we", "need", "to", "keep", "an", "entry", "in", "the\n", "/extensions", "information", "returned", "to", "the", "user", "for", "backwards\n", "compatibility\n", "Add", "fake", "v2", "extensions", "to", "list\n", "Suppress", "extensions", "which", "we", "don't", "want", "to", "see", "in", "v2\n", "v2.1", "to", "v2", "extension", "name", "mapping\n", "NOTE(gmann):", "This", "is", "for", "v2.1", "compatible", "mode", "where\n", "extension", "list", "should", "show", "all", "extensions", "as", "shown", "by", "v2.\n", "Here", "we", "add", "VIF", "extension", "which", "has", "been", "removed", "from", "v2.1", "list.\n", "NOTE(dprince):", "the", "extensions", "alias", "is", "used", "as", "the", "'id'", "for", "show"], "/Users/mehranhassani/repos/nova/nova/cells/scheduler.py": ["CONF", "CellsScheduler", "Exception", "False", "LOG", "None", "_LE", "_LI", "__name__", "base", "block_device_mapping", "build_inst_kwargs", "cell", "cells", "cls", "compute", "conductor", "copy", "ctxt", "enumerate", "exception", "filter_classes", "filter_properties", "filters", "i", "image", "inst", "instance", "instance_actions", "instance_properties", "instance_type", "instance_uuid", "instance_uuids", "instance_values", "instances", "len", "logging", "max", "message", "method", "method_kwargs", "msg_runner", "nova", "num_instances", "obj_base", "objects", "our_cell", "range", "request_spec", "scheduler_utils", "security_groups", "self", "sleep_time", "super", "target_cell", "target_cells", "time", "utils", "vm_states", "weigher_classes", "weighted_cells", "weights", "The", "cells", "scheduler.\nAttempt", "to", "build", "instance(s)", "or", "send", "msg", "to", "child", "cell.\nPick", "a", "cell", "where", "we", "should", "create", "a", "new", "instance(s).", "The", "parent", "may", "pass", "these", "metadata", "values", "as", "lists,", "and", "the\n", "create", "call", "expects", "it", "to", "be", "a", "dict.\n", "Pop", "out", "things", "that", "will", "get", "set", "properly", "when", "re-creating", "the\n", "instance", "record.\n", "FIXME(danms):", "The", "instance", "was", "brutally", "serialized", "before", "being\n", "sent", "over", "RPC", "to", "us.", "Thus,", "the", "pci_requests", "value", "wasn't", "really\n", "sent", "in", "a", "useful", "form.", "Since", "it", "was", "getting", "ignored", "for", "cells\n", "before", "it", "was", "part", "of", "the", "Instance,", "skip", "it", "now", "until", "cells", "RPC\n", "is", "sending", "proper", "instance", "objects.\n", "FIXME(danms):", "Same", "for", "ec2_ids\n", "FIXME(danms):", "Same", "for", "keypairs\n", "Include", "our", "cell", "in", "the", "list,", "if", "we", "have", "any", "capacity", "info\n", "NOTE(comstud):", "I", "know", "this", "reads", "weird,", "but", "the", "'if's", "are", "nested\n", "this", "way", "to", "optimize", "for", "the", "common", "case", "where", "'cells'", "is", "a", "list\n", "containing", "at", "least", "1", "entry.\n", "None", "means", "to", "bypass", "further", "scheduling", "as", "a", "filter\n", "took", "care", "of", "everything.\n", "Need", "to", "create", "instance", "DB", "entries", "as", "the", "conductor\n", "expects", "that", "the", "instance(s)", "already", "exists.\n", "Need", "to", "record", "the", "create", "action", "in", "the", "db", "as", "the\n", "conductor", "expects", "it", "to", "already", "exist.\n", "FIXME(comstud):", "Would", "be", "nice", "to", "kick", "this", "back", "up", "so", "that\n", "the", "parent", "cell", "could", "retry,", "if", "we", "had", "a", "parent.\n", "a", "filter", "took", "care", "of", "scheduling.", "skip."], "/Users/mehranhassani/repos/nova/nova/objects/virtual_interface.py": ["False", "True", "VERSION", "VIF_OPTIONAL_FIELDS", "_", "address", "base", "cls", "context", "db", "db_vif", "db_vifs", "exception", "field", "fields", "instance_uuid", "network_id", "objects", "primitive", "self", "setattr", "staticmethod", "target_version", "updates", "use_slave", "versionutils", "vif", "vif_id", "vif_uuid", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "tag", "field\n", "Version", "1.2:", "Adding", "a", "save", "method\n", "Version", "1.3:", "Added", "destroy()", "method\n", "This", "is", "a", "MAC", "address.\n", "NOTE(danms):", "The", "neutronv2", "module", "namespaces", "mac", "addresses\n", "with", "port", "id", "to", "avoid", "uniqueness", "constraints", "currently", "on\n", "our", "table.", "Strip", "that", "out", "here", "so", "nobody", "else", "needs", "to", "care.\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/315_add_migration_progresss_detail.py": ["BigInteger", "Column", "MetaData", "Table", "True", "column", "column_name", "columns", "meta", "migrate_engine", "migrations", "shadow_migrations"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_volume.py": ["False", "LibvirtISCSIVolumeBaseTestCase", "LibvirtVolumeBaseTestCase", "None", "SECRET_UUID", "True", "auth", "blockio", "cmd", "conf", "connection_info", "dev_name", "dev_path", "dict", "disk_info", "driver_node", "exception", "fake_execute", "fakelibvirt", "file_path", "host", "iotune", "iqn", "libvirt_driver", "location", "mock", "mock_has_min_version", "object", "readonly", "ret", "self", "specs", "super", "test", "transport", "tree", "value", "volume", "Contains", "common", "setup", "and", "helper", "methods", "for", "libvirt", "volume", "tests.\nContains", "common", "setup", "and", "helper", "methods", "for", "iSCSI", "volume", "tests.", "ensure", "invalid", "qos_specs", "is", "ignored\n", "Check", "the", "discard", "attrib", "is", "present", "in", "driver", "section\n", "Check", "the", "discard", "attrib", "is", "not", "present", "in", "driver", "section\n", "Check", "the", "discard", "attrib", "is", "not", "present", "in", "driver", "section"], "/Users/mehranhassani/repos/nova/nova/objects/keypair.py": ["False", "KEYPAIR_TYPE_SSH", "KEYPAIR_TYPE_X509", "KeyPair", "LOG", "None", "True", "VERSION", "_LE", "__name__", "_count_unmigrated_instances", "_create_in_db", "_destroy_in_db", "_get_count_from_db", "_get_from_db", "_get_main_keypairs", "api_db_keypairs", "api_models", "bad_instances", "base", "cls", "context", "count", "db", "db_api", "db_exc", "db_keypair", "done", "exception", "fields", "hasattr", "ignore", "key", "keypair", "kp", "len", "limit", "limit_more", "localonly", "logging", "main_db_keypairs", "main_keypairs", "main_models", "marker", "marker_row", "name", "objects", "primitive", "query", "result", "self", "sqlalchemyutils", "staticmethod", "super", "target_version", "updates", "user_id", "values", "versionutils", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Added", "keypair", "type\n", "Version", "1.3:", "Name", "field", "is", "non-null\n", "Version", "1.4:", "Add", "localonly", "flag", "to", "get_by_name()\n", "NOTE(danms):", "Check", "to", "see", "if", "it", "exists", "in", "the", "old", "DB", "before\n", "letting", "them", "create", "in", "the", "API", "DB,", "since", "we", "won't", "get", "protection\n", "from", "the", "UC.\n", "Version", "1.0:", "Initial", "version\n", "KeyPair", "<=", "version", "1.1\n", "Version", "1.1:", "KeyPair", "<=", "version", "1.2\n", "Version", "1.2:", "KeyPair", "<=", "version", "1.3\n", "Version", "1.3:", "Add", "new", "parameters", "'limit'", "and", "'marker'", "to", "get_by_user()\n", "NOTE(pkholkin):", "If", "we", "were", "asked", "for", "a", "marker", "and", "found", "it", "in\n", "results", "from", "the", "API", "DB,", "we", "must", "continue", "our", "pagination", "with\n", "just", "the", "limit", "(if", "any)", "to", "the", "main", "DB.\n", "NOTE(danms):", "If", "this", "got", "created", "somehow", "in", "the", "API", "DB,\n", "then", "it's", "newer", "and", "we", "just", "continue", "on", "to", "destroy", "the\n", "old", "one", "in", "the", "cell", "DB."], "/Users/mehranhassani/repos/nova/nova/cmd/idmapshift.py": ["False", "NOBODY_ID", "True", "ValueError", "_", "argparse", "args", "confirm_dir", "confirm_path", "count", "d", "dict", "dirs", "dry_run", "end", "f", "files", "find_target_id", "fsdir", "fsid", "get_ranges", "gid", "gid_in_range", "gid_mappings", "gid_memo", "gid_ranges", "i", "id_map_type", "id_maps", "int", "len", "m", "map_vals", "mappings", "maps", "memo", "msg", "nobody", "os", "p", "parser", "path", "print_chown", "root", "shift_dir", "shift_path", "shift_path_short", "start", "stat", "sys", "target", "target_gid", "target_uid", "tuple", "uid", "uid_in_range", "uid_mappings", "uid_memo", "uid_ranges", "val", "vals", "verbose", "#########\n#########"], "/Users/mehranhassani/repos/nova/nova/conf/glance.py": ["False", "cfg", "conf", "glance_group", "glance_opts", "NOTE(sdague):", "there", "is", "intentionally", "no", "default", "here.", "This\n", "requires", "configuration.", "Eventually", "this", "will", "come", "from", "the\n", "service", "catalog,", "however", "we", "don't", "have", "a", "good", "path", "there", "atm.\n", "TODO(raj_singh):", "Add", "\"required=True\"", "flag", "to", "this", "option."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_deferred_delete.py": ["DeferredDeleteSampleJsonTests", "response", "sample_dir", "self", "super", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_quotas.py": ["BaseQuotaSetsTest", "ExtendedQuotasTestV21", "False", "None", "QuotaSetsPolicyEnforcementV21", "QuotaSetsTestV21", "QuotaSetsTestV236", "True", "UserQuotasTestV21", "_get_quotas", "body", "context", "db", "exc", "exception", "expected", "extensions", "fake_quotas", "fakes", "filtered", "get_settable_quotas", "id", "include_server_group_quotas", "k", "len", "mock", "mock_create_limit", "mock_createlimit", "mock_defaults", "mock_quotas", "mock_settable", "mock_validate", "patcher", "plugin", "project_id", "qs", "quota", "quota_set", "quotas_v21", "ref_quota_set", "req", "res", "res_dict", "resource", "rule_name", "self", "super", "tenant_networks", "test", "uri", "url", "usages", "user_id", "v", "validation_error", "webob", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "Valid", "-", "finite", "values\n", "Valid", "-", "finite", "limit", "and", "infinite", "maximum\n", "Valid", "-", "infinite", "limit", "and", "infinite", "maximum\n", "Valid", "-", "all", "infinite\n", "Invalid", "-", "limit", "is", "less", "than", "-1\n", "Invalid", "-", "limit", "is", "less", "than", "minimum\n", "Invalid", "-", "limit", "is", "greater", "than", "maximum\n", "Invalid", "-", "infinite", "limit", "is", "greater", "than", "maximum\n", "Invalid", "-", "limit", "is", "less", "than", "infinite", "minimum\n", "Invalid", "-", "limit", "is", "larger", "than", "0x7FFFFFFF\n", "when", "PUT", "non", "integer", "value\n", "when", "PUT", "non", "integer", "value\n", "when", "PUT", "non", "integer", "value"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_network_utils.py": ["exception", "expr", "mock", "network_utils", "result", "self", "session", "stubs", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License."], "/Users/mehranhassani/repos/nova/nova/objects/instance_pci_requests.py": ["False", "InstancePCIRequest", "None", "True", "VERSION", "_requests", "attr", "base", "blob", "classmethod", "cls", "context", "db", "db_pci_requests", "db_request", "db_requests", "enumerate", "fields", "index", "instance", "instance_uuid", "is_new", "jsonutils", "objs", "pci_requests", "primitive", "request", "request_obj", "requests", "self", "setattr", "staticmethod", "sysmeta", "sysmeta_value", "target_version", "versionutils", "x", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "request_id\n", "Note(moshele):", "is_new", "is", "deprecated", "and", "should", "be", "removed\n", "on", "major", "version", "bump\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "InstancePCIRequest", "1.1\n", "Note(moshele):", "is_new", "is", "deprecated", "and", "therefore", "we", "load", "it\n", "with", "default", "value", "of", "False\n", "NOTE", "(baoli):", "not", "all", "callers", "are", "passing", "instance", "as", "object", "yet.\n", "Therefore,", "use", "the", "dict", "syntax", "in", "this", "routine\n", "NOTE(danms):", "This", "instance", "hasn't", "been", "converted", "to", "use\n", "instance_extra", "yet,", "so", "extract", "the", "data", "from", "sysmeta"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_availability_zones.py": ["AvailabilityZoneTestCases", "CONF", "False", "None", "True", "agg", "agg2", "agg3", "agg_az1", "agg_meta", "agg_name", "aggregate", "az", "az_name", "cache_get", "cache_key", "cached_key", "context", "db", "disabled", "fake_inst", "host", "metadata", "mock", "new_az_name", "new_service", "not_zones", "nova", "objects", "result", "self", "service", "service1", "service2", "service3", "service4", "services", "set", "six", "str", "super", "test", "topic", "values", "zones", "Test", "case", "for", "aggregate", "based", "availability", "zone.\nTest", "availability", "zone", "cache", "could", "be", "update.\nTest", "for", "compute", "service", "get", "right", "availability", "zone.\nTest", "set", "availability", "zone", "cache", "key", "is", "unicode.\nTest", "not", "compute", "service", "get", "right", "availability", "zone.\nTest", "get", "right", "availability", "zone", "by", "given", "host.\nTest", "availability", "zone", "could", "be", "update", "by", "given", "host.\nTest", "availability", "zone", "could", "be", "deleted", "successfully.\nTest", "get_availability_zones.\nTest", "get", "right", "availability", "zone", "by", "given", "an", "instance.\nTest", "get", "availability", "zone", "from", "aggregate", "by", "given", "an", "instance.\nTest", "get", "availability", "zone", "from", "instance", "if", "host", "not", "set.\nTest", "get", "availability", "zone", "if", "neither", "host", "nor", "az", "is", "set.", "Create", "a", "new", "aggregate", "with", "an", "AZ", "and", "add", "the", "host", "to", "the", "AZ\n", "The", "service", "is", "not", "add", "into", "aggregate,", "so", "confirm", "it", "is", "default\n", "availability", "zone.\n", "The", "service", "is", "added", "into", "aggregate,", "confirm", "return", "the", "aggregate\n", "availability", "zone.\n", "Create", "a", "new", "aggregate", "with", "an", "AZ", "and", "add", "the", "host", "to", "the", "AZ\n", "Update", "AZ\n", "Create", "a", "new", "aggregate", "with", "an", "AZ", "and", "add", "the", "host", "to", "the", "AZ\n", "Delete", "the", "AZ", "via", "deleting", "the", "aggregate\n", "When", "the", "param", "get_only_available", "of", "get_availability_zones", "is", "set\n", "to", "default", "False,", "it", "returns", "two", "lists,", "zones", "with", "at", "least", "one\n", "enabled", "services,", "and", "zones", "with", "no", "enabled", "services,\n", "when", "get_only_available", "is", "set", "to", "True,", "only", "return", "a", "list", "of", "zones\n", "with", "at", "least", "one", "enabled", "services.\n", "Use", "the", "following", "test", "data:\n\n", "zone", "host", "enabled\n", "nova-test", "host1", "Yes\n", "nova-test", "host2", "No\n", "nova-test2", "host3", "Yes\n", "nova-test3", "host4", "No\n", "<default>", "host5", "No"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/volumeops.py": ["CONF", "False", "LOG", "None", "True", "_", "_LI", "_LW", "__name__", "adapter", "adapter_type", "client_factory", "cluster", "compute_res", "connection_info", "connection_info_data", "connector", "constants", "controller_key", "controller_spec", "current_device_path", "data", "datastore", "destroy_disk", "detached", "device", "device_name", "device_uuid", "devices", "disk_io_limits", "disk_key", "disk_size", "disk_type", "disk_uuid", "driver_type", "exception", "extra_config_specs", "extra_opts", "getattr", "hardware_devices", "hba", "hba_device", "hba_key", "hbas_ret", "host", "host_adapters", "host_hbas", "host_mor", "host_scsi_luns", "instance", "instance_name", "iqn", "linked_clone", "logging", "lst_properties", "lun", "nova", "object", "opt_val", "original_device", "original_device_path", "oslo_vmw_exceptions", "prop", "prop_dict", "res_pool", "result", "s", "scsi_lun", "scsi_lun_key", "scsi_lun_ret", "scsi_topology", "self", "send_targets", "send_tgt", "send_tgt_portals", "session", "spec", "state", "storage_system_mor", "target", "target_iqn", "target_portal", "task", "unit_number", "uuid", "vm_ref", "vm_util", "vmdk", "vmdk_attach_config_spec", "vmdk_detach_config_spec", "vmdk_path", "volume_option", "volume_ref", "volume_ref_name", "volume_uuid", "vutil", "Management", "class", "for", "Volume-related", "tasks.\nAttach", "disk", "to", "VM", "by", "reconfiguration.\nDetach", "disk", "from", "VM", "by", "reconfiguration.\nReturn", "the", "iSCSI", "Target", "given", "a", "volume", "info.\nAdds", "the", "iscsi", "host", "to", "send", "target", "host", "list.\nRescan", "the", "iSCSI", "HBA", "to", "discover", "iSCSI", "targets.\nGet", "iSCSI", "target,", "rescanning", "the", "HBA", "if", "necessary.\nReturn", "the", "host", "iSCSI", "IQN.\nReturn", "volume", "connector", "information.\nGet", "the", "volume", "moref", "from", "the", "ref", "name.\nAttach", "vmdk", "volume", "storage", "to", "VM", "instance.\nAttach", "iscsi", "volume", "storage", "to", "VM", "instance.\nAttach", "volume", "storage", "to", "VM", "instance.\nGet", "the", "ESX", "host", "of", "given", "VM.\nGet", "the", "resource", "pool", "of", "given", "host's", "cluster.\nGet", "resource", "pool", "to", "which", "the", "VM", "belongs.\nDetach", "volume", "storage", "to", "VM", "instance.\nDetach", "volume", "storage", "to", "VM", "instance.\nDetach", "volume", "storage", "to", "VM", "instance.\nAttach", "a", "root", "volume", "to", "the", "VM", "instance.", "Store", "the", "uuid", "of", "the", "volume_device\n", "Meaning", "there", "are", "no", "host", "bus", "adapters", "on", "the", "host\n", "Meaning", "there", "are", "no", "host", "bus", "adapters", "on", "the", "host\n", "Check", "if", "iscsi", "host", "is", "already", "in", "the", "send", "target", "host\n", "list\n", "Rescan", "iSCSI", "HBA", "with", "iscsi", "target", "host\n", "Find", "iSCSI", "Target", "again\n", "Meaning", "there", "are", "no", "host", "bus", "adapters", "on", "the", "host\n", "Get", "the", "vmdk", "file", "name", "that", "the", "VM", "is", "pointing", "to\n", "Get", "details", "required", "for", "adding", "disk", "device", "such", "as\n", "adapter_type,", "disk_type\n", "IDE", "does", "not", "support", "disk", "hotplug\n", "Attach", "the", "disk", "to", "virtual", "machine", "instance\n", "Store", "the", "uuid", "of", "the", "volume_device\n", "Attach", "Volume", "to", "VM\n", "Discover", "iSCSI", "Target\n", "Get", "the", "vmdk", "file", "name", "that", "the", "VM", "is", "pointing", "to\n", "Get", "the", "compute", "resource,", "the", "host", "belongs", "to\n", "Get", "resource", "pool", "from", "the", "compute", "resource\n", "Get", "the", "host,", "the", "VM", "belongs", "to\n", "Get", "the", "resource", "pool", "of", "host's", "cluster.\n", "The", "volume", "is", "not", "moved", "from", "its", "original", "location.\n", "No", "consolidation", "is", "required.\n", "The", "volume", "has", "been", "moved", "from", "its", "original", "location.\n", "Need", "to", "consolidate", "the", "VMDK", "files.\n", "Pick", "the", "host", "and", "resource", "pool", "on", "which", "the", "instance", "resides.\n", "Move", "the", "volume", "to", "the", "datastore", "where", "the", "new", "VMDK", "file", "is", "present.\n", "Volume's", "vmdk", "was", "moved;", "remove", "the", "device", "so", "that", "we", "can\n", "relocate", "the", "volume.\n", "Volume's", "backing", "is", "relocated", "now;", "detach", "the", "old", "vmdk", "if", "not", "done\n", "already.\n", "Attach", "the", "current", "volume", "to", "the", "volume_ref\n", "Get", "the", "vmdk", "file", "name", "that", "the", "VM", "is", "pointing", "to\n", "Get", "disk", "uuid\n", "Detach", "Volume", "from", "VM\n", "Get", "details", "required", "for", "adding", "disk", "device", "such", "as\n", "adapter_type,", "disk_type\n", "IDE", "does", "not", "support", "disk", "hotplug\n", "Remove", "key-value", "pair", "<volume_id,", "vmdk_uuid>", "from", "instance's\n", "extra", "config.", "Setting", "value", "to", "empty", "string", "will", "remove", "the", "key.\n", "Detach", "Volume", "from", "VM\n", "Discover", "iSCSI", "Target\n", "Get", "the", "vmdk", "file", "name", "that", "the", "VM", "is", "pointing", "to\n", "Get", "the", "volume", "ref\n", "Pick", "the", "resource", "pool", "on", "which", "the", "instance", "resides.", "Move", "the\n", "volume", "to", "the", "datastore", "of", "the", "instance."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/floating_ip_dns.py": ["False", "dns_entry_update", "domain_entry_update", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_api.py": ["APITest", "Exception", "ExceptionWithCode", "ExceptionWithNoneCode", "ExceptionWithSafety", "False", "None", "True", "api", "code", "content_type", "ctype", "encodeutils", "exc", "exception", "exception_type", "expected", "expose", "fail", "fakes", "hasattr", "inner_app", "jsonutils", "key", "msg", "openstack_api", "property", "raise_api_fault", "raise_webob_exc", "req", "res", "resp", "safe", "self", "six", "str", "super", "test", "value", "webob", "wsgi", "NOTE(scottynomad):", "Webob's", "Response", "assumes", "that", "header", "values", "are\n", "strings", "so", "the", "`res.content_type`", "property", "is", "broken", "in", "python3.\n\n", "Consider", "changing", "`api.openstack.wsgi.Resource._process_stack`\n", "to", "encode", "header", "values", "in", "ASCII", "rather", "than", "UTF-8.\n", "https://tools.ietf.org/html/rfc7230#section-3.2.4\n", "api.application", "=", "raise_webob_exc\n", "api.application", "=", "raise_api_fault\n", "api.application", "=", "fail"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1552888.py": ["None", "TestAggregateCreation", "api_fixture", "body", "nova_fixtures", "policy_fixture", "self", "super", "test", "1552888.\n", "This", "should", "success"], "/Users/mehranhassani/repos/nova/nova/virt/storage_users.py": ["CONF", "LOCK_PATH", "LOG", "TWENTY_FOUR_HOURS", "True", "ValueError", "_LW", "__name__", "cfg", "d", "do_get_storage_users", "do_register_storage_use", "f", "hostname", "id_path", "jsonutils", "logging", "node", "open", "os", "recent_users", "storage_path", "time", "utils", "Identify", "the", "id", "of", "this", "instance", "storage.\nGet", "a", "list", "of", "all", "the", "users", "of", "this", "storage", "path.", "NOTE(morganfainberg):", "Due", "to", "circular", "import", "dependencies,", "the", "use", "of", "the\n", "CONF.instances_path", "needs", "to", "be", "wrapped", "so", "that", "it", "can", "be", "resolved", "at", "the\n", "appropriate", "time.", "Because", "compute.manager", "imports", "this", "file,", "we", "end", "up", "in\n", "a", "rather", "ugly", "dependency", "loop", "without", "moving", "this", "into", "a", "wrapped", "function.\n", "This", "issue", "mostly", "stems", "from", "the", "use", "of", "a", "decorator", "for", "the", "lock\n", "synchronize", "and", "the", "implications", "of", "how", "decorators", "wrap", "the", "wrapped", "function\n", "or", "method.", "If", "this", "needs", "to", "be", "used", "outside", "of", "compute.manager,", "it", "should\n", "be", "refactored", "to", "eliminate", "this", "circular", "dependency", "loop.\n", "config", "option", "import", "is", "avoided", "here", "since", "it", "is\n", "explicitly", "imported", "from", "compute.manager", "and", "may", "cause", "issues", "with\n", "defining", "options", "after", "config", "has", "been", "processed", "with", "the\n", "wrapped-function", "style", "used", "here.\n", "NOTE(mikal):", "this", "is", "required", "to", "determine", "if", "the", "instance", "storage", "is\n", "shared,", "which", "is", "something", "that", "the", "image", "cache", "manager", "needs", "to\n", "know.", "I", "can", "imagine", "other", "uses", "as", "well", "though.\n", "See", "comments", "above", "method", "register_storage_use"], "/Users/mehranhassani/repos/nova/nova/conductor/tasks/base.py": ["Exception", "abc", "context", "excutils", "functools", "instance", "object", "original", "rollback_wrapper", "self", "six", "wrap"], "/Users/mehranhassani/repos/nova/nova/cert/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/cmd/consoleauth.py": ["CONF", "config", "gmr", "logging", "nova", "objects", "server", "service", "sys", "version", "VNC", "Console", "Proxy", "Server."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_vm_utils.py": ["BittorrentTestCase", "CONF", "CheckVDISizeTestCase", "CreateCachedImageTestCase", "CreateKernelRamdiskTestCase", "CreateVBDTestCase", "Exception", "FakeException", "FakeFile", "FakeSession", "False", "FetchVhdImageTestCase", "GenerateEphemeralTestCase", "GetInstanceForVdisForSrTestCase", "IOError", "ISCSI_TYPE", "KeyError", "LookupTestCase", "None", "ResizeHelpersTestCase", "RuntimeError", "StreamDiskTestCase", "True", "VDIOtherConfigTestCase", "VDI_add_to_other_config", "VMInfoTests", "VMUtilsSRPath", "VMUtilsTestBase", "XENSM_TYPE", "_FakeSession", "_XAPI_record", "actual", "all_vdis", "arg", "args", "args_kernel", "args_ramdisk", "brand", "cache_images", "cache_type", "call_plugin_serialized", "call_xenapi", "callback", "config_fixture", "context", "contextified", "contextlib", "current", "details", "dev_path", "device", "driver", "e", "end", "error", "exc", "exception", "expected", "expected_calls", "expected_vm_rec", "fake", "fake_call_xenapi", "fake_create_cached_image", "fake_fetch_image", "fake_file", "fake_flavor", "fake_get_rec", "fake_impl", "fake_instance", "fake_vbd_get_rec", "fake_vdi_get_uuid", "fakes", "flavor", "flavors", "fn", "fs_label", "func", "get", "getattr", "greenthread", "hardware", "image_meta", "info", "inst_name", "inst_uuid", "instance", "is_viridian", "is_viridian_str", "kernel", "kernel_id", "key", "kwargs", "label", "len", "list", "lockutils", "method", "mobj", "mock", "mock_attached_here", "mock_builder", "mock_callback", "mock_child", "mock_clone_vdi", "mock_count", "mock_create", "mock_create_vbd", "mock_create_vdi", "mock_delete", "mock_delete_snapshots_in_vdi_chain", "mock_destroy", "mock_destroy_vdis", "mock_dom0_ref", "mock_dom0ref", "mock_ephemeral", "mock_execute", "mock_extract", "mock_extract_flavor", "mock_fetch_image", "mock_find_sr", "mock_findsr", "mock_get", "mock_get_all", "mock_get_all_vdis_in_sr", "mock_get_resize_func_name", "mock_get_size", "mock_get_sizes", "mock_get_sr_path", "mock_get_vdi_for_vm_safely", "mock_get_vhd_parent_uuid", "mock_impl", "mock_instance_metadata", "mock_lookup", "mock_make_path", "mock_migrate", "mock_mkfs", "mock_open", "mock_resize", "mock_root", "mock_safe_copy_vdi", "mock_safe_destroy_vdis", "mock_safe_find_sr", "mock_scan", "mock_scan_sr", "mock_set_info", "mock_size", "mock_sleep", "mock_stream", "mock_strip", "mock_tmpdir", "mock_vdi_get_uuid", "mock_vdi_snapshot", "mock_wait_for_vhd_coalesce", "mock_walk", "mock_walk_vdi_chain", "mox", "name_label", "new_sectors", "nova", "num_retries", "obj_fields", "object", "objects", "offset", "open", "operation", "other_config", "parted_return", "partition_path", "partitions", "path", "plugin", "post_snapshot_callback", "power_state", "processutils", "raise_exc", "ramdisk_id", "record_type", "ref", "result", "result_keys", "self", "session", "six", "size", "sr_ref", "sr_type", "start", "str", "stubs", "super", "test", "test_flavor", "time_fixture", "timeutils", "units", "updates", "userdevice", "utils", "utils_fixture", "uuids", "uuidutils", "value", "vbd_get_rec", "vbd_rec", "vbd_ref", "vdi", "vdi_1", "vdi_2", "vdi_dev", "vdi_get_rec", "vdi_get_uuid", "vdi_rec", "vdi_ref", "vdis", "version", "vm_get_vbd_refs", "vm_rec", "vm_ref", "vm_utils", "was", "xenapi_conn", "Testing", "for", "nova.conf,", "too", "low,", "negative,", "and", "a", "correct", "value.\n", "10GB", "overhead", "allowed\n", "VDI.add_to_other_config", "->", "VDI_add_to_other_config\n", "Some", "images", "are", "registered", "with", "XenServer", "explicitly", "by", "calling\n", "`create_vdi`\n", "Other", "images", "are", "registered", "implicitly", "when", "they", "are", "dropped", "into\n", "the", "SR", "by", "a", "dom0", "plugin", "or", "some", "other", "process\n", "Stubbing", "on", "the", "session", "object", "and", "not", "class", "so", "we", "don't", "pollute\n", "other", "tests\n", "Migrated", "images", "should", "preserve", "the", "`other_config`\n", "Stubbing", "on", "the", "session", "object", "and", "not", "class", "so", "we", "don't", "pollute\n", "other", "tests\n", "As", "swap", "is", "supported", "in", "dom0,", "mkfs", "will", "run", "there\n", "As", "ext4", "is", "not", "supported", "in", "dom0,", "mkfs", "will", "run", "in", "domU\n", "NOTE(matelakat):", "This", "might", "hide", "the", "fail", "reason,", "as", "test", "runners\n", "are", "unhappy", "with", "a", "mocked", "out", "open.\n", "Will", "have", "3", "VMs", "-", "but", "one", "is", "Dom0", "and", "one", "is", "not", "running", "on", "the", "host\n", "Save", "on", "test", "setup", "calls", "by", "having", "these", "simple", "tests", "in", "one", "method"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/policy.py": ["CONF", "False", "LOG", "None", "_ENFORCER_PLACEMENT", "__name__", "action", "cfg", "context", "credentials", "jsonutils", "logging", "placement_init", "policy", "result", "rules", "target", "Policy", "Enforcement", "for", "placement", "API.", "TODO(cdent):", "Using", "is_admin", "everywhere", "(except", "/)", "is\n", "insufficiently", "flexible", "for", "future", "use", "case", "but", "is\n", "convenient", "for", "initial", "exploration.", "We", "will", "need", "to\n", "determine", "how", "to", "manage", "authorization/policy", "and\n", "implement", "that,", "probably", "per", "handler.\n", "Enforcer", "is", "initialized", "so", "that", "the", "above", "rule", "is", "loaded", "in", "and", "no\n", "policy", "file", "is", "read.\n", "TODO(alaski):", "Register", "a", "default", "rule", "rather", "than", "loading", "it", "in", "like\n", "this.", "That", "requires", "that", "a", "policy", "file", "is", "specified", "to", "be", "read.", "When\n", "this", "is", "split", "out", "such", "that", "a", "placement", "policy", "file", "makes", "sense", "then\n", "change", "to", "rule", "registration.\n", "TODO(alaski):", "Change", "this", "to", "use", "authorize()", "when", "rules", "are", "registered.\n", "noqa", "the", "following", "line", "because", "a", "hacking", "check", "disallows", "using", "enforce."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_used_limits.py": ["FakeRequest", "False", "None", "True", "UsedLimitsTestCaseV21", "abs_limits", "api_version_request", "context", "display_name", "exception", "expected_abs_limits", "fake_req", "include_server_group_quotas", "len", "limit", "limits", "mock", "nova", "obj", "object", "patcher", "project_id", "q", "quota", "quota_map", "r", "res", "reserved", "self", "six", "stub_get_project_quotas", "super", "target", "tenant_id", "test", "ul_policies", "usages", "used_limit_extension", "used_limits_v21", "user_id", "value", "wsgi", "Run", "before", "each", "test."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_instance_usage_audit_log.py": ["AssertionError", "InstanceUsageAuditLogTestV21", "InstanceUsageAuditPolicyEnforcementV21", "None", "TEST_COMPUTE_SERVICES", "TEST_LOGS1", "TEST_LOGS2", "TEST_LOGS3", "audit_periods", "before", "begin", "begin1", "begin2", "begin3", "context", "datetime", "dict", "disabled", "end", "end1", "end2", "end3", "exc", "exception", "fake_last_completed_audit_period", "fake_service_get_all", "fake_task_log_get_all", "fakes", "host", "len", "logs", "result", "rule_name", "self", "service_base", "state", "super", "task_name", "test", "test_service", "unit", "utils_fixture", "v21_ial", "test", "data\n", "all", "services", "done,", "no", "errors.\n", "some", "still", "running...\n", "some", "errors.."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/287_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/shelve.py": ["ALIAS", "ShelveController", "alias", "args", "body", "common", "compute", "context", "controller", "e", "exc", "exception", "extension", "exts", "id", "instance", "kwargs", "name", "req", "self", "shelve_policies", "state_error", "super", "version", "wsgi", "The", "shelved", "mode", "extension.\nMove", "an", "instance", "into", "shelved", "mode.\nForce", "removal", "of", "a", "shelved", "instance", "from", "the", "compute", "node.\nRestore", "an", "instance", "from", "shelved", "mode.\nInstance", "shelve", "mode."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/__init__.py": ["BaseHostFilter", "HostFilterHandler", "NotImplementedError", "filter_properties", "filters", "host_state", "obj", "self", "super", "Base", "class", "for", "host", "filters.\nReturn", "True", "if", "the", "object", "passes", "the", "filter,", "otherwise", "False."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_eventhandler.py": ["EventHandlerTestCase", "False", "None", "True", "_FAKE_EVENT_CHECK_TIMEFRAME", "_FAKE_POLLING_INTERVAL", "constants", "eventhandler", "expected_transition", "expected_uuid", "instance_found", "instance_state", "instance_uuid", "missing_uuid", "mock", "mock_emit_event", "mock_get_event", "mock_get_uuid", "mock_get_vmutils", "mock_lifecycle_event", "mock_spawn", "os_win_exc", "self", "serialops", "side_effect", "super", "test_base", "utils", "utilsfactory", "virt_event"], "/Users/mehranhassani/repos/nova/nova/policies/used_limits.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "used_limits_policies"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/296_add_missing_db2_fkeys.py": ["migrate_engine", "NOTE(sdague):", "this", "was", "a", "db2", "specific", "migration", "that", "was", "removed\n", "when", "we", "removed", "db2", "support", "from", "tree."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/placement/test_microversion.py": ["False", "TOTAL_VERSIONED_METHODS", "True", "collections", "counter", "fully_qualified_method", "func", "handler", "len", "list", "max_ver", "method_info", "method_name", "methods_data", "microversion", "min_ver", "mock", "operator", "p", "pairs", "self", "staticmethod", "stored_method_data", "test", "Tests", "for", "placement", "microversion", "handling.\nTest", "that", "VERSIONED_METHODS", "gets", "data", "as", "expected.\nTest", "that", "there", "are", "no", "overlaps", "in", "the", "versioned", "handlers.\nCheck", "the", "real", "handlers", "to", "make", "sure", "there", "is", "no", "intersctions.", "import", "the", "handlers", "to", "load", "up", "handler", "decorators\n", "noqa\n", "If", "you", "add", "versioned", "handlers", "you", "need", "to", "update", "this", "value", "to\n", "reflect", "the", "change.", "The", "value", "is", "the", "total", "number", "of", "methods\n", "with", "different", "names,", "not", "the", "total", "number", "overall.", "That", "is,\n", "if", "you", "add", "two", "different", "versions", "of", "method", "'foobar'", "the\n", "number", "only", "goes", "up", "by", "one", "if", "no", "other", "version", "foobar", "yet\n", "exists.", "This", "operates", "as", "a", "simple", "sanity", "check.\n", "See", "check_for_versions_intersection", "in\n", "nova.api.openstack.wsgi."], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/requestlog.py": ["LOG", "None", "__name__", "application", "environ", "exc_info", "format", "headers", "log_format", "logging", "microversion", "name", "object", "replacement_start_response", "req_uri", "self", "size", "start_response", "staticmethod", "status", "value", "Simple", "middleware", "for", "request", "logging."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_flavors.py": ["api_sample_base", "response", "sample_dir", "self"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/335_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/fixtures.py": ["AllServicesCurrent", "BannedDBSchemaOperations", "CONF", "CellDatabases", "CinderFixture", "ConfPatcher", "DB_SCHEMA", "Database", "DatabaseAtVersion", "DatabasePoisonFixture", "DefaultFlavorsFixture", "DeprecationWarning", "EngineFacadeFixture", "EventReporterStub", "Exception", "False", "ForbidNewLegacyNotificationFixture", "IndirectionAPIFixture", "NeutronFixture", "None", "NoopConductorFixture", "NullHandler", "OSAPIFixture", "OSMetadataServer", "OutputStreamCapture", "PoisonFunctions", "RPCFixture", "SESSION_CONFIGURED", "SWAP_ERR_NEW_VOL", "SWAP_ERR_OLD_VOL", "SWAP_NEW_VOL", "SWAP_OLD_VOL", "ServiceFixture", "SingleCellSimple", "SpawnIsSynchronousFixture", "StandardLogging", "Timeout", "True", "ValueError", "WarningsFixture", "_", "_FakeGreenThread", "_NoopConductor", "_TRUE_VALUES", "_noop_rpc", "api_version", "args", "banned_resources", "ccontext", "cell_mapping", "cfg", "client", "compute_rpcapi", "conf_overrides", "conn", "connection", "connection_str", "connector", "context", "contextmanager", "ctx_manager", "ctxt", "ctxt_mgr", "database", "default", "default_flavors", "defaults", "engine", "enginefacade", "error", "evloop", "exception", "exmods", "facade", "fake_get", "fake_initialize_connection", "fake_logging_setup", "fake_migrate_volume_completion", "fake_unreserve_volume", "fixtures", "flavor", "fs", "func", "get_context_manager", "handler", "host", "indirection_api", "instance_uuid", "int", "k", "key", "kwargs", "level", "line", "lockutils", "messaging", "messaging_conffixture", "migration", "mock", "mock_gtu", "mock_neutron_client", "name", "network_1", "new_volume_id", "obj_base", "object", "objects", "old_volume_id", "op", "os", "port_1", "project_id", "property", "record", "resource", "root", "rpc", "scaling", "self", "self_api", "service", "service_obj", "session", "sessionmaker", "six", "staticmethod", "std_logging", "subnet_1", "super", "sys", "target_cell", "tenant_id", "test", "thing", "timeout", "url", "uuidsentinel", "v", "version", "volume", "volume_id", "warnings", "Fixtures", "for", "Nova", "tests.\nRun", "a", "service", "as", "a", "test", "fixture.\nFilters", "out", "warnings", "during", "test", "runs.\nPatch", "and", "restore", "the", "global", "NovaObject", "indirection", "api.\nPatch", "and", "restore", "the", "spawn_n", "utility", "method", "to", "be", "synchronous\nBan", "some", "operations", "for", "migrations\nMake", "sure", "the", "test", "fails", "if", "new", "legacy", "notification", "is", "added\nA", "fixture", "to", "boot", "instances", "with", "neutron", "ports\nStub", "out", "the", "conductor", "API", "to", "do", "nothing\nA", "fixture", "to", "volume", "operations", "If", "not", "otherwise", "specified,", "the", "host", "will", "default", "to", "the\n", "name", "of", "the", "service.", "Some", "things", "like", "aggregates", "care", "that\n", "this", "is", "stable.\n", "set", "root", "logger", "to", "debug\n", "supports", "collecting", "debug", "level", "for", "local", "runs\n", "Collect", "logs\n", "TODO(sdague):", "why", "can't", "we", "send", "level", "through", "the", "fake\n", "logger?", "Tests", "prove", "that", "it", "breaks,", "but", "it's", "worth", "getting\n", "to", "the", "bottom", "of.\n", "Just", "attempt", "to", "format", "debug", "level", "logs,", "but", "don't", "save", "them\n", "Don't", "log", "every", "single", "DB", "migration", "step\n", "At", "times", "we", "end", "up", "calling", "back", "into", "main()", "functions", "in\n", "testing.", "This", "has", "the", "possibility", "of", "calling", "logging.setup\n", "again,", "which", "completely", "unwinds", "the", "logging", "capture", "we've\n", "created", "here.", "Once", "we've", "setup", "the", "logging", "the", "way", "we", "want,\n", "disable", "the", "ability", "for", "the", "test", "to", "change", "this.\n", "If", "timeout", "value", "is", "invalid", "do", "not", "set", "a", "timeout.\n", "If", "you", "encounter", "this", "error,", "you", "might", "be", "tempted", "to", "just", "not\n", "inherit", "from", "NoDBTestCase.", "Bug", "#1568414", "fixed", "a", "few", "hundred", "of", "these\n", "errors,", "and", "not", "once", "was", "that", "the", "correct", "solution.", "Instead,\n", "consider", "some", "of", "the", "following", "tips", "(when", "applicable):\n\n", "-", "mock", "at", "the", "object", "layer", "rather", "than", "the", "db", "layer,", "for", "example:\n", "nova.objects.instance.Instance.get\n", "vs.\n", "nova.db.instance_get\n\n", "-", "mock", "at", "the", "api", "layer", "rather", "than", "the", "object", "layer,", "for", "example:\n", "nova.api.openstack.common.get_instance\n", "vs.\n", "nova.objects.instance.Instance.get\n\n", "-", "mock", "code", "that", "requires", "the", "database", "but", "is", "otherwise", "tangential\n", "to", "the", "code", "you're", "testing", "(for", "example:", "EventReporterStub)\n\n", "-", "peruse", "some", "of", "the", "other", "database", "poison", "warning", "fixes", "here:\n", "https://review.openstack.org/#/q/topic:bug/1568414\n", "NOTE(danms):", "Just", "pass", "through", "the", "context", "without", "actually\n", "targeting", "anything.\n", "NOTE(danms):", "Use", "a", "ReaderWriterLock", "to", "synchronize", "our\n", "global", "database", "muckery", "here.", "If", "we", "change", "global", "db", "state\n", "to", "point", "to", "a", "cell,", "we", "need", "to", "take", "an", "exclusive", "lock", "to\n", "prevent", "any", "other", "calls", "to", "get_context_manager()", "until", "we\n", "reset", "to", "the", "default.\n", "NOTE(melwitt):", "See", "the", "regular", "Database", "fixture", "for", "why\n", "we", "do", "this.\n", "This", "assumes", "the", "next", "local", "DB", "access", "is", "the", "same", "cell", "that\n", "was", "targeted", "last", "time.\n", "Once", "we", "have", "returned", "from", "the", "context,", "we", "need\n", "to", "restore", "the", "default", "context", "manager", "for", "any\n", "subsequent", "calls\n", "NOTE(melwitt):", "This", "is", "a", "hack", "to", "try", "to", "deal", "with\n", "local", "accesses", "i.e.", "non", "target_cell", "accesses.\n", "NOTE(danms):", "Create", "a", "new", "context", "manager", "for", "the", "cell,", "which\n", "will", "house", "the", "sqlite://", "connection", "for", "this", "cell's", "in-memory\n", "database.", "Store/index", "it", "by", "the", "connection", "string,", "which", "is\n", "how", "we", "identify", "cells", "in", "CellMapping.\n", "NOTE(melwitt):", "The", "first", "DB", "access", "through", "service", "start", "is\n", "local", "so", "this", "initializes", "_last_ctxt_mgr", "for", "that", "and", "needs\n", "to", "be", "a", "compute", "cell.\n", "NOTE(danms):", "Record", "which", "context", "manager", "should", "be", "the", "default\n", "so", "we", "can", "restore", "it", "when", "we", "return", "from", "target-cell", "contexts.\n", "If", "none", "has", "been", "provided", "yet,", "store", "the", "current", "one", "in", "case\n", "no", "default", "is", "ever", "specified.\n", "NOTE(danms):", "This", "is", "a", "temporary", "MonkeyPatch", "just", "to", "get\n", "a", "new", "database", "created", "with", "the", "schema", "we", "need", "and", "the\n", "context", "manager", "for", "it", "stashed.\n", "NOTE(danms):", "These", "context", "managers", "are", "in", "place", "for", "the\n", "duration", "of", "the", "test", "(unlike", "the", "temporary", "ones", "above)", "and\n", "provide", "the", "actual", "\"runtime\"", "switching", "of", "connections", "for", "us.\n", "NOTE(pkholkin):", "oslo_db.enginefacade", "is", "configured", "in", "tests", "the", "same\n", "way", "as", "it", "is", "done", "for", "any", "other", "service", "that", "uses", "db\n", "FIXME(danms):", "Right", "now,", "collapse", "all", "connections\n", "to", "a", "single", "bus.", "This", "is", "how", "our", "tests", "expect", "things\n", "to", "work.", "When", "the", "tests", "are", "fixed,", "this", "fixture", "can\n", "support", "simulating", "multiple", "independent", "buses,", "and", "this\n", "hack", "should", "be", "removed.\n", "NOTE(danms):", "This", "will", "be", "called", "with", "a", "non-None", "url", "by\n", "cells-aware", "code", "that", "is", "requesting", "to", "contact", "something", "on\n", "one", "of", "the", "many", "transports", "we're", "multplexing", "here.\n", "NOTE(danms):", "Execute", "the", "init", "with", "get_transport_url()", "as", "None,\n", "instead", "of", "the", "parsed", "TransportURL(None)", "so", "that", "we", "can", "cache\n", "it", "as", "it", "will", "be", "called", "later", "if", "the", "default", "is", "requested", "by\n", "one", "of", "our", "mq-switching", "methods.\n", "NOTE(sdague):", "Make", "deprecation", "warnings", "only", "happen", "once.", "Otherwise\n", "this", "gets", "kind", "of", "crazy", "given", "the", "way", "that", "upstream", "python", "libs", "use\n", "this.\n", "in", "order", "to", "run", "these", "in", "tests", "we", "need", "to", "bind", "only", "to", "local\n", "host,", "and", "dynamically", "allocate", "ports\n", "in", "order", "to", "run", "these", "in", "tests", "we", "need", "to", "bind", "only", "to", "local\n", "host,", "and", "dynamically", "allocate", "ports\n", "NOTE(mikal):", "we", "don't", "have", "root", "to", "manipulate", "iptables,", "so", "just\n", "zero", "that", "bit", "out.\n", "The", "nova", "libvirt", "driver", "starts", "an", "event", "thread", "which", "only\n", "causes", "trouble", "in", "tests.", "Make", "sure", "that", "if", "tests", "don't\n", "properly", "patch", "it", "the", "test", "explodes.\n", "explicit", "import", "because", "MonkeyPatch", "doesn't", "magic", "import\n", "correctly", "if", "we", "are", "patching", "a", "method", "on", "a", "class", "in", "a\n", "module.\n", "noqa\n", "This", "method", "doesn't", "make", "sense", "for", "a", "synchronous", "call,", "it's", "just\n", "defined", "to", "satisfy", "the", "interface.\n", "This", "method", "doesn't", "make", "sense", "for", "a", "synchronous", "call,", "it's", "just\n", "defined", "to", "satisfy", "the", "interface.\n", "This", "method", "doesn't", "make", "sense", "for", "a", "synchronous", "call,", "it's", "just\n", "defined", "to", "satisfy", "the", "interface.\n", "allow", "the", "special", "test", "value", "used", "in\n", "nova.tests.unit.test_notifications.NotificationsTestCase\n", "the", "default", "project_id", "in", "OsaAPIFixtures\n", "the", "default", "project_id", "in", "OSAPIFixtures\n", "Return", "a", "tuple", "in", "order", "to", "raise", "an", "exception.\n", "Signaling", "that", "swap_volume", "has", "encountered", "the", "error\n", "from", "initialize_connection", "and", "is", "working", "on", "rolling", "back\n", "the", "reservation", "on", "SWAP_ERR_NEW_VOL."], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/xenhost.py": ["ALLOWED_NETWORK_CMDS", "AttributeError", "DEFAULT_SLEEP", "DEFAULT_TRIES", "Exception", "False", "IOError", "ImportError", "None", "StandardError", "True", "ValueError", "XenAPI", "XenAPIPlugin", "_", "__name__", "_brctl_add_br", "_brctl_add_if", "_brctl_del_br", "_brctl_del_if", "_brctl_set_fd", "_brctl_set_stp", "_get_config_dict", "_ip_link_add_veth_pair", "_ip_link_del_dev", "_ip_link_get_dev", "_ip_link_set_dev", "_ip_link_set_promisc", "_ovs_add_patch_port", "_ovs_add_port", "_ovs_del_br", "_ovs_del_port", "_ovs_set_if_external_id", "_power_action", "_resume_compute", "_run_command", "_write_config_dict", "action", "arg_dict", "args", "basestring", "bridge_name", "c", "capabilities", "cleanup", "cmd", "cmd_args", "cmd_input", "cmds", "compute_ref", "compute_uuid", "conf", "conf_file", "config", "config_dct", "config_file_path", "cpk", "cpln", "cpuinf", "cpv", "data", "dct", "dev1_name", "dev2_name", "device_name", "dict", "e", "enabled", "extneral_id", "fd", "file", "fnc", "get_config", "get_pci_device_details", "get_pci_type", "host_data", "host_data_pattern", "host_enabled", "host_join", "host_reboot", "host_shutdown", "host_start", "host_uptime", "host_uuid", "if_name", "int", "interface", "iptables_config", "isinstance", "json", "jsonify", "k", "key", "kwargs", "len", "ln", "logging", "map", "methodname", "msg", "mtch", "network_config", "oc", "oc_fld", "ocd", "ock", "ocp", "ocv", "omm", "option", "out", "output", "params", "parse_response", "parsed_data", "pci_device", "peer_port_name", "pluginlib", "port_name", "process_input", "query_gc", "range", "re", "resp", "result", "ret", "ret_dict", "ret_str", "safe_int", "self", "session", "set_config", "set_host_enabled", "sr_uuid", "status", "str", "strip_kv", "sys", "time", "utils", "v", "val", "value", "vdi_uuid", "wrapper", "xmlrpclib", "Return", "the", "value", "stored", "for", "the", "specified", "key,", "or", "None", "if", "no", "match.\nWrite", "the", "specified", "key/value", "pair,", "overwriting", "any", "existing", "value.\nnetwork", "config", "functions\nReboots", "the", "host.\nReboots", "the", "host.\nReturns", "the", "result", "of", "the", "uptime", "command", "on", "the", "xenhost.", "Copyright", "2011", "OpenStack", "Foundation\n", "Copyright", "2011", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n\n", "XenAPI", "plugin", "for", "host", "operations\n\n", "noqa\n", "session", "is", "valid", "if", "the", "join", "operation", "has", "failed\n", "if", "session", "is", "invalid,", "e.g.", "xapi", "has", "restarted,", "then", "the", "pool\n", "join", "has", "been", "successful,", "wait", "for", "xapi", "to", "become", "alive", "again\n", "Should", "be", "empty", "string\n", "Return", "the", "current", "enabled", "status\n", "File", "doesn't", "exist\n", "Create", "the", "file\n", "Can't", "jsonify", "None\n", "Delete", "the", "key,", "if", "present\n", "command", "should", "be", "either", "save", "or", "restore\n", "either", "execute", "iptable-save", "or", "iptables-restore\n", "command", "must", "be", "only", "one", "of", "these", "two\n", "process_input", "must", "be", "used", "only", "with", "iptables-restore\n", "else", "don't", "do", "anything", "and", "return", "an", "error\n", "allowed", "cmds", "to", "config", "OVS", "bridge\n", "Host", "must", "be", "disabled", "first\n", "All", "running", "VMs", "must", "be", "shutdown\n", "Should", "be", "empty", "string\n", "We", "have", "the", "raw", "dict", "of", "values.", "Extract", "those", "that", "we", "need,\n", "and", "convert", "the", "data", "types", "as", "needed.\n", "Add", "any", "config", "settings\n", "Not", "a", "valid", "line;", "skip", "it\n", "sbs", "=", "dct.get(\"supported-bootloaders\",", "\"\")\n", "out[\"host_supported-bootloaders\"]", "=", "sbs.split(\";", "\")\n", "out[\"host_suspend-image-sr-uuid\"]", "=", "dct.get(\"suspend-image-sr-uuid\",", "\"\")\n", "out[\"host_crash-dump-sr-uuid\"]", "=", "dct.get(\"crash-dump-sr-uuid\",", "\"\")\n", "out[\"host_local-cache-sr\"]", "=", "dct.get(\"local-cache-sr\",", "\"\")\n", "out[\"host_API-version\"]", "=", "avv", "=", "{}\n", "avv[\"vendor\"]", "=", "dct.get(\"API-version-vendor\",", "\"\")\n", "avv[\"major\"]", "=", "safe_int(dct.get(\"API-version-major\",", "\"\"))\n", "avv[\"minor\"]", "=", "safe_int(dct.get(\"API-version-minor\",", "\"\"))\n", "out[\"host_host-metrics-live\"]", "=", "dct.get(\n", "\"host-metrics-live\",", "\"false\")", "==", "\"true\"\n", "out[\"host_allowed-operations\"]", "=", "dct.get(\n", "\"allowed-operations\",", "\"\").split(\";", "\")\n", "lsrv", "=", "dct.get(\"license-server\",", "\"\")\n", "out[\"host_license-server\"]", "=", "ols", "=", "{}\n", "if", "lsrv:\n", "for", "lspart", "in", "lsrv.split(\";", "\"):\n", "lsk,", "lsv", "=", "lspart.split(\":", "\")\n", "if", "lsk", "==", "\"port\":\n", "ols[lsk]", "=", "safe_int(lsv)\n", "else:\n", "ols[lsk]", "=", "lsv\n", "sv", "=", "dct.get(\"software-version\",", "\"\")\n", "out[\"host_software-version\"]", "=", "osv", "=", "{}\n", "if", "sv:\n", "for", "svln", "in", "sv.split(\";", "\"):\n", "svk,", "svv", "=", "strip_kv(svln)\n", "osv[svk]", "=", "svv\n", "out[\"host_edition\"]", "=", "dct.get(\"edition\",", "\"\")\n", "out[\"host_external-auth-service-name\"]", "=", "dct.get(\n", "\"external-auth-service-name\",", "\"\")\n", "Example", "output:", "\"Currently", "running:", "True\"\n", "We", "need", "to", "add", "the", "domain", "if", "it", "is", "missing\n", "Support", "both", "serialized", "and", "non-serialized", "plugin", "approaches"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_compute_mgr.py": ["CONF", "ComputeManagerTestCase", "False", "True", "_test", "cast_as_call", "cfg", "context", "fake_network", "fake_server_actions", "filter_properties", "fixtures", "flavor", "instance", "mock", "mock_can", "mock_cinoh", "mock_notify", "mock_spawn", "objects", "self", "super", "test", "Simulate", "that", "we're", "on", "the", "last", "retry", "attempt"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/config_drive.py": ["ALIAS", "ATTRIBUTE_NAME", "ConfigDriveController", "False", "alias", "body_deprecated_param", "cd_policies", "context", "controller", "create_kwargs", "db_server", "extension", "extensions", "id", "name", "req", "resp_obj", "schema_config_drive", "self", "server", "server_dict", "servers", "version", "wsgi", "Config", "Drive", "extension.\nConfig", "Drive", "Extension.", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'show'/'detail'", "methods.\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/multinic.py": ["False", "add_fixed_ip", "parameter_types", "remove_fixed_ip", "The", "maxLength", "is", "from", "the", "column", "'uuid'", "of", "the\n", "table", "'networks'"], "/Users/mehranhassani/repos/nova/nova/conf/hyperv.py": ["False", "cfg", "conf", "hyperv_opt_group", "hyperv_opts"], "/Users/mehranhassani/repos/nova/nova/policies/security_groups.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "security_groups_policies"], "/Users/mehranhassani/repos/nova/nova/vnc/xvp_proxy.py": ["CONF", "Exception", "IOError", "LOG", "None", "SafeHttpProtocol", "True", "XCPVNCProxy", "_LI", "__name__", "api", "b", "client", "connect_info", "consoleauth_rpcapi", "context", "ctxt", "d", "data", "dest", "e", "environ", "eventlet", "host", "int", "len", "logging", "nova", "object", "port", "req", "self", "server", "socket", "sockets", "source", "start_response", "t0", "t1", "t2", "token", "utils", "version", "webob", "wsgi", "Eventlet", "WSGI", "Services", "to", "proxy", "VNC", "for", "XCP", "protocol.\nClass", "to", "use", "the", "xvp", "auth", "protocol", "to", "proxy", "instance", "vnc", "consoles.\nProxy", "tcp", "connection", "from", "source", "to", "dest.\nExecute", "hypervisor-specific", "vnc", "auth", "handshaking", "(if", "needed).\nSpawn", "bi-directional", "vnc", "proxy.", "If", "recv", "fails,", "send", "a", "write", "shutdown", "the", "other", "direction\n", "If", "send", "fails,", "terminate", "proxy", "in", "both", "directions\n", "sendall", "raises", "an", "exception", "on", "write", "error,", "unlike", "send\n", "Handshake", "as", "necessary\n", "Make", "sure", "our", "sockets", "are", "closed"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1554631.py": ["False", "TestCinderForbidden", "TestCinderOverLimit", "True", "api_fixture", "cinder_client", "cinder_exceptions", "client", "e", "exc", "force", "mock", "mock_cinder", "nova_fixtures", "policy_fixture", "self", "snap", "super", "test", "volume", "1554631.\n1554631.\n", "Make", "sure", "we", "went", "over", "on", "volumes\n1554631.\n1554631.\n", "Make", "sure", "we", "went", "over", "on", "snapshots"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/test_compute_req_id.py": ["app", "application", "compute_req_id", "context", "matchers", "req", "req_id", "res", "res_id", "self", "test", "webob"], "/Users/mehranhassani/repos/nova/tools/xenserver/cleanup_sm_locks.py": ["BASE", "False", "IndexError", "OSError", "ValueError", "__name__", "_get_age_days", "_parse_args", "args", "days_old", "e", "errno", "float", "int", "len", "lock_age_days", "lockname", "locknames", "lockpath", "lockpaths_removed", "main", "nsname", "nspath", "nspaths_removed", "options", "optparse", "os", "parser", "removed", "secs", "sys", "time", "Copyright", "2013", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");\n", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.\n", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,\n", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.\n", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and\n", "limitations", "under", "the", "License.\n", "Remove", "old", "lockfiles\n", "Remove", "empty", "namespace", "paths"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_pipelib.py": ["CONF", "None", "PipelibTest", "_do_test", "cfg", "context", "crypto", "group_name", "key_name", "mock", "mock_create", "pipelib", "res1_group", "res1_key", "res2_group", "res2_key", "ret", "self", "super", "test", "tmpdir", "utils", "First", "attempt,", "does", "not", "exist", "(thus", "its", "created)\n", "Second", "attempt,", "it", "exists", "in", "the", "DB\n", "First", "attempt,", "key", "does", "not", "exist", "(thus", "it", "is", "generated)\n", "Second", "attempt,", "it", "exists", "in", "the", "DB"], "/Users/mehranhassani/repos/nova/nova/conf/netconf.py": ["False", "cfg", "conf", "netconf_opts", "netutils", "socket"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/security_groups.py": ["ALIAS", "ATTRIBUTE_NAME", "False", "KeyError", "LOG", "MAX_PROXY_API_SUPPORT_VERSION", "None", "SecurityGroupActionController", "SecurityGroupController", "SecurityGroupControllerBase", "SecurityGroupRulesController", "SecurityGroupsOutputController", "ServerSecurityGroupController", "True", "TypeError", "_", "__name__", "_authorize_context", "action", "alias", "args", "body", "body_deprecated_param", "cidr", "common", "compute", "context", "create_kwargs", "dict", "exc", "exception", "exp", "extensions", "formatted_rule", "from_port", "group", "group_description", "group_id", "group_name", "group_ref", "group_rule_data", "groups", "id", "instance", "ip_protocol", "jsonutils", "k", "key", "kwargs", "len", "limited_list", "list", "logging", "method", "msg", "name", "net", "netutils", "new_rule", "object", "openstack_driver", "parent_group_id", "prefixlen", "project_id", "raw_groups", "req", "req_obj", "resp_obj", "result", "rule", "schema_security_groups", "search_opts", "secgrp_act_ext", "secgrp_ext", "secgrp_output_ext", "secgrp_rules_ext", "security_group", "security_group_data", "security_group_rule", "security_groups", "self", "server", "server_dict", "server_id", "server_secgrp_ext", "servers", "set", "sg", "sg_instance_bindings", "sg_policies", "sg_rule", "sorted", "source_group", "super", "to_port", "value", "version", "wsgi", "The", "security", "groups", "extension.\nBase", "class", "for", "Security", "Group", "controllers.\nThe", "Security", "group", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "data", "about", "the", "given", "security", "group.\nDelete", "a", "security", "group.\nReturns", "a", "list", "of", "security", "groups.\nCreates", "a", "new", "security", "group.\nUpdate", "a", "security", "group.\nReturns", "a", "list", "of", "security", "groups", "for", "the", "given", "instance.\nSecurity", "group", "support.", "NOTE(arosen):", "There", "is", "a", "possible", "race", "condition", "that", "can\n", "occur", "here", "if", "two", "api", "calls", "occur", "concurrently:", "one", "that\n", "lists", "the", "security", "groups", "and", "another", "one", "that", "deletes", "a\n", "security", "group", "rule", "that", "has", "a", "group_id", "before", "the\n", "group_id", "is", "fetched.", "To", "handle", "this", "if\n", "SecurityGroupNotFound", "is", "raised", "we", "return", "None", "instead\n", "of", "the", "rule", "and", "the", "caller", "should", "ignore", "the", "rule.\n", "check", "if", "groupId", "exists\n", "TODO(arosen)", "this", "function", "should", "be", "refactored", "to", "reduce", "duplicate\n", "code", "and", "use", "get_instance_security_groups", "instead", "of", "get_db_instance.\n", "If", "method", "is", "a", "POST", "we", "get", "the", "security", "groups", "intended", "for", "an\n", "instance", "from", "the", "request.", "The", "reason", "for", "this", "is", "if", "using\n", "neutron", "security", "groups", "the", "requested", "security", "groups", "for", "the\n", "instance", "are", "not", "in", "the", "db", "and", "have", "not", "been", "sent", "to", "neutron", "yet.\n", "In", "this", "section", "of", "code", "len(servers)", "==", "1", "as", "you", "can", "only", "POST\n", "one", "server", "in", "an", "API", "request.\n", "try", "converting", "to", "json\n", "Add", "security", "group", "to", "server,", "if", "no", "security", "group", "was", "in\n", "request", "add", "default", "since", "that", "is", "the", "group", "it", "is", "part", "of\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1."], "/Users/mehranhassani/repos/nova/nova/network/security_group/neutron_driver.py": ["Exception", "False", "LOG", "MAX_SEARCH_IDS", "None", "True", "TypeError", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_chunk_by_ids", "allowed", "any", "body", "context", "converted_rules", "deferred_ip", "description", "detailed", "e", "exc", "exc_info", "exception", "excutils", "found_security_group", "group", "has_ip", "id", "id_is_uuid", "ids", "instance", "instances_security_group_bindings", "len", "limit", "list_all_tenants", "logging", "map_exception", "msg", "n_exc", "name", "names", "neutron", "neutronapi", "neutronv20", "new_rule", "new_rules", "nova_group", "nova_rule", "params", "port", "port_security_enabled", "port_sg", "port_sg_id", "ports", "project", "property", "range", "rule", "rule_id", "rule_ids", "rules", "search_opts", "search_results", "security_group", "security_group_base", "security_group_id", "security_group_name", "security_groups", "self", "server", "servers", "set", "sg", "sg_bindings", "sg_entry", "sg_id", "sg_id_list", "sg_ids", "sg_search_opts", "six", "sys", "updated_port", "utils", "uuidutils", "vals", "value", "values", "Returns", "list", "of", "security", "group", "rules", "owned", "by", "tenant.\nThis", "function", "deletes", "a", "security", "group.\nReturns", "a", "list", "of", "ports", "used", "by", "the", "servers.\nReturns", "a", "dict", "of", "security", "groups", "keyed", "by", "their", "ids.\nAdd", "security", "group", "to", "the", "instance.\nRemove", "the", "security", "group", "associated", "with", "the", "instance.", "NOTE:", "Neutron", "client", "has", "a", "max", "URL", "length", "of", "8192,", "so", "we", "have\n", "to", "limit", "the", "number", "of", "IDs", "we", "include", "in", "any", "single", "search.", "Really\n", "doesn't", "seem", "to", "be", "any", "point", "in", "making", "this", "a", "config", "value.\n", "TODO(arosen)", "Cannot", "raise", "generic", "response", "from", "neutron", "here\n", "as", "this", "error", "code", "could", "be", "related", "to", "bad", "input", "or", "over\n", "quota\n", "TODO(arosen)", "Cannot", "raise", "generic", "response", "from", "neutron", "here\n", "as", "this", "error", "code", "could", "be", "related", "to", "bad", "input", "or", "over\n", "quota\n", "NOTE:", "If", "using", "nova-network", "as", "the", "backend,", "min_length", "is", "1.", "However\n", "if", "using", "Neutron,", "Nova", "has", "allowed", "empty", "string", "as", "its", "history.\n", "So", "this", "min_length", "should", "be", "0", "for", "passing", "the", "existing", "requests.\n", "NOTE(flwang):", "The", "project", "id", "should", "be", "honoured", "so", "as", "to", "get\n", "the", "correct", "security", "group", "id", "when", "user(with", "admin", "role", "but\n", "non-admin", "project)", "try", "to", "query", "by", "name,", "so", "as", "to", "avoid\n", "getting", "more", "than", "duplicated", "records", "with", "the", "same", "name.\n", "NOTE(jeffrey4l):", "list", "all", "the", "security", "groups", "when", "following\n", "conditions", "are", "met\n", "*", "names", "and", "ids", "don't", "exist.\n", "*", "it", "is", "admin", "context", "and", "all_tenants", "exist", "in", "search_opts.\n", "*", "project", "is", "not", "specified.\n", "NOTE(jeffrey4l):", "The", "neutron", "doesn't", "have", "`all-tenants`", "concept.\n", "All", "the", "security", "group", "will", "be", "returned", "if", "the", "project/tenant\n", "id", "is", "not", "passed.\n", "nova", "only", "supports", "ingress", "rules", "so", "all", "rules", "are", "ingress.\n", "FIXME(arosen)", "Nova", "does", "not", "expose", "ethertype", "on", "security", "group\n", "rules.", "Therefore,", "in", "the", "case", "of", "self", "referential", "rules", "we\n", "should", "probably", "assume", "they", "want", "to", "allow", "both", "IPv4", "and", "IPv6.\n", "Unfortunately,", "this", "would", "require", "adding", "two", "rules", "in", "neutron.\n", "The", "reason", "we", "do", "not", "do", "this", "is", "because", "when", "the", "user", "using", "the\n", "nova", "api", "wants", "to", "remove", "the", "rule", "we'd", "have", "to", "have", "some", "way", "to\n", "know", "that", "we", "should", "delete", "both", "of", "these", "rules", "in", "neutron.\n", "For", "now,", "self", "referential", "rules", "only", "support", "IPv4.\n", "The", "ec2", "api", "allows", "one", "to", "delete", "multiple", "security", "group", "rules\n", "at", "once.", "Since", "there", "is", "no", "bulk", "delete", "for", "neutron", "the", "best\n", "thing", "we", "can", "do", "is", "delete", "the", "rules", "one", "by", "one", "and", "hope", "this\n", "works....", ":/\n", "Note:", "Have", "to", "split", "the", "query", "up", "as", "the", "search", "criteria\n", "form", "part", "of", "the", "URL,", "which", "has", "a", "fixed", "max", "size\n", "Find", "the", "set", "of", "unique", "SecGroup", "IDs", "to", "search", "for\n", "Note:", "Have", "to", "split", "the", "query", "up", "as", "the", "search", "criteria\n", "form", "part", "of", "the", "URL,", "which", "has", "a", "fixed", "max", "size\n", "Note:", "have", "to", "check", "we", "found", "port_sg", "as", "its", "possible\n", "the", "port", "has", "an", "SG", "that", "this", "user", "doesn't", "have", "access", "to\n", "name", "is", "optional", "in", "neutron", "so", "if", "not", "specified\n", "return", "id\n", "When", "removing", "a", "security", "group", "from", "an", "instance", "the", "security\n", "group", "should", "be", "on", "both", "ports", "since", "it", "was", "added", "this", "way", "if\n", "done", "through", "the", "nova", "api.", "In", "case", "it", "is", "not", "a", "404", "is", "only\n", "raised", "if", "the", "security", "group", "is", "not", "found", "on", "any", "of", "the\n", "ports", "on", "the", "instance."], "/Users/mehranhassani/repos/nova/nova/hacking/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_flavors.py": ["args", "e", "exception", "flavors", "key_name_list", "lists", "self", "test", "x", "Tests", "for", "flavor", "basic", "functions"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1548980.py": ["REQUIRES_LOCKING", "TestServerGet", "True", "api_fixture", "cast_as_call", "client", "dict", "len", "nova", "nova_fixtures", "policy_fixture", "range", "self", "server", "servers", "super", "test", "time", "x", "The", "non-admin", "API", "client", "is", "fine", "to", "stay", "at", "2.1", "since", "it", "just", "creates\n", "and", "deletes", "the", "server.\n", "The", "admin", "API", "client", "needs", "to", "be", "at", "microversion", "2.16", "to", "exhibit", "the\n", "regression.\n", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n1548980.\n", "Wait", "30", "seconds", "for", "it", "to", "be", "gone.\n", "host_status", "is", "returned", "in", "the", "2.16", "microversion", "and", "since", "the", "server\n", "is", "deleted", "it", "should", "be", "the", "empty", "string"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_net.py": ["CONF", "False", "None", "True", "conf", "connection_info", "flags_user", "flags_uuid", "found_hosts", "host", "hosts", "iscsi_name", "libvirt_driver", "mock", "mock_create", "mock_delete", "mock_find", "net", "nova", "ports", "rbd_name", "secret_type", "self", "test_volume", "tree", "volume", "Tests", "the", "libvirt", "network", "volume", "driver.", "The", "values", "from", "the", "cinder", "connection_info", "take", "precedence", "over\n", "nova.conf", "values.\n", "NOTE:", "Supplying", "the", "rbd_secret_uuid", "will", "enable", "authentication\n", "locally", "in", "nova-compute", "even", "if", "not", "enabled", "in", "nova-volume/cinder"], "/Users/mehranhassani/repos/nova/nova/conf/paths.py": ["ALL_OPTS", "__file__", "args", "cfg", "conf", "os", "sys", "Return", "an", "uninterpolated", "path", "relative", "to", "$pybasedir.\nReturn", "an", "uninterpolated", "path", "relative", "to", "$bindir.\nReturn", "an", "uninterpolated", "path", "relative", "to", "$state_path."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_cloudpipe.py": ["ADMIN_API", "CONF", "CloudPipeSampleTest", "True", "api_sample_base", "context", "fake", "get_user_data", "network_api_get", "network_uuid", "nova", "project_id", "response", "sample_dir", "self", "str", "subs", "super", "uuid_lib", "vanilla_regexes", "Stub", "method", "to", "generate", "user", "data", "for", "cloudpipe", "tests.\nStub", "to", "get", "a", "valid", "network", "and", "its", "information.", "Get", "api", "samples", "of", "cloud", "pipe", "extension", "creation.\n", "Get", "api", "samples", "of", "cloud", "pipe", "extension", "get", "request."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/314_add_resource_provider_tables.py": ["Column", "False", "Float", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "allocations", "compute_nodes", "inventories", "meta", "migrate_engine", "resource_providers", "table", "table_name", "uuid_column", "Database", "migrations", "for", "resource-providers."], "/Users/mehranhassani/repos/nova/nova/conf/key_manager.py": ["castellan_opts", "cfg", "conf", "group", "key_manager_group", "key_manager_opts", "options", "opts", "TODO(raj_singh):", "Deprecate", "or", "move", "this", "option", "to", "The", "Castellan", "library\n", "Castellan", "library", "also", "has", "a", "group", "name", "key_manager.", "So", "if\n", "we", "append", "list", "returned", "from", "Castellan", "to", "this", "list,", "oslo", "will", "remove\n", "one", "group", "as", "duplicate", "and", "only", "one", "group", "(either", "from", "this", "file", "or\n", "Castellan", "library)", "will", "show", "up.", "So", "fix", "is", "to", "merge", "options", "of", "same\n", "group", "name", "from", "this", "file", "and", "Castellan", "library\n", "TODO(raj_singh):", "When", "the", "last", "option", "\"fixed_key\"", "is", "removed/moved", "from\n", "this", "file,", "then", "comment", "in", "code", "below", "and", "delete", "the", "code", "block", "above.\n", "Castellan", "already", "returned", "a", "list", "which", "can", "be", "returned\n", "directly", "from", "list_opts()\n", "return", "castellan_opts.list_opts()"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/floating_ips_bulk.py": ["ALIAS", "CONF", "FloatingIPBulkController", "MAX_PROXY_API_SUPPORT_VERSION", "None", "ValueError", "_", "addr", "address", "addresses", "alias", "body", "context", "e", "exc", "exception", "extensions", "fib_policies", "fixed_ip", "floating_ip", "floating_ip_info", "floating_ips", "floating_ips_bulk", "host", "id", "instance_uuid", "interface", "ip_range", "ips", "msg", "name", "net", "netaddr", "nova", "objects", "params", "pool", "reason", "req", "resource", "result", "self", "six", "str", "validation", "version", "webob", "wsgi", "Return", "a", "list", "of", "all", "floating", "IPs.\nReturn", "a", "list", "of", "all", "floating", "IPs", "for", "a", "given", "host.\nBulk", "create", "floating", "IPs.\nBulk", "delete", "floating", "IPs.\nBulk", "handling", "of", "Floating", "IPs."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_serialproxy.py": ["False", "None", "SerialProxyTestCase", "True", "exception", "fake_socket", "job", "mock", "mock_accept_con", "mock_conn", "mock_setup_socket", "mock_socket", "self", "serialproxy", "socket", "super", "test_base", "thread", "threading_patcher"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_flavor_access.py": ["ADMIN_API", "FlavorAccessTestsBase", "FlavorAccessV27SampleJsonTests", "True", "api_sample_base", "exp_subs", "flavor_id", "microversion", "response", "sample_dir", "scenarios", "self", "subs", "super", "Version", "2.7+", "will", "return", "HTTPConflict", "(409)\n", "if", "the", "flavor", "is", "public"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_hostops.py": ["CONF", "FAKE_ARCHITECTURE", "FAKE_INSTANCE_DIR", "FAKE_LOCAL_IP", "FAKE_MANUFACTURER", "FAKE_NAME", "FAKE_NUM_CPUS", "FAKE_TICK_COUNT", "False", "HostOpsTestCase", "None", "NotImplementedError", "True", "action", "cfg", "constants", "datetime", "expected", "expected_response", "fake_gpus", "fkey", "getitem", "hostops", "info", "int", "jsonutils", "key", "list", "mock", "mock_cpu_info", "mock_get_cpu_info", "mock_get_gpu_info", "mock_get_hypervisor_version", "mock_get_memory_info", "mock_get_storage_info_gb", "mock_gpu_info", "mock_node", "mock_processors", "mock_time", "os_win_const", "response", "response_higher", "response_lower", "ret_val", "self", "str", "super", "tdelta", "test_base", "units", "Unit", "tests", "for", "the", "Hyper-V", "HostOps", "class."], "/Users/mehranhassani/repos/nova/nova/policies/suspend_server.py": ["POLICY_ROOT", "base", "policy", "suspend_server_policies"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/image/bittorrent.py": ["CONF", "LOG", "NotImplementedError", "RuntimeError", "_", "_LW", "__name__", "_default_torrent_url_fn", "context", "image_id", "instance", "logging", "lookup_fn", "nova", "object", "params", "self", "session", "staticmethod", "urlparse", "vdi_uuids", "vdis", "vm_utils"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_linux_net.py": ["CONF", "False", "HOST", "IOError", "LinuxNetworkTestCase", "None", "OSError", "REQUIRES_LOCKING", "True", "_", "_context", "_execute", "actual", "actual_hosts", "actual_opts", "address", "addresses", "args", "bridge", "calendar", "calls", "chain", "cleaned", "cmd", "context", "data", "datetime", "datum", "db", "default_domain", "dev", "device_exists", "dhcp", "domain", "driver", "dup_forward_rules", "empty_ret", "err", "ex", "exc", "exception", "executes", "existing", "expected", "expected_execute_args", "expected_exists_args", "expected_opts", "extra_expected", "fake_add_dhcp_mangle_rule", "fake_device_exists", "fake_ensure", "fake_execute", "fake_ifaces", "fake_mac", "fake_open", "fake_remove", "fake_sleep", "fileutils", "fixed_ips", "fixedip", "fixedips", "gateway", "get_associated", "get_instance", "get_vifs", "host", "iface", "ifaddresses", "info", "instance", "instance_id", "instance_uuid", "instances", "int", "interface", "interface_type", "interval", "is_external", "jsonutils", "lease", "leases", "len", "linux_net", "ln", "mac_address", "manager", "max_calls", "mock", "mock_create_cmd", "mock_device_exists", "mock_execute", "mock_exists", "mock_set_device_mtu", "mock_vsctl", "mox", "mtu", "net", "netifaces", "network", "network_id", "network_model", "network_ref", "networks", "nova", "objects", "os", "processutils", "re", "result", "routes", "rule", "seconds_since_epoch", "self", "staticmethod", "str", "super", "test", "test_ensure", "time", "timestamp", "timeutils", "tuple", "two_forward_rules", "use_slave", "utils", "uuids", "verify_add_rule", "vif", "vifs", "vlan", "Negative", "general", "case\n", "Negative", "case", "that", "would", "be", "a", "thing", "we", "would", "want", "to", "skip\n", "Positive", "matching", "case\n", "Negative", "case.", "This", "would", "match", "except", "we", "throw", "an", "IOError/OSError\n", "because", "the", "file", "couldn't", "be", "read", "or", "opened,", "this", "should", "then", "fail.\n", "NOTE(vish):", "use", "a", "fresh", "copy", "of", "the", "manager", "for", "each", "test\n", "We", "have", "to", "bypass", "the", "CONF.fake_network", "check", "so", "that", "netifaces\n", "is", "actually", "called.\n", "ip", "failed,", "fall", "back", "to", "tunctl\n", "if", "creation", "of", "a", "tap", "by", "the", "means", "of", "ip", "command", "fails,\n", "create_tap_dev()", "will", "try", "to", "do", "that", "by", "the", "means", "of", "tunctl\n", "but", "tunctl", "can't", "create", "multiqueue", "taps,", "so", "the", "failure", "is", "expected"], "/Users/mehranhassani/repos/nova/nova/console/manager.py": ["CONF", "ConsoleProxyManager", "LOG", "None", "_LI", "__name__", "args", "compute_rpcapi", "console", "console_data", "console_driver", "console_id", "console_type", "context", "exception", "host", "importutils", "instance", "instance_host", "instance_id", "kwargs", "logging", "manager", "messaging", "name", "nova", "objects", "password", "pool", "pool_info", "port", "self", "super", "target", "utils", "Console", "Proxy", "Service.", "NOTE(mdragon):", "Right", "now,", "the", "only", "place", "this", "info", "exists", "is", "the\n", "compute", "worker's", "flagfile,", "at", "least", "for\n", "xenserver.", "Thus", "we", "ned", "to", "ask."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_floating_ips_bulk.py": ["CONF", "FloatingIPBulkDeprecationTest", "FloatingIPBulkPolicyEnforcementV21", "FloatingIPBulkV21", "None", "arg", "bad_request", "body", "cfg", "context", "exc", "exception", "fakes", "fipbulk_v21", "fixed_address", "fixed_ip", "floating_address", "floating_ip", "floating_ips_bulk", "floating_list", "func", "instance_uuid", "ip_addr", "ip_info", "ip_range", "kwarg", "mock", "mock_get", "netaddr", "objects", "pool", "req", "res_dict", "response", "rule", "rule_name", "self", "str", "super", "test", "uuids", "webob", "Check", "that", "the", "IPs", "are", "actually", "deleted\n", "netaddr", "can't", "handle", "/32", "or", "31", "cidrs"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_imagecache.py": ["CONF", "FAKE_FORMAT", "FAKE_IMAGE_REF", "FAKE_VHD_SIZE_GB", "False", "ImageCacheTestCase", "None", "True", "backing_files", "base_vhd_dir", "calls", "cfg", "constants", "exception", "expected_path", "expected_resized_vhd_path", "expected_vhd_path", "fake_images", "fake_img_path", "fake_instance", "fake_rescue_image_id", "fake_used_images", "fixtures", "ignored_file", "image", "image_file_name", "imagecache", "images", "list", "mock", "mock_age_cached_images", "mock_fetch", "mock_flavor", "mock_get_backing_files", "mock_get_vhd_size_gb", "mock_internal_vhd_size", "mock_list_images", "mock_list_instances", "mock_listdir", "mock_resize", "mock_utime", "objects", "old_flavor", "original_image", "os", "patched_get_hostutils", "patched_get_vhdutils", "path_exists", "rescue_image_id", "result", "ret_val", "self", "super", "test_base", "test_flavor", "unexplained_image", "units", "use_cow", "uuids", "Unit", "tests", "for", "the", "Hyper-V", "ImageCache", "class.", "utilsfactory", "will", "check", "the", "host", "OS", "version", "via", "get_hostutils,\n", "in", "order", "to", "return", "the", "proper", "Utils", "Class,", "so", "it", "must", "be", "mocked.\n", "path", "doesn't", "exist", "until", "fetched."], "/Users/mehranhassani/repos/nova/nova/conf/crypto.py": ["False", "cfg", "conf", "crypto_opts", "crypto_opts_group", "os", "paths"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_tags.py": ["False", "NON_EXISTING_UUID", "None", "ServerTagsTest", "TAG1", "TAG2", "TAG3", "TAGS", "True", "UUID", "api_version", "compute_api", "context", "exc", "exception", "expected_attrs", "ext_info", "extension_info", "fake_db_delete_tag", "fake_instance", "fake_tags", "fakes", "i", "instance", "instance_id", "instance_uuid", "len", "location", "method", "mock", "mock_db_add_inst_tags", "mock_db_delete_inst_tags", "mock_db_get_inst_tags", "mock_db_set_inst_tags", "mock_exists", "models", "range", "req", "request", "res", "return_invalid_server", "return_server", "self", "server_tags", "servers", "servers_controller", "str", "super", "tag", "tag_name", "tag_obj", "test", "url", "vm_states"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_networks.py": ["CONF", "FAKE_NETWORKS", "FAKE_NETWORK_PROJECT_ID", "FAKE_USER_NETWORKS", "FakeNetworkAPI", "False", "NEW_NETWORK", "NetworkCreateExceptionsTestV21", "NetworksAssociateDeprecationTest", "NetworksAssociateEnforcementV21", "NetworksAssociateTestV21", "NetworksDeprecationTest", "NetworksEnforcementV21", "NetworksTestV21", "None", "True", "UTC", "_sentinel", "add", "args", "associate", "body", "cfg", "code", "context", "copy", "cxt", "datetime", "delete", "delete_method", "disassociate", "enumerate", "exc", "exception", "expected", "fake_create", "fake_get_all", "fakes", "fixed_net_v4", "get_all", "host", "i", "index", "int", "iso8601", "key", "kwargs", "list", "manager", "math", "max", "method", "mock", "mock_add", "mock_get_all", "n", "net", "netaddr", "nets", "network", "network_id", "network_uuid", "networks_associate_v21", "networks_v21", "neutron", "new_id", "new_networks", "nova", "object", "objects", "objs", "prefixlen_v4", "project", "project_id", "project_only", "req", "res", "res_dict", "ret", "rule_name", "self", "staticmethod", "str", "subnet_bits", "subnet_v4", "subnets_v4", "super", "test", "uuid", "uuids", "validation_error", "webob", "NOTE:", "This", "is", "a", "workaround", "for", "passing", "unit", "tests.\n", "When", "using", "nova-network,", "'injected'", "value", "should", "be\n", "boolean", "because", "of", "the", "definition", "of", "objects.Network().\n", "However,", "'injected'", "value", "can", "be", "None", "if", "neutron.\n", "So", "here", "changes", "the", "value", "to", "False", "just", "for", "passing\n", "following", "_from_db_object().\n", "NOTE(vish):", "tests", "that", "network", "create", "Exceptions", "actually", "return\n", "the", "proper", "error", "responses\n", "NOTE:", "On", "v2.1", "code,", "delete", "method", "doesn't", "return", "anything", "and\n", "the", "status", "code", "is", "decorated", "on", "wsgi_code", "of", "the", "method."], "/Users/mehranhassani/repos/nova/nova/cmd/conductor.py": ["CONF", "config", "gmr", "logging", "nova", "objects", "processutils", "server", "service", "sys", "utils", "version", "workers", "Starter", "script", "for", "Nova", "Conductor."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/migrate_server.py": ["False", "block_migration", "copy", "host", "migrate_live", "migrate_live_v2_25", "migrate_live_v2_30", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/policies/flavor_manage.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "flavor_manage_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/247_nullable_mismatch.py": ["False", "MetaData", "Table", "True", "meta", "migrate_engine", "pci_devices", "quota_usages"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/storage/lvm.py": ["CONF", "False", "LOG", "RuntimeError", "True", "_", "_LW", "__name__", "_err", "_zero_volume", "bs", "check_size", "clear_volume", "cmd", "dict", "direct_flags", "err", "errors", "exception", "exp", "free_space", "get_volume_group_info", "get_volume_size", "info", "int", "len", "line", "logging", "lv", "lvremove", "nova", "out", "path", "paths", "preallocated_space", "processutils", "remaining_bytes", "seek_blocks", "six", "size", "sparse", "sync_flags", "units", "utils", "vg", "vg_info", "volume_clear", "volume_clear_size", "volume_size", "zero_blocks", "zero_cmd", "zip", "Remove", "one", "or", "more", "logical", "volume.Seg':", "'1',", "'Move':", "'',", "'Log':", "'',", "'Meta%':", "'',", "'Min':", "'-1',\nLV':", "'3',\nExt':", "'12799',", "'Attr':", "'-wi-a-----',", "'VG':", "'vg',\nPV':", "'1',", "'#VMdaCps':", "'unmanaged'}\n", "The", "loop", "efficiently", "writes", "zeros", "using", "dd,\n", "and", "caters", "for", "versions", "of", "dd", "that", "don't", "have\n", "the", "easier", "to", "use", "iflag=count_bytes", "option.\n", "Limit", "to", "3", "iterations\n", "Use", "O_DIRECT", "with", "initial", "block", "size", "and", "fdatasync", "otherwise\n", "NOTE(p-draigbrady):", "we", "could", "use", "shred", "to", "do", "the", "zeroing\n", "with", "-n0", "-z,", "however", "only", "versions", ">=", "8.22", "perform", "as", "well", "as", "dd"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/002_instance_mapping.py": ["Column", "DateTime", "False", "ForeignKeyConstraint", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "cell_mappings", "instance_mappings", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_policy_check.py": ["CONF", "Exception", "None", "StringIO", "TestPolicyCheck", "True", "actual_target", "admin_context", "base_policies", "category_name", "context", "db", "db_context", "exception", "expected_return_value", "expected_rules", "expected_target", "fake_instance", "fake_rules", "fixtures", "given_target", "ia_policies", "instance", "key", "mock", "mock_CONF", "mock_RequestContext", "mock_filter_rules", "mock_fn", "mock_fn_args", "mock_fn_kwargs", "mock_get_action_fn", "mock_get_admin_context", "mock_get_context", "mock_get_target", "mock_instance_get", "mock_parse_args", "mock_print_bash", "mock_version_string", "nova", "nova_context", "passing_rules", "policy_check", "policy_fixture", "r", "return_value", "rule_conditions", "self", "set", "super", "target", "test", "val"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_floating_ip.py": ["False", "None", "True", "_TestFloatingIPObject", "allocate", "associate", "create_mock", "ctxt", "db_fixed", "db_floatingip", "db_obj", "db_val", "deallocate", "destroy", "destroy_mock", "dict", "disassociate", "exception", "expected", "fake_create", "fake_floating_ip", "fakes", "field", "fip", "fixed", "floating", "floating_ip", "floatingip", "floatingips", "get", "get_all", "ip", "ip_info", "ips", "isinstance", "len", "list", "mock", "netaddr", "obj", "obj_val", "object", "objects", "ovo_base", "primitive", "result", "self", "set", "str", "test", "test_fixed_ip", "test_network", "test_objects", "update", "uuid", "versions", "want_result"], "/Users/mehranhassani/repos/nova/nova/policies/flavor_extra_specs.py": ["POLICY_ROOT", "base", "flavor_extra_specs_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/deploy.py": ["NAME", "application", "auth", "auth_middleware", "auth_token", "common_api", "conf", "config", "context_middleware", "deploy", "fault_wrap", "handler", "microversion", "microversion_middleware", "middleware", "objects", "project_name", "req_id_middleware", "request_id", "request_log", "requestlog", "Deployment", "handling", "for", "Placmenent", "API.\nAssemble", "the", "middleware", "pipeline", "leading", "to", "the", "placement", "app.", "TODO(cdent):", "NAME", "points", "to", "the", "config", "project", "being", "used,", "so", "for\n", "now", "this", "is", "\"nova\"", "but", "we", "probably", "want", "\"placement\"", "eventually.\n", "Make", "sure", "that", "objects", "are", "registered", "for", "this", "running", "of", "the\n", "placement", "API.\n", "Do", "not", "provide", "global", "conf", "to", "middleware", "here.\n", "NOTE(cdent):", "The", "ordering", "here", "is", "important.", "The", "list", "is", "ordered\n", "from", "the", "inside", "out.", "For", "a", "single", "request", "req_id_middleware", "is", "called\n", "first", "and", "microversion_middleware", "last.", "Then", "the", "request", "is", "finally\n", "passed", "to", "the", "application", "(the", "PlacementHandler).", "At", "that", "point\n", "the", "response", "ascends", "the", "middleware", "in", "the", "reverse", "of", "the\n", "order", "the", "request", "went", "in.", "This", "order", "ensures", "that", "log", "messages\n", "all", "see", "the", "same", "contextual", "information", "including", "request", "id", "and\n", "authentication", "information."], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/resource_class.py": ["False", "None", "POST_RC_SCHEMA_V1_2", "PUT_RC_SCHEMA_V1_2", "_", "_serialize_links", "_serialize_resource_class", "_serialize_resource_classes", "context", "copy", "data", "environ", "exc", "exception", "jsonutils", "links", "microversion", "name", "objects", "output", "rc", "rcs", "req", "response", "url", "util", "webob", "Placement", "API", "handlers", "for", "resource", "classes.", "The", "containing", "application", "will", "catch", "a", "not", "found", "here.\n", "The", "containing", "application", "will", "catch", "a", "not", "found", "here.\n", "The", "containing", "application", "will", "catch", "a", "not", "found", "here."], "/Users/mehranhassani/repos/nova/nova/exception.py": ["AgentError", "AttributeError", "CONF", "ConsoleNotFound", "ConvertedException", "Exception", "False", "FileNotFound", "FixedIpNotFound", "FlavorDiskTooSmall", "FlavorNotFound", "FloatingIpNotFound", "Forbidden", "HostNotFound", "ImageDownloadModuleError", "InstanceAgentNotEnabled", "InstanceFaultRollback", "InstanceInvalidState", "InstanceUpdateConflict", "InterfaceAttachFailed", "Invalid", "InvalidAggregateAction", "InvalidBDM", "InvalidInventory", "KeyError", "LOG", "MigrationError", "MigrationNotFound", "NetworkInUse", "NetworkNotFound", "NoValidHost", "None", "NotFound", "NovaException", "OnsetFileLimitExceeded", "QuotaError", "QuotaNotFound", "SecurityGroupNotFound", "ServiceUnavailable", "True", "UnexpectedTaskStateError", "VolumeBDMNotFound", "_", "_LE", "__name__", "code", "explanation", "headers", "inner_exception", "kwargs", "logging", "message", "msg", "msg_fmt", "name", "nova", "safe", "self", "six", "super", "title", "value", "webob", "woutil", "There", "is", "a", "strict", "rule", "about", "constructing", "status", "line", "for", "HTTP:\n", "'...Status-Line,", "consisting", "of", "the", "protocol", "version", "followed", "by", "a\n", "numeric", "status", "code", "and", "its", "associated", "textual", "phrase,", "with", "each\n", "element", "separated", "by", "SP", "characters'\n", "(http://www.faqs.org/rfcs/rfc2616.html)\n", "'code'", "and", "'title'", "can", "not", "be", "empty", "because", "they", "correspond\n", "to", "numeric", "status", "code", "and", "its", "associated", "text\n", "kwargs", "doesn't", "match", "a", "variable", "in", "the", "message\n", "log", "the", "issue", "and", "the", "kwargs\n", "noqa\n", "NOTE(mrodden):", "use", "the", "first", "argument", "to", "the", "python", "Exception", "object\n", "which", "should", "be", "our", "full", "NovaException", "message,", "(see", "__init__)\n", "NOTE(jruzicka):", "IncorrectState", "is", "used", "for", "volumes", "only", "in", "EC2,\n", "but", "it", "still", "seems", "like", "the", "most", "appropriate", "option.\n", "Cannot", "be", "templated", "as", "the", "error", "syntax", "varies.\n", "msg", "needs", "to", "be", "constructed", "when", "raised.\n", "NOTE(johannes):", "NotFound", "should", "only", "be", "used", "when", "a", "404", "error", "is\n", "appropriate", "to", "be", "returned\n", "NOTE(cyeoh):", "413", "should", "only", "be", "used", "for", "the", "ec2", "API\n", "The", "error", "status", "code", "for", "out", "of", "quota", "for", "the", "nova", "api", "should", "be\n", "403", "Forbidden.\n", "Cannot", "be", "templated,", "msg", "needs", "to", "be", "constructed", "when", "raised."], "/Users/mehranhassani/repos/nova/nova/scheduler/client/report.py": ["CONF", "DISK_GB", "False", "LOG", "MEMORY_MB", "None", "True", "VCPU", "_LE", "_LI", "_LW", "_RE_INV_IN_USE", "__name__", "_compute_node_to_inventory_dict", "_extract_inventory_in_use", "_instance_to_allocations_dict", "a", "alloc_dict", "allocations", "allocstr", "args", "attempt", "auth_plugin", "body", "compute_node", "compute_utils", "cur_rp_gen", "curr", "current_allocations", "data", "disk", "f", "fields", "functools", "instance", "instance_dict", "instance_uuids", "inv_data", "is_bfv", "k", "key", "keystone", "ks_exc", "ks_filter", "logging", "match", "msg", "msg_args", "my_allocations", "my_rp", "name", "new_gen", "nova", "object", "objects", "payload", "r", "rc_str", "re", "removed_instances", "resp", "result", "rp", "rp_uuid", "safe_connect", "self", "server_gen", "session", "set", "sign", "time", "updated_inv", "updated_inventories_result", "url", "uuid", "v", "val", "wrapper", "Client", "class", "for", "updating", "the", "scheduler.", "We've", "failed", "in", "a", "non", "recoverable", "way,", "fully", "give", "up.\n", "NOTE(jaypipes):", "Ironic", "virt", "driver", "will", "return", "0", "values", "for", "vcpus,\n", "memory_mb", "and", "disk_gb", "if", "the", "Ironic", "node", "is", "not", "available/operable\n", "NOTE(danms):", "Boot-from-volume", "instances", "consume", "no", "local", "disk\n", "Remove", "any", "zero", "allocations.\n", "A", "dict,", "keyed", "by", "the", "resource", "provider", "UUID,", "of", "ResourceProvider\n", "objects", "that", "will", "have", "their", "inventories", "and", "allocations", "tracked", "by\n", "the", "placement", "API", "for", "the", "compute", "host\n", "TODO(sdague):", "use", "this", "to", "disable", "fully", "when", "we", "don't", "find\n", "the", "endpoint.\n", "NOTE(sdague):", "using", "json=", "instead", "of", "data=", "sets", "the\n", "media", "type", "to", "application/json", "for", "us.", "Placement", "API", "is\n", "more", "sensitive", "to", "this", "than", "other", "APIs", "in", "the", "OpenStack\n", "ecosystem.\n", "NOTE(sdague):", "using", "json=", "instead", "of", "data=", "sets", "the\n", "media", "type", "to", "application/json", "for", "us.", "Placement", "API", "is\n", "more", "sensitive", "to", "this", "than", "other", "APIs", "in", "the", "OpenStack\n", "ecosystem.\n", "Another", "thread", "concurrently", "created", "a", "resource", "provider", "with", "the\n", "same", "UUID.", "Log", "a", "warning", "and", "then", "just", "return", "the", "resource\n", "provider", "object", "from", "_get_resource_provider()\n", "Update", "our", "generation", "immediately,", "if", "possible.", "Even", "if", "there\n", "are", "no", "inventories", "we", "should", "always", "have", "a", "generation", "but", "let's\n", "be", "careful.\n", "Check", "to", "see", "if", "we", "need", "to", "update", "placement's", "view\n", "Invalidate", "our", "cache", "and", "re-fetch", "the", "resource", "provider\n", "to", "be", "sure", "to", "get", "the", "latest", "generation.\n", "NOTE(jaypipes):", "We", "don't", "need", "to", "pass", "a", "name", "parameter", "to\n", "_ensure_resource_provider()", "because", "we", "know", "the", "resource", "provider\n", "record", "already", "exists.", "We're", "just", "reloading", "the", "record", "here.\n", "Update", "our", "view", "of", "the", "generation", "for", "next", "time\n", "NOTE(danms):", "Either", "we", "failed", "to", "fetch/create", "the", "RP\n", "on", "our", "first", "attempt,", "or", "a", "previous", "attempt", "had", "to\n", "invalidate", "the", "cache,", "and", "we", "were", "unable", "to", "refresh\n", "it.", "Bail", "and", "try", "again", "next", "time.\n", "Check", "to", "see", "if", "we", "need", "to", "update", "placement's", "view\n", "Update", "our", "view", "of", "the", "generation", "for", "next", "time\n", "NOTE(cdent):", "This", "trims", "to", "just", "the", "allocations", "being\n", "used", "on", "this", "resource", "provider.", "In", "the", "future", "when", "there\n", "are", "shared", "resources", "there", "might", "be", "other", "providers.\n", "Check", "for", "404", "since", "we", "don't", "need", "to", "log", "a", "warning", "if", "we", "tried", "to\n", "delete", "something", "which", "doesn't", "actually", "exist."], "/Users/mehranhassani/repos/nova/nova/conductor/__init__.py": ["API", "ComputeTaskAPI", "conductor_api"], "/Users/mehranhassani/repos/nova/nova/policies/server_usage.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "server_usage_policies"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/flavor_access.py": ["ALIAS", "False", "FlavorAccess", "FlavorAccessController", "FlavorActionController", "_", "_marshall_flavor_access", "alias", "api_version_request", "body", "common", "context", "db_flavor", "dict", "e", "err", "exception", "exp", "explanation", "extension", "extensions", "fa_policies", "flavor", "flavor_access", "flavor_id", "flavor_ref", "flavor_rval", "flavors", "id", "key", "list", "name", "objects", "project_id", "req", "res", "resp_obj", "rval", "self", "tenant", "validation", "vals", "version", "webob", "wsgi", "The", "flavor", "access", "extension.\nThe", "flavor", "access", "API", "controller", "for", "the", "OpenStack", "API.\nThe", "flavor", "access", "API", "controller", "for", "the", "OpenStack", "API.\nFlavor", "access", "support.", "public", "flavor", "to", "all", "projects\n", "private", "flavor", "to", "listed", "projects", "only"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/monitors/cpu/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/264_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_instance_mapping.py": ["InstanceMappingListTestCase", "InstanceMappingTestCase", "None", "True", "USES_DB_SELF", "args", "c_mapping", "cell_mapping", "context", "create_cell_mapping", "create_mapping", "ctxt", "db_mapping", "db_mappings", "exception", "fixtures", "inst_mapping", "instance_mapping", "key", "kwargs", "mapping", "mappings", "project_id", "result_mapping", "sample_cell_mapping", "sample_mapping", "self", "super", "test", "uuidutils", "Just", "ensure", "this", "doesn't", "raise"], "/Users/mehranhassani/repos/nova/nova/cmd/serialproxy.py": ["CONF", "None", "baseproxy", "config", "nova", "serial", "sys", "set", "default", "web", "flag", "option"], "/Users/mehranhassani/repos/nova/nova/policies/instance_usage_audit_log.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "instance_usage_audit_log_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/instance_actions.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "instance_actions_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/virtual_interfaces.py": ["ALIAS", "NotImplementedError", "ServerVirtualInterfaceController", "_", "_translate_vif_summary_view", "alias", "api_version_request", "common", "compute", "context", "d", "dict", "entity_maker", "extensions", "instance", "limited_list", "msg", "name", "network", "req", "res", "resources", "self", "server_id", "super", "version", "vif", "vif_policies", "vifs", "webob", "wsgi", "The", "virtual", "interfaces", "extension.\nMaps", "keys", "for", "VIF", "summary", "view.\nReturns", "a", "list", "of", "VIFs,", "transformed", "through", "entity_maker.\nReturns", "the", "list", "of", "VIFs", "for", "a", "given", "instance.\nVirtual", "interface", "support.", "NOTE(gmann):", "This", "is", "for", "v2.1", "compatible", "mode", "where", "response", "should", "be\n", "same", "as", "v2", "one."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/image/test_model.py": ["exception", "img", "img1", "img2", "img3", "img4", "img5", "imgmodel", "msg", "self", "str", "test"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/tenant_networks.py": ["False", "create", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/objects/migrate_data.py": ["False", "HyperVLiveMigrateData", "LOG", "LibvirtLiveMigrateData", "LiveMigrateData", "None", "PowerVMLiveMigrateData", "True", "VERSION", "XenapiLiveMigrateData", "__name__", "bdmi", "classmethod", "cls", "connection_info", "field", "fields", "getattr", "graphics_spice", "graphics_vnc", "info", "info_dict", "int", "jsonutils", "k", "keys", "legacy", "legacy_dict", "legacy_pre_result", "live_result", "log", "obj", "obj_base", "objects", "pre_migration_result", "pre_result", "primitive", "property", "self", "serial", "set", "setattr", "str", "super", "target_version", "transport_target", "versionutils", "vol", "volume", "FIXME(danms):", "some", "of", "these", "can", "be", "enums?\n", "NOTE(danms):", "We", "don't", "have", "a", "connection_info", "object", "right\n", "now,", "and", "instead", "mostly", "store/pass", "it", "as", "JSON", "that", "we're\n", "careful", "with.", "When", "we", "get", "a", "connection_info", "object", "in", "the\n", "future,", "we", "should", "use", "it", "here,", "so", "make", "this", "easy", "to", "convert\n", "for", "later.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "target_connect_addr\n", "Version", "1.2:", "Added", "'serial_listen_ports'", "to", "allow", "live", "migration", "with\n", "serial", "console.\n", "Version", "1.3:", "Added", "'supported_perf_events'\n", "FIXME:", "image_type", "should", "be", "enum?\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "is_shared_instance_path\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "the", "Virtual", "Ethernet", "Adapter", "VLAN", "mappings."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_ioopsweight.py": ["IoOpsWeigherTestCase", "None", "expected_host", "expected_weight", "fakes", "host", "host_values", "hostinfo_list", "hosts", "io_ops", "io_ops_weight_multiplier", "node", "self", "super", "test", "values", "weighed_host", "weights", "We", "do", "not", "know", "the", "host,", "all", "have", "same", "weight."], "/Users/mehranhassani/repos/nova/nova/compute/manager.py": ["CONF", "ComputeManager", "ComputeVirtAPI", "Exception", "False", "InstanceEvents", "KeyError", "LOG", "None", "NotImplementedError", "SHUTDOWN_RETRY_INTERVAL", "True", "TypeError", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_clear_events", "_create_or_get_event", "_decode", "_do_validation", "_event", "_has_sriov_port", "_load_instance", "_locked_do_build_and_run_instance", "_msg", "_pop_event", "_set_migration_to_error", "_sync", "_sync_refresh", "_wait_snapshot", "access_url", "action", "actual_event", "address", "admin_password", "aggregate", "args", "attach_block_devices", "attachment_id", "attempt", "attempts", "attrs", "backup_type", "bad_devices", "bad_volumes_callback", "base64", "base_net_api", "bdi", "bdm", "bdms", "begin", "binascii", "bind_host_id", "block_dev_info", "block_device", "block_device_info", "block_device_lists", "block_device_mapping", "block_device_obj", "block_devices", "block_migration", "build_results", "building_insts", "bw_counters", "bw_ctr", "bw_in", "bw_out", "cells_rpcapi", "cells_update_interval", "cinder", "cinder_exception", "claim", "claim_context", "claim_ctxt", "claims", "clean_shutdown", "clean_task_state", "cleaned_keys", "cn", "comp_ret", "compute", "compute_driver", "compute_host_bdms", "compute_node", "compute_nodes_in_db", "compute_rpcapi", "compute_utils", "condemned", "conductor", "configdrive", "conn_volume", "connect_info", "connection_info", "connector", "console", "console_info", "console_type", "consoleauth", "contents", "context", "contextlib", "create_info", "ctxt", "curr_time", "current_power_state", "current_task_state", "data", "db_instance", "db_instances", "db_power_state", "db_state", "deadline", "deallocate_networks", "decision", "decoded", "decoded_files", "decorated_function", "delete_image_on_error", "delete_info", "deleted_at", "deleted_vif_id", "dest", "dest_check_data", "destroy_bdm", "destroy_disks", "destroy_vifs", "detach_block_devices", "device", "device_name", "device_type", "dhcp_options", "diags", "dict", "diff", "disk", "disk_bus", "disk_info", "disk_over_commit", "dispatch_live_migration", "do_attach_volume", "do_check_attach", "do_cleanup", "do_confirm_resize", "do_reserve", "do_shelve_instance", "do_shelve_offload_instance", "do_stop_instance", "do_terminate_instance", "do_unshelve_instance", "driver", "driver_bdm", "driver_block_device", "driver_instance", "driver_instances", "driver_uuids", "drv_state", "dst_compute_info", "e", "enabled", "encryption", "encryptors", "end", "enumerate", "ephemerals", "err", "error", "error_callback", "errors", "errors_out_migration", "evacuated", "evacuations", "event", "event_name", "event_names", "event_suffix", "eventlet", "eventlet_event", "events", "ex", "exc", "exc2", "exc_info", "exception", "exception_wrapper", "excess", "excutils", "expect_running", "expected_attrs", "expected_state", "expected_states", "expected_task_state", "extra_usage_info", "f", "failed", "fault", "fields", "file_contents", "files", "filter", "filter_properties", "filtered_instances", "filters", "flush_ops", "function", "functools", "get_notifier", "getattr", "glance", "got_migrate_data_object", "greenthread", "group", "group_hint", "group_hosts", "heal_interval", "hooks", "host", "i", "image", "image_id", "image_meta", "image_name", "image_ref", "image_service", "images", "index", "info", "info_cache", "injected_files", "inspect", "inst", "inst_filters", "inst_uuid_from_migrations", "instance", "instance_bdms", "instance_events", "instance_or_dict", "instance_state", "instance_type", "instance_uuid", "instance_uuids", "instances", "int", "interval", "ip", "is_shared_block_storage", "is_shared_instance_path", "is_volume_backed", "is_vpn", "isinstance", "jsonutils", "k", "key", "keyed_args", "keys", "keystone_exception", "kwargs", "last_ctr_in", "last_ctr_out", "len", "length", "limits", "list", "local_instances", "log", "log_info", "logging", "loopingcall", "macs", "manager", "mapping", "mapping_dict", "max", "mem_mb", "messaging", "meta", "metas", "method_args", "mig", "migrate_data", "migrate_data_obj", "migration", "migration_filters", "migration_id", "migration_p", "migration_status", "migrations", "migrations_info", "mode", "mountpoint", "mp", "msg", "name", "name_map", "net", "net_info", "network", "network_id", "network_info", "network_model", "network_name", "new_bdm", "new_block_device_info", "new_cinfo", "new_instance_type_id", "new_pass", "new_power_state", "new_vm_state", "new_vol_size", "new_volume_id", "no_events_sentinel", "no_matching_event_sentinel", "node", "node_name", "nodename", "nodenames", "nodes", "notify", "nova", "num_db_instances", "num_images", "num_instances", "num_vm_instances", "nwinfo", "obj_base", "obj_instance", "object", "object_compat", "objects", "old_cinfo", "old_instance_type", "old_instance_type_id", "old_vm_state", "old_vol_size", "old_volume_id", "on_shared_storage", "openstack_driver", "orig_db_power_state", "orig_image_ref", "orig_image_ref_url", "orig_sys_metadata", "orig_vm_state", "original_task_state", "our_events", "output", "p_state", "path", "pending_hard", "pending_soft", "periodic_task", "pipelib", "port", "port_id", "power_on", "power_state", "preserve_ephemeral", "prev_host", "prev_time", "project_id", "query_driver_power_state_and_sync", "quotas", "raise_exc", "range", "rd_bytes", "rd_req", "reason", "reboot_type", "rebooting", "rebuild_claim", "recreate", "refresh_conn_info", "refreshed", "request_spec", "requested_ip", "requested_networks", "reschedule_method", "rescheduled", "rescue_image_meta", "rescue_image_ref", "rescue_password", "rescued_instances", "reservations", "resize_instance", "resize_to", "resource_tracker", "resources", "result", "retries", "retry", "retry_interval", "retry_reboot", "retry_time", "reverts_task_state", "root_bdm", "root_device_name", "rotation", "rpc", "rt", "running", "safe_utils", "same_host", "save_volume_id", "scheduled_node", "scheduler_client", "scheduler_hint", "scheduler_hints", "scrubbed_keys", "security_group_id", "security_groups", "self", "set", "setattr", "shared_storage", "shelved_at", "shelved_image_ref", "shelved_instances", "shelving_state_map", "six", "slave_info", "snapshot", "snapshot_id", "soft_types", "src_compute_info", "start", "start_time", "started_not_running", "stashed_connector", "state", "staticmethod", "status", "storage_users", "str", "strutils", "success", "successes", "super", "swap", "sys", "sys_meta", "system_meta", "system_metadata", "tag", "tagging_requested", "tail_length", "target", "task_log", "task_state", "task_states", "time", "timeout", "timer", "timeutils", "to_gc", "to_poll", "to_unrescue", "token", "traceback", "try_deallocate_networks", "try_reboot", "tuple", "type", "update_cells", "update_root_bdm", "update_task_state", "usage", "use_slave", "user_id", "utils", "uuid", "uuids", "uuidutils", "v", "values", "vcpus", "vif", "virtapi", "virtevent", "vm_instance", "vm_power_state", "vm_state", "vm_states", "vol_bdms", "vol_id", "vol_stats", "vol_usage", "vol_usages", "volume", "volume_id", "volume_status", "was_soft_deleted", "whitelist", "wr_bytes", "wr_req", "wrap_exception", "wrap_instance_event", "wrap_instance_fault", "wrapped_func", "zip", "Decorator", "to", "error", "out", "migration", "on", "failure.\nDecorator", "to", "revert", "task_state", "on", "failure.\nManages", "the", "running", "instances", "from", "creation", "to", "destruction.\nLoad", "configuration", "options", "and", "connect", "to", "the", "hypervisor.\nLet", "the", "resource", "tracker", "know", "that", "an", "instance", "has", "changed", "state.\nUpdate", "an", "instance", "in", "the", "database", "using", "kwargs", "as", "value.\nInitialization", "for", "a", "standalone", "compute", "service.\nRetrieve", "the", "power", "state", "for", "the", "given", "instance.\nBase64", "decode", "the", "list", "of", "files", "to", "inject.\nAttempt", "to", "re-schedule", "a", "compute", "operation.\nEnsure", "that", "instances", "are", "not", "stuck", "in", "build.\nEnsure", "an", "instance", "with", "the", "same", "name", "is", "not", "already", "present.\nConvert", "BDI", "to", "the", "old", "format", "for", "drivers", "that", "need", "it.\nSet", "up", "the", "block", "device", "for", "an", "instance", "with", "error", "logging.\nSends", "the", "uuid", "of", "the", "deleted", "Instance", "to", "the", "Scheduler", "client.\nTransform", "block", "devices", "to", "the", "driver", "block_device", "format.\nGet", "the", "timing", "configuration", "for", "powering", "down", "this", "instance.\nPower", "off", "an", "instance", "on", "this", "host.\nTerminate", "an", "instance", "on", "this", "host.\nStopping", "an", "instance", "on", "this", "host.\nDelete", "snapshot", "of", "shelved", "instance.\nStarting", "an", "instance", "on", "this", "host.\nTrigger", "crash", "dump", "in", "an", "instance.\nSoft", "delete", "an", "instance", "on", "this", "host.\nRestore", "a", "soft-deleted", "instance", "on", "this", "host.\nHelper", "to", "avoid", "deep", "nesting", "in", "the", "top-level", "method.\nReboot", "an", "instance", "on", "this", "host.\nWrite", "a", "file", "to", "the", "specified", "path", "in", "an", "instance", "on", "this", "host.\nDetermine", "what", "image", "should", "be", "used", "to", "boot", "the", "rescue", "VM.\nUpdate", "the", "metadata", "published", "to", "the", "instance.\nDestroys", "the", "source", "instance.\nStarts", "the", "migration", "of", "a", "running", "instance", "to", "another", "host.\nPause", "an", "instance", "on", "this", "host.\nUnpause", "a", "paused", "instance", "on", "this", "host.\nReboots,", "shuts", "down", "or", "powers", "up", "the", "host.\nSets", "the", "specified", "host's", "ability", "to", "accept", "new", "instances.\nReturns", "the", "result", "of", "calling", "\"uptime\"", "on", "the", "target", "host.\nRetrieve", "diagnostics", "for", "an", "instance", "on", "this", "host.\nRetrieve", "diagnostics", "for", "an", "instance", "on", "this", "host.\nSuspend", "the", "given", "instance.\nResume", "the", "given", "suspended", "instance.\nRemove", "data", "from", "the", "instance", "that", "may", "cause", "side", "effects.\nRestore", "previously", "scrubbed", "keys", "before", "saving", "the", "instance.\nReset", "networking", "on", "the", "given", "instance.\nInject", "network", "info", "for", "the", "given", "instance.\nInject", "network", "info,", "but", "don't", "return", "the", "info.\nSend", "the", "console", "output", "for", "the", "given", "instance.\nReturn", "connection", "information", "for", "a", "vnc", "console.\nReturn", "connection", "information", "for", "a", "spice", "console.\nReturn", "connection", "information", "for", "a", "RDP", "console.\nReturn", "connection", "information", "for", "a", "MKS", "console.\nReturns", "connection", "information", "for", "a", "serial", "console.\nAttach", "a", "volume", "to", "an", "instance.\nDo", "the", "actual", "driver", "detach", "using", "block", "device", "mapping.\nDetach", "a", "volume", "from", "an", "instance.\nSwap", "volume", "for", "an", "instance.\nRemove", "a", "volume", "connection", "using", "the", "volume", "api.\nUse", "hotplug", "to", "add", "an", "network", "adapter", "to", "an", "instance.\nDetach", "a", "network", "adapter", "from", "an", "instance.\nReturns", "whether", "a", "console", "is", "enable.\nClean", "console", "tokens", "stored", "for", "an", "instance.\nReturn", "all", "block", "device", "mappings", "on", "a", "compute", "host.\nUpdates", "the", "volume", "usage", "cache", "table", "with", "a", "list", "of", "stats.\nReclaim", "instances", "that", "are", "queued", "for", "deletion.\nNotify", "hypervisor", "of", "change", "(for", "hypervisor", "pools).\nRemoves", "a", "host", "from", "a", "physical", "hypervisor", "pool.\nRun", "a", "single", "pass", "of", "the", "image", "cache", "manager.\nRetry", "any", "pending", "instance", "file", "deletes.\nQuiesce", "an", "instance", "on", "this", "host.", "NOTE(rajesht):", "If", "InstanceNotFound", "error", "is", "thrown", "from\n", "decorated", "function,", "migration", "status", "should", "be", "set", "to\n", "'error',", "without", "checking", "current", "migration", "status.\n", "Note(maoy):", "unexpected", "task", "state", "means", "the", "current\n", "task", "is", "preempted.", "Do", "not", "clear", "task", "state", "in", "this\n", "case.\n", "NOTE(mriedem):", "'instance'", "must", "be", "in", "keyed_args", "because", "we\n", "have", "utils.expects_func_args('instance')", "decorating", "this\n", "method.\n", "We", "might", "delete", "an", "instance", "that", "failed", "to", "build", "shortly\n", "after", "it", "errored", "out", "this", "is", "an", "expected", "case", "and", "we\n", "should", "not", "trace", "on", "it.\n", "NOTE(gtt):", "If", "argument", "'instance'", "is", "in", "args", "rather", "than", "kwargs,\n", "we", "will", "get", "a", "KeyError", "exception", "which", "will", "cover", "up", "the", "real\n", "exception.", "So,", "we", "update", "kwargs", "with", "the", "values", "from", "args", "first.\n", "then,", "we", "can", "get", "'instance'", "from", "kwargs", "easily.\n", "Since", "we're", "trying", "to", "cleanup", "an", "image,", "we", "don't", "care", "if\n", "if", "it's", "already", "gone.\n", "TODO(danms):", "Remove", "me", "after", "Icehouse\n", "TODO(alaski):", "Actually", "remove", "this", "after", "Newton,", "assuming", "a", "major", "RPC", "bump\n", "NOTE(mikal):", "if", "the", "method", "being", "decorated", "has", "more", "than", "one", "decorator,", "then\n", "put", "this", "one", "first.", "Otherwise", "the", "various", "exception", "handling", "decorators", "do\n", "not", "function", "correctly.\n", "try", "to", "get", "metadata", "and", "system_metadata", "for", "most", "cases", "but\n", "only", "attempt", "to", "load", "those", "if", "the", "db", "instance", "already", "has\n", "those", "fields", "joined\n", "NOTE(danms):", "We", "really", "should", "have", "a", "more", "specific", "error\n", "here,", "but", "this", "is", "what", "we", "use", "for", "our", "default", "error", "case\n", "NOTE(danms):", "Block", "new", "events\n", "NOTE(danms):", "Don't", "wait", "for", "any", "of", "the", "events.", "They\n", "should", "all", "be", "canceled", "and", "fired", "immediately", "below,\n", "but", "don't", "stick", "around", "if", "not.\n", "How", "long", "to", "wait", "in", "seconds", "before", "re-issuing", "a", "shutdown\n", "signal", "to", "an", "instance", "during", "power", "off.", "The", "overall\n", "time", "to", "wait", "is", "set", "by", "CONF.shutdown_timeout.\n", "NOTE(russellb)", "Load", "the", "driver", "last.", "It", "may", "call", "back", "into", "the\n", "compute", "manager", "via", "the", "virtapi,", "so", "we", "want", "it", "to", "be", "fully\n", "initialized", "before", "that", "happens.\n", "NOTE(jwcroppe):", "We", "don't", "do", "instance.save()", "here", "for", "performance\n", "reasons;", "a", "call", "to", "this", "is", "expected", "to", "be", "immediately", "followed", "by\n", "another", "call", "that", "does", "instance.save(),", "thus", "avoiding", "two", "writes\n", "to", "the", "database", "layer.\n", "Short", "circuit,", "don't", "waste", "a", "DB", "call\n", "The", "driver", "doesn't", "support", "uuids", "listing,", "so", "we'll", "have\n", "to", "brute", "force.\n", "always", "destroy", "disks", "if", "the", "instance", "was", "deleted\n", "ensure", "block", "device", "mappings", "are", "not", "leaked\n", "NOTE(danms):", "If", "the", "instance", "appears", "to", "not", "be", "owned", "by", "this\n", "host,", "it", "may", "have", "been", "evacuated", "away,", "but", "skipped", "by", "the\n", "evacuation", "cleanup", "code", "due", "to", "configuration.", "Thus,", "if", "that\n", "is", "a", "possibility,", "don't", "touch", "the", "instance", "in", "any", "way,", "but\n", "log", "the", "concern.", "This", "will", "help", "avoid", "potential", "issues", "on\n", "startup", "due", "to", "misconfiguration.\n", "Instances", "that", "are", "shut", "down,", "or", "in", "an", "error", "state", "can", "not", "be\n", "initialized", "and", "are", "not", "attempted", "to", "be", "recovered.", "The", "exception\n", "to", "this", "are", "instances", "that", "are", "in", "RESIZE_MIGRATING", "or", "DELETING,\n", "which", "are", "dealt", "with", "further", "down.\n", "we", "don't", "want", "that", "an", "exception", "blocks", "the", "init_host\n", "NOTE(dave-mcnally)", "compute", "stopped", "before", "instance", "was", "fully\n", "spawned", "so", "set", "to", "ERROR", "state.", "This", "is", "safe", "to", "do", "as", "the", "state\n", "may", "be", "set", "by", "the", "api", "but", "the", "host", "is", "not", "so", "if", "we", "get", "here", "the\n", "instance", "has", "already", "been", "scheduled", "to", "this", "particular", "host.\n", "NOTE(jichenjc)", "compute", "stopped", "before", "instance", "was", "fully\n", "spawned", "so", "set", "to", "ERROR", "state.", "This", "is", "consistent", "to", "BUILD\n", "we", "don't", "want", "that", "an", "exception", "blocks", "the", "init_host\n", "we", "don't", "want", "that", "an", "exception", "blocks", "the", "init_host\n", "NOTE(mikal):", "if", "the", "instance", "was", "doing", "a", "soft", "reboot", "that", "got", "as\n", "far", "as", "shutting", "down", "the", "instance", "but", "not", "as", "far", "as", "starting", "it\n", "again,", "then", "we've", "just", "become", "a", "hard", "reboot.", "That", "means", "the\n", "task", "state", "for", "the", "instance", "needs", "to", "change", "so", "that", "we're", "in", "one\n", "of", "the", "expected", "task", "states", "for", "a", "hard", "reboot.\n", "Some", "virt", "driver", "didn't", "support", "pause", "and", "unpause\n", "we", "don't", "want", "that", "an", "exception", "blocks", "the", "init_host\n", "we", "don't", "want", "that", "an", "exception", "blocks", "the", "init_host\n", "we", "don't", "want", "an", "exception", "to", "block", "the", "init_host\n", "We", "crashed", "during", "resize/migration,", "so", "roll", "back", "for", "safety\n", "NOTE(mriedem):", "check", "old_vm_state", "for", "STOPPED", "here,", "if", "it's\n", "not", "in", "system_metadata", "we", "default", "to", "True", "for", "backwards\n", "compatibility\n", "Live", "migration", "did", "not", "complete,", "but", "instance", "is", "on", "this\n", "host,", "so", "reset", "the", "state.\n", "NOTE(vish):", "The", "instance", "failed", "to", "resume,", "so", "we", "set", "the\n", "instance", "to", "error", "and", "attempt", "to", "continue.\n", "VMwareAPI", "drivers", "will", "raise", "an", "exception\n", "Note(lpetrut):", "The", "event", "may", "be", "delayed,", "thus", "not", "reflecting\n", "the", "current", "instance", "power", "state.", "In", "that", "case,", "ignore", "the", "event.\n", "NOTE(mriedem):", "If", "the", "_sync_power_states", "periodic", "task", "is\n", "disabled", "we", "should", "emit", "a", "warning", "in", "the", "logs.\n", "Simply", "loading", "the", "PCI", "passthrough", "whitelist", "will", "do", "a", "bunch", "of\n", "validation", "that", "would", "otherwise", "wait", "until", "the", "PciDevTracker", "is\n", "constructed", "when", "updating", "available", "resources", "for", "the", "compute\n", "node(s)", "in", "the", "resource", "tracker,", "effectively", "killing", "that", "task.\n", "So", "load", "up", "the", "whitelist", "when", "starting", "the", "compute", "service", "to\n", "flush", "any", "invalid", "configuration", "early", "so", "we", "can", "kill", "the", "service\n", "if", "the", "configuration", "is", "wrong.\n", "checking", "that", "instance", "was", "not", "already", "evacuated", "to", "other", "host\n", "TODO(mdragon):", "perhaps", "make", "this", "variable", "by", "console_type?\n", "NOTE(hanlind):", "This", "and", "the", "virt", "method", "it", "calls", "can", "be", "removed", "in\n", "version", "5.0", "of", "the", "RPC", "API\n", "TODO(alaski):", "Remove", "object_compat", "for", "RPC", "version", "5.0\n", "TODO(yamahata):", "creating", "volume", "simultaneously\n", "reduces", "creation", "time?\n", "TODO(yamahata):", "eliminate", "dumb", "polling\n", "(1)", "treat", "negative", "config", "value", "as", "0\n", "(2)", "the", "configured", "value", "is", "0,", "one", "attempt", "should", "be", "made\n", "(3)", "the", "configured", "value", "is", ">", "0,", "then", "the", "total", "number", "attempts\n", "is", "(retries", "+", "1)\n", "Py3", "raises", "binascii.Error", "instead", "of", "TypeError", "as", "in", "Py27\n", "NOTE(russellb)", "Instance", "group", "policy", "is", "enforced", "by", "the", "scheduler.\n", "However,", "there", "is", "a", "race", "condition", "with", "the", "enforcement", "of\n", "the", "policy.", "Since", "more", "than", "one", "instance", "may", "be", "scheduled", "at", "the\n", "same", "time,", "it's", "possible", "that", "more", "than", "one", "instance", "with", "an\n", "anti-affinity", "policy", "may", "end", "up", "here.", "It's", "also", "possible", "that\n", "multiple", "instances", "with", "an", "affinity", "policy", "could", "end", "up", "on", "different\n", "hosts.", "This", "is", "a", "validation", "step", "to", "make", "sure", "that", "starting", "the\n", "instance", "here", "doesn't", "violate", "the", "policy.\n", "no", "retry", "information,", "do", "not", "reschedule.\n", "reset", "the", "task", "state:\n", "stringify", "to", "avoid", "circular", "ref", "problem", "in", "json", "serialization:\n", "First", "check", "to", "see", "if", "we're", "specifically", "not", "supposed", "to", "allocate\n", "networks", "because", "if", "so,", "we", "can", "exit", "early.\n", "NOTE(JoshNang)", "do", "not", "save", "the", "instance", "here,", "as", "it", "can", "cause\n", "races.", "The", "caller", "shares", "a", "reference", "to", "instance", "and", "waits\n", "for", "this", "async", "greenthread", "to", "finish", "before", "calling\n", "instance.save().\n", "Not", "reached.\n", "If", "we're", "here", "from", "a", "reschedule", "the", "network", "may", "already", "be", "allocated.\n", "NOTE(alex_xu):", "The", "network_allocated", "is", "True", "means", "the", "network\n", "resource", "already", "allocated", "at", "previous", "scheduling,", "and", "the\n", "network", "setup", "is", "cleanup", "at", "previous.", "After", "rescheduling,", "the\n", "network", "resource", "need", "setup", "on", "the", "new", "host.\n", "NOTE(comstud):", "Since", "we're", "allocating", "networks", "asynchronously,\n", "this", "task", "state", "has", "little", "meaning,", "as", "we", "won't", "be", "in", "this\n", "state", "for", "very", "long.\n", "NOTE(ndipanov):", "Copy", "obj", "to", "avoid", "changing", "the", "original\n", "Get", "the", "root_device_name", "from", "the", "root", "BDM", "or", "the", "instance\n", "If", "we", "were", "told", "not", "to", "allocate", "networks", "let's", "save", "ourselves\n", "the", "trouble", "of", "calling", "the", "network", "API.\n", "nova-network", "does", "an", "rpc", "call", "so", "we're", "OK", "tracking", "time", "spent", "here\n", "if", "the", "block_device_mapping", "has", "no", "value", "in", "connection_info\n", "(returned", "as", "None),", "don't", "include", "in", "the", "mapping\n", "NOTE(danms):", "We", "grab", "the", "semaphore", "with", "the", "instance", "uuid\n", "locked", "because", "we", "could", "wait", "in", "line", "to", "build", "this", "instance\n", "for", "a", "while", "and", "we", "want", "to", "make", "sure", "that", "nothing", "else", "tries\n", "to", "do", "anything", "with", "this", "instance", "while", "we", "wait.\n", "NOTE(danms):", "We", "spawn", "here", "to", "return", "the", "RPC", "worker", "thread", "back", "to\n", "the", "pool.", "Since", "what", "follows", "could", "take", "a", "really", "long", "time,", "we", "don't\n", "want", "to", "tie", "up", "RPC", "workers.\n", "b64", "decode", "the", "files", "to", "inject:\n", "no", "retry", "information,", "do", "not", "reschedule.\n", "This", "will", "be", "used", "for", "logging", "the", "exception\n", "This", "will", "be", "used", "for", "setting", "the", "instance", "fault", "message\n", "NOTE(comstud):", "Deallocate", "networks", "if", "the", "driver", "wants\n", "us", "to", "do", "so.\n", "NOTE(vladikr):", "SR-IOV", "ports", "should", "be", "deallocated", "to\n", "allow", "new", "sriov", "pci", "devices", "to", "be", "allocated", "on", "a", "new", "host.\n", "Otherwise,", "if", "devices", "with", "pci", "addresses", "are", "already", "allocated\n", "on", "the", "destination", "host,", "the", "instance", "will", "fail", "to", "spawn.\n", "info_cache.network_info", "should", "be", "present", "at", "this", "stage.\n", "NOTE(alex_xu):", "Network", "already", "allocated", "and", "we", "don't\n", "want", "to", "deallocate", "them", "before", "rescheduling.", "But", "we", "need\n", "to", "cleanup", "those", "network", "resources", "setup", "on", "this", "host", "before\n", "rescheduling.\n", "Should", "not", "reach", "here.\n", "NOTE(russellb)", "It's", "important", "that", "this", "validation", "be", "done\n", "*after*", "the", "resource", "tracker", "instance", "claim,", "as", "that", "is", "where\n", "the", "host", "is", "set", "on", "the", "instance.\n", "NOTE(JoshNang)", "This", "also", "saves", "the", "changes", "to", "the\n", "instance", "from", "_allocate_network_async,", "as", "they", "aren't\n", "saved", "in", "that", "function", "to", "prevent", "races.\n", "NOTE(alaski):", "This", "is", "only", "useful", "during", "reschedules,", "remove", "it", "now.\n", "If", "CONF.default_access_ip_network_name", "is", "set,", "grab", "the\n", "corresponding", "network", "and", "set", "the", "access", "ip", "values", "accordingly.\n", "Note", "that", "when", "there", "are", "multiple", "ips", "to", "choose", "from,", "an\n", "arbitrary", "one", "will", "be", "chosen.\n", "Because", "this", "allocation", "is", "async", "any", "failures", "are", "likely", "to", "occur\n", "when", "the", "driver", "accesses", "network_info", "during", "spawn().\n", "Verify", "that", "all", "the", "BDMs", "have", "a", "device_name", "set", "and", "assign", "a\n", "default", "to", "the", "ones", "missing", "it", "with", "the", "help", "of", "the", "driver.\n", "Make", "sure", "the", "async", "call", "finishes\n", "Make", "sure", "the", "async", "call", "finishes\n", "Make", "sure", "the", "async", "call", "finishes\n", "Make", "sure", "the", "async", "call", "finishes\n", "if", "network_info", "is", "empty", "we're", "likely", "here", "because", "of\n", "network", "allocation", "failure.", "Since", "nothing", "can", "be", "reused", "on\n", "rescheduling", "it's", "better", "to", "deallocate", "network", "to", "eliminate\n", "the", "chance", "of", "orphaned", "ports", "in", "neutron\n", "NOTE(alaski):", "It's", "possible", "that", "we're", "cleaning", "up", "the", "networks\n", "because", "the", "instance", "was", "deleted.", "If", "that's", "the", "case", "then", "this\n", "exception", "will", "be", "raised", "by", "instance.save()\n", "tear", "down", "allocated", "network", "structure\n", "NOTE(vish)", "get", "bdms", "before", "destroying", "the", "instance\n", "NOTE(melwitt):", "attempt", "driver", "destroy", "before", "releasing", "ip,", "may\n", "want", "to", "keep", "ip", "allocated", "for", "certain", "failures\n", "if", "the", "instance", "can't", "power", "off,", "don't", "release", "the", "ip\n", "deallocate", "ip", "and", "fail", "without", "proceeding", "to\n", "volume", "api", "calls,", "preserving", "current", "behavior\n", "NOTE(vish):", "actual", "driver", "detach", "done", "in", "driver.destroy,", "so\n", "just", "tell", "cinder", "that", "we", "are", "done", "with", "it.\n", "Instances", "in", "SOFT_DELETED", "vm_state", "have", "already", "had", "quotas\n", "decremented.\n", "NOTE(dims):", "instance.info_cache.delete()", "should", "be", "called", "after\n", "_shutdown_instance", "in", "the", "compute", "manager", "as", "shutdown", "calls\n", "deallocate_for_instance", "so", "the", "info_cache", "is", "still", "needed\n", "at", "this", "point.\n", "NOTE(yoshimatsu):", "Avoid", "AttributeError", "if", "instance.info_cache\n", "is", "None.", "When", "the", "root", "cause", "that", "instance.info_cache", "becomes\n", "None", "is", "fixed,", "the", "log", "level", "should", "be", "reconsidered.\n", "NOTE(vish):", "We", "have", "already", "deleted", "the", "instance,", "so", "we", "have\n", "to", "ignore", "problems", "cleaning", "up", "the", "volumes.", "It\n", "would", "be", "nice", "to", "let", "the", "user", "know", "somehow", "that\n", "the", "volume", "deletion", "failed,", "but", "it", "is", "not\n", "acceptable", "to", "have", "an", "instance", "that", "can", "not", "be\n", "deleted.", "Perhaps", "this", "could", "be", "reworked", "in", "the\n", "future", "to", "set", "an", "instance", "fault", "the", "first", "time\n", "and", "to", "only", "ignore", "the", "failure", "if", "the", "instance\n", "is", "already", "in", "ERROR.\n", "if", "a", "delete", "task", "succeeded,", "always", "update", "vm", "state", "and", "task\n", "state", "without", "expecting", "task", "state", "to", "be", "DELETING\n", "NOTE(mriedem):", "If", "we", "are", "deleting", "the", "instance", "while", "it", "was\n", "booting", "from", "volume,", "we", "could", "be", "racing", "with", "a", "database", "update", "of\n", "the", "BDM", "volume_id.", "Since", "the", "compute", "API", "passes", "the", "BDMs", "over", "RPC\n", "to", "compute", "here,", "the", "BDMs", "may", "be", "stale", "at", "this", "point.", "So", "check\n", "for", "any", "volume", "BDMs", "that", "don't", "have", "volume_id", "set", "and", "if", "we\n", "detect", "that,", "we", "need", "to", "refresh", "the", "BDM", "list", "before", "proceeding.\n", "TODO(mriedem):", "Move", "this", "into", "_delete_instance", "and", "make", "the", "bdms\n", "parameter", "optional.\n", "As", "we're", "trying", "to", "delete", "always", "go", "to", "Error", "if", "something\n", "goes", "wrong", "that", "_delete_instance", "can't", "handle.\n", "NOTE(johannes):", "This", "is", "probably", "better", "named", "power_off_instance\n", "so", "it", "matches", "the", "driver", "method,", "but", "because", "of", "other", "issues,", "we\n", "can't", "use", "that", "name", "in", "grizzly.\n", "NOTE(mriedem):", "If", "the", "instance", "is", "already", "powered", "off,", "we", "are\n", "possibly", "tearing", "down", "and", "racing", "with", "other", "operations,", "so", "we", "can\n", "expect", "the", "task_state", "to", "be", "None", "if", "something", "else", "updates", "the\n", "instance", "and", "we're", "not", "locking", "it.\n", "The", "list", "of", "power", "states", "is", "from", "_sync_instance_power_state.\n", "NOTE(johannes):", "This", "is", "probably", "better", "named", "power_on_instance\n", "so", "it", "matches", "the", "driver", "method,", "but", "because", "of", "other", "issues,", "we\n", "can't", "use", "that", "name", "in", "grizzly.\n", "Delete", "an", "image(VM", "snapshot)", "for", "a", "shelved", "instance\n", "Delete", "system_metadata", "for", "a", "shelved", "instance\n", "This", "method", "does", "not", "change", "task_state", "and", "power_state", "because", "the\n", "effect", "of", "a", "trigger", "depends", "on", "user's", "configuration.\n", "Fallback", "to", "just", "powering", "off", "the", "instance", "if", "the\n", "hypervisor", "doesn't", "implement", "the", "soft_delete", "method\n", "Fallback", "to", "just", "powering", "on", "the", "instance", "if", "the", "hypervisor\n", "doesn't", "implement", "the", "restore", "method\n", "The", "default", "code", "path", "does", "not", "support", "preserving", "ephemeral\n", "partitions.\n", "NOTE(mriedem):", "On", "a", "recreate", "(evacuate),", "we", "need", "to", "update\n", "the", "instance's", "host", "and", "node", "properties", "to", "reflect", "it's\n", "destination", "node", "for", "the", "recreate.\n", "NOTE(ndipanov):", "We", "just", "abort", "the", "build", "for", "now", "and", "leave", "a\n", "migration", "record", "for", "potential", "cleanup", "later\n", "NOTE", "(ndipanov):", "This", "save", "will", "now", "update", "the", "host", "and", "node\n", "attributes", "making", "sure", "that", "next", "RT", "pass", "is", "consistent", "since\n", "it", "will", "be", "based", "on", "the", "instance", "and", "not", "the", "migration", "DB\n", "entry.\n", "NOTE", "(ndipanov):", "Mark", "the", "migration", "as", "done", "only", "after", "we\n", "mark", "the", "instance", "as", "belonging", "to", "this", "host.\n", "To", "cover", "case", "when", "admin", "expects", "that", "instance", "files", "are\n", "on", "shared", "storage,", "but", "not", "accessible", "and", "vice", "versa\n", "This", "instance.exists", "message", "should", "contain", "the", "original\n", "image_ref,", "not", "the", "new", "one.", "Since", "the", "DB", "has", "been", "updated\n", "to", "point", "to", "the", "new", "one...", "we", "have", "to", "override", "it.\n", "TODO(jaypipes):", "Move", "generate_image_url()", "into", "the", "nova.image.api\n", "This", "message", "should", "contain", "the", "new", "image_ref\n", "For", "nova-network", "this", "is", "needed", "to", "move", "floating", "IPs\n", "For", "neutron", "this", "updates", "the", "host", "in", "the", "port", "binding\n", "TODO(cfriesen):", "this", "network_api", "call", "and", "the", "one", "above\n", "are", "so", "similar,", "we", "should", "really", "try", "to", "unify", "them.\n", "NOTE(rpodolyaka):", "driver", "doesn't", "provide", "specialized", "version\n", "of", "rebuild,", "fall", "back", "to", "the", "default", "implementation\n", "NOTE(sirp):", "ideally", "we'd", "just", "call\n", "`compute_api.detach_volume`", "here", "but", "since", "that", "hits", "the\n", "DB", "directly,", "that's", "off", "limits", "from", "within", "the\n", "compute-manager.\n\n", "API-detach\n", "Manager-detach\n", "acknowledge", "the", "request", "made", "it", "to", "the", "manager\n", "Don't", "change", "it", "out", "of", "rescue", "mode\n", "if", "the", "reboot", "failed", "but", "the", "VM", "is", "running", "don't\n", "put", "it", "into", "an", "error", "state\n", "NOTE(dave-mcnally)", "the", "task", "state", "will", "already", "be", "set", "by", "the", "api\n", "but", "if", "the", "compute", "manager", "has", "crashed/been", "restarted", "prior", "to", "the\n", "request", "getting", "here", "the", "task", "state", "may", "have", "been", "cleared", "so", "we", "set\n", "it", "again", "and", "things", "continue", "normally\n", "possibility", "instance", "no", "longer", "exists,", "no", "point", "in", "continuing\n", "the", "instance", "got", "deleted", "during", "the", "snapshot\n", "Quickly", "bail", "out", "of", "here\n", "NOTE(sirp):", "this", "deletes", "all", "backups", "that", "exceed", "the", "rotation\n", "limit\n", "Generate", "a", "random", "password\n", "interrupted", "by", "another", "(most", "likely", "delete)", "task\n", "do", "not", "retry\n", "Catch", "all", "here", "because", "this", "could", "be", "anything.\n", "We", "create", "a", "new", "exception", "here", "so", "that", "we", "won't\n", "potentially", "reveal", "password", "information", "to", "the\n", "API", "caller.", "The", "real", "exception", "is", "logged", "above\n", "NOTE(russellb)", "Remove", "this", "method,", "as", "well", "as", "the", "underlying", "virt\n", "driver", "methods,", "when", "the", "compute", "rpc", "interface", "is", "bumped", "to", "4.x\n", "as", "it", "is", "no", "longer", "used.\n", "1.", "If", "rescue_image_ref", "is", "passed", "in,", "use", "that", "for", "rescue.\n", "2.", "Else,", "use", "the", "base", "image", "associated", "with", "instance's", "current", "image.\n", "The", "idea", "here", "is", "to", "provide", "the", "customer", "with", "a", "rescue\n", "environment", "which", "they", "are", "familiar", "with.\n", "So,", "if", "they", "built", "their", "instance", "off", "of", "a", "Debian", "image,\n", "their", "rescue", "VM", "will", "also", "be", "Debian.\n", "3.", "As", "a", "last", "resort,", "use", "instance's", "current", "image.\n", "NOTE(wangpan):", "Get", "the", "migration", "status", "from", "db,", "if", "it", "has", "been\n", "confirmed,", "we", "do", "nothing", "and", "return", "here\n", "TODO(russellb)", "Why", "are", "we", "sending", "the", "migration", "object", "just\n", "to", "turn", "around", "and", "look", "it", "up", "from", "the", "db", "again?\n", "NOTE(wangpan):", "Get", "the", "instance", "from", "db,", "if", "it", "has", "been\n", "deleted,", "we", "do", "nothing", "and", "return", "here\n", "NOTE(danms):", "delete", "stashed", "migration", "information\n", "NOTE(tr3buchet):", "tear", "down", "networks", "on", "source", "host\n", "NOTE(mriedem):", "The", "old_vm_state", "could", "be", "STOPPED", "but", "the", "user\n", "might", "have", "manually", "powered", "up", "the", "instance", "to", "confirm", "the\n", "resize/migrate,", "so", "we", "need", "to", "check", "the", "current", "power", "state\n", "on", "the", "instance", "and", "set", "the", "vm_state", "appropriately.", "We", "default\n", "to", "ACTIVE", "because", "if", "the", "power", "state", "is", "not", "SHUTDOWN,", "we\n", "assume", "_sync_instance_power_state", "will", "clean", "it", "up.\n", "NOTE(comstud):", "A", "revert_resize", "is", "essentially", "a", "resize", "back", "to\n", "the", "old", "size,", "so", "we", "need", "to", "send", "a", "usage", "event", "here.\n", "NOTE(tr3buchet):", "tear", "down", "networks", "on", "destination", "host\n", "NOTE(ndipanov):", "We", "need", "to", "do", "this", "here", "because", "dropping", "the\n", "claim", "means", "we", "lose", "the", "migration_context", "data.", "We", "really", "should\n", "fix", "this", "by", "moving", "the", "drop_move_claim", "call", "to", "the\n", "finish_revert_resize", "method", "as", "this", "is", "racy", "(revert", "is", "dropped,\n", "but", "instance", "resources", "will", "be", "tracked", "with", "the", "new", "flavor", "until\n", "it", "gets", "rolled", "back", "in", "finish_revert_resize,", "which", "is\n", "potentially", "wrong", "for", "a", "period", "of", "time).\n", "NOTE(mriedem):", "delete", "stashed", "old_vm_state", "information;", "we\n", "default", "to", "ACTIVE", "for", "backwards", "compatibility", "if", "old_vm_state\n", "is", "not", "set\n", "NOTE(hanrong):", "we", "need", "to", "change", "migration_p['dest_compute']", "to\n", "source", "host", "temporarily.", "\"network_api.migrate_instance_finish\"\n", "will", "setup", "the", "network", "for", "the", "instance", "on", "the", "destination", "host.\n", "For", "revert", "resize,", "the", "instance", "will", "back", "to", "the", "source", "host,", "the\n", "setup", "of", "the", "network", "for", "instance", "should", "be", "on", "the", "source", "host.\n", "So", "set", "the", "migration_p['dest_compute']", "to", "source", "host", "at", "here.\n", "if", "the", "original", "vm", "state", "was", "STOPPED,", "set", "it", "back", "to", "STOPPED\n", "if", "the", "flavor", "IDs", "match,", "it's", "migrate;", "otherwise", "resize\n", "check", "driver", "whether", "support", "migrate", "to", "same", "host\n", "NOTE(danms):", "Stash", "the", "new", "instance_type", "to", "avoid", "having", "to\n", "look", "it", "up", "in", "the", "database", "later\n", "NOTE(mriedem):", "Stash", "the", "old", "vm_state", "so", "we", "can", "set", "the\n", "resized/reverted", "instance", "back", "to", "the", "same", "state", "later.\n", "NOTE(melwitt):", "Remove", "this", "in", "version", "5.0", "of", "the", "RPC", "API\n", "Code", "downstream", "may", "expect", "extra_specs", "to", "be", "populated", "since", "it\n", "is", "receiving", "an", "object,", "so", "lookup", "the", "flavor", "to", "ensure", "this.\n", "NOTE(dgenin):", "This", "is", "thrown", "in", "LibvirtDriver", "when", "the\n", "instance", "to", "be", "migrated", "is", "backed", "by", "LVM.\n", "Remove", "when", "LVM", "migration", "is", "implemented.\n", "try", "to", "re-schedule", "the", "resize", "elsewhere:\n", "not", "re-scheduling\n", "TODO(chaochin)", "Remove", "this", "until", "v5", "RPC", "API\n", "Code", "downstream", "may", "expect", "extra_specs", "to", "be", "populated", "since", "it\n", "is", "receiving", "an", "object,", "so", "lookup", "the", "flavor", "to", "ensure", "this.\n", "NOTE(danms):", "These", "are", "purely", "for", "any", "legacy", "code", "that", "still\n", "looks", "at", "them.\n", "NOTE(mriedem):", "Get", "the", "old_vm_state", "so", "we", "know", "if", "we", "should\n", "power", "on", "the", "instance.", "If", "old_vm_state", "is", "not", "set", "we", "need", "to", "default\n", "to", "ACTIVE", "for", "backwards", "compatibility\n", "NOTE(tr3buchet):", "setup", "networks", "on", "destination", "host\n", "NOTE(mriedem):", "If", "the", "original", "vm_state", "was", "STOPPED,", "we", "don't\n", "automatically", "power", "on", "the", "instance", "after", "it's", "migrated\n", "NOTE(russellb)", "We", "just", "want", "to", "bump", "updated_at.", "See", "bug", "1143466.\n", "NOTE(russellb)", "We", "just", "want", "to", "bump", "updated_at.", "See", "bug", "1143466.\n", "TODO(alaski):", "Remove", "object_compat", "for", "RPC", "version", "5.0\n", "Store", "the", "old", "state\n", "We", "default", "to", "the", "ACTIVE", "state", "for", "backwards", "compatibility\n", "NOTE(mriedem):", "The", "vm_state", "has", "to", "be", "set", "before", "updating", "the\n", "resource", "tracker,", "see", "vm_states.ALLOW_RESOURCE_REMOVAL.", "The", "host/node\n", "values", "cannot", "be", "nulled", "out", "until", "after", "updating", "the", "resource", "tracker\n", "though.\n", "NOTE(ndipanov):", "Free", "resources", "from", "the", "resource", "tracker\n", "NOTE(sfinucan):", "RPC", "calls", "should", "no", "longer", "be", "attempted", "against", "this\n", "instance,", "so", "ensure", "any", "calls", "result", "in", "errors\n", "Delete", "system_metadata", "for", "a", "shelved", "instance\n", "For", "essex,", "novncproxy_base_url", "must", "include", "the", "full", "path\n", "including", "the", "html", "file", "(like", "http://myhost/vnc_auto.html)\n", "Retrieve", "connect", "info", "from", "driver,", "and", "then", "decorate", "with", "our\n", "access", "info", "token\n", "For", "essex,", "spicehtml5proxy_base_url", "must", "include", "the", "full", "path\n", "including", "the", "html", "file", "(like", "http://myhost/spice_auto.html)\n", "Retrieve", "connect", "info", "from", "driver,", "and", "then", "decorate", "with", "our\n", "access", "info", "token\n", "Retrieve", "connect", "info", "from", "driver,", "and", "then", "decorate", "with", "our\n", "access", "info", "token\n", "Retrieve", "connect", "info", "from", "driver,", "and", "then", "decorate", "with", "our\n", "access", "info", "token\n", "Retrieve", "connect", "info", "from", "driver,", "and", "then", "decorate", "with", "our\n", "access", "info", "token\n", "NOTE(ndipanov):", "We", "need", "to", "explicitly", "set", "all", "the", "fields", "on", "the\n", "object", "so", "that", "obj_load_attr", "does", "not", "fail\n", "NOTE(vish):", "create", "bdm", "here", "to", "avoid", "race", "condition\n", "Handle", "bootable", "volumes", "which", "will", "not", "contain", "/dev/\n", "Only", "attempt", "to", "detach", "and", "disconnect", "from", "the", "volume", "if", "the\n", "instance", "is", "currently", "associated", "with", "the", "local", "compute", "host.\n", "If", "the", "volume", "is", "attached", "to", "another", "host", "(evacuate)", "then\n", "this", "connector", "is", "for", "the", "wrong", "host.", "Use", "the", "connector", "that\n", "was", "stored", "in", "connection_info", "instead", "(if", "we", "have", "one,", "and", "it\n", "is", "for", "the", "expected", "host).\n", "Volume", "was", "attached", "before", "we", "began", "stashing", "connectors\n", "Unexpected", "error.", "The", "stashed", "connector", "is", "also", "not", "matching\n", "the", "needed", "instance", "host.\n", "Fix", "found.", "Use", "stashed", "connector.\n", "If", "Cinder", "initiated", "the", "swap,", "it", "will", "keep\n", "the", "original", "ID\n", "Update", "bdm\n", "NOTE(vish):", "We", "don't", "want", "to", "actually", "mark", "the", "volume\n", "detached,", "or", "delete", "the", "bdm,", "just", "remove", "the\n", "connection", "from", "this", "host.\n", "Since", "this", "is", "a", "cast", "operation,", "log", "the", "failure", "for\n", "triage.\n", "TODO(tdurakov):", "remove", "dict", "to", "object", "conversion", "once", "RPC", "API", "version\n", "is", "bumped", "to", "5.x\n", "TODO(tdurakov):", "remove", "dict", "to", "object", "conversion", "once", "RPC", "API", "version\n", "is", "bumped", "to", "5.x\n", "NOTE(tr3buchet):", "setup", "networks", "on", "destination", "host\n", "Creating", "filters", "to", "hypervisors", "and", "firewalls.\n", "An", "example", "is", "that", "nova-instance-instance-xxx,\n", "which", "is", "written", "to", "libvirt.xml(Check", "\"virsh", "nwfilter-list\")\n", "This", "nwfilter", "is", "necessary", "on", "the", "destination", "host.\n", "In", "addition,", "this", "method", "is", "creating", "filtering", "rule\n", "onto", "destination", "host.\n", "TODO(tdurakov):", "remove", "dict", "to", "object", "conversion", "once", "RPC", "API", "version\n", "is", "bumped", "to", "5.x\n", "NOTE(danms):", "We", "should", "enhance", "the", "RT", "to", "account", "for", "migrations\n", "and", "use", "the", "status", "field", "to", "denote", "when", "the", "accounting", "has", "been\n", "done", "on", "source/destination.", "For", "now,", "this", "is", "just", "here", "for", "status\n", "reporting\n", "Executing", "live", "migration\n", "live_migration", "might", "raises", "exceptions,", "but\n", "nothing", "must", "be", "recovered", "in", "this", "version.\n", "NOTE(danms):", "We", "spawn", "here", "to", "return", "the", "RPC", "worker", "thread", "back", "to\n", "the", "pool.", "Since", "what", "follows", "could", "take", "a", "really", "long", "time,", "we", "don't\n", "want", "to", "tie", "up", "RPC", "workers.\n", "TODO(tdurakov):", "migration_id", "is", "used", "since", "4.12", "rpc", "api", "version\n", "remove", "migration_id", "parameter", "when", "the", "compute", "RPC", "version\n", "is", "bumped", "to", "5.x.\n", "NOTE(pkoniszewski):", "block", "migration", "specific", "params", "are", "set", "inside\n", "migrate_data", "objects", "for", "drivers", "that", "expose", "block", "live", "migration\n", "information", "(i.e.", "Libvirt,", "Xenapi", "and", "HyperV).", "For", "other", "drivers\n", "cleanup", "is", "not", "needed.\n", "No", "instance", "booting", "at", "source", "host,", "but", "instance", "dir\n", "must", "be", "deleted", "for", "preparing", "next", "block", "migration\n", "must", "be", "deleted", "for", "preparing", "next", "live", "migration", "w/o", "shared", "storage\n", "Cleanup", "source", "host", "post", "live-migration\n", "Detaching", "volumes.\n", "NOTE(vish):", "We", "don't", "want", "to", "actually", "mark", "the", "volume\n", "detached,", "or", "delete", "the", "bdm,", "just", "remove", "the\n", "connection", "from", "this", "host.\n", "remove", "the", "volume", "connection", "without", "detaching", "from", "hypervisor\n", "because", "the", "instance", "is", "not", "running", "anymore", "on", "the", "current", "host\n", "Releasing", "vlan.\n", "(not", "necessary", "in", "current", "implementation?)\n", "Releasing", "security", "group", "ingress", "rule.\n", "For", "all", "hypervisors", "other", "than", "libvirt,", "there", "is", "a", "possibility\n", "they", "are", "unplugging", "networks", "from", "source", "node", "in", "the", "cleanup\n", "method\n", "Define", "domain", "at", "destination", "host,", "without", "doing", "it,\n", "pause/suspend/terminate", "do", "not", "work.\n", "We", "don't", "want", "to", "break", "_post_live_migration()", "if\n", "post_live_migration_at_destination()", "fails", "as", "it", "should", "never\n", "affect", "cleaning", "up", "source", "node.\n", "NOTE(timello):", "make", "sure", "we", "update", "available", "resources", "on", "source\n", "host", "even", "before", "next", "periodic", "task.\n", "NOTE(tr3buchet):", "setup", "networks", "on", "destination", "host\n", "this", "is", "called", "a", "second", "time", "because\n", "multi_host", "does", "not", "create", "the", "bridge", "in\n", "plug_vifs\n", "Restore", "instance", "state", "and", "update", "host\n", "NOTE(tr3buchet):", "tear", "down", "networks", "on", "source", "host\n", "NOTE(vish):", "this", "is", "necessary", "to", "update", "dhcp\n", "TODO(tdurakov):", "remove", "dict", "to", "object", "conversion", "once", "RPC", "API", "version\n", "is", "bumped", "to", "5.x\n", "NOTE(tr3buchet):", "setup", "networks", "on", "source", "host", "(really", "it's", "re-setup)\n", "NOTE(tr3buchet):", "tear", "down", "networks", "on", "destination", "host\n", "NOTE(tdurakov):", "even", "if", "teardown", "networks", "fails", "driver\n", "should", "try", "to", "rollback", "live", "migration", "on", "destination.\n", "always", "run", "this", "even", "if", "setup_networks_on_host", "fails\n", "NOTE(vish):", "The", "mapping", "is", "passed", "in", "so", "the", "driver", "can", "disconnect\n", "from", "remote", "volumes", "if", "necessary\n", "TODO(tdurakov):", "remove", "dict", "to", "object", "conversion", "once", "RPC", "API\n", "version", "is", "bumped", "to", "5.x\n", "The", "list", "of", "instances", "to", "heal", "is", "empty", "so", "rebuild", "it\n", "We", "don't", "want", "to", "refresh", "the", "cache", "for", "instances\n", "which", "are", "building", "or", "deleting", "so", "don't", "put", "them\n", "in", "the", "list.", "If", "they", "are", "building", "they", "will", "get\n", "added", "to", "the", "list", "next", "time", "we", "build", "it.\n", "Save", "the", "first", "one", "we", "find", "so", "we", "don't\n", "have", "to", "get", "it", "again\n", "Find", "the", "next", "valid", "instance", "on", "the", "list\n", "Instance", "is", "gone.", "Try", "to", "grab", "another.\n", "Check", "the", "instance", "hasn't", "been", "migrated\n", "Check", "the", "instance", "isn't", "being", "deleting\n", "We", "have", "an", "instance", "now", "to", "refresh\n", "Call", "to", "network", "API", "to", "get", "instance", "info..", "this", "will\n", "force", "an", "update", "to", "the", "instance's", "info_cache\n", "Instance", "is", "gone.\n", "InstanceInfoCache", "is", "gone.\n", "race", "condition:", "The", "instance", "in", "DELETING", "state", "should", "not", "be\n", "set", "the", "migration", "state", "to", "error,", "otherwise", "the", "instance", "in\n", "to", "be", "deleted", "which", "is", "in", "RESIZED", "state\n", "will", "not", "be", "able", "to", "confirm", "resize\n", "race", "condition:", "This", "condition", "is", "hit", "when", "this", "method", "is\n", "called", "between", "the", "save", "of", "the", "migration", "record", "with", "a", "status", "of\n", "finished", "and", "the", "save", "of", "the", "instance", "object", "with", "a", "state", "of\n", "RESIZED.", "The", "migration", "record", "should", "not", "be", "set", "to", "error.\n", "NOTE(mdragon):", "Not", "all", "hypervisors", "have", "bandwidth", "polling\n", "implemented", "yet.", "If", "they", "don't", "it", "doesn't", "break", "anything,\n", "they", "just", "don't", "get", "the", "info", "in", "the", "usage", "events.\n", "NOTE(PhilDay):", "Record", "that", "its", "not", "supported", "so", "we", "can\n", "skip", "fast", "on", "future", "calls", "rather", "than", "waste", "effort", "getting\n", "the", "list", "of", "instances.\n", "Allow", "switching", "of", "greenthreads", "between", "queries.\n", "counter", "rollover\n", "counter", "rollover\n", "Allow", "switching", "of", "greenthreads", "between", "queries.\n", "NOTE(melwitt):", "This", "must", "be", "synchronized", "as", "we", "query", "state", "from\n", "two", "separate", "sources,", "the", "driver", "and", "the", "database.\n", "They", "are", "set", "(in", "stop_instance)", "and", "read,", "in", "sync.\n", "process", "syncs", "asynchronously", "-", "don't", "want", "instance", "locking", "to\n", "block", "entire", "periodic", "task", "thread\n", "No", "pending", "tasks.", "Now", "try", "to", "figure", "out", "the", "real", "vm_power_state.\n", "Note(maoy):", "the", "above", "get_info", "call", "might", "take", "a", "long", "time,\n", "for", "example,", "because", "of", "a", "broken", "libvirt", "driver.\n", "NOTE(hanlind):", "If", "the", "instance", "gets", "deleted", "during", "sync,\n", "silently", "ignore.\n", "We", "re-query", "the", "DB", "to", "get", "the", "latest", "instance", "info", "to", "minimize\n", "(not", "eliminate)", "race", "condition.\n", "on", "the", "sending", "end", "of", "nova-compute", "_sync_power_state\n", "may", "have", "yielded", "to", "the", "greenthread", "performing", "a", "live\n", "migration;", "this", "in", "turn", "has", "changed", "the", "resident-host\n", "for", "the", "VM;", "However,", "the", "instance", "is", "still", "active,", "it\n", "is", "just", "in", "the", "process", "of", "migrating", "to", "another", "host.\n", "This", "implies", "that", "the", "compute", "source", "must", "relinquish\n", "control", "to", "the", "compute", "destination.\n", "on", "the", "receiving", "end", "of", "nova-compute,", "it", "could", "happen\n", "that", "the", "DB", "instance", "already", "report", "the", "new", "resident\n", "but", "the", "actual", "VM", "has", "not", "showed", "up", "on", "the", "hypervisor\n", "yet.", "In", "this", "case,", "let's", "allow", "the", "loop", "to", "continue\n", "and", "run", "the", "state", "sync", "in", "a", "later", "round\n", "power_state", "is", "always", "updated", "from", "hypervisor", "to", "db\n", "Note(maoy):", "Now", "resolve", "the", "discrepancy", "between", "vm_state", "and\n", "vm_power_state.", "We", "go", "through", "all", "possible", "vm_states.\n", "TODO(maoy):", "we", "ignore", "these", "vm_state", "for", "now.\n", "The", "only", "rational", "power", "state", "should", "be", "RUNNING\n", "Note(maoy):", "here", "we", "call", "the", "API", "instead", "of\n", "brutally", "updating", "the", "vm_state", "in", "the", "database\n", "to", "allow", "all", "the", "hooks", "and", "checks", "to", "be", "performed.\n", "Note(maoy):", "there", "is", "no", "need", "to", "propagate", "the", "error\n", "because", "the", "same", "power_state", "will", "be", "retrieved", "next\n", "time", "and", "retried.\n", "For", "example,", "there", "might", "be", "another", "task", "scheduled.\n", "Note(maoy):", "a", "VM", "may", "get", "into", "the", "paused", "state", "not", "only\n", "because", "the", "user", "request", "via", "API", "calls,", "but", "also\n", "due", "to", "(temporary)", "external", "instrumentations.\n", "Before", "the", "virt", "layer", "can", "reliably", "report", "the", "reason,\n", "we", "simply", "ignore", "the", "state", "discrepancy.", "In", "many", "cases,\n", "the", "VM", "state", "will", "go", "back", "to", "running", "after", "the", "external\n", "instrumentation", "is", "done.", "See", "bug", "1097806", "for", "details.\n", "Occasionally,", "depending", "on", "the", "status", "of", "the", "hypervisor,\n", "which", "could", "be", "restarting", "for", "example,", "an", "instance", "may\n", "not", "be", "found.", "Therefore", "just", "log", "the", "condition.\n", "NOTE(russellb)", "Force", "the", "stop,", "because", "normally", "the\n", "compute", "API", "would", "not", "allow", "an", "attempt", "to", "stop", "a", "stopped\n", "instance.\n", "Note(maoy):", "this", "should", "be", "taken", "care", "of", "periodically", "in\n", "_cleanup_running_deleted_instances().\n", "TODO(comstud,", "jichenjc):", "Dummy", "quota", "object", "for", "now", "See", "bug", "1296414.\n", "The", "only", "case", "that", "the", "quota", "might", "be", "inconsistent", "is\n", "the", "compute", "node", "died", "between", "set", "instance", "state", "to", "SOFT_DELETED\n", "and", "quota", "commit", "to", "DB.", "When", "compute", "node", "starts", "again\n", "it", "will", "have", "no", "idea", "the", "reservation", "is", "committed", "or", "not", "or", "even\n", "expired,", "since", "it's", "a", "rare", "case,", "so", "marked", "as", "todo.\n", "NOTE(comstud):", "We", "can", "get", "to", "this", "case", "if", "a", "node", "was\n", "marked", "'deleted'", "in", "the", "DB", "and", "then", "re-added", "with", "a\n", "different", "auto-increment", "id.", "The", "cached", "resource\n", "tracker", "tried", "to", "update", "a", "deleted", "record", "and", "failed.\n", "Don't", "add", "this", "resource", "tracker", "to", "the", "new", "dict,", "so\n", "that", "this", "will", "resolve", "itself", "on", "the", "next", "run.\n", "NOTE(comstud):", "Replace", "the", "RT", "cache", "before", "looping", "through\n", "compute", "nodes", "to", "delete", "below,", "as", "we", "can", "end", "up", "doing", "greenthread\n", "switches", "there.", "Best", "to", "have", "everyone", "using", "the", "newest", "cache\n", "ASAP.\n", "Delete", "orphan", "compute", "node", "not", "reported", "by", "driver", "but", "still", "in", "db\n", "NOTE(sirp):", "admin", "contexts", "don't", "ordinarily", "return", "deleted", "records\n", "disable", "starting", "the", "instance\n", "and", "power", "it", "off\n", "If", "an", "attached", "port", "is", "deleted", "by", "neutron,", "it", "needs", "to\n", "be", "detached", "from", "the", "instance.\n", "And", "info", "cache", "needs", "to", "be", "updated.\n", "NOTE(danms):", "Some", "event", "types", "are", "handled", "by", "the", "manager,", "such\n", "as", "when", "we're", "asked", "to", "update", "the", "instance's", "info_cache.", "If", "it's\n", "not", "one", "of", "those,", "look", "for", "some", "thread(s)", "waiting", "for", "the", "event", "and\n", "unblock", "them", "if", "so.\n", "Determine", "what", "other", "nodes", "use", "this", "storage\n", "Filter", "all_instances", "to", "only", "include", "those", "nodes", "which", "share", "this\n", "storage", "path.\n", "TODO(mikal):", "this", "should", "be", "further", "refactored", "so", "that", "the", "cache\n", "cleanup", "code", "doesn't", "know", "what", "those", "instances", "are,", "just", "a", "remote\n", "count,", "and", "then", "this", "logic", "should", "be", "pushed", "up", "the", "stack.\n", "TODO(raj_singh):", "Remove", "this", "if", "condition", "when", "min", "value", "is\n", "introduced", "to", "\"maximum_instance_delete_attempts\"", "cfg", "option.\n", "Delete", "instance", "files", "if", "not", "cleanup", "properly", "either\n", "from", "the", "source", "or", "destination", "compute", "nodes", "when\n", "the", "instance", "is", "deleted", "during", "resizing."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/network_utils.py": ["None", "_", "bridge", "exception", "expr", "len", "list", "name_label", "networks", "session"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_metrics.py": ["False", "MetricsWeigherTestCase", "None", "exception", "expected_host", "expected_weight", "fake_list", "fake_metric", "fakes", "fields", "host", "host_values", "hostinfo_list", "hosts", "idle", "item", "kernel", "len", "m_list", "metrics", "monitor_metric", "name", "node", "objs", "results", "self", "setting", "settings", "super", "test", "user", "val", "value", "values", "weighed_host", "weigher", "weight_properties", "weights", "host1:", "idle=512\n", "host2:", "idle=1024\n", "host3:", "idle=3072\n", "host4:", "idle=8192\n", "so,", "host4", "should", "win:\n", "host1:", "idle=512,", "kernel=1\n", "host2:", "idle=1024,", "kernel=2\n", "host3:", "idle=3072,", "kernel=1\n", "host4:", "idle=8192,", "kernel=0\n", "so,", "host2", "should", "win:\n", "host1:", "idle=512\n", "host2:", "idle=1024\n", "host3:", "idle=3072\n", "host4:", "idle=8192\n", "so,", "host1", "should", "win", "(sum", "of", "settings", "is", "negative):\n", "host1:", "idle=512\n", "host2:", "idle=1024\n", "host3:", "idle=3072\n", "host4:", "idle=8192\n", "so,", "host1", "should", "win:\n", "host1:", "idle=512,", "kernel=1\n", "host2:", "idle=1024,", "kernel=2\n", "host3:", "idle=3072,", "kernel=1\n", "host4:", "idle=8192,", "kernel=0\n", "so,", "host4", "should", "win:\n", "host1:", "idle=512,", "kernel=1\n", "host2:", "idle=1024,", "kernel=2\n", "host3:", "idle=3072,", "kernel=1\n", "host4:", "idle=8192,", "kernel=0\n", "so,", "host4", "should", "win:\n", "host1:", "idle=512,", "kernel=1\n", "host2:", "idle=1024,", "kernel=2\n", "host3:", "idle=3072,", "kernel=1\n", "host4:", "idle=8192,", "kernel=0\n", "host5:", "idle=768,", "kernel=0,", "user=1\n", "host6:", "idle=2048,", "kernel=0,", "user=2\n", "so,", "host5", "should", "win:"], "/Users/mehranhassani/repos/nova/nova/virt/diagnostics.py": ["CpuDiagnostics", "DiskDiagnostics", "False", "MemoryDiagnostics", "NicDiagnostics", "None", "_", "config_drive", "cpu_details", "disk_details", "driver", "errors_count", "exception", "hypervisor_os", "i", "id", "input", "isinstance", "k", "l", "list", "mac_address", "maximum", "nic_details", "object", "read_bytes", "read_requests", "reason", "rx_drop", "rx_errors", "rx_octets", "rx_packets", "s", "self", "six", "state", "str_input", "time", "tx_drop", "tx_errors", "tx_octets", "tx_packets", "type", "uptime", "used", "v", "value", "version", "write_bytes", "write_requests", "Version", "1.0:", "Initial", "version\n", "Treat", "case", "of", "CpuDiagnostics,", "NicDiagnostics", "and\n", "DiskDiagnostics", "-", "these", "are", "lists\n", "Treat", "case", "of", "MemoryDiagnostics"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/constants.py": ["BDI_DEVICE_TYPE_TO_DRIVE_TYPE", "CTRL_TYPE_IDE", "CTRL_TYPE_SCSI", "DEFAULT_SERIAL_CONSOLE_PORT", "DISK", "DISK_FORMAT", "DISK_FORMAT_MAP", "DISK_FORMAT_VHD", "DISK_FORMAT_VHDX", "DVD", "DVD_FORMAT", "FLAVOR_ESPEC_REMOTEFX_MONITORS", "FLAVOR_ESPEC_REMOTEFX_RES", "FLAVOR_ESPEC_REMOTEFX_VRAM", "FLAVOR_SPEC_SECURE_BOOT", "HOST_POWER_ACTION_REBOOT", "HOST_POWER_ACTION_SHUTDOWN", "HOST_POWER_ACTION_STARTUP", "HYPERV_POWER_STATE", "IMAGE_PROP_VM_GEN_1", "IMAGE_PROP_VM_GEN_2", "IOPS_BASE_SIZE", "SERIAL_CONSOLE_BUFFER_SIZE", "SERIAL_PORT_TYPE_RO", "SERIAL_PORT_TYPE_RW", "STORAGE_PROTOCOL_FC", "STORAGE_PROTOCOL_ISCSI", "STORAGE_PROTOCOL_SMBFS", "VM_GEN_1", "VM_GEN_2", "VOLUME", "WMI_WIN32_PROCESSOR_ARCHITECTURE", "constants", "obj_fields", "power_state", "units", "The", "default", "serial", "console", "port", "number", "used", "for\n", "logging", "and", "interactive", "sessions."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/nfs.py": ["CONF", "False", "LOG", "LibvirtNFSVolumeDriver", "None", "True", "_LE", "_LW", "__name__", "conf", "connection_info", "disk_dev", "disk_info", "ensure", "exc", "export", "fs", "libvirt_utils", "logging", "mount_path", "nfs_cmd", "nfs_export", "nfs_share", "nova", "options", "processutils", "self", "six", "super", "utils", "Class", "implements", "libvirt", "part", "of", "volume", "driver", "for", "NFS.\nReturns", "xml", "for", "libvirt.\nConnect", "the", "volume.\nDisconnect", "the", "volume.\nMount", "nfs", "export", "to", "mount", "path.", "Construct", "the", "NFS", "mount", "command."], "/Users/mehranhassani/repos/nova/nova/objects/vcpu_model.py": ["False", "None", "True", "VERSION", "attrname", "base", "classmethod", "cls", "context", "db", "db_extra", "fields", "instance_uuid", "jsonstr", "jsonutils", "self", "setattr", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/conf/service.py": ["True", "cfg", "conf", "service_opts", "Copyright", "2015", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "TODO(johngarbutt)", "we", "need", "a", "better", "default", "and", "minimum,", "in", "a", "backwards\n", "compatible", "way", "for", "report_interval\n", "TODO(johngarbutt)", "the", "code", "enforces", "the", "min", "value", "here,", "but", "we", "could\n", "do", "to", "add", "some", "min", "value", "here,", "once", "we", "sort", "out", "report_interval\n", "NOTE(sdague):", "the", "network_manager", "has", "a", "bunch", "of", "different", "in\n", "tree", "classes", "that", "are", "still", "legit", "options.", "In", "Newton", "we", "should\n", "turn", "this", "into", "a", "selector."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_availability_zone.py": ["ADMIN_API", "True", "response", "sample_dir", "self", "test_servers"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/vm_util.py": ["ALL_SUPPORTED_NETWORK_DEVICES", "CONF", "Exception", "False", "LOG", "Limits", "None", "True", "VNC_CONFIG_KEY", "VmdkInfo", "_", "_FOLDER_PATH_REF_MAPPING", "_LE", "_LI", "_LW", "_VM_REFS_CACHE", "__name__", "_create_vif_spec", "_create_virtual_disk_spec", "_detach_and_delete_devices_config_spec", "_find_allocated_slots", "_find_controller_slot", "_get_allocated_vnc_ports", "_get_allocation_info", "_get_bus_number_for_scsi_controller", "_get_device_capacity", "_get_device_disk_type", "_get_folder", "_get_object_for_optionvalue", "_get_object_for_value", "_get_object_from_results", "_get_vm_name", "_get_vm_port_indices", "_get_vm_ref_from_extraconfig", "_get_vm_ref_from_name", "_get_vm_ref_from_uuid", "_get_vm_ref_from_vm_uuid", "_iface_id_option_value", "_is_ide_controller", "_is_scsi_controller", "_vm_ref_cache", "adapter_type", "adapter_type_dict", "all_clusters", "allocated_ports", "allocation", "allocation_type", "backing", "bool", "boot_disk", "boot_options", "bus_number", "capacity_in_bytes", "cdrom", "cdrom_device_backing", "cdrom_unit_number", "child_entities", "child_entity", "child_entity_name", "client_factory", "clone_spec", "cluster", "cluster_name", "collections", "config", "config_spec", "configured_ports_len", "connectable_spec", "constants", "consumed", "controller_key", "controller_keys", "controller_spec", "convert_vif_model", "copy", "cores_per_socket", "cpu_limits", "create_controller_spec", "create_serial_port_spec", "create_virtual_cdrom_spec", "create_vmdk_spec", "data", "data_store_name", "datastore", "dc_ref", "dest", "destroy_disk", "destroy_task", "detach_virtual_disk_spec", "dev", "dev_spec", "device", "device_config_spec", "device_name", "devices", "disk_file_backing", "disk_io_limits", "disk_move_type", "disk_size", "disk_type", "display_name", "dp", "ds_obj", "dynamic_prop", "e", "excep", "exception", "excutils", "extra_config", "extra_opts", "extra_specs", "extras", "file_path", "folder", "folder_ref", "func", "functools", "get_all_cluster_mors", "get_host_ref_for_vm", "get_vm_ref", "get_vmdk_adapter_type", "get_vmdk_create_spec", "getattr", "hardware_devices", "hardware_summary", "hasattr", "host", "host_mor", "host_mors", "host_ref", "host_ret", "hw_version", "i", "id", "ide_keys", "identifier", "iface_id", "index", "instance", "instance_uuid", "int", "key", "len", "limit", "limits", "linked_clone", "location", "logging", "mac_address", "machine_id_str", "managed_by", "max_port", "max_unit_number", "mem_info", "memory_limits", "memory_mb", "metadata", "min_port", "msg", "name", "net_device", "network_model", "network_name", "network_ref", "network_spec", "nicteaming", "nova", "obj", "object", "opt", "opt_enabled", "opt_keymap", "opt_port", "option", "option_value", "options", "os_type", "parent_folder_ref", "path", "pbm", "policy", "port", "port_group_name", "port_index", "port_total", "portgroup", "ports", "power_on", "poweroff_task", "poweron_task", "profile_id", "profile_spec", "prop", "prop_dict", "prop_val", "propset", "range", "reason", "reconfig_task", "reconfigure_vm", "rel_spec", "rename_task", "res_mor", "res_pool_ref", "res_usage", "reservation", "resize_spec", "result", "results", "ret", "root_device", "root_disk", "runtime_summary", "scsi_controller_classes", "scsi_keys", "search_vm_ref_by_identifier", "self", "serial_port", "serial_port_spec", "session", "set", "shares", "shares_level", "shares_share", "six", "size_in_kb", "snapshot", "source", "stats", "storage_policy", "storage_profile_spec", "taken", "task_info", "template", "tools_info", "unit_number", "unit_numbers", "units", "uuid", "val", "value", "vcpus", "vexc", "vif", "vif_info", "vif_infos", "vif_limits", "vif_spec", "vim", "vim_util", "virtual_controller", "virtual_device_config", "virtual_device_config_spec", "virtual_disk", "virtual_disk_path", "virtual_machine_config_spec", "vlan_id", "vm_create_task", "vm_file_info", "vm_folder", "vm_name", "vm_ref", "vm_ref_cache_from_instance", "vm_ref_cache_from_name", "vm_ref_cache_get", "vm_ref_cache_update", "vm_refs", "vm_state", "vmdk_adapter_type", "vmdk_controller_key", "vmdk_copy_task", "vmdk_create_spec", "vmdk_create_task", "vmdk_device", "vmdk_file_path", "vms", "vnc_port", "vnc_ports", "vswitch_name", "vswitch_port_group_spec", "vutil", "wrapper", "imits", "object", "holds", "instance", "limits", "for", "convenience.\nExtraSpecs", "object", "holds", "extra_specs", "for", "the", "instance.\nBuilds", "the", "VM", "Create", "spec.\nCreates", "config", "spec", "for", "serial", "port.\nProvides", "updates", "for", "a", "VM", "spec.\nConverts", "standard", "VIF_MODEL", "types", "to", "the", "internal", "VMware", "ones.\nBuilds", "the", "vif", "attach", "config", "spec.\nBuilds", "the", "vif", "detach", "config", "spec.\nGets", "the", "vm", "profile", "spec", "configured", "for", "storage", "policy.\nBuilds", "the", "vmdk", "attach", "config", "spec.\nBuilds", "and", "returns", "the", "cdrom", "attach", "config", "spec.\nBuilds", "the", "vmdk", "detach", "config", "spec.\nBuilds", "extra", "spec", "fields", "from", "a", "dictionary.\nReturns", "information", "for", "the", "primary", "VMDK", "attached", "to", "the", "given", "VM.\nReturn", "usable", "bus", "number", "when", "create", "new", "SCSI", "controller.\nGets", "the", "RDM", "disk", "key.\nBuilds", "the", "virtual", "disk", "create", "spec.\nBuilds", "spec", "for", "the", "creation", "of", "a", "new", "Virtual", "CDROM", "to", "the", "VM.\nBuilds", "the", "VM", "clone", "spec.\nBuilds", "the", "VM", "relocation", "spec.\nBuilds", "the", "machine", "id", "change", "config", "spec.\nBuilds", "the", "virtual", "switch", "port", "group", "add", "spec.\nBuilds", "the", "vnc", "config", "spec.\nReturn", "VNC", "port", "for", "an", "VM", "or", "None", "if", "there", "is", "no", "available", "port.\nReturn", "an", "integer", "set", "of", "all", "allocated", "VNC", "ports.\nGet", "reference", "to", "the", "VM", "with", "the", "name", "specified.\nGet", "reference", "to", "the", "VM", "with", "the", "uuid", "specified.\nGet", "reference", "to", "the", "VM", "through", "uuid", "or", "vm", "name.\nGet", "a", "MoRef", "to", "the", "ESXi", "host", "currently", "running", "an", "instance.\nGet", "the", "hostname", "of", "the", "ESXi", "host", "currently", "running", "an", "instance.\nGet", "the", "aggregate", "resource", "stats", "of", "a", "cluster.\nGet", "reference", "to", "a", "host", "within", "the", "cluster", "specified.\nGet", "the", "resource", "pool.\nGet", "all", "the", "clusters", "in", "the", "vCenter.\nGet", "reference", "to", "the", "vCenter", "cluster", "with", "the", "specified", "name.\nCreate", "VM", "on", "ESX", "host.\nDestroy", "a", "VM", "instance.", "Assumes", "VM", "is", "powered", "off.\nReconfigure", "a", "VM", "according", "to", "the", "config", "spec.\nPower", "on", "the", "specified", "instance.\nGet", "the", "first", "free", "port", "index.\nPower", "off", "the", "specified", "instance.\nDetach", "specified", "devices", "from", "VM.", "A", "simple", "cache", "for", "storing", "inventory", "folder", "references.\n", "Format:", "{inventory_path:", "folder_ref}\n", "A", "cache", "for", "VM", "references.", "The", "key", "will", "be", "the", "VM", "name\n", "and", "the", "value", "is", "the", "VM", "reference.", "The", "VM", "name", "is", "unique.", "This\n", "is", "either", "the", "UUID", "of", "the", "instance", "or", "UUID-rescue", "in", "the", "case\n", "that", "this", "is", "a", "rescue", "VM.", "This", "is", "in", "order", "to", "prevent\n", "unnecessary", "communication", "with", "the", "backend.\n", "the", "config", "key", "which", "stores", "the", "VNC", "port\n", "Set", "as", "'unlimited'\n", "The", "VirtualEthernetCardResourceAllocation", "has", "'share'", "instead", "of\n", "'shares'.\n", "The", "name", "is", "the", "unique", "identifier", "for", "the", "VM.\n", "set", "the", "Hardware", "version\n", "Allow", "nested", "hypervisor", "instances", "to", "host", "64", "bit", "VMs.\n", "Append", "the", "profile", "spec\n", "Configure", "cpu", "information\n", "Configure", "memory", "information\n", "add", "vm-uuid", "and", "iface-id.x", "values", "for", "Neutron\n", "enable", "to", "provide", "info", "needed", "by", "udev", "to", "generate", "/dev/disk/by-id\n", "Set", "the", "VM", "to", "be", "'managed'", "by", "'OpenStack'\n", "we", "are", "using", "unique", "negative", "integers", "as", "temporary", "keys\n", "Create", "a", "controller", "for", "the", "Virtual", "Hard", "Disk\n", "Keep", "compatible", "with", "other", "Hyper", "vif", "model", "parameter.\n", "NOTE(asomya):", "Only", "works", "on", "ESXi", "if", "the", "portgroup", "binding", "is", "set", "to\n", "ephemeral.", "Invalid", "configuration", "if", "set", "to", "static", "and", "the", "NIC", "does\n", "not", "come", "up", "on", "boot", "if", "set", "to", "dynamic.\n", "Configure", "externalId\n", "externalId", "is", "only", "supported", "from", "vCenter", "6.0", "onwards\n", "The", "Server", "assigns", "a", "Key", "to", "the", "device.", "Here", "we", "pass", "a", "-ve", "temporary", "key.\n", "-ve", "because", "actual", "keys", "are", "+ve", "numbers", "and", "we", "don't\n", "want", "a", "clash", "with", "the", "key", "that", "server", "might", "associate", "with", "the", "device\n", "vnic", "limits", "are", "only", "supported", "from", "version", "6.0\n", "If", "a", "key", "is", "already", "present", "then", "it", "cannot", "be", "deleted,", "only", "updated.\n", "This", "enables", "us", "to", "reuse", "this", "key", "if", "there", "is", "an", "additional\n", "attachment.", "The", "keys", "need", "to", "be", "preserved.", "This", "is", "due", "to", "the", "fact\n", "that", "there", "is", "logic", "on", "the", "ESX", "that", "does", "the", "network", "wiring\n", "according", "to", "these", "values.", "If", "they", "are", "changed", "then", "this", "will\n", "break", "networking", "to", "and", "from", "the", "interface.\n", "add", "the", "key", "value", "pairs\n", "Devices", "pre-vSphere-5.5", "only", "reports", "capacityInKB,", "which", "has\n", "rounding", "inaccuracies.", "Use", "that", "only", "if", "the", "more", "accurate\n", "attribute", "is", "absent.\n", "Determine", "if", "we", "need", "to", "get", "the", "details", "of", "the", "root", "disk\n", "find", "the", "controllers", "which", "still", "have", "available", "slots\n", "return", "the", "first", "match", "one\n", "the", "SCSI", "controller", "sits", "on", "its", "own", "bus\n", "Every", "SCSI", "controller", "will", "take", "a", "unique", "bus", "number\n", "The", "max", "bus", "number", "for", "SCSI", "controllers", "is", "3\n", "create", "new", "controller", "with", "the", "specified", "type", "and", "return", "its", "spec\n", "Get", "free", "bus", "number", "for", "new", "SCSI", "controller.\n", "The", "Server", "assigns", "a", "Key", "to", "the", "device.", "Here", "we", "pass", "a", "-ve", "random", "key.\n", "-ve", "because", "actual", "keys", "are", "+ve", "numbers", "and", "we", "don't\n", "want", "a", "clash", "with", "the", "key", "that", "server", "might", "associate", "with", "the", "device\n", "VLAN", "ID", "of", "0", "means", "that", "VLAN", "tagging", "is", "not", "to", "be", "done", "for", "the", "network.\n", "TODO(rgerganov):", "bug", "#1256944\n", "The", "VNC", "port", "should", "be", "unique", "per", "host,", "not", "per", "vCenter\n", "Get", "the", "Host", "and", "Resource", "Pool", "Managed", "Object", "Refs\n", "Total", "vcpus", "is", "the", "sum", "of", "all", "pCPUs", "of", "individual", "hosts\n", "The", "overcommitment", "ratio", "is", "factored", "in", "by", "the", "scheduler\n", "maxUsage", "is", "the", "memory", "limit", "of", "the", "cluster", "available", "to", "VM's\n", "overallUsage", "is", "the", "hypervisor's", "view", "of", "memory", "usage", "by", "VM's\ncom.vmware.wssdk.apiref.doc/\n", "Get", "the", "root", "resource", "pool", "of", "the", "cluster\n", "An", "invalid", "guestId", "will", "result", "in", "an", "error", "with", "no", "specific", "fault\n", "type", "and", "the", "generic", "error", "'A", "specified", "parameter", "was", "not", "correct'.\n", "As", "guestId", "is", "user-editable,", "we", "try", "to", "help", "the", "user", "out", "with", "some\n", "additional", "information", "if", "we", "notice", "that", "guestId", "isn't", "in", "our", "list", "of\n", "known-good", "values.\n", "We", "don't", "check", "this", "in", "advance", "or", "do", "anything", "more", "than", "warn", "because\n", "we", "can't", "guarantee", "that", "our", "list", "of", "known-good", "guestIds", "is", "complete.\n", "Consequently,", "a", "value", "which", "we", "don't", "recognise", "may", "in", "fact", "be", "valid.\n", "Create", "a", "Virtual", "Disk", "of", "the", "size", "of", "the", "flat", "vmdk", "file.", "This", "is\n", "done", "just", "to", "generate", "the", "meta-data", "file", "whose", "specifics\n", "depend", "on", "the", "size", "of", "the", "disk,", "thin/thick", "provisioning", "and", "the\n", "storage", "adapter", "type.\n", "No", "ports", "are", "configured", "on", "the", "VM\n", "Find", "the", "first", "free", "port", "index\n", "Get", "list", "of", "child", "entities", "for", "the", "parent", "folder\n", "Return", "if", "the", "child", "folder", "with", "input", "name", "is", "already", "present"], "/Users/mehranhassani/repos/nova/nova/network/ldapdns.py": ["CONF", "DNSEntry", "DomainEntry", "HostEntry", "ImportError", "LOG", "None", "_", "_LW", "__name__", "_dn", "_ip", "_names", "_parent", "_rdn", "address", "attrs", "attrtype", "classmethod", "cls", "create_modlist", "dEntry", "date", "dequalified", "dn", "dns_driver", "domain", "domains", "entries", "entry", "exception", "existingdn", "ip", "ldap", "ldap_object", "len", "lobj", "logging", "mlist", "modlist", "nEntry", "name", "names", "newattrs", "newdn", "newrdn", "nova", "object", "objs", "parent", "property", "rdn", "self", "soa", "super", "time", "tuple", "type", "utf8_vals", "utils", "val", "z", "Create", "a", "new", "domain", "entry,", "and", "return", "an", "object", "that", "wraps", "it.\nDelete", "the", "domain", "that", "this", "entry", "refers", "to.", "This", "module", "needs", "to", "be", "importable", "despite", "ldap", "not", "being", "a", "requirement\n", "Importing", "ldap.modlist", "breaks", "the", "tests", "for", "some", "reason,\n", "so", "this", "is", "an", "abbreviated", "version", "of", "a", "function", "from\n", "there.\n", "We", "already", "have", "an", "ldap", "entry", "for", "this", "IP,", "so", "we", "just\n", "need", "to", "add", "the", "new", "name.\n", "We", "need", "to", "create", "an", "entirely", "new", "entry.\n", "We", "just", "have", "to", "remove", "the", "requested", "domain.\n", "We", "just", "removed", "the", "rdn,", "so", "we", "need", "to", "move", "this", "entry.\n", "We", "should", "delete", "the", "entire", "record."], "/Users/mehranhassani/repos/nova/nova/api/openstack/auth.py": ["CONF", "False", "NoAuthMiddlewareBase", "True", "_sep", "always_admin", "base_wsgi", "context", "ctx", "getattr", "is_admin", "nova", "os_url", "project_id", "project_id_in_path", "remote_address", "req", "res", "self", "token", "user_id", "webob", "wsgi", "Return", "a", "fake", "token", "if", "one", "isn't", "specified.", "NOTE(vish):", "This", "is", "expecting", "and", "returning", "Auth(1.1),", "whereas\n", "keystone", "uses", "2.0", "auth.", "We", "should", "probably", "allow\n", "2.0", "auth", "here", "as", "well."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/237_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/018_instance_groups.py": ["Column", "DateTime", "False", "ForeignKey", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "group_member", "group_policy", "groups", "meta", "migrate_engine", "API", "Database", "migrations", "for", "instance_groups"], "/Users/mehranhassani/repos/nova/nova/consoleauth/__init__.py": ["Module", "to", "authenticate", "Consoles."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/images.py": ["None", "_collection_name", "auto_disk_config", "coll_name", "collection_name", "common", "dict", "dt", "glance", "glance_url", "identifier", "image", "image_dict", "image_list", "images", "images_dict", "images_links", "instance_uuid", "int", "list_func", "request", "self", "server_ref", "staticmethod", "str", "strutils", "utils", "value", "Return", "a", "dictionary", "with", "basic", "image", "attributes.\nReturn", "a", "dictionary", "with", "image", "details.\nShow", "a", "list", "of", "images", "with", "details.\nShow", "a", "list", "of", "images", "with", "basic", "attributes.\nReturn", "a", "list", "of", "links", "for", "this", "image.\nCreate", "an", "alternate", "link", "for", "a", "specific", "image", "id.\nReturn", "standard", "format", "for", "a", "given", "datetime", "object.\nUpdate", "the", "status", "field", "to", "standardize", "format."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_pci.py": ["FakeResponse", "None", "PciControllerPolicyEnforcementV21", "PciControlletestV21", "PciHypervisorControllerTestV21", "PciServerControllerTestV21", "True", "action", "addr", "args", "context", "ctxt", "dict", "dist", "exc", "exception", "fake_compute_node", "fake_pci_device_get_by_addr", "fake_pci_device_get_by_id", "fakes", "fields", "getattr", "i", "id", "len", "mock", "mock_get_db_inst", "mock_get_db_node", "mock_node_get_all", "node", "objects", "pci", "pci_device_pool", "pci_stats", "range", "req", "resp", "result", "rule", "rule_name", "self", "super", "test", "test_pci_device", "uuids", "wsgi"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_suspend_server.py": ["SuspendServerSamplesJsonTest", "response", "sample_dir", "self", "super", "test_servers", "Get", "api", "samples", "to", "suspend", "server", "request.\n", "Get", "api", "samples", "to", "server", "resume", "request."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/floating_ips.py": ["ALIAS", "AttributeError", "Exception", "FloatingIPActionController", "FloatingIPController", "KeyError", "LOG", "MAX_PROXY_API_SUPPORT_VERSION", "None", "StopIteration", "TypeError", "_", "_LW", "__name__", "_translate_floating_ip_view", "_translate_floating_ips_view", "address", "alias", "args", "body", "cached_nwinfo", "common", "compute", "compute_utils", "context", "controller", "disassociate_floating_ip", "e", "ex", "exception", "extension", "extensions", "fi_policies", "fixed", "fixed_address", "fixed_ips", "floating_ip", "floating_ips", "get_instance_by_floating_ip_addr", "id", "instance", "instance_id", "ip", "kwargs", "len", "logging", "msg", "name", "netutils", "network", "next", "pool", "req", "resource", "result", "self", "super", "uuidutils", "validation", "version", "webob", "wsgi", "The", "Floating", "IPs", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "data", "about", "the", "given", "floating", "IP.\nReturn", "a", "list", "of", "floating", "IPs", "allocated", "to", "a", "project.\nAssociate", "floating_ip", "to", "an", "instance.\nDissociate", "floating_ip", "from", "an", "instance.\nFloating", "IPs", "support.", "If", "fixed_ip", "is", "unset", "on", "floating_ip,", "then", "we", "can't", "get", "any", "of", "the", "next\n", "stuff,", "so", "we'll", "just", "short-circuit\n", "TODO(rlrossit):", "These", "look", "like", "dicts,", "but", "they're", "actually", "versioned\n", "objects,", "so", "we", "need", "to", "do", "these", "contain", "checks", "because", "they", "will", "not", "be\n", "caught", "by", "the", "exceptions", "below", "(it", "raises", "NotImplementedError", "and\n", "OrphanedObjectError.", "This", "comment", "can", "probably", "be", "removed", "when\n", "the", "dict", "syntax", "goes", "away.\n", "get", "the", "floating", "ip", "object\n", "get", "the", "associated", "instance", "object", "(if", "any)\n", "get", "the", "floating", "ip", "object\n", "get", "the", "associated", "instance", "object", "(if", "any)\n", "disassociate", "if", "associated"], "/Users/mehranhassani/repos/nova/nova/network/rpcapi.py": ["CONF", "NetworkAPI", "None", "True", "VERSION_ALIASES", "address", "av_zone", "cctxt", "ctxt", "dest_compute", "dev", "dhcp_options", "dns_type", "domain", "exception", "fixed_address", "fixed_range", "floating_address", "floating_addresses", "host", "instance", "instance_id", "instance_uuid", "interface", "jsonutils", "kwargs", "mac", "macs", "messaging", "name", "network_id", "network_ids", "network_ref", "network_uuid", "networks", "nova", "object", "objects_base", "project", "project_id", "requested_networks", "rpc", "rxtx_factor", "self", "serializer", "source_compute", "super", "target", "teardown", "topic", "uuid", "version", "version_cap", "vif_address", "vpn", "TODO(russellb):", "Convert", "this", "to", "named", "arguments.", "It's", "a", "pretty", "large\n", "list,", "so", "unwinding", "it", "all", "is", "probably", "best", "done", "in", "its", "own", "patch", "so", "it's\n", "easier", "to", "review.\n", "NOTE(tr3buchet):", "the", "call", "is", "just", "to", "wait", "for", "completion\n", "NOTE(tr3buchet):", "the", "call", "is", "just", "to", "wait", "for", "completion\n", "NOTE(russellb):", "Ideally", "this", "would", "not", "have", "a", "prefix", "of", "'_'", "since", "it", "is\n", "a", "part", "of", "the", "rpc", "API.", "However,", "this", "is", "how", "it", "was", "being", "called", "when", "the\n", "1.0", "API", "was", "being", "documented", "using", "this", "client", "proxy", "class.", "It", "should", "be\n", "changed", "if", "there", "was", "ever", "a", "2.0.\n", "NOTE(russellb):", "Ideally", "this", "would", "not", "have", "a", "prefix", "of", "'_'", "since", "it", "is\n", "a", "part", "of", "the", "rpc", "API.", "However,", "this", "is", "how", "it", "was", "being", "called", "when", "the\n", "1.0", "API", "was", "being", "documented", "using", "this", "client", "proxy", "class.", "It", "should", "be\n", "changed", "if", "there", "was", "ever", "a", "2.0.\n", "NOTE(russellb):", "Ideally", "this", "would", "not", "have", "a", "prefix", "of", "'_'", "since", "it", "is\n", "a", "part", "of", "the", "rpc", "API.", "However,", "this", "is", "how", "it", "was", "being", "called", "when", "the\n", "1.0", "API", "was", "being", "documented", "using", "this", "client", "proxy", "class.", "It", "should", "be\n", "changed", "if", "there", "was", "ever", "a", "2.0."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/compat.py": ["LOG", "_LW", "__name__", "code", "e", "host", "is_race", "libvirt", "logging", "message", "virt_dom", "1372670", "for", "more", "details."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_virt.py": ["FakeMount", "False", "None", "PROC_MOUNTS_CONTENTS", "TestVirtDisk", "True", "_", "block_device_info", "block_device_mapping", "cmd", "container_dir", "dev", "device", "disk_api", "diskimage", "driver", "empty_block_device_info", "ephemerals", "expected_commands", "fake_execute", "fake_instance_for_format", "fakemount", "image", "io", "mock", "mock_open", "mount_dir", "mount_point", "mount_points", "mountdir", "object", "partition", "proc_mounts", "response", "self", "six", "staticmethod", "super", "swap", "test", "NOTE(thomasem):", "Not", "adding", "any", "commands", "in", "this", "case,", "because", "we're\n", "not", "expecting", "an", "additional", "umount", "for", "LocalBlockImages.", "This", "is", "to\n", "assert", "that", "no", "additional", "commands", "are", "run", "in", "this", "case."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_tenant_networks.py": ["CONF", "DEFAULT_NETWORK", "DEFAULT_TENANT_ID", "Exception", "False", "NETWORKS", "NETWORKS_WITH_DEFAULT_NET", "None", "TenantNetworksDeprecationTest", "TenantNetworksEnforcementV21", "TenantNetworksTestV21", "TenantNeutronNetworksTestV21", "True", "body", "cfg", "commit_mock", "context", "copy", "create_mock", "ctrlr", "ctxt", "default_net", "delete_ex", "delete_method", "delete_mock", "disassociate_ex", "disassociate_mock", "ex", "exc", "exception", "expected", "expex", "fake_network_api_get_all", "fakes", "get_mock", "isinstance", "kwargs", "mock", "networks_v21", "res", "reserve_mock", "rollback_mock", "rule_name", "self", "status_int", "super", "test", "use_neutron", "validation_error", "webob", "os-tenant-networks", "only", "supports", "Neutron", "when", "listing", "networks", "or\n", "showing", "details", "about", "a", "network,", "create", "and", "delete", "operations\n", "result", "in", "a", "503", "and", "500", "response,", "respectively.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/pci_passthrough_filter.py": ["False", "LOG", "True", "__name__", "filters", "host_state", "logging", "pci_requests", "self", "spec_obj", "Return", "true", "if", "the", "host", "has", "the", "required", "PCI", "devices."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_external_events.py": ["ALIAS", "LOG", "None", "ServerExternalEventsController", "_", "_LI", "__name__", "_event", "accepted_events", "accepted_instances", "alias", "body", "body_events", "client_event", "compute", "context", "dict", "event", "exception", "extensions", "instance", "instances", "logging", "msg", "name", "objects", "req", "resource", "response_events", "result", "robj", "see_policies", "self", "server_external_events", "set", "super", "validation", "version", "webob", "wsgi", "Creates", "a", "new", "instance", "event.\nServer", "External", "Event", "Triggers.", "Load", "migration_context", "here", "in", "a", "single", "DB", "operation\n", "because", "we", "need", "it", "later", "on\n", "NOTE:", "before", "accepting", "the", "event,", "make", "sure", "the", "instance\n", "for", "which", "the", "event", "is", "sent", "is", "assigned", "to", "a", "host;", "otherwise\n", "it", "will", "not", "be", "possible", "to", "dispatch", "the", "event\n", "NOTE:", "as", "the", "event", "is", "processed", "asynchronously", "verify\n", "whether", "202", "is", "a", "more", "suitable", "response", "code", "than", "200\n", "FIXME(cyeoh):", "This", "needs", "some", "infrastructure", "support", "so", "that\n", "we", "have", "a", "general", "way", "to", "do", "this"], "/Users/mehranhassani/repos/nova/nova/objects/security_group_rule.py": ["None", "OPTIONAL_ATTRS", "True", "VERSION", "base", "classmethod", "cls", "context", "db", "db_group", "db_rule", "db_rules", "exception", "expected_attrs", "field", "fields", "grantee_group", "instance", "instance_uuid", "objects", "parent_group", "rule", "rule_id", "secgroup_id", "security_group", "self", "setattr", "staticmethod", "updates", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "create()", "and", "set", "id", "as", "read_only"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/basic.py": ["ALIAS", "BasicController", "alias", "data", "extensions", "name", "req", "resource", "self", "version", "wsgi", "Basic", "Test", "Extension\nBasic", "Test", "Extension."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/admin_only_action_common.py": ["CommonMixin", "None", "NotImplementedError", "action", "actions", "args", "args_map", "body", "body_map", "compute_api_args_map", "controller_function", "ex", "exc_info", "exception", "exception_arg", "exception_args", "fake_instance", "fakes", "getattr", "instance", "kwargs", "method", "method_translations", "object", "res", "self", "status_int", "super", "test", "timeutils", "uuid", "uuidutils", "vm_states", "webob", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "Re-mock", "this.\n", "Re-mock", "this.\n", "Re-mock", "this.\n", "Re-mock", "this.\n", "Re-mock", "this."], "/Users/mehranhassani/repos/nova/nova/conf/cloudpipe.py": ["cfg", "cloudpipe_group", "cloudpipe_opts", "conf", "paths"], "/Users/mehranhassani/repos/nova/nova/network/neutronv2/constants.py": ["AUTO_ALLOCATE_TOPO_EXT", "DNS_INTEGRATION", "NET_EXTERNAL", "PORTBINDING_EXT", "QOS_QUEUE", "VNIC_INDEX_EXT"], "/Users/mehranhassani/repos/nova/nova/scheduler/host_manager.py": ["CONF", "Exception", "False", "HOST_INSTANCE_SEMAPHORE", "HostState", "ImportError", "IterableUserDict", "LOG", "None", "ReadOnlyDict", "True", "TypeError", "_LI", "_LW", "__name__", "_async_init_instance_info", "_fmt", "_get_hosts_matching_request", "_locked", "_locked_update", "_match_forced_hosts", "_match_forced_nodes", "_strip_ignore_hosts", "agg", "agg_id", "aggregate", "aggregates", "aggs", "all_ram_mb", "bad_filters", "batch_size", "cls", "collections", "compute", "compute_nodes", "compute_set", "context", "context_module", "curr_node", "curr_nodes", "dead_nodes", "decorated_function", "dict", "disk_mb", "e", "elevated", "end_node", "exception", "filter_classes", "filter_cls", "filter_cls_names", "filter_name", "filters", "force_hosts", "force_nodes", "forced_hosts", "forced_hosts_str", "forced_nodes", "forced_nodes_str", "free_disk_mb", "free_gb", "function", "functools", "good_filters", "hardware", "host", "host_info", "host_map", "host_name", "host_numa_topology", "host_state", "hostname", "hosts", "hosts_to_force", "hosts_to_ignore", "ignore_hosts", "ignored_hosts", "ignored_hosts_str", "index", "inst_dict", "inst_list", "instance", "instance_cells", "instance_info", "instance_numa_topology", "instance_uuid", "instance_uuids", "instances", "int", "isinstance", "iso8601", "item", "iter", "key", "least_gb", "len", "list", "local_set", "logging", "lowered_hosts_to_force", "min", "msg", "name_to_cls_map", "node", "nodename", "nodes_to_force", "nova", "now", "object", "objects", "pci_requests", "pci_stats", "ram_mb", "requested_destination", "requested_node", "requested_nodes", "result", "return_value", "seen_nodes", "self", "service", "service_refs", "set", "set_update_time_on_success", "six", "source", "spec", "spec_obj", "start_node", "state_key", "time", "timeutils", "tuple", "utils", "vcpus", "weigher_classes", "weights", "x", "A", "read-only", "dict.\nSet", "updated", "time", "of", "HostState", "when", "consuming", "succeed.\nUpdate", "all", "information", "about", "a", "host.\nUpdate", "information", "about", "a", "host", "from", "a", "ComputeNode", "object.\nIncrementally", "update", "host", "state", "from", "a", "RequestSpec", "object.\nBase", "HostManager", "class.\nUpdates", "internal", "HostManager", "information", "about", "aggregates.\nFilter", "hosts", "and", "return", "only", "ones", "passing", "all", "filters.\nWeigh", "the", "hosts.", "Python", "3\n", "Python", "2\n", "Ignores", "exception", "raised", "from", "consume_from_request()", "so", "that\n", "booting", "instance", "would", "fail", "in", "the", "resource", "claim", "of", "compute\n", "node,", "other", "suitable", "node", "may", "be", "chosen", "during", "scheduling", "retry.\n", "NOTE(sbauza):", "Objects", "are", "UTC", "tz-aware", "by", "default\n", "Mutable", "available", "resources.\n", "These", "will", "change", "as", "resources", "are", "virtually", "\"consumed\".\n", "Additional", "host", "information", "from", "the", "compute", "node", "stats:\n", "Other", "information\n", "Resource", "oversubscription", "values", "for", "the", "compute", "host:\n", "Generic", "metrics", "from", "compute", "nodes\n", "List", "of", "aggregates", "the", "host", "belongs", "to\n", "Instances", "on", "this", "host\n", "Allocation", "ratios", "for", "this", "host\n", "Scheduler", "API", "is", "inherently", "multi-threaded", "as", "every", "incoming", "RPC\n", "message", "will", "be", "dispatched", "in", "it's", "own", "green", "thread.", "So", "the\n", "shared", "host", "state", "should", "be", "updated", "in", "a", "consistent", "way", "to", "make\n", "sure", "its", "data", "is", "valid", "under", "concurrent", "write", "operations.\n", "NOTE(jichenjc):", "if", "the", "compute", "record", "is", "just", "created", "but", "not", "updated\n", "some", "field", "such", "as", "free_disk_gb", "can", "be", "None\n", "Assume", "virtual", "size", "is", "all", "consumed", "by", "instances", "if", "use", "qcow2", "disk.\n", "can", "occur", "when", "an", "instance", "in", "database", "is", "not", "on", "host\n", "NOTE(jogo)", "free_ram_mb", "can", "be", "negative\n", "All", "virt", "drivers", "report", "host_ip\n", "Don't", "store", "stats", "directly", "in", "host_state", "to", "make", "sure", "these", "don't\n", "overwrite", "any", "values,", "or", "get", "overwritten", "themselves.", "Store", "in", "self", "so\n", "filters", "can", "schedule", "with", "them.\n", "Track", "number", "of", "instances", "on", "host\n", "update", "metrics\n", "update", "allocation", "ratios", "given", "by", "the", "ComputeNode", "object\n", "Scheduler", "API", "is", "inherently", "multi-threaded", "as", "every", "incoming", "RPC\n", "message", "will", "be", "dispatched", "in", "it's", "own", "green", "thread.", "So", "the\n", "shared", "host", "state", "should", "be", "consumed", "in", "a", "consistent", "way", "to", "make\n", "sure", "its", "data", "is", "valid", "under", "concurrent", "write", "operations.\n", "Track", "number", "of", "instances", "on", "host\n", "Calculate", "the", "numa", "usage\n", "NOTE(sbauza):", "Yeah,", "that's", "crap.", "We", "should", "get", "rid", "of", "all", "of", "those\n", "NUMA", "helpers", "because", "now", "we're", "100%", "sure", "that", "spec_obj.numa_topology\n", "is", "an", "InstanceNUMATopology", "object.", "Unfortunately,", "since\n", "HostState.host_numa_topology", "is", "still", "limbo", "between", "an", "NUMATopology\n", "object", "(when", "updated", "by", "consume_from_request),", "a", "ComputeNode", "object\n", "(when", "updated", "by", "update_from_compute_node),", "we", "need", "to", "keep", "the", "call\n", "to", "get_host_numa_usage_from_instance", "until", "it's", "fixed", "(and", "use", "a\n", "temporary", "orphaned", "Instance", "object", "as", "a", "proxy)\n", "NOTE(sbauza):", "By", "considering", "all", "cases", "when", "the", "scheduler", "is", "called\n", "and", "when", "consume_from_request()", "is", "run,", "we", "can", "safely", "say", "that", "there\n", "is", "always", "an", "IO", "operation", "because", "we", "want", "to", "move", "the", "instance\n", "Can", "be", "overridden", "in", "a", "subclass\n", "Dict", "of", "aggregates", "keyed", "by", "their", "ID\n", "Dict", "of", "set", "of", "aggregate", "IDs", "keyed", "by", "the", "name", "of", "the", "host", "belonging\n", "to", "those", "aggregates\n", "Dict", "of", "instances", "and", "status,", "keyed", "by", "host\n", "Refreshing", "the", "mapping", "dict", "to", "remove", "all", "hosts", "that", "are", "no", "longer\n", "part", "of", "the", "aggregate\n", "Break", "the", "queries", "into", "batches", "of", "10", "to", "reduce", "the", "total", "number\n", "of", "calls", "to", "the", "DB.\n", "Call", "sleep()", "to", "cooperatively", "yield\n", "Run", "this", "async", "so", "that", "we", "don't", "block", "the", "scheduler", "start-up\n", "NOTE(sbauza):", "The", "API", "level", "should", "prevent", "the", "user", "from\n", "providing", "a", "wrong", "destination", "but", "let's", "make", "sure", "a", "wrong\n", "destination", "doesn't", "trample", "the", "scheduler", "still.\n", "NOTE(sbauza):", "Reduce", "a", "potentially", "long", "set", "of", "hosts", "as", "much", "as\n", "possible", "to", "any", "requested", "destination", "nodes", "before", "passing", "the\n", "list", "to", "the", "filters\n", "NOTE(deva):", "we", "can't", "assume", "\"host\"", "is", "unique", "because\n", "one", "host", "may", "have", "many", "nodes.\n", "NOTE(deva):", "allow", "force_hosts", "and", "force_nodes", "independently\n", "NOTE(deva):", "Skip", "filters", "when", "forcing", "host", "or", "node\n", "Get", "resource", "usage", "across", "the", "available", "compute", "nodes:\n", "We", "force", "to", "update", "the", "aggregates", "info", "each", "time", "a", "new", "request\n", "comes", "in,", "because", "some", "changes", "on", "the", "aggregates", "could", "have", "been\n", "happening", "after", "setting", "this", "field", "for", "the", "first", "time\n", "remove", "compute", "nodes", "from", "host_state_map", "if", "they", "are", "not", "active\n", "Host", "is", "running", "old", "version,", "or", "updates", "aren't", "flowing.\n", "Overwrite", "the", "entry", "(if", "any)", "with", "the", "new", "info.\n", "This", "is", "a", "host", "sending", "its", "full", "instance", "list,", "so", "use", "it.\n", "Remove", "the", "existing", "Instance", "object,", "if", "any"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_aggregate_model.py": ["False", "None", "True", "added", "api_models", "c", "c_a", "c_b", "column_list", "columns_new", "columns_old", "intersect", "m", "m_a", "m_b", "model", "models", "removed", "self", "set", "test"], "/Users/mehranhassani/repos/nova/nova/cmd/status.py": ["CATEGORIES", "CONF", "Exception", "FAILURE", "MetaData", "None", "PLACEMENT_DOCS_LINK", "SUCCESS", "Table", "True", "UPGRADE_CHECK_MSG_MAP", "UpgradeCheckCode", "UpgradeCheckResult", "UpgradeCommands", "WARNING", "_", "_check_cellsv2", "_check_placement", "_check_resource_providers", "_upgrade_checks", "add_command_parsers", "auth", "category_opt", "cell", "cell_mapping", "cell_mapping_obj", "cell_mappings", "cfg", "check_results", "client", "cmd_common", "code", "compute_nodes", "config", "context", "count", "ctxt", "db_session", "details", "enum", "fields", "float", "fn", "fn_args", "fn_kwargs", "func", "functools", "host_mappings", "inventories", "keystone", "ks_exc", "ks_filter", "max_version", "meta", "msg", "name", "needs_version", "nova", "nova_context", "num_computes", "num_rps", "object", "path", "prettytable", "print", "result", "ret", "return_code", "select", "self", "session", "sqlfunc", "staticmethod", "super", "sys", "t", "textwrap", "traceback", "upgrade_check_result", "vcpu_rc_id", "version", "versions", "Returns", "the", "number", "of", "compute", "nodes", "in", "the", "cell", "database.\nQueries", "the", "API", "database", "for", "non-cell0", "cell", "mappings.\nParse", "options", "and", "call", "the", "appropriate", "class/method.", "enum", "comes", "from", "the", "enum34", "package", "if", "python", "<", "3.4,", "else", "it's", "stdlib\n", "All", "upgrade", "readiness", "checks", "passed", "successfully", "and", "there", "is\n", "nothing", "to", "do.\n", "At", "least", "one", "check", "encountered", "an", "issue", "and", "requires", "further\n", "investigation.", "This", "is", "considered", "a", "warning", "but", "the", "upgrade", "may", "be", "OK.\n", "There", "was", "an", "upgrade", "status", "check", "failure", "that", "needs", "to", "be\n", "investigated.", "This", "should", "be", "considered", "something", "that", "stops", "an", "upgrade.\n", "NOTE(mriedem):", "This", "does", "not", "filter", "based", "on", "the", "service", "status\n", "because", "a", "disabled", "nova-compute", "service", "could", "still", "be", "reporting\n", "inventory", "info", "to", "the", "placement", "service.", "There", "could", "be", "an", "outside\n", "chance", "that", "there", "are", "compute", "node", "records", "in", "the", "database", "for\n", "disabled", "nova-compute", "services", "that", "aren't", "yet", "upgraded", "to", "Ocata", "or\n", "the", "nova-compute", "service", "was", "deleted", "and", "the", "service", "isn't", "actually\n", "running", "on", "the", "compute", "host", "but", "the", "operator", "hasn't", "cleaned", "up", "the\n", "compute_nodes", "entry", "in", "the", "database", "yet.", "We", "consider", "those", "edge", "cases\n", "here", "and", "the", "worst", "case", "scenario", "is", "we", "give", "a", "warning", "that", "there", "are\n", "more", "compute", "nodes", "than", "resource", "providers.", "We", "can", "tighten", "this", "up\n", "later", "if", "needed,", "for", "example", "by", "not", "including", "compute", "nodes", "that\n", "don't", "have", "a", "corresponding", "nova-compute", "service", "in", "the", "services\n", "table,", "or", "by", "only", "counting", "compute", "nodes", "with", "a", "service", "version", "of", "at\n", "least", "15", "which", "was", "the", "highest", "service", "version", "when", "Newton", "was\n", "released.\n", "Two", "mappings", "are", "required", "at", "a", "minimum,", "cell0", "and", "your", "first", "cell\n", "This", "may", "be", "a", "fresh", "install", "in", "which", "case", "there", "may", "not", "be", "any\n", "compute_nodes", "in", "the", "cell", "database", "if", "the", "nova-compute", "service\n", "hasn't", "started", "yet", "to", "create", "those", "records.", "So", "let's", "query", "the\n", "the", "cell", "database", "for", "compute_nodes", "records", "and", "if", "we", "find", "at\n", "least", "one", "it's", "a", "failure.\n", "The", "required", "version", "is", "a", "bit", "tricky", "but", "we", "know", "that", "we", "at", "least\n", "need", "1.0", "for", "Newton", "computes.", "This", "minimum", "might", "change", "in", "the\n", "future.\n", "TODO(mriedem):", "If/when", "we", "support", "a", "separate", "placement", "database", "this\n", "will", "need", "to", "change", "to", "just", "use", "the", "REST", "API.\n", "Get", "the", "VCPU", "resource", "class", "ID", "for", "filtering.\n", "The", "inventories", "table", "has", "a", "unique", "constraint", "per", "resource", "provider\n", "and", "resource", "class,", "so", "we", "can", "simply", "count", "the", "number", "of", "inventories\n", "records", "for", "the", "given", "resource", "class", "and", "those", "will", "uniquely", "identify\n", "the", "number", "of", "resource", "providers", "we", "care", "about.\n", "Get", "the", "total", "count", "of", "resource", "providers", "from", "the", "API", "DB", "that", "can\n", "host", "compute", "resources.", "This", "might", "be", "0", "so", "we", "have", "to", "figure", "out", "if\n", "this", "is", "a", "fresh", "install", "and", "if", "so", "we", "don't", "consider", "this", "an", "error.\n", "There", "are", "no", "cell", "mappings,", "cells", "v2", "was", "maybe", "not", "deployed", "in\n", "Newton,", "but", "placement", "might", "have", "been,", "so", "let's", "check", "the", "single\n", "database", "for", "compute", "nodes.\n", "This", "is", "a", "failure", "because", "there", "are", "compute", "nodes", "in", "the\n", "database", "but", "nothing", "is", "reporting", "resource", "providers", "to", "the\n", "placement", "service.\n", "There", "are", "no", "resource", "providers", "and", "no", "compute", "nodes", "so", "we\n", "assume", "this", "is", "a", "fresh", "install", "and", "move", "on.", "We", "should", "return", "a\n", "success", "code", "with", "a", "message", "here", "though.\n", "There", "are", "fewer", "resource", "providers", "than", "compute", "nodes,", "so", "return\n", "a", "warning", "explaining", "that", "the", "deployment", "might", "be", "underutilized.\n", "We", "have", "RPs", ">=", "CNs", "which", "is", "what", "we", "want", "to", "see.\n", "The", "format", "of", "the", "check", "functions", "is", "to", "return", "an", "UpgradeCheckResult\n", "object", "with", "the", "appropriate", "UpgradeCheckCode", "and", "details", "set.", "If", "the\n", "check", "hits", "warnings", "or", "failures", "then", "those", "should", "be", "stored", "in", "the\n", "returned", "UpgradeCheckResult's", "\"details\"", "attribute.", "The", "summary", "will\n", "be", "rolled", "up", "at", "the", "end", "of", "the", "check()", "function.", "These", "functions", "are\n", "intended", "to", "be", "run", "in", "order", "and", "build", "on", "top", "of", "each", "other", "so", "order\n", "matters.\n", "Added", "in", "Ocata\n", "Added", "in", "Ocata\n", "Added", "in", "Ocata\n", "wrap", "the", "text", "on", "the", "details", "to", "60", "characters\n", "This", "is", "a", "list", "if", "2-item", "tuples", "for", "the", "check", "name", "and", "it's", "results.\n", "store", "the", "result", "of", "the", "check", "for", "the", "summary", "table\n", "we", "want", "to", "end", "up", "with", "the", "highest", "level", "code", "of", "all", "checks\n", "We're", "going", "to", "build", "a", "summary", "table", "that", "looks", "like:\n", "+----------------------------------------------------+\n", "|", "Upgrade", "Check", "Results", "|\n", "+----------------------------------------------------+\n", "|", "Check:", "Cells", "v2", "|\n", "|", "Result:", "Success", "|\n", "|", "Details:", "None", "|\n", "+----------------------------------------------------+\n", "|", "Check:", "Placement", "API", "|\n", "|", "Result:", "Failure", "|\n", "|", "Details:", "There", "is", "no", "placement-api", "endpoint", "in", "the", "|\n", "|", "service", "catalog.", "|\n", "+----------------------------------------------------+\n", "This", "is", "255", "so", "it's", "not", "confused", "with", "the", "upgrade", "check", "exit", "codes."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_fping.py": ["FAKE_UUID", "False", "FpingPolicyEnforcementV21", "FpingTestDeprecation", "FpingTestV21", "None", "True", "arg", "cmd", "controller_cls", "exc", "exception", "execute", "fakes", "fping_v21", "func", "ids", "ip", "key", "kwarg", "len", "mock", "mock_get_instance", "req", "res_dict", "return_server", "return_servers", "rule", "self", "srv", "super", "test", "webob"], "/Users/mehranhassani/repos/nova/nova/objects/quotas.py": ["None", "Quotas", "True", "VERSION", "args", "base", "classmethod", "cls", "context", "db", "deltas", "expire", "fields", "ids_from_instance", "instance", "kwargs", "limit", "project_id", "quota", "quotas", "reservations", "resource", "security_group", "self", "server_group", "super", "user_id", "values", "Transitional", "for", "compatibility.\nRollback", "quotas.\nCheck", "quota", "limits.\nCount", "a", "resource.", "TODO(lyj):", "This", "method", "needs", "to", "be", "cleaned", "up", "once", "the\n", "ids_from_instance", "helper", "method", "is", "renamed", "or", "some", "common\n", "method", "is", "added", "for", "objects.quotas.\n", "TODO(PhilD):", "This", "method", "needs", "to", "be", "cleaned", "up", "once", "the\n", "ids_from_instance", "helper", "method", "is", "renamed", "or", "some", "common\n", "method", "is", "added", "for", "objects.quotas.\n", "Version", "1.0:", "initial", "version\n", "Version", "1.1:", "Added", "create_limit()", "and", "update_limit()\n", "Version", "1.2:", "Added", "limit_check()", "and", "count()\n", "Set", "up", "defaults.\n", "NOTE(danms,comstud):", "Quotas", "likely", "needs", "an", "overhaul", "and", "currently\n", "doesn't", "map", "very", "well", "to", "objects.", "Since", "there", "is", "quite", "a", "bit", "of\n", "logic", "in", "the", "db", "api", "layer", "for", "this,", "just", "pass", "this", "through", "for", "now.\n", "NOTE(danms,comstud):", "Quotas", "likely", "needs", "an", "overhaul", "and", "currently\n", "doesn't", "map", "very", "well", "to", "objects.", "Since", "there", "is", "quite", "a", "bit", "of\n", "logic", "in", "the", "db", "api", "layer", "for", "this,", "just", "pass", "this", "through", "for", "now."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/281_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/block_device.py": ["CONF", "DriverBlankBlockDevice", "DriverBlockDevice", "DriverEphemeralBlockDevice", "DriverImageBlockDevice", "DriverSnapshotBlockDevice", "DriverSwapBlockDevice", "DriverVolumeBlockDevice", "Exception", "False", "IndexError", "LOG", "None", "NotImplementedError", "True", "TypeError", "_IMPLEMENTED_CLASSES", "_InvalidType", "_LE", "_LI", "_LW", "_NotTransformable", "__name__", "_convert_block_devices", "_fields", "_get_volume_create_az_value", "_legacy_fields", "_log_and_attach", "_new_fields", "_new_only_fields", "_proxy_as_attr", "_update_on_save", "_valid_destination", "_valid_source", "all", "args", "attach_args", "attach_kwargs", "attr_name", "av_zone", "bdm", "bdms", "block_device", "block_device_mapping", "cls", "connection_info", "connection_info_string", "connector", "context", "convert_all_volumes", "convert_blanks", "convert_ephemerals", "convert_images", "convert_snapshots", "convert_swap", "convert_volumes", "dev", "device", "device_type", "devices", "dict", "do_check_attach", "do_driver_attach", "encryption", "encryptors", "enumerate", "exc", "exception", "excutils", "field", "functools", "getattr", "hasattr", "i", "instance", "is_implemented", "isinstance", "itertools", "jsonutils", "k", "key", "key_name", "kwargs", "legacy_bdm", "logging", "lookup_name", "method", "mode", "name", "nova", "num", "obj", "refresh_args", "refresh_kwargs", "ret_val", "self", "set", "setattr", "six", "snapshot", "source_blank", "source_image", "source_snapshot", "source_volume", "str", "super", "transformed_list", "update_db", "v", "value", "virt_driver", "vol", "vol_name", "volume", "volume_api", "volume_bdm", "volume_bdms", "volume_id", "wait_func", "wrapped", "Transform", "bdm", "to", "the", "format", "that", "is", "passed", "to", "drivers.", "If", "we're", "allowed", "to", "attach", "a", "volume", "in", "any", "AZ", "to", "an", "instance", "in", "any", "AZ,\n", "then", "we", "don't", "care", "what", "AZ", "the", "volume", "is", "in", "so", "don't", "specify", "anything.\n", "Else", "the", "volume", "has", "to", "be", "in", "the", "same", "AZ", "as", "the", "instance", "otherwise", "we\n", "fail.", "If", "the", "AZ", "is", "not", "in", "Cinder", "the", "volume", "create", "will", "fail.", "But", "on", "the\n", "other", "hand", "if", "the", "volume", "AZ", "and", "instance", "AZ", "don't", "match", "and\n", "cross_az_attach", "is", "False,", "then", "volume_api.check_attach", "will", "fail", "too,", "so\n", "we", "can't", "really", "win.", ":)\n", "TODO(mriedem):", "It", "would", "be", "better", "from", "a", "UX", "perspective", "if", "we", "could", "do\n", "some", "validation", "in", "the", "API", "layer", "such", "that", "if", "we", "know", "we're", "going", "to\n", "specify", "the", "AZ", "when", "creating", "the", "volume", "and", "that", "AZ", "is", "not", "in", "Cinder,", "we\n", "could", "fail", "the", "boot", "from", "volume", "request", "early", "with", "a", "400", "rather", "than\n", "fail", "to", "build", "the", "instance", "on", "the", "compute", "node", "which", "results", "in", "a\n", "NoValidHost", "error.\n", "If", "do_driver_attach", "is", "False,", "we", "will", "attach", "a", "volume", "to", "an", "instance\n", "at", "boot", "time.", "So", "actual", "attach", "is", "done", "by", "instance", "creation", "code.\n", "NOTE(mriedem):", "save", "our", "current", "state", "so", "connection_info", "is", "in\n", "the", "database", "before", "the", "volume", "status", "goes", "to", "'in-use'", "because\n", "after", "that", "we", "can", "detach", "and", "connection_info", "is", "required", "for\n", "detach.\n", "Cinder-volume", "might", "have", "completed", "volume", "attach.", "So\n", "we", "should", "detach", "the", "volume.", "If", "the", "attach", "did", "not\n", "happen,", "the", "detach", "request", "will", "be", "ignored.\n", "NOTE", "(ndipanov):", "A", "no-op", "if", "there", "is", "no", "connection", "info", "already\n", "NOTE(ndipanov):", "we", "might", "want", "to", "generalize", "this", "by", "adding", "it", "to", "the\n", "_update_on_save", "and", "adding", "a", "transformation", "function.\n", "Call", "the", "volume", "attach", "now\n", "NOTE(lyarwood):", "At", "present", "only", "DriverVolumeBlockDevice", "derived\n", "devices", "provide", "a", "refresh_connection_info", "method.\n", "Re-enumerate", "ephemeral", "devices"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/hosts.py": ["ALIAS", "False", "HostController", "LOG", "None", "NotImplementedError", "True", "_LI", "__name__", "action", "alias", "api_services", "body", "by_proj_resources", "common", "compute", "compute_node", "context", "cpu_sum", "e", "enabled", "exception", "extensions", "filters", "hdd_sum", "host_name", "hosts", "hosts_policies", "id", "instance", "instances", "logging", "maint_mode", "mem_sum", "mode", "name", "objects", "orig_val", "project_map", "read_enabled", "req", "resource", "resources", "result", "self", "service", "services", "six", "staticmethod", "status", "super", "val", "validation", "version", "webob", "wsgi", "zone", "The", "hosts", "admin", "extension.\nThe", "Hosts", "API", "controller", "for", "the", "OpenStack", "API.\nReboots,", "shuts", "down", "or", "powers", "up", "the", "host.\nAdmin-only", "host", "administration.", "Convert", "enable/disable", "str", "to", "a", "bool.\n", "See", "what", "the", "user", "wants", "to", "'update'\n", "Make", "the", "calls", "and", "merge", "the", "results\n", "Getting", "usage", "resource", "per", "project"], "/Users/mehranhassani/repos/nova/nova/virt/disk/mount/api.py": ["FILE_CHECK_INTERVAL", "False", "IOError", "LOG", "MAX_DEVICE_WAIT", "MAX_FILE_CHECKS", "None", "NotImplementedError", "True", "_", "_LI", "_LW", "__name__", "_out", "automapped_path", "device", "err", "exception", "image", "imgmodel", "importutils", "isinstance", "logging", "loopingcall", "map_path", "mode", "mount_dir", "mountdir", "object", "os", "partition", "recheck_path", "self", "start_time", "staticmethod", "status", "time", "utils", "Support", "for", "mounting", "virtual", "image", "files.\nReset", "device", "paths", "to", "allow", "unmounting.\nMake", "the", "image", "available", "as", "a", "block", "device", "in", "the", "file", "system.\nSome", "implementations", "need", "to", "retry", "their", "get_dev.\nRelease", "the", "block", "device", "from", "the", "file", "system", "namespace.\nMap", "partitions", "of", "the", "device", "to", "the", "file", "system", "namespace.\nRemove", "partitions", "of", "the", "device", "from", "the", "file", "system", "namespace.\nMount", "the", "device", "into", "the", "file", "system.\nUnmount", "the", "device", "from", "the", "file", "system.\nCall", "the", "get,", "map", "and", "mnt", "operations.\nCall", "the", "unmnt", "operation.\nCall", "the", "umnt,", "unmap,", "and", "unget", "operations.", "to", "be", "overridden", "in", "subclasses\n", "TODO(berrange)", "We", "could", "mount", "RBDImage", "directly\n", "using", "kernel", "RBD", "block", "dev", "support.\n\n", "This", "is", "left", "as", "an", "enhancement", "for", "future\n", "motivated", "developers", "todo,", "since", "raising\n", "an", "exception", "is", "on", "par", "with", "what", "this\n", "code", "did", "historically\n", "Input\n", "Output\n", "Internal\n", "Reset", "to", "mounted", "dir", "if", "possible\n", "NOTE(mikal):", "This", "method", "helps", "implement", "retries.", "The", "implementation\n", "simply", "calls", "_get_dev_retry_helper", "from", "their", "get_dev,", "and", "implements\n", "_inner_get_dev", "with", "their", "device", "acquisition", "logic.", "The", "NBD\n", "implementation", "has", "an", "example.\n", "Note", "kpartx", "can", "output", "warnings", "to", "stderr", "and", "succeed\n", "Also", "it", "can", "output", "failures", "to", "stderr", "and", "\"succeed\"\n", "So", "we", "just", "go", "on", "the", "existence", "of", "the", "mapped", "device\n", "Note", "kpartx", "does", "nothing", "when", "presented", "with", "a", "raw", "image,\n", "so", "given", "we", "only", "use", "it", "when", "we", "expect", "a", "partitioned", "image,", "fail\n", "Note", "auto", "mapping", "can", "be", "enabled", "with", "the", "'max_part'", "option\n", "to", "the", "nbd", "or", "loop", "kernel", "modules.", "Beware", "of", "possible", "races\n", "in", "the", "partition", "scanning", "for", "_loop_", "devices", "though\n", "(details", "in", "bug", "1024586),", "which", "are", "currently", "uncatered", "for."], "/Users/mehranhassani/repos/nova/nova/network/linux_net.py": ["AttributeError", "BRIDGE_NAME_PREFIX", "CONF", "EnvironmentError", "Exception", "False", "GATEWAY_INTERFACE_PREFIX", "IOError", "IptablesManager", "IptablesRule", "IptablesTable", "LOG", "LinuxBridgeInterfaceDriver", "LinuxNetInterfaceDriver", "None", "NotImplementedError", "True", "ValueError", "_", "_LE", "_LW", "__name__", "_add_dhcp_mangle_rule", "_add_dnsmasq_accept_rules", "_create_ovs_vif_cmd", "_dhcp_file", "_dnsmasq_pid_for", "_enable_ipv4_forwarding", "_err", "_exec_ebtables", "_execute", "_get_interface_driver", "_host_dhcp", "_host_dhcp_network", "_host_dhcp_opts", "_host_dns", "_host_lease", "_ip_bridge_cmd", "_iptables_dest", "_ovs_vsctl", "_ra_file", "_ra_pid_for", "_remove_dhcp_mangle_rule", "_remove_dnsmasq_accept_rules", "_set_device_mtu", "_weed_out_duplicates", "_weed_out_removes", "action", "add_snat_rule", "address", "all_lines", "all_tables", "any", "args", "attempts", "binary_name", "bot_rules", "bottom_rules", "bridge", "bridge_interface", "builtin_chains", "calendar", "chain", "chain_set", "chained_rules", "chains", "check_exit_code", "cmd", "cmdline", "commit_index", "conf_str", "conffile", "context", "count", "create_tap_dev", "current_lines", "data", "delete_bridge_dev", "delete_dev", "delete_net_dev", "dest_range", "dev", "dev1_name", "dev2_name", "device", "device_exists", "dmz", "dns_server", "dns_servers", "drop_action", "drop_actions", "dup", "dup_filter", "e", "end", "ensure_ebtables_rules", "enumerate", "err", "error", "exc", "exception", "excutils", "execute", "exit_code", "f", "fake_table", "fields", "file", "fileutils", "filter", "filtering", "fixed_ip", "fixedip", "fixedips", "floating_ebtables_rules", "floating_forward_rules", "floating_ip", "full_args", "full_ip", "gateway", "get_binary_name", "get_dhcp_hosts", "get_dhcp_opts", "get_dns_hosts", "get_gateway_rules", "host", "hostname", "hosts", "hostsfile", "iface", "iface_id", "importutils", "inspect", "instance_id", "int", "interface", "interface_addrs", "interface_driver", "interface_mac", "interface_type", "interfaces", "ip", "ip_params", "ip_range", "ip_version", "iptables_manager", "ipv4_filter", "is_external", "is_pid_cmdline_correct", "isinstance", "isolate_dhcp_address", "jsonutils", "jump_snippet", "kind", "kwargs", "len", "line", "lines", "list", "logging", "mac", "mac_addr", "mac_address", "macs", "map", "match", "mode", "msg", "mtu", "multiqueue", "name", "net", "net_attrs", "netaddr", "netifaces", "network", "network_model", "network_ref", "new_filter", "new_ip_params", "nova", "num_rules", "object", "objects", "old_ip_params", "old_routes", "open", "optsfile", "os", "other", "our_rules", "out", "params", "pci_addr", "pci_utils", "pf_ifname", "pid", "pid_file", "port", "port_state", "prefix", "private_ip", "processutils", "proto", "public_ip", "r", "re", "regex", "remove_chains", "remove_ebtables_rules", "remove_isolate_dhcp_address", "remove_rules", "removed", "restart_dhcp", "result", "retry_strings", "rule", "rule_obj", "rule_str", "rules", "rules_index", "s", "seconds_since_epoch", "seen_chains", "seen_lines", "self", "send_arp_for_ip", "set", "six", "sleep", "snat_range", "sockmode", "sockpath", "sorted", "start", "staticmethod", "stderr", "stdout", "str", "sysctl_key", "table", "table_name", "tables", "temp_filter", "time", "timestamp", "timeutils", "top", "top_rules", "unwrapped_chains", "utils", "values", "vf_ifname", "vf_num", "vif_id", "vlan", "vlan_interface", "vlan_num", "wrap", "write_to_file", "Implements", "vlans,", "bridges,", "and", "iptables", "rules", "using", "linux", "utilities.\nGrab", "the", "name", "of", "the", "binary", "we're", "running", "in.\nAn", "iptables", "table.\nRemove", "all", "rules", "matching", "regex.\nRemove", "all", "rules", "from", "a", "chain.\nCreate", "forwarding", "rule", "for", "metadata.\nCreate", "the", "filter", "accept", "rule", "for", "metadata.\nBasic", "networking", "setup", "goes", "here.\nBind", "IP", "to", "public", "interface.\nUnbind", "a", "public", "IP", "from", "public", "interface.\nSets", "up", "local", "metadata", "IP.\nSets", "up", "forwarding", "rules", "for", "vlan.\nEnsure", "floating", "IP", "forwarding", "rule.\nRemove", "forwarding", "for", "floating", "IP.\nMakes", "sure", "only", "in-network", "traffic", "is", "bridged.\nReturn", "a", "network's", "hosts", "config", "in", "dnsmasq", "leasefile", "format.\nGet", "network's", "hosts", "config", "in", "dhcp-host", "format.\nGet", "network's", "DNS", "hosts", "in", "hosts", "format.\nAllow", "DHCP", "and", "DNS", "traffic", "through", "to", "dnsmasq.\nRemove", "DHCP", "and", "DNS", "traffic", "allowed", "through", "to", "dnsmasq.\nGet", "network's", "hosts", "config", "in", "dhcp-opts", "format.\nReturn", "a", "host", "string", "for", "an", "address", "in", "leasefile", "format.\nReturn", "a", "host", "string", "for", "an", "address", "in", "dhcp-host", "format.\nReturn", "an", "empty", "gateway", "option.\nWrapper", "around", "utils._execute", "for", "fake_network.\nCheck", "if", "ethernet", "device", "exists.\nReturn", "path", "to", "a", "pid,", "leases,", "hosts", "or", "conf", "file", "for", "a", "bridge/device.\nReturn", "path", "to", "a", "pid", "or", "conf", "file", "for", "a", "bridge/device.\nBuild", "commands", "to", "add/del", "IPs", "to", "bridges/devices.\nSet", "the", "device", "MTU.\nDelete", "a", "network", "device", "only", "if", "it", "exists.\nDelete", "a", "network", "bridge.\nCreate", "Linux", "device,", "return", "device", "name.\nDestroy", "Linux", "device,", "return", "device", "name.\nGet", "device", "name.\nCreate", "a", "vlan", "and", "bridge", "unless", "they", "already", "exist.\nDelete", "a", "bridge", "and", "vlan.\nCreate", "a", "vlan", "unless", "it", "already", "exists.\nDelete", "a", "vlan.\nDelete", "a", "bridge.", "NOTE(vish):", "Iptables", "supports", "chain", "names", "of", "up", "to", "28", "characters,", "and", "we\n", "add", "up", "to", "12", "characters", "to", "binary_name", "which", "is", "used", "as", "a", "prefix,\n", "so", "we", "limit", "it", "to", "16", "characters.\n", "(max_chain_name_length", "-", "len('-POSTROUTING')", "==", "16)\n", "new", "rules", "should", "have", "a", "zero", "[packet:", "byte]", "count\n", "non-wrapped", "chains", "and", "rules", "need", "to", "be", "dealt", "with", "specially,\n", "so", "we", "keep", "a", "list", "of", "them", "to", "be", "iterated", "over", "in", "apply()\n", "Add", "a", "nova-filter-top", "chain.", "It's", "intended", "to", "be", "shared\n", "among", "the", "various", "nova", "components.", "It", "sits", "at", "the", "very", "top\n", "of", "FORWARD", "and", "OUTPUT.\n", "Wrap", "the", "built-in", "chains\n", "Add", "a", "nova-postrouting-bottom", "chain.", "It's", "intended", "to", "be", "shared\n", "among", "the", "various", "nova", "components.", "We", "set", "it", "as", "the", "last", "chain\n", "of", "POSTROUTING", "chain.\n", "We", "add", "a", "snat", "chain", "to", "the", "shared", "nova-postrouting-bottom", "chain\n", "so", "that", "it's", "applied", "last.\n", "And", "then", "we", "add", "a", "float-snat", "chain", "and", "jump", "to", "first", "thing", "in\n", "the", "snat", "chain.\n", "length", "only", "<2", "when", "fake", "iptables\n", "Couldn't", "find", "table_name\nGenerated", "by", "nova',\nCompleted", "by", "nova']\n", "Remove", "any", "trace", "of", "our", "rules\n", "rule.top", "==", "True", "means", "we", "want", "this", "rule", "to", "be", "at", "the", "top.\n", "Further", "down,", "we", "weed", "out", "duplicates", "from", "the", "bottom", "of", "the\n", "list,", "so", "here", "we", "remove", "the", "dupes", "ahead", "of", "time.\n", "We", "don't", "want", "to", "remove", "an", "entry", "if", "it", "has", "non-zero\n", "[packet:byte]", "counts", "and", "replace", "it", "with", "[0:0],", "so", "let's\n", "go", "look", "for", "a", "duplicate,", "and", "over-ride", "our", "table", "rule", "if\n", "found.\n", "ignore", "[packet:byte]", "counts", "at", "beginning", "of", "line\n", "if", "no", "duplicates,", "use", "original", "rule\n", "grab", "the", "last", "entry,", "if", "there", "is", "one\n", "ignore", "[packet:byte]", "counts", "at", "beginning", "of", "lines\n", "We", "need", "to", "find", "exact", "matches", "here\n", "it's", "a", "chain,", "for", "example,", "\":nova-billing", "-", "[0:0]\"\n", "strip", "off", "everything", "except", "the", "chain", "name\n", "it's", "a", "rule\n", "ignore", "[packet:byte]", "counts", "at", "beginning", "of", "lines\n", "ignore", "[packet:byte]", "counts", "at", "beginning", "of", "rules\n", "Leave", "it", "alone\n", "We", "filter", "duplicates,", "letting", "the", "*last*", "occurrence", "take\n", "precedence.", "We", "also", "filter", "out", "anything", "in", "the", "\"remove\"\n", "lists.\n", "flush", "lists,", "just", "in", "case", "we", "didn't", "find", "something\n", "NOTE(jkoelker)", "This", "is", "just", "a", "nice", "little", "stub", "point", "since", "mocking\n", "builtins", "with", "mox", "is", "a", "nightmare\n", "NOTE(devcamcar):", "Cloud", "public", "SNAT", "entries", "and", "the", "default\n", "SNAT", "rule", "for", "outbound", "traffic.\n", "NOTE(vish):", "Make", "sure", "we", "never", "have", "duplicate", "rules", "for", "the", "same", "ip\n", "NOTE(vish):", "The", "ip", "for", "dnsmasq", "has", "to", "be", "the", "first", "address", "on", "the\n", "bridge", "for", "it", "to", "respond", "to", "requests", "properly\n", "NOTE(cfb):", "Don't", "return", "a", "lease", "entry", "if", "the", "IP", "isn't\n", "already", "leased\n", "NOTE(russellb)", "Curious", "why", "this", "is", "needed?", "Check", "out", "this", "explanation", "from\n", "markmc:", "https://bugzilla.redhat.com/show_bug.cgi?id=910619#c6\n", "NOTE(vish):", "if", "we", "are", "in", "multi-host", "mode", "and", "we", "are", "not", "sharing\n", "addresses,", "then", "we", "actually", "need", "to", "hand", "out", "the\n", "dhcp", "server", "address", "as", "the", "gateway.\n", "Check", "that", "the", "process", "exists", "and", "looks", "like", "a", "dnsmasq", "process\n", "NOTE(ja):", "Sending", "a", "HUP", "only", "reloads", "the", "hostfile,", "so", "any\n", "configuration", "options", "(like", "dchp-range,", "vlan,", "...)\n", "aren't", "reloaded.\n", "Make", "sure", "dnsmasq", "can", "actually", "read", "it", "(it", "setuid()s", "to", "\"nobody\")\n", "if", "dnsmasq", "is", "already", "running,", "then", "tell", "it", "to", "reload\n", "dnsmasq", "currently", "gives", "an", "error", "for", "an", "empty", "domain,\n", "rather", "than", "ignoring.", "So", "only", "specify", "it", "if", "defined.\n", "Make", "sure", "radvd", "can", "actually", "read", "it", "(it", "setuid()s", "to", "\"nobody\")\n", "if", "radvd", "is", "already", "running,", "then", "tell", "it", "to", "reload\n", "NOTE(cfb):", "dnsmasq", "on", "linux", "only", "supports", "64", "characters", "in", "the", "hostname\n", "field", "(LP", "#1238910).", "Since", "the", ".", "counts", "as", "a", "character", "we", "need\n", "to", "truncate", "the", "hostname", "to", "only", "63", "characters.\n", "NOTE(vish):", "3", "is", "the", "dhcp", "option", "for", "gateway.\n", "Note", "at", "present", "there", "is", "no", "support", "for", "setting", "the\n", "mtu", "for", "vhost-user", "type", "ports.\n", "First,", "try", "with", "'ip'\n", "Second", "option:", "tunctl\n", "Similar", "to", "compute", "virt", "layers,", "the", "Linux", "network", "node\n", "code", "uses", "a", "flexible", "driver", "model", "to", "support", "different", "ways\n", "of", "creating", "ethernet", "interfaces", "and", "attaching", "them", "to", "the", "network.\n", "In", "the", "case", "of", "a", "network", "host,", "these", "interfaces\n", "act", "as", "gateway/dhcp/vpn/etc.", "endpoints", "not", "VM", "interfaces.\n", "plugs", "interfaces", "using", "Linux", "Bridge\n", "NOTE(vish):", "applying", "here", "so", "we", "don't", "get", "a", "lock", "conflict\n", "(danwent)", "the", "bridge", "will", "inherit", "this", "address,", "so", "we", "want", "to\n", "make", "sure", "it", "is", "the", "value", "set", "from", "the", "NetworkManager\n", "NOTE(vish):", "set", "mtu", "every", "time", "to", "ensure", "that", "changes", "to", "mtu", "get\n", "propagated\n", "_execute('brctl", "setageing", "%s", "10'", "%", "bridge,", "run_as_root=True)\n", "NOTE(apmelton):", "Linux", "bridge's", "default", "behavior", "is", "to", "use", "the\n", "lowest", "mac", "of", "all", "plugged", "interfaces.", "This", "isn't", "a", "problem", "when\n", "it", "is", "first", "created", "and", "the", "only", "interface", "is", "the", "bridged\n", "interface.", "But,", "as", "instance", "interfaces", "are", "plugged,", "there", "is", "a\n", "chance", "for", "the", "mac", "to", "change.", "So,", "set", "it", "here", "so", "that", "it", "won't\n", "change", "in", "the", "future.\n", "NOTE(vish):", "This", "will", "break", "if", "there", "is", "already", "an", "ip", "on", "the\n", "interface,", "so", "we", "move", "any", "ips", "to", "the", "bridge\n", "NOTE(danms):", "We", "also", "need", "to", "copy", "routes", "to", "the", "bridge", "so", "as\n", "not", "to", "break", "existing", "connectivity", "on", "the", "interface\n", "Don't", "forward", "traffic", "unless", "we", "were", "told", "to", "be", "a", "gateway\n", "NOTE(cfb):", "Fix", "for", "LP", "#1316621,", "#1501366.\n", "We", "call", "ebtables", "with", "--concurrent", "which", "causes", "ebtables", "to\n", "use", "a", "lock", "file", "to", "deal", "with", "concurrent", "calls.", "Since", "we", "can't\n", "be", "sure", "the", "libvirt", "also", "uses", "--concurrent", "we", "retry", "in", "a", "loop\n", "to", "be", "sure.\n\n", "ebtables", "doesn't", "implement", "a", "timeout", "and", "doesn't", "gracefully\n", "handle", "cleaning", "up", "a", "lock", "file", "if", "someone", "sends", "a", "SIGKILL", "to\n", "ebtables", "while", "its", "holding", "a", "lock.", "As", "a", "result", "we", "want", "to", "add\n", "a", "timeout", "to", "the", "ebtables", "calls", "but", "we", "first", "need", "to", "teach\n", "oslo_concurrency", "how", "to", "do", "that.\n", "List", "of", "error", "strings", "to", "re-try.\n", "We", "always", "try", "at", "least", "once\n", "Updated", "our", "counters", "if", "needed\n", "NOTE(cfb):", "ebtables", "reports", "all", "errors", "with", "a", "return", "code", "of", "255.\n", "As", "such", "we", "can't", "know", "if", "we", "hit", "a", "locking", "error,", "or", "some\n", "other", "error", "(like", "a", "rule", "doesn't", "exist)", "so", "we", "have", "to\n", "to", "parse", "stderr.\n", "See", "if", "we", "can", "retry", "the", "error.\n", "We", "need", "to", "sleep", "a", "bit", "before", "retrying\n", "Not", "eligible", "for", "retry\n", "Success\n", "block", "arp", "traffic", "to", "address", "across", "the", "interface\n", "NOTE(vish):", "the", "above", "is", "not", "possible", "with", "iptables/arptables\n", "block", "arp", "traffic", "to", "address", "across", "the", "interface\n", "NOTE(vish):", "the", "above", "is", "not", "possible", "with", "iptables/arptables\n", "plugs", "interfaces", "using", "Open", "vSwitch\n", "If", "we", "weren't", "instructed", "to", "act", "as", "a", "gateway", "then", "add", "the\n", "appropriate", "flows", "to", "block", "all", "non-dhcp", "traffic.\n", "..", "and", "make", "sure", "iptbles", "won't", "forward", "it", "as", "well.\n", "plugs", "interfaces", "using", "Linux", "Bridge", "when", "using", "NeutronManager\n", "If", "we", "weren't", "instructed", "to", "act", "as", "a", "gateway", "then", "add", "the\n", "appropriate", "flows", "to", "block", "all", "non-dhcp", "traffic.\n", "..", "and", "make", "sure", "iptbles", "won't", "forward", "it", "as", "well.\n", "Set", "the", "VF's", "mac", "address", "and", "vlan\n", "Bring", "up/down", "the", "VF's", "interface"], "/Users/mehranhassani/repos/nova/nova/policies/server_metadata.py": ["POLICY_ROOT", "base", "policy", "server_metadata_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_hypervisor_status.py": ["False", "None", "TEST_HYPER", "TEST_SERVICE", "True", "copy", "fakes", "hyper", "hypervisors_v21", "mock", "objects", "req", "result", "self", "service", "test", "test_hypervisors"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/client/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/notifications/objects/instance.py": ["FlavorPayload", "InstanceActionPayload", "InstanceActionVolumeSwapPayload", "InstancePayload", "InstanceUpdatePayload", "None", "SCHEMA", "True", "VERSION", "audit_period", "bandwidth", "base", "classmethod", "cls", "fault", "fields", "flavor", "instance", "ip", "ip_addresses", "ips", "kwargs", "network_info", "new_volume_id", "nova_base", "old_display_name", "old_volume_id", "self", "state_update", "super", "vif", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "add", "locked", "and", "display_description", "field\n", "No", "SCHEMA", "as", "all", "the", "additional", "fields", "are", "calculated\n", "Version", "1.1:", "locked", "and", "display_description", "added", "to", "InstancePayload\n", "No", "SCHEMA", "as", "all", "the", "additional", "fields", "are", "calculated\n", "Version", "1.1:", "locked", "and", "display_description", "added", "to", "InstancePayload\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "locked", "and", "display_description", "added", "to", "InstancePayload\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "@base.notification_sample('instance-reboot-start.json')\n", "@base.notification_sample('instance-reboot-end.json')\n", "@base.notification_sample('instance-add_fixed_ip-start.json')\n", "@base.notification_sample('instance-add_fixed_ip-end.json')\n", "@base.notification_sample('instance-evacuate.json')\n", "@base.notification_sample('instance-live_migration_pre-start.json')\n", "@base.notification_sample('instance-live_migration_pre-end.json')\n", "@base.notification_sample('instance-live_migration_abort-start.json')\n", "@base.notification_sample('instance-live_migration_abort-end.json')\n", "@base.notification_sample('instance-live_migration_post-start.json')\n", "@base.notification_sample('instance-live_migration_post-end.json')\n", "@base.notification_sample('instance-live_migration_post_dest-start.json')\n", "@base.notification_sample('instance-live_migration_post_dest-end.json')\n", "@base.notification_sample('instance-live_migration_rollback-start.json')\n", "@base.notification_sample('instance-live_migration_rollback-end.json')\n", "@base.notification_sample('instance-live_migration_rollback_dest-start.json')\n", "@base.notification_sample('instance-live_migration_rollback_dest-end.json')\n", "@base.notification_sample('instance-rebuild-error.json')\n", "@base.notification_sample('instance-remove_fixed_ip-start.json')\n", "@base.notification_sample('instance-remove_fixed_ip-end.json')\n", "@base.notification_sample('instance-resize_confirm-start.json')\n", "@base.notification_sample('instance-resize_confirm-end.json')\n", "@base.notification_sample('instance-resize_prep-start.json')\n", "@base.notification_sample('instance-resize_revert-start.json')\n", "@base.notification_sample('instance-resize_revert-end.json')\n", "@base.notification_sample('instance-soft_delete-start.json')\n", "@base.notification_sample('instance-soft_delete-end.json')\n", "@base.notification_sample('instance-trigger_crash_dump-start.json')\n", "@base.notification_sample('instance-trigger_crash_dump-end.json')\n", "@base.notification_sample('instance-unrescue-start.json')\n", "@base.notification_sample('instance-unrescue-end.json')\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/console_output.py": ["False", "get_console_output", "NOTE:", "-1", "means", "an", "unlimited", "length.\n", "TODO(cyeoh):", "None", "also", "means", "unlimited", "length\n", "and", "is", "supported", "for", "v2", "backwards", "compatibility\n", "Should", "remove", "in", "the", "future", "with", "a", "microversion"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_crypto.py": ["None", "bits", "certif", "csr", "fingerprint", "pk", "project_id", "public_key", "rootca", "user_id"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/tenant_networks.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "tenant_networks_policies"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/gpfs.py": ["LibvirtGPFSVolumeDriver", "conf", "connection_info", "disk_info", "fs", "self", "super", "Class", "for", "volumes", "backed", "by", "gpfs", "volume.\nReturns", "xml", "for", "libvirt."], "/Users/mehranhassani/repos/nova/nova/network/minidns.py": ["CONF", "False", "LOG", "None", "OSError", "True", "_", "_LI", "_LW", "__name__", "address", "cfg", "deleted", "dns_driver", "domain", "entries", "entry", "exception", "f", "fqdomain", "infile", "len", "line", "logging", "name", "open", "os", "outfile", "qualified", "self", "shutil", "tempfile", "type", "vals", "minidns\\n\\n\\n\")"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/307_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_faults.py": ["None", "True", "actual", "exc", "exception", "expected", "fake_translate", "fault", "jsonutils", "locale", "mock", "mock_languages", "mock_translate", "nova", "raiser", "req", "request", "requests", "response", "safe_exception", "self", "test", "value", "webob", "wrapper", "wsgi", "xml_string", "Tests", "covering", "`nova.api.openstack:FaultWrapper`", "class.\nTests", "covering", "`nova.api.openstack.faults:Fault`", "class.\nRemove", "characters", "from", "string", "which", "hinder", "XML", "equality", "testing.", "Create", "an", "exception,", "passing", "a", "translatable", "message", "with", "a\n", "known", "value", "we", "can", "test", "for", "later.\n", "The", "text", "of", "the", "exception's", "message", "attribute", "(replaced\n", "above", "with", "a", "non-default", "value)", "should", "be", "passed", "to\n", "translate().\n", "The", "return", "value", "from", "translate()", "should", "appear", "in", "the", "response.\n", "Test", "fault", "serialized", "to", "JSON", "via", "file-extension", "and/or", "header.\n", "Test", "fault", "serialized", "to", "JSON", "via", "file-extension", "and/or", "header.\n", "NOTE(aloga):", "we", "intentionally", "pass", "an", "integer", "for", "the\n", "'Retry-After'", "header.", "It", "should", "be", "then", "converted", "to", "a", "str\n", "Test", "fault", "serialized", "to", "JSON", "via", "file-extension", "and/or", "header.\n", "NOTE(aloga):", "we", "intentionally", "pass", "an", "integer", "for", "the\n", "'Retry-After'", "header.", "It", "should", "be", "then", "converted", "to", "a", "str\n", "Ensure", "the", "status_int", "is", "set", "correctly", "on", "faults."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_crypto.py": ["None", "True", "_err", "_key", "backends", "bits", "bytes", "cert", "cert_str", "context", "crypto", "dec", "dss_fp", "dss_pub", "ecdsa_fp", "ecdsa_pub", "ecdsa_pub_with_spaces", "enc", "err", "exc", "exception", "f", "file_name", "fingerprint", "key", "key_with_spaces_in_comment", "keyfile", "keyin", "mock", "mock_certificate_get_all_by_project", "mock_certificate_get_all_by_user", "mock_certificate_get_all_by_user_and_project", "mock_create", "mock_generate", "mock_revoke", "open", "os", "paramiko", "pkey", "prikey", "private_key", "process_input", "processutils", "project_cert", "project_cert_file", "project_id", "pub_bytes", "pubkey", "public_key", "result", "rsa_fp", "rsa_prv", "rsa_pub", "self", "serialization", "signed_cert_file", "six", "ssh_private_key", "sshkey", "start", "test", "text", "tmpdir", "user_id", "utils", "uuids", "!%^*", "test", "text\"\n", "Comparison", "between", "bytes", "and", "str", "raises", "a", "TypeError\n", "when", "using", "python3", "-bb"], "/Users/mehranhassani/repos/nova/nova/tests/unit/servicegroup/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/objects/network_request.py": ["NETWORK_ID_AUTO", "NETWORK_ID_NONE", "NetworkRequest", "None", "True", "VERSION", "address", "attr", "classmethod", "cls", "fields", "len", "net_tuple", "net_tuples", "network_id", "obj_base", "pci_request_id", "port_id", "primitive", "property", "requested_networks", "self", "setattr", "str", "t", "target_version", "utils", "versionutils", "x", "These", "are", "special", "case", "enums", "for", "the", "auto-allocate", "scenario.", "'none'", "means\n", "do", "not", "allocate", "a", "network", "on", "server", "create.", "'auto'", "means", "auto-allocate", "a\n", "network", "(if", "possible)", "if", "none", "are", "already", "available", "to", "the", "project.", "Other\n", "values", "for", "network_id", "can", "be", "a", "specific", "network", "id,", "or", "None,", "where", "None\n", "is", "the", "case", "before", "auto-allocation", "was", "supported", "in", "the", "compute", "API.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "pci_request_id\n", "Version", "1.2:", "Added", "tag", "field"], "/Users/mehranhassani/repos/nova/nova/virt/disk/vfs/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_numa.py": ["_TestNUMA", "cell", "cell1", "cell2", "d1", "d2", "exception", "fake_obj_numa", "host_topo", "inst_cell", "len", "limits", "numacell", "obj", "object", "objects", "old_style", "p", "pages_topology", "pagesize", "pt1", "pt2", "self", "set", "test_objects", "To", "have", "reserved", "not", "set", "is", "similar", "than", "to", "have", "receive\n", "a", "NUMAPageTopology", "version", "1.0"], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/encryptors/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_archive.py": ["TestDatabaseArchive", "actions", "admin_context", "context", "created_server", "created_server_id", "db", "dialect", "engine", "extra", "fake_network", "found_server", "instance", "len", "results", "self", "server", "server_id", "sqlalchemy_api", "sqlite", "sqlite3", "super", "test_servers", "tup", "Tests", "DB", "API", "for", "archiving", "(soft)", "deleted", "records", "TODO(mriedem):", "pull", "this", "out", "so", "we", "can", "re-use", "it", "in\n", "test_archive_deleted_rows_fk_constraint\n", "SQLite", "doesn't", "enforce", "foreign", "key", "constraints", "without", "a", "pragma.\n", "We're", "seeing", "issues", "with", "foreign", "key", "support", "in", "SQLite", "3.6.20\n", "SQLAlchemy", "doesn't", "support", "it", "at", "all", "with", "<", "SQLite", "3.6.19\n", "It", "works", "fine", "in", "SQLite", "3.7.\n", "So", "return", "early", "to", "skip", "this", "test", "if", "running", "SQLite", "<", "3.7\n", "TODO(mriedem):", "We", "should", "pull", "this", "up", "into", "the", "parent", "class", "so", "we\n", "don't", "have", "so", "much", "copy/paste", "in", "these", "functional", "tests.\n", "Create", "a", "server\n", "Check", "it's", "there\n", "It", "should", "be", "available...\n", "Boots", "a", "server,", "deletes", "it,", "and", "then", "tries", "to", "archive", "it.\n", "Assert", "that", "there", "are", "instance_actions.", "instance_actions", "are\n", "interesting", "since", "we", "don't", "soft", "delete", "them", "but", "they", "have", "a", "foreign\n", "key", "back", "to", "the", "instances", "table.\n", "Verify", "we", "have", "the", "soft", "deleted", "instance", "in", "the", "database.\n", "This", "will", "raise", "InstanceNotFound", "if", "it's", "not", "found.\n", "Make", "sure", "it's", "soft", "deleted.\n", "Verify", "we", "have", "some", "system_metadata", "since", "we'll", "check", "that", "later.\n", "Now", "try", "and", "archive", "the", "soft", "deleted", "records.\n", "verify", "system_metadata", "was", "dropped\n", "Verify", "that", "instances", "rows", "are", "dropped\n", "Verify", "that", "instance_actions", "and", "actions_event", "are", "dropped\n", "by", "the", "archive\n", "Boots", "a", "server,", "deletes", "it,", "and", "then", "tries", "to", "archive", "it.\n", "Assert", "that", "there", "are", "instance_actions.", "instance_actions", "are\n", "interesting", "since", "we", "don't", "soft", "delete", "them", "but", "they", "have", "a", "foreign\n", "key", "back", "to", "the", "instances", "table.\n", "Verify", "we", "have", "the", "soft", "deleted", "instance", "in", "the", "database.\n", "This", "will", "raise", "InstanceNotFound", "if", "it's", "not", "found.\n", "Make", "sure", "it's", "soft", "deleted.\n", "Undelete", "the", "instance_extra", "record", "to", "make", "sure", "we", "delete", "it", "anyway\n", "Verify", "we", "have", "some", "system_metadata", "since", "we'll", "check", "that", "later.\n", "Now", "try", "and", "archive", "the", "soft", "deleted", "records.\n", "verify", "system_metadata", "was", "dropped\n", "Verify", "that", "instances", "rows", "are", "dropped\n", "Verify", "that", "instance_actions", "and", "actions_event", "are", "dropped\n", "by", "the", "archive"], "/Users/mehranhassani/repos/nova/nova/api/metadata/vendordata_dynamic.py": ["CONF", "LOG", "None", "TypeError", "ValueError", "_LW", "__name__", "address", "body", "context", "e", "generate_identity_headers", "getattr", "headers", "instance", "j", "jsonutils", "logging", "name", "network_info", "nova", "requests", "res", "self", "service_name", "status", "target", "timeout", "tokens", "url", "vendordata", "verify", "Render", "vendordata", "as", "stored", "fetched", "from", "REST", "microservices.", "NOTE(mikal):", "address", "and", "network_info", "are", "unused,", "but", "can't", "be\n", "removed", "/", "renamed", "as", "this", "interface", "is", "shared", "with", "the", "static\n", "JSON", "plugin.\n", "SSL", "verification\n", "TODO(mikal):", "Use", "the", "Cache-Control", "response", "header", "to", "do", "some\n", "sensible", "form", "of", "caching", "here.\n", "NOTE(mikal):", "a", "target", "is", "composed", "of", "the", "following:\n", "name@url\n", "where", "name", "is", "the", "name", "to", "use", "in", "the", "metadata", "handed", "to\n", "instances,", "and", "url", "is", "the", "URL", "to", "fetch", "it", "from"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/client/test_objects.py": ["ObjectsTestCase", "VBDTestCase", "XenAPISessionObjectTestCase", "host", "mock", "mock_synchronized", "network", "objects", "pbd", "pif", "pool", "result", "self", "sr", "stubs", "super", "utils", "vbd", "vdi", "vlan", "vm"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/fakes.py": ["CELL_NAME_TO_STUB_INFO", "CONF", "CellStubInfo", "FAKE_CELL_LAYOUT", "FAKE_TOP_LEVEL_CELL_NAME", "FakeCellState", "FakeCellStateManager", "FakeCellsManager", "FakeDBApi", "False", "None", "True", "_build_cell_stub_info", "_build_cell_stub_infos", "_build_cell_transport_url", "_fake_compute_node_get_all", "_fake_service_get_by_binary", "_get_cell_stub_info", "_self", "args", "base", "binary", "cell", "cell_db_entries", "cell_entry", "cell_name", "cells_manager", "cells_state", "cells_utils", "child", "child_name", "children", "context", "ctxt", "cur_cell_name", "cur_db_id", "db_entries", "dict", "driver", "exception", "fake_base_init", "get_message_runner", "get_state_manager", "getattr", "grandchildren", "hostname", "instance_uuid", "json_message", "key", "kwargs", "message", "message_runner", "method", "method_name", "msg_runner", "nova", "object", "objects", "orig_ctxt", "our_name", "our_path", "parent_path", "password", "port", "self", "sep_char", "setattr", "state_manager", "staticmethod", "stub_bcast_method", "stub_info", "super", "test_case", "tgt_cell_name", "tgt_msg_methods", "username", "virtual_host", "Fake", "Cell", "Hierarchy\n", "build_cell_stub_infos()", "below", "will", "take", "the", "above", "layout", "and", "create\n", "a", "fake", "view", "of", "the", "DB", "from", "the", "perspective", "of", "each", "of", "the", "cells.\n", "For", "each", "cell,", "a", "CellStubInfo", "will", "be", "created", "with", "this", "info.\n", "Restore", "this", "so", "we", "can", "use", "mox", "and", "verify", "same", "context\n", "Fix", "the", "cell", "name,", "as", "it", "normally", "uses", "CONF.cells.name"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_plugin_framework.py": ["app", "fakes", "jsonutils", "mock", "mock_namespace", "req", "res", "resp_json", "self", "test"], "/Users/mehranhassani/repos/nova/nova/scheduler/rpcapi.py": ["CONF", "SchedulerAPI", "True", "VERSION_ALIASES", "aggregate", "aggregates", "cctxt", "ctxt", "host_name", "instance_info", "instance_uuid", "instance_uuids", "messaging", "msg_args", "nova", "object", "objects_base", "rpc", "self", "serializer", "spec_obj", "super", "target", "version", "version_cap", "NOTE(sbauza):", "Yes,", "it's", "a", "fanout,", "we", "need", "to", "update", "all", "schedulers\n", "NOTE(sbauza):", "Yes,", "it's", "a", "fanout,", "we", "need", "to", "update", "all", "schedulers"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute_utils.py": ["CONF", "ComputeUtilsGetRebootTypes", "ComputeUtilsQuotaDeltaTestCase", "ComputeUtilsTestCase", "ComputeValidateDeviceTestCase", "DefaultDeviceNamesForInstanceTestCase", "Exception", "FAKE_IMAGE_REF", "False", "IsVolumeBackedInstanceTestCase", "None", "True", "UsageInfoTestCase", "ValueError", "addresses", "aggregate_payload", "args", "attr", "base", "bdms", "block_device_lists", "block_device_obj", "cls", "compute_utils", "context", "copy", "create_instance", "ctxt", "deltas", "device", "ex", "exc", "exception", "exception_payload", "expected_deltas", "extra_usage_info", "fake_block_device", "fake_event", "fake_get_nw_info", "fake_instance", "fake_network", "fake_notifier", "fake_server_actions", "fake_show", "fields", "flavor", "flavor_id", "flavorid", "flavors", "glance", "id", "iface", "image_ref_url", "info_cache", "inst", "instance", "int", "jsonutils", "kwargs", "len", "letter", "manager", "meh", "mock", "mock_bdms", "mock_finish", "mock_ids_from_instance", "mock_ifaddresses", "mock_interfaces", "mock_reserve", "mock_start", "model", "msg", "net_info", "network_api", "new", "new_flavor", "notification", "nova", "objects", "old_flavor", "original", "original_bdm", "params", "patcher", "payload", "power_state", "project_id", "quotas", "reboot_type", "result", "retval", "rpc", "self", "self2", "six", "staticmethod", "str", "string", "super", "sys_metadata", "system_meta", "task_states", "test", "test_flavor", "type_id", "user_id", "uuid", "uuids", "zip", "Tests", "For", "miscellaneous", "util", "methods", "used", "with", "compute.\nCreate", "a", "test", "instance.", "check", "if", "test", "name", "includes", "\"xen\"\n", "Test", "no-op\n", "Assert", "it", "defaults", "the", "missing", "one", "as", "expected\n", "Test", "ephemeral", "gets", "assigned\n", "Test", "swap", "only\n", "Test", "swap", "and", "block_device_mapping\n", "Test", "swap", "missing\n", "Test", "swap", "and", "eph", "missing\n", "Test", "all", "missing\n", "Ensure", "'exists'", "notification", "generates", "appropriate", "usage", "data.\n", "Set", "some", "system", "metadata\n", "Ensure", "'exists'", "notification", "generates", "appropriate", "usage", "data.\n", "Set", "some", "system", "metadata\n", "To", "get", "exception", "trace,", "raise", "and", "catch", "an", "exception\n", "Check", "ExceptionPayload\n", "Ensure", "'exists'", "notification", "generates", "appropriate", "usage", "data.\n", "Set", "some", "system", "metadata\n", "Set", "aggregate", "payload\n", "Set", "aggregate", "payload\n", "Set", "empty", "aggregate", "payload\n", "Tests", "that", "the", "utility", "method", "does", "not", "explode", "if", "netifaces", "raises\n", "a", "ValueError.\n", "if", "the", "root", "device", "is", "local", "the", "instance", "is", "not", "volume", "backed,", "even\n", "if", "no", "image_ref", "is", "set."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/floating_ips.py": ["False", "add_floating_ip", "parameter_types", "remove_floating_ip"], "/Users/mehranhassani/repos/nova/nova/conf/xenserver.py": ["ALL_XENSERVER_OPTS", "False", "True", "cfg", "conf", "units", "xenapi_agent_opts", "xenapi_opts", "xenapi_ovs_integration_bridge_opts", "xenapi_pool_opts", "xenapi_session_opts", "xenapi_torrent_opts", "xenapi_vm_utils_opts", "xenapi_vmops_opts", "xenapi_volume_utils_opts", "xenserver_group", "NOTE(sirp):", "This", "is", "a", "work-around", "for", "a", "bug", "in", "Ubuntu", "Maverick,\n", "when", "we", "pull", "support", "for", "it,", "we", "should", "remove", "this\n", "TODO(dharinic):", "Make", "this,", "a", "stevedore", "plugin\n", "TODO(macsz):", "This", "should", "be", "deprecated.", "Until", "providing", "solid", "reason,\n", "leaving", "it", "as-it-is."], "/Users/mehranhassani/repos/nova/nova/objects/hv_spec.py": ["HVSpec", "VERSION", "base", "classmethod", "cls", "data", "fields", "primitive", "self", "super", "target_version", "versionutils", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "'vz'", "hypervisor\n", "Version", "1.2:", "Added", "'lxd'", "hypervisor\n", "NOTE(pmurray):", "for", "backward", "compatibility,", "the", "supported", "instance\n", "data", "is", "stored", "in", "the", "database", "as", "a", "list."], "/Users/mehranhassani/repos/nova/nova/hash_ring.py": ["DISTRIBUTION_REPLICAS", "None", "PARTITION_EXPONENT", "TypeError", "_", "bisect", "data", "exception", "hashed_key", "hashlib", "host", "hosts", "ignore_hosts", "int", "key", "key_hash", "len", "object", "p", "partition", "position", "range", "replica", "replicas", "self", "set", "six", "sorted", "str", "NOTE(jroll)", "these", "constants", "will", "be", "config", "options", "in", "Ocata,", "when", "the", "hash\n", "ring", "code", "is", "in", "oslo.\n", "Number", "of", "partitions", "per", "service", "is", "2^PARTITION_EXPONENT.\n", "5", "should", "be", "fine", "for", "most", "deployments,", "as", "an", "experimental", "feature.\n", "This", "should", "always", "be", "1", "in", "nova,", "as", "two", "compute", "daemons", "handling", "the", "same\n", "node", "should", "not", "be", "possible.\n", "Gather", "the", "(possibly", "colliding)", "resulting", "hashes", "into", "a", "bisectable\n", "list.\n", "prevent", "infinite", "loop", "-", "cannot", "allocate", "more", "fallbacks.\n", "Linear", "probing:", "partition", "N,", "then", "N+1", "etc."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_hardware.py": ["False", "HelperMethodsTestCase", "Host", "None", "True", "VirtNUMAHostTopologyTestCase", "_CPUPinningTestCaseBase", "actual", "actual_cell", "attr", "attrs", "base_obj", "cell", "cell_ids", "collections", "context", "cpu", "cpu_to_sib", "cpus", "cpuset_ids", "default_cell_id", "exception", "exp_cell", "expected", "expected_cell", "fake_uuid", "fields", "fitted_cell", "fitted_instance", "fitted_instance1", "fitted_instance2", "flavor", "get_mock", "getattr", "got", "got_cell", "got_pinning", "got_topo", "host", "host_cell", "host_p", "host_pin", "host_topo", "host_usage", "hostcell", "hosttopo", "hostusage", "hpages0_2M", "hpages0_4K", "hpages1_2M", "hpages1_4K", "hw", "i", "ii", "ii1", "ii2", "ii3", "image", "image_meta", "inst_cell", "inst_p", "inst_pin", "inst_pin_1", "inst_pin_2", "inst_topo", "instance", "instance1", "instance1_topo", "instance2", "instance2_topo", "instance_cell", "instance_dict", "instance_numa_topo", "instance_raw", "instcell", "int", "isinstance", "jsonutils", "k", "len", "limit_cell", "list", "map", "max", "max_free_siblings", "maximum", "mock", "new_cell", "num_ports", "obj", "object", "objects", "pci_reqs", "pci_request", "pci_stats", "pins_per_sib", "possible", "preferred", "props", "range", "res", "reserved", "rt", "self", "set", "sib", "six", "sorted", "spec", "stats", "super", "test", "testdata", "testitem", "topo", "topo_test", "topology", "tops", "tuple", "type", "uuids", "x", "zip", "Flavor", "sets", "preferred", "topology", "only\n", "Image", "topology", "overrides", "flavor\n", "Partial", "image", "topology", "overrides", "flavor\n", "Restrict", "use", "of", "threads\n", "Force", "use", "of", "at", "least", "two", "sockets\n", "Image", "limits", "reduce", "flavor\n", "Image", "limits", "kill", "flavor", "preferred\n", "Image", "limits", "cannot", "exceed", "flavor\n", "Image", "preferred", "cannot", "exceed", "flavor\n", "score", "=", "2\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "1\n", "score", "=", "0\n", "score", "=", "0\n", "score", "=", "0\n", "score", "=", "0\n", "score", "=", "0\n", "score", "=", "1\n", "score", "=", "0\n", "score", "=", "0\n", "Flavor", "sets", "preferred", "topology", "only\n", "Image", "topology", "overrides", "flavor\n", "Image", "topology", "overrides", "flavor\n", "Partial", "image", "topology", "overrides", "flavor\n", "Restrict", "use", "of", "threads\n", "Force", "use", "of", "at", "least", "two", "sockets\n", "Image", "limits", "reduce", "flavor\n", "Image", "limits", "kill", "flavor", "preferred\n", "NUMA", "needs", "threads,", "only", "cores", "requested", "by", "flavor\n", "NUMA", "needs", "threads,", "but", "more", "than", "requested", "by", "flavor", "-", "the\n", "least", "amount", "of", "threads", "wins\n", "NUMA", "needs", "threads,", "but", "more", "than", "limit", "in", "flavor", "-", "the\n", "least", "amount", "of", "threads", "which", "divides", "into", "the", "vcpu\n", "count", "wins.", "So", "with", "desired", "4,", "max", "of", "3,", "and\n", "vcpu", "count", "of", "4,", "we", "should", "get", "2", "threads.\n", "NUMA", "needs", "threads,", "but", "thread", "count", "does", "not\n", "divide", "into", "flavor", "vcpu", "count,", "so", "we", "must\n", "reduce", "thread", "count", "to", "closest", "divisor\n", "NUMA", "needs", "different", "number", "of", "threads", "per", "cell", "-", "the", "least\n", "amount", "of", "threads", "wins\n", "a", "nodes", "number", "of", "zero", "should", "lead", "to", "an\n", "exception\n", "a", "negative", "nodes", "number", "should", "lead", "to", "an\n", "exception\n", "a", "nodes", "number", "not", "numeric", "should", "lead", "to", "an\n", "exception\n", "vcpus", "is", "not", "a", "multiple", "of", "nodes,", "so", "it\n", "is", "an", "error", "to", "not", "provide", "cpu/mem", "mapping\n", "Request", "a", "CPU", "that", "is", "out", "of", "range\n", "wrt", "vCPU", "count\n", "Request", "the", "same", "CPU", "in", "two", "nodes\n", "Request", "with", "some", "CPUs", "not", "assigned\n", "Request", "too", "little", "memory", "vs", "flavor", "total\n", "Request", "too", "much", "memory", "vs", "flavor", "total\n", "Request", "missing", "mem.0\n", "Request", "missing", "cpu.0\n", "Image", "attempts", "to", "override", "flavor\n", "NUMA", "+", "CPU", "pinning", "requested", "in", "the", "flavor\n", "no", "NUMA", "+", "CPU", "pinning", "requested", "in", "the", "flavor\n", "NUMA", "+", "CPU", "pinning", "requested", "in", "the", "image\n", "no", "NUMA", "+", "CPU", "pinning", "requested", "in", "the", "image\n", "Invalid", "CPU", "pinning", "override\n", "Invalid", "CPU", "pinning", "policy", "with", "realtime\n", "Invalid", "CPU", "thread", "pinning", "override\n", "CPU", "thread", "pinning", "override", "set", "to", "default", "value\n", "Invalid", "CPU", "pinning", "policy", "with", "CPU", "thread", "pinning\n", "Invalid", "vCPUs", "mask", "with", "realtime\n", "Test", "freeing", "of", "resources\n", "128", "already", "used", "+", "128", "used", "by", "instance", "+", "128", "reserved\n", "2", "already", "used", "+", "1", "used", "by", "instance", "+", "1", "reserved\n", "Test", "the", "case", "where", "we", "have", "an", "instance", "with", "numa", "topology\n", "and", "one", "without\n", "This", "is", "like", "processing", "an", "instance", "with", "no", "numa_topology\n", "NOTE", "(ndipanov):", "This", "emulates", "scheduler.utils.build_request_spec\n", "We", "can", "remove", "this", "test", "once", "we", "no", "longer", "use", "that", "method.\n", "Test", "memory", "can't", "be", "divided", "with", "no", "rem", "by", "mempage's", "size_kb\n", "Test", "pagesize", "not", "in", "host's", "mempages"], "/Users/mehranhassani/repos/nova/nova/console/type.py": ["Console", "ConsoleSpice", "None", "access_url", "dict", "host", "internal_access_path", "object", "port", "ret", "self", "super", "tlsPort", "token", "Returns", "an", "unreferenced", "dict", "with", "connection", "information."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/networks.py": ["ALIAS", "MAX_PROXY_API_SUPPORT_VERSION", "NetworkController", "None", "NotImplementedError", "_", "admin_fields", "alias", "base_obj", "body", "cidr", "collection_actions", "common", "context", "e", "ex", "exc", "exception", "extensions", "field", "fields", "id", "is_obj", "isinstance", "member_actions", "msg", "name", "net_policies", "net_ref", "netaddr", "network", "network_api", "network_dict", "network_id", "networks", "obj_fields", "params", "project_id", "req", "res", "result", "schema", "self", "str", "uuid", "val", "validation", "version", "wsgi", "Admin-only", "Network", "Management", "Extension.", "NOTE(mnaser):", "We", "display", "a", "limited", "set", "of", "fields", "so", "users", "can", "know\n", "what", "networks", "are", "available,", "extra", "system-only", "fields\n", "are", "only", "visible", "if", "they", "are", "an", "admin.\n", "TODO(mriedem):", "Remove", "the", "NovaObject", "type", "check", "once", "the\n", "network.create", "API", "is", "returning", "objects.\n", "NOTE(mriedem):", "If", "network", "is", "an", "object,", "IPAddress", "fields", "need", "to\n", "be", "cast", "to", "a", "string", "so", "they", "look", "the", "same", "in", "the", "response", "as\n", "before", "the", "objects", "conversion.\n", "NOTE(danms):", "Here,", "network", "should", "be", "an", "object,", "which", "could\n", "have", "come", "from", "neutron", "and", "thus", "be", "missing", "most", "of", "the\n", "attributes.", "Providing", "a", "default", "to", "get()", "avoids", "trying", "to\n", "lazy-load", "missing", "attributes.\n", "It's", "either", "not", "an", "object", "or", "it's", "not", "an", "IPAddress", "field."], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1568208.py": ["generator", "gmr", "self", "test", "version", "1568208.\n", "NOTE(rpodolyaka):", "we", "are", "only", "interested", "in", "success", "of", "run()", "call\n", "here,", "it's", "up", "to", "oslo_reports", "tests", "to", "check", "the", "generated", "report"], "/Users/mehranhassani/repos/nova/nova/policies/quota_sets.py": ["POLICY_ROOT", "base", "policy", "quota_sets_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/fake_os_brick_connector.py": ["False", "ISCSIConnector", "None", "device_scan_attempts", "driver", "enforce_multipath", "execute", "host", "iscsi", "multipath", "my_ip", "object", "props", "root_helper", "self", "use_multipath", "Fake", "os-brick.\nMimick", "the", "iSCSI", "connector."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_isolated_hosts_filter.py": ["False", "TestIsolatedHostsFilter", "True", "fakes", "host", "host_in_list", "host_name", "image_in_list", "image_ref", "isolated_hosts_filter", "objects", "restrict_isolated_hosts_to_isolated_images", "self", "set_flags", "spec_obj", "super", "test", "uuids", "If", "there", "are", "no", "hosts", "nor", "isolated", "images", "in", "the", "config,", "it", "should\n", "not", "filter", "at", "all.", "This", "is", "the", "default", "config.\n", "If", "there", "are", "no", "hosts", "in", "the", "config,", "it", "should", "only", "filter", "out\n", "images", "that", "are", "listed\n", "If", "there", "are", "no", "images", "in", "the", "config,", "it", "should", "only", "filter", "out\n", "isolated_hosts\n", "If", "there", "are", "isolated", "hosts", "and", "non", "isolated", "images\n", "If", "there", "are", "isolated", "hosts", "and", "isolated", "images\n", "If", "there", "are", "non", "isolated", "hosts", "and", "non", "isolated", "images\n", "If", "there", "are", "non", "isolated", "hosts", "and", "isolated", "images"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/exact_ram_filter.py": ["False", "LOG", "True", "__name__", "filters", "host_state", "logging", "requested_ram", "self", "spec_obj", "Exact", "RAM", "Filter.\nReturn", "True", "if", "host", "has", "the", "exact", "amount", "of", "RAM", "available.", "NOTE(mgoddard):", "Setting", "the", "limit", "ensures", "that", "it", "is", "enforced", "in\n", "compute.", "This", "ensures", "that", "if", "multiple", "instances", "are", "scheduled", "to", "a\n", "single", "host,", "then", "all", "after", "the", "first", "will", "fail", "in", "the", "claim."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/vif.py": ["CONF", "Exception", "False", "LOG", "None", "True", "XenAPIBridgeDriver", "XenAPIOpenVswitchDriver", "XenVIFDriver", "_", "_LW", "__name__", "args", "bridge", "bridge_interface", "bridge_name", "cmd", "cmd_args", "description", "dev", "dev1_name", "dev2_name", "device", "e", "exception", "expr", "extneral_id", "fd", "iface_id", "instance", "int", "interface", "interface_name", "len", "linux_br_name", "logging", "mac", "net_name", "network", "network_model", "network_rec", "network_ref", "network_utils", "network_uuid", "nova", "object", "patch_port1", "pif_rec", "pif_ref", "pif_vlan", "pifs", "port_name", "qbr_name", "qvb_name", "qvo_name", "self", "status", "stp_opt", "str", "super", "tap_name", "value", "vif", "vif_rec", "vif_ref", "vif_refs", "vif_uuid", "vifs", "vlan_num", "vm_ref", "vm_utils", "xenapi_session", "VIF", "drivers", "for", "XenAPI.\nVIF", "Driver", "for", "XenAPI", "that", "uses", "XenAPI", "to", "create", "Networks.\nEnsure", "that", "a", "VLAN", "bridge", "exists.\nno", "further", "actions", "needed", "for", "this", "driver", "type\nVIF", "driver", "for", "Open", "vSwitch", "with", "XenAPI.\nCheck", "if", "ethernet", "device", "exists.\nDelete", "a", "network", "device", "only", "if", "it", "exists.", "When", "got", "exception", "here,", "maybe", "the", "vif", "is", "removed", "during", "the\n", "loop,", "ignore", "this", "vif", "and", "continue\n", "if", "VIF", "already", "exists,", "return", "this", "vif_ref", "directly\n", "Check", "whether", "bridge", "already", "exists\n", "Retrieve", "network", "whose", "name_label", "is", "\"bridge\"\n", "If", "bridge", "does", "not", "exists\n", "1", "-", "create", "network\n", "2", "-", "find", "PIF", "for", "VLAN", "NOTE(salvatore-orlando):", "using", "double\n", "quotes", "inside", "single", "quotes", "as", "xapi", "filter", "only", "support\n", "tokens", "in", "double", "quotes\n", "Multiple", "PIF", "are", "ok:", "we", "are", "dealing", "with", "a", "pool\n", "Check", "VLAN", "tag", "is", "appropriate\n", "Retrieve", "PIFs", "from", "network\n", "Retrieve", "VLAN", "from", "PIF\n", "Raise", "an", "exception", "if", "VLAN", "!=", "vlan_num\n", "if", "VIF", "already", "exists,", "return", "this", "vif_ref", "directly\n", "Create", "an", "interim", "network", "for", "each", "VIF,", "so", "dom0", "has", "a", "single\n", "bridge", "for", "each", "device", "(the", "emulated", "and", "PV", "ethernet", "devices\n", "will", "both", "be", "on", "this", "bridge.\n", "OVS", "on", "the", "hypervisor", "monitors", "this", "key", "and", "uses", "it", "to\n", "set", "the", "iface-id", "attribute\n", "only", "remove", "the", "interim", "network", "when", "it's", "empty.\n", "for", "resize/migrate", "on", "local", "host,", "vifs", "on", "both", "of", "the\n", "source", "and", "target", "VM", "will", "be", "connected", "to", "the", "same\n", "interim", "network.\n", "delete", "the", "patch", "port", "pair\n", "delete", "bridge", "if", "it", "still", "exists.\n", "As", "there", "is", "patch", "port", "existing", "on", "this", "bridge", "when", "destroying\n", "the", "VM", "vif", "(which", "happens", "when", "shutdown", "the", "VM),", "the", "bridge\n", "won't", "be", "destroyed", "automatically", "by", "XAPI.", "So", "let's", "destroy", "it\n", "at", "here.\n", "delete", "tap", "port,", "qvb", "port", "and", "qbr\n", "Swallow", "exception", "from", "plugin,", "since", "this", "indicates", "the", "device\n", "doesn't", "exist\n", "delete", "port", "in", "linux", "bridge\n", "delete", "linux", "bridge", "qbrxxx\n", "Create", "Linux", "bridge", "qbrXXX\n", "Add", "port", "to", "interim", "bridge\n", "already", "exist,", "just", "return\n", "in", "some", "scenarios:", "e..g", "resize/migrate,", "it", "won't", "create", "new\n", "interim", "network."], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/inventory.py": ["BASE_INVENTORY_SCHEMA", "False", "INVENTORY_DEFAULTS", "None", "OUTPUT_INVENTORY_FIELDS", "POST_INVENTORY_SCHEMA", "PUT_INVENTORY_RECORD_SCHEMA", "PUT_INVENTORY_SCHEMA", "RESOURCE_CLASS_IDENTIFIER", "TypeError", "ValueError", "_", "_extract_inventories", "_extract_inventory", "_make_inventory_object", "_send_inventories", "_send_inventory", "_serialize_inventories", "_serialize_inventory", "body", "context", "copy", "data", "db", "db_exc", "exc", "exception", "field", "generation", "getattr", "inv_list", "inventories", "inventories_by_class", "inventories_dict", "inventory", "inventory_data", "jsonutils", "objects", "raw_inventory", "req", "res_class", "resource_class", "resource_provider", "response", "schema", "status", "util", "uuid", "webob", "Inventory", "handlers", "for", "Placement", "API.\nExtract", "and", "validate", "inventory", "from", "JSON", "body.\nExtract", "and", "validate", "multiple", "inventories", "from", "JSON", "body.\nSingle", "place", "to", "catch", "malformed", "Inventories.\nSend", "a", "JSON", "representation", "of", "a", "list", "of", "inventories.\nSend", "a", "JSON", "representation", "of", "one", "single", "inventory.\nTurn", "a", "single", "inventory", "into", "a", "dictionary.\nTurn", "a", "list", "of", "inventories", "in", "a", "dict", "by", "resource", "class.", "NOTE(cdent):", "We", "keep", "our", "own", "representation", "of", "inventory", "defaults\n", "and", "output", "fields,", "separate", "from", "the", "versioned", "object", "to", "avoid\n", "inadvertent", "API", "changes", "when", "the", "object", "defaults", "are", "changed.\n", "TODO(cdent):", "Some", "of", "the", "validation", "checks", "that", "are", "done", "here\n", "could", "be", "done", "via", "JSONschema", "(using,", "for", "example,", "\"minimum\":\n", "0)", "for", "non-negative", "integers.", "It's", "not", "clear", "if", "that", "is\n", "duplication", "or", "decoupling", "so", "leaving", "it", "as", "this", "for", "now."], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_manager.py": ["False", "None", "PciDevTrackerTestCase", "True", "_fake_obj_load_attr", "_mock_dev_assign", "address", "allocated_devs", "attrname", "context", "copy", "ctxt", "dev", "devs", "dict", "fake_db_dev", "fake_db_dev_1", "fake_db_dev_2", "fake_db_dev_3", "fake_db_dev_4", "fake_db_dev_5", "fake_db_devs", "fake_db_devs_tree", "fake_devs", "fake_devs_numa", "fake_new_device", "fake_pci", "fake_pci_1", "fake_pci_2", "fake_pci_3", "fake_pci_4", "fake_pci_5", "fake_pci_devs", "fake_pci_devs_json", "fake_pci_requests", "fake_pci_v2", "fake_pci_v3", "fake_return", "fields", "foo", "free_devs", "free_pci_device_ids", "inst", "inst_2", "instance_uuid", "jsonutils", "len", "list", "manager", "migr", "migrate_mock", "mock", "mock_get_cn", "node_id", "nova", "objects", "orph", "patcher", "pci_device", "pci_fakes", "pci_req_obj", "pci_reqs", "pci_requests", "pci_requests_obj", "pf", "request", "requests", "self", "set", "super", "test", "tracker", "uuidsentinel", "value", "vf", "vfs", "vm_states", "The", "fake_pci_whitelist", "must", "be", "called", "before", "creating", "the", "fake\n", "devices\n", "Assert", "we", "build", "the", "device", "tree", "correctly\n", "Make", "sure", "the", "device", "tree", "is", "properly", "maintained", "when", "there", "are", "new\n", "devices", "reported", "by", "the", "driver\n", "Assert", "we", "build", "the", "device", "tree", "correctly\n", "Make", "sure", "the", "device", "tree", "is", "properly", "maintained", "when", "there", "are\n", "devices", "removed", "from", "the", "system", "(not", "reported", "by", "the", "driver", "but", "known\n", "from", "previous", "scans)\n", "Tests", "the", "case", "that", "there", "is", "no", "match", "for", "the", "request", "so", "the\n", "claims", "mapping", "is", "set", "to", "None", "for", "the", "instance", "when", "the", "tracker\n", "calls", "clean_usage."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_vzstorage.py": ["LibvirtVZStorageTestCase", "None", "bad_opts", "brick_conn_vol", "conf", "conn", "connection_info", "connector", "data", "drv", "err_pattern", "exception", "export_mnt_base", "export_string", "file_path", "libvirt_driver", "mock", "opts", "os", "self", "super", "test_volume", "utils", "vzstorage", "wrong_export_string", "Tests", "the", "libvirt", "vzstorage", "volume", "driver.\nTest", "that", "custom", "options", "cannot", "duplicate", "the", "configured"], "/Users/mehranhassani/repos/nova/nova/tests/functional/wsgi/test_secgroup.py": ["False", "LOG", "REQUIRES_LOCKING", "SecgroupsFullstack", "True", "__name__", "_flavor_ref_parameter", "_image_ref_parameter", "api_fixture", "flavor", "image", "image_href", "logging", "name", "nova", "nova_fixtures", "policy_fixture", "resp", "scenarios", "self", "server", "super", "test", "testscenarios", "This", "test", "uses", "``testscenarios``", "which", "matrix", "multiplies", "the\n", "test", "across", "the", "scenarios", "listed", "below", "setting", "the", "attributes\n", "in", "the", "dictionary", "on", "``self``", "for", "each", "scenario.\n", "test", "v2.1", "base", "microversion\n", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n", "TODO(sdague):", "refactor", "this", "method", "into", "the", "API", "client,", "we're\n", "going", "to", "use", "it", "a", "lot\n", "We", "now", "have", "a", "valid", "imageId\n", "Set", "a", "valid", "flavorId\n", "security", "groups", "must", "be", "passed", "as", "a", "list,", "this", "is", "an", "invalid\n", "format.", "The", "jsonschema", "in", "v2.1", "caught", "it", "automatically,", "but\n", "in", "v2", "we", "used", "to", "throw", "a", "500."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_compute_capabilities_filters.py": ["False", "None", "TestComputeCapabilitiesFilter", "True", "assertion", "capabilities", "compute_capabilities_filter", "cpu_info", "ecaps", "especs", "fakes", "host", "host_state", "objects", "passes", "self", "six", "spec_obj", "super", "test", "{", "}", "In", "real", "OpenStack", "runtime", "environment,compute", "capabilities\n", "value", "may", "be", "number,", "so", "we", "should", "use", "number", "to", "do", "unit", "test.\n", "Make", "sure", "this", "still", "works", "even", "if", "the", "key", "is", "the", "same", "as", "the", "scope\n", "Make", "sure", "this", "will", "not", "reject", "user's", "self-defined,irrelevant", "specs"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/block_device_manager.py": ["None", "_", "_DEFAULT_BUS", "_DEFAULT_ROOT_DEVICE", "_TYPE_FOR_DISK_FORMAT", "_VALID_BUS", "address", "bd_list", "bdm", "bdm_metadata", "bdm_obj", "bdm_obj_list", "bdm_obj_map", "block_device", "block_device_info", "boot_order", "bus", "configdrive", "constants", "context", "controller_type", "ctrl", "ctrl_disk_addr", "dev", "dev_path", "device", "device_name", "device_type", "devices", "disk_bus", "drive_addr", "driver", "enumerate", "eph", "ephemerals", "exception", "free_slots_by_device_type", "idx", "image_meta", "instance", "itertools", "mapping", "max_slots", "mount_device", "msg", "object", "objects", "os_win_const", "root_bdm", "root_device", "root_device_name", "root_disk", "root_volume", "self", "slot_map", "staticmethod", "str", "vm_gen", "vol", "volumeops", "volumes", "x", "block_device_info", "does", "not", "contain", "tags", "information.\n", "create", "a", "map", "between", "BDM", "object", "and", "its", "device", "name.\n", "NOTE(claudiub):", "ephemerals", "have", "device_name", "instead", "of\n", "mount_device.\n", "we", "have", "2", "IDE", "controllers,", "for", "a", "total", "of", "4", "slots\n", "reserve", "one", "slot", "for", "the", "config", "drive", "on", "the", "second\n", "controller", "in", "case", "of", "generation", "1", "virtual", "machines\n", "for", "Generation", "2", "VMs,", "the", "configdrive", "is", "attached", "to", "the", "SCSI\n", "controller.", "Check", "that", "there", "is", "still", "a", "slot", "available", "for", "it.\n", "either", "booting", "from", "volume,", "or", "booting", "from", "image/iso\n", "make", "sure", "that", "boot_index", "is", "set.\n", "we", "sort", "the", "block", "devices", "by", "boot_index", "leaving", "the", "ones", "that", "don't\n", "have", "a", "specified", "boot_index", "at", "the", "end"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_agents.py": ["ADMIN_API", "AgentsJsonTest", "True", "agent", "agent_build_all", "agent_build_id", "agent_build_ref", "agent_id", "agent_update_id", "api_sample_base", "context", "fake_agent_build_create", "fake_agent_build_destroy", "fake_agent_build_get_all", "fake_agent_build_update", "fake_agents_list", "hypervisor", "models", "project", "response", "sample_dir", "self", "subs", "super", "values", "Creates", "a", "new", "agent", "build.\n", "Return", "a", "list", "of", "all", "agent", "builds.\n", "Update", "an", "existing", "agent", "build.\n", "Deletes", "an", "existing", "agent", "build."], "/Users/mehranhassani/repos/nova/nova/cache_utils.py": ["CONF", "CacheClient", "LOG", "None", "RuntimeError", "WEEK", "_", "_LW", "__name__", "_get_custom_cache_region", "_get_default_cache_region", "_warn_if_null_backend", "backend", "cache", "creator", "expiration_time", "key", "keys", "logging", "nova", "object", "region", "region_params", "self", "url", "value", "values", "Simple", "wrapper", "for", "oslo_cache.\nUsed", "ONLY", "when", "memcached", "is", "explicitly", "needed.\nUsed", "to", "get", "a", "caching", "client.\nReplicates", "a", "tiny", "subset", "of", "memcached", "client", "interface.", "If", "the", "operator", "has", "[cache]/enabled", "flag", "on", "then", "we", "let", "oslo_cache\n", "configure", "the", "region", "from", "the", "configuration", "settings\n", "If", "the", "operator", "has", "[cache]/enabled", "flag", "on", "then", "we", "let", "oslo_cache\n", "configure", "the", "region", "from", "configuration", "settings.\n", "If", "[cache]/enabled", "flag", "is", "off,", "we", "use", "the", "dictionary", "backend"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/multiple_create.py": ["parameter_types", "server_create"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_metrics_filters.py": ["None", "_ts_now", "datetime", "fakes", "filt_cls", "host", "metrics_filter", "metrics_list", "obj1", "obj2", "objects", "self", "test"], "/Users/mehranhassani/repos/nova/nova/compute/rpcapi.py": ["CONF", "ComputeAPI", "False", "IndexError", "KeyError", "LAST_VERSION", "LOG", "None", "True", "VERSION_ALIASES", "_", "_LE", "_LI", "__name__", "_compute_host", "action", "address", "admin_password", "aggregate", "args", "attachment_id", "backup_type", "bdm", "bdms", "block_device_info", "block_device_mapping", "block_migration", "cast", "cctxt", "clean_shutdown", "client", "console_type", "context", "create_info", "ctxt", "data", "default_client", "delete_info", "delete_type", "dest", "dest_check_data", "dest_check_data_obj", "destination", "destroy_disks", "device", "device_type", "diff", "disk", "disk_bus", "disk_info", "disk_over_commit", "do_cast", "enabled", "events", "exception", "extra", "filter_properties", "history", "host", "host_param", "image", "image_id", "image_p", "image_ref", "injected_files", "instance", "instance_type", "instances", "isinstance", "jsonutils", "kw", "kwargs", "limits", "logging", "mapping", "messaging", "migrate_data", "migrate_data_obj", "migrate_data_orig", "migration", "migration_id", "mode", "msg_args", "msg_kwargs", "network_id", "new_pass", "new_volume_id", "node", "nova", "object", "objects", "objects_base", "old_volume_id", "on_shared_storage", "orig_image_ref", "orig_sys_metadata", "port", "port_id", "preserve_ephemeral", "reboot_type", "recreate", "request_spec", "requested_ip", "requested_networks", "rescue_image_ref", "rescue_password", "reservations", "result", "rotation", "rpc", "rpc_method", "security_groups", "self", "serializer", "service_obj", "service_version", "slave_info", "snapshot_id", "source", "super", "tail_length", "target", "upgrade_level", "version", "version_cap", "volume_id", "NOTE(johngarbutt)", "when", "there", "are", "no", "nova-compute", "services", "running", "we\n", "get", "service_version", "==", "0.", "In", "that", "case", "we", "do", "not", "want", "to", "cache\n", "this", "result,", "because", "we", "will", "get", "a", "better", "answer", "next", "time.\n", "As", "a", "sane", "default,", "return", "the", "version", "from", "the", "last", "release.\n", "Cells", "overrides", "this\n", "NOTE(eliqiao):", "This", "is", "a", "new", "feature", "that", "is", "only", "available\n", "once", "all", "compute", "nodes", "support", "at", "least", "version", "4.11.\n", "This", "means", "the", "new", "REST", "API", "that", "supports", "this", "needs", "to", "handle\n", "this", "exception", "correctly.", "This", "can", "all", "be", "removed", "when", "we", "bump\n", "the", "major", "version", "of", "this", "RPC", "API.\n", "NOTE(danms):", "kwargs", "is", "only", "here", "for", "cells", "compatibility,", "don't\n", "actually", "send", "it", "to", "compute\n", "NOTE(rajesht):", "The", "`delete_type`", "parameter", "is", "passed", "because\n", "the", "method", "signature", "has", "to", "match", "with", "`terminate_instance()`\n", "method", "of", "cells", "rpcapi."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_volumeops.py": ["BaseVolumeDriverTestCase", "CONF", "False", "None", "SMBFSVolumeDriverTestCase", "True", "VolumeOpsTestCase", "_FAKE_CONN_INFO", "_FAKE_EXPORT_PATH", "attach_failed", "block_device_info", "block_device_mapping", "cfg", "conn", "conn_info", "connection_data", "connection_info", "connector", "constants", "ctrl", "dev_info", "dict", "disk_found", "disk_path", "disk_res_path", "exception", "expected_ctrl", "expected_dev_info", "expected_disk_path_mapping", "expected_extra_conn_args", "expected_iops", "expected_path", "expected_slot", "expected_supported_specs", "expected_try_count", "export_path", "fake_block_device", "fake_conn_info", "fake_iscsi_initiator", "fake_total_bytes_sec", "fake_total_iops_sec", "fake_volume_driver", "get_fake_block_dev_info", "get_fake_connection_info", "get_mounted_disk", "init_vol_conn", "is_block_dev", "kwargs", "mock", "mock_attach", "mock_attach_volume", "mock_bytes_per_sec_to_iops", "mock_conn_factory", "mock_connect_volume", "mock_detach", "mock_disk1", "mock_disk2", "mock_get_connector", "mock_get_dev_number", "mock_get_disk_ctrl_and_slot", "mock_get_disk_path", "mock_get_disk_path_mapping", "mock_get_disk_res_path", "mock_get_disk_resource_path", "mock_get_volume_driver", "mock_phys_disk_path_mapping", "mock_set_qos_specs", "mock_sleep", "mock_validate_qos_specs", "mock_vm_disk_mapping", "mock_vol_paths", "mock_warning", "no_bytes", "path", "requested_qos_specs", "result", "resulted_disk_path", "resulted_disk_path_mapping", "resulted_iops", "self", "slot", "storage_qos_specs", "super", "supported_qos_specs", "test", "test_base", "units", "vmutils", "vol_driver", "volumeops", "Unit", "tests", "for", "VolumeOps", "class.\nUnit", "tests", "for", "Hyper-V", "BaseVolumeDriver", "class.\nUnit", "tests", "for", "Hyper-V", "BaseVolumeDriver", "class.\nUnit", "tests", "for", "the", "Hyper-V", "SMBFSVolumeDriver", "class.", "In", "this", "case,", "only", "the", "first", "disk", "needs", "to", "be", "updated.\n", "For", "virtual", "disk", "images,", "we", "expect", "the", "resource", "path", "to", "be", "the\n", "actual", "image", "path,", "as", "opposed", "to", "passthrough", "disks,", "in", "which", "case", "we\n", "need", "the", "Msvm_DiskDrive", "resource", "path", "when", "attaching", "it", "to", "a", "VM.\n", "This", "base", "method", "is", "a", "noop,", "we'll", "just", "make", "sure\n", "it", "doesn't", "error", "out.\n", "The", "tested", "method", "will", "just", "apply", "a", "lock", "before", "calling\n", "the", "superclass", "method."], "/Users/mehranhassani/repos/nova/nova/objects/__init__.py": ["__import__", "NOTE(comstud):", "You", "may", "scratch", "your", "head", "as", "you", "see", "code", "that", "imports\n", "this", "module", "and", "then", "accesses", "attributes", "for", "objects", "such", "as", "Instance,\n", "etc,", "yet", "you", "do", "not", "see", "these", "attributes", "in", "here.", "Never", "fear,", "there", "is\n", "a", "little", "bit", "of", "magic.", "When", "objects", "are", "registered,", "an", "attribute", "is", "set\n", "on", "this", "module", "automatically,", "pointing", "to", "the", "newest/latest", "version", "of\n", "the", "object.\n", "NOTE(danms):", "You", "must", "make", "sure", "your", "object", "gets", "imported", "in", "this\n", "function", "in", "order", "for", "it", "to", "be", "registered", "by", "services", "that", "may\n", "need", "to", "receive", "it", "via", "RPC."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_host_filters.py": ["all_hosts_filter", "classes", "compute_filter", "fakes", "filt_cls", "filter_handler", "filters", "host", "self", "test", "Double", "check", "at", "least", "a", "couple", "of", "known", "filters", "exist"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/driver.py": ["False", "HyperVDriver", "LOG", "None", "NotImplementedError", "True", "_", "_LE", "__name__", "action", "admin_password", "all_instances", "args", "attr", "bad_volumes_callback", "block_device_info", "block_migration", "callable", "capabilities", "class_member", "cls", "connection_info", "context", "convert_exceptions", "decorate", "decorate_all_methods", "decorator", "dest", "dest_check_data", "destroy_disks", "destroy_vifs", "device_type", "disk_bus", "disk_info", "disk_over_commit", "driver", "dst_compute_info", "encryption", "event_handler", "eventhandler", "ex", "exc", "exc_info", "exception", "exception_conversion_map", "exception_map", "expected", "expected_exceptions", "flavor", "function", "functools", "getattr", "host", "hostops", "image_id", "image_meta", "imagecache", "injected_files", "instance", "instance_info", "isinstance", "kwargs", "livemigrationops", "logging", "migrate_data", "migration", "migrationops", "mountpoint", "msg", "network_info", "nodename", "os_win_exc", "platform", "post_method", "power_on", "property", "raised_exception", "rdpconsoleops", "reboot_type", "recover_method", "refresh", "rescue_password", "resize_instance", "retry_interval", "self", "serialconsoleops", "setattr", "six", "snapshotops", "src_compute_info", "super", "sys", "timeout", "tuple", "type", "update_task_state", "utilsfactory", "vif", "virtapi", "vmops", "volumeops", "wrapper", "Cleanup", "after", "instance", "being", "destroyed", "by", "Hypervisor.\nResume", "guest", "state", "when", "a", "host", "is", "booted.\nPlug", "VIFs", "into", "networks.\nUnplug", "VIFs", "from", "networks.", "exception", "might", "be", "a", "subclass", "of", "an", "expected", "exception.\n", "NOTE(claudiub):", "Python", "3", "raises", "the", "exception", "object", "given", "as\n", "the", "second", "argument", "in", "six.reraise.\n", "The", "original", "message", "will", "be", "maintained", "by", "passing", "the", "original\n", "exception.\n", "expected_exception:", "converted_exception\n", "NOTE(claudiub):", "the", "purpose", "of", "the", "decorator", "below", "is", "to", "prevent", "any\n", "os_win", "exceptions", "(subclasses", "of", "OSWinException)", "to", "leak", "outside", "of", "the\n", "HyperVDriver.\n", "check", "if", "the", "current", "version", "of", "Windows", "is", "supported", "before", "any\n", "further", "driver", "initialisation.\n", "the", "version", "is", "of", "Windows", "is", "older", "than", "Windows", "Server", "2012", "R2.\n", "Log", "an", "error,", "letting", "users", "know", "that", "this", "version", "is", "not\n", "supported", "any", "longer."], "/Users/mehranhassani/repos/nova/nova/policies/limits.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "limits_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/compute/api.py": ["AGGREGATE_ACTION_ADD", "AGGREGATE_ACTION_DELETE", "AGGREGATE_ACTION_UPDATE", "AGGREGATE_ACTION_UPDATE_META", "API", "AggregateAPI", "AttributeError", "CONF", "Exception", "False", "HostAPI", "IndexError", "KeyError", "LOG", "MAX_USERDATA_SIZE", "None", "NotImplementedError", "RO_SECURITY_GROUPS", "SecurityGroupAPI", "True", "TypeError", "VIDEO_RAM", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_diff_dict", "_filter", "_get_unique_filter_method", "_hosts", "_match_instance", "_metadata", "_remap_fixed_ip_filter", "_remap_flavor_filter", "_remap_metadata_filter", "_remap_system_metadata_filter", "_reset_image_metadata", "_subsequent_list", "_wrapped", "access_ip_v4", "access_ip_v6", "action", "action_id", "action_name", "address", "admin_password", "agg", "aggregate", "aggregate_id", "aggregate_meta", "aggregate_name", "aggregate_payload", "alive", "all", "allowed", "any", "args", "async", "attachment_id", "attachments", "attr", "auto_disk_config", "auto_disk_config_disabled", "auto_disk_config_img", "availability_zone", "availability_zones", "available_zones", "backup_type", "base", "base64", "base64utils", "base_options", "bdm", "bdms", "binary", "block_device", "block_device_mapping", "block_device_mappings", "block_device_obj", "block_migration", "bool_val", "boot_indexes", "boot_meta", "br", "build_req", "build_req_instances", "build_request", "build_requests", "c", "cb", "cell0_instances", "cell0_mapping", "cell_instances", "cell_name", "cells_opts", "check_instance_cell", "check_instance_host", "check_instance_lock", "check_instance_state", "check_server_group_quota", "cinder", "clean_shutdown", "clean_value", "collections", "cols", "columns_to_join", "compute_host", "compute_id", "compute_rpcapi", "compute_utils", "conductor", "config_drive", "config_drive_option", "conflicting_azs", "connect_info", "connector", "console_type", "consoleauth_rpcapi", "content", "context", "copy", "count", "create_info", "create_instance", "crypto", "current_instance_type", "current_instance_type_name", "db_block_device_mapping", "default_hostname", "delete", "delete_info", "delete_type", "deleted", "deltas", "description", "dest_size", "destination", "detailed", "device", "device_names", "device_type", "dict", "diff", "disabled", "disk_bus", "disk_over_commit", "display_description", "display_name", "do_cast", "e", "el", "elevated", "enabled", "enumerate", "ephemeral_size", "err", "err_str", "event", "event_suffix", "events", "events_by_host", "ex", "exc", "exception", "exception_wrapper", "excutils", "exp", "expect_locked_by", "expected_attrs", "expected_task_state", "extra_instance_updates", "extra_properties", "f", "fields", "fields_obj", "files_to_inject", "filter", "filter_ip", "filter_mapping", "filter_method", "filter_properties", "filters", "fingerprint", "fixed_ip", "flavor", "flavor_defined_bdms", "flavor_id", "flavors", "fn", "force", "forced_host", "forced_node", "function", "functools", "get_notifier", "getattr", "group", "group_hint", "group_ids", "group_ref", "groups", "guest_format", "hardware", "have_ephemeral_bdms", "have_swap_bdms", "hc", "headroom", "hooks", "host", "host_aggregates", "host_name", "host_status", "host_status_dict", "host_statuses", "hostname", "hosts", "hosts_by_instance", "hr", "hypervisor_match", "i", "id", "id_is_uuid", "ids", "im", "image", "image_api", "image_defined_bdms", "image_href", "image_id", "image_mapping", "image_meta", "image_min_disk", "image_properties", "image_props", "image_ref", "image_size", "image_type", "index", "info_cache", "injected_files", "inner", "inst", "inst_host", "inst_map", "inst_mapping", "inst_models", "instance", "instance_actions", "instance_attrs", "instance_block_device_mapping", "instance_group", "instance_id", "instance_list", "instance_memory_mb", "instance_type", "instance_uuid", "instance_vcpus", "instances", "instances_by_host", "instances_to_build", "int", "ipv4_f", "ipv6_f", "is_local_creation", "is_local_delete", "is_owner", "is_shelved_offloaded", "isinstance", "jsonutils", "k", "kernel_id", "kernel_image", "key", "key_data", "key_name", "key_pair", "key_type", "keymgr", "keypair", "keypair_name", "keypair_obj", "keys", "kw", "kwargs", "l", "legacy_bdm", "legacy_image_defined", "len", "limit", "list", "local", "locked_by", "logging", "map", "map_exception", "mapping", "mapping_dict", "mappings", "marker", "max", "max_content", "max_count", "max_local", "max_net_count", "max_network_count", "max_path", "members", "messaging_timeout", "metadata", "metadata_type", "mig", "migration", "migration_id", "migration_type", "min", "min_count", "mode", "msg", "must_be_up", "must_have_launched", "name", "names", "network", "network_api", "network_id", "network_model", "new", "new_instance_type", "new_instance_type_name", "new_name", "new_sys_metadata", "new_volume", "nodes", "not_image_and_root_bdm", "notifications", "notify", "nova", "nova_context", "num_instances", "num_local", "num_metadata", "numa_topology", "nw_info", "obj_base", "objects", "old_flavor", "old_volume", "on_shared_storage", "openstack_driver", "opt", "options_from_image", "orig", "orig_host", "orig_image_ref", "orig_limit", "orig_sys_metadata", "original_name", "original_task_state", "oslo_exceptions", "outer", "overridable_mappings", "overrider_mappings", "overs", "params", "params_to_update", "password", "path", "payload", "pci_request", "pci_request_info", "period_beginning", "period_ending", "port_id", "power_state", "prepared_mappings", "preserve_ephemeral", "private_key", "project", "project_id", "projected", "properties", "property", "props_copy", "public_key", "quiesced", "quota_metadata", "quota_project", "quota_user", "quotas", "quotas_obj", "ramdisk_id", "ramdisk_image", "range", "re", "reason", "reboot_type", "remap_object", "req_cores", "req_ram", "req_spec", "reqs", "request_id", "request_spec", "requested", "requested_ip", "requested_net", "requested_networks", "res", "rescue_image_ref", "rescue_password", "reservation_id", "reservations", "resource", "result", "result_objs", "ret_services", "root_bdm", "root_device_name", "root_in_image_bdms", "rotation", "rpc", "rpcapi", "rs", "rule", "rule_id", "rule_ids", "rules", "safe_chars", "same_instance_type", "scheduler_client", "scheduler_hint", "scheduler_hints", "scheduler_utils", "search_filts", "search_opts", "secgroup", "secgroup_dict", "secgroups", "security_group", "security_group_api", "security_group_base", "security_group_name", "security_groups", "seen_uuids", "self", "service", "service_id", "service_version", "servicegroup", "services", "set", "set_zones", "shelved_offloaded", "shutdown_terminate", "six", "size", "snap", "snapshot", "snapshot_id", "sort_dirs", "sort_keys", "sorted", "src_host", "state", "staticmethod", "status", "str", "string", "strutils", "sum", "super", "swap_list", "swap_size", "sys_meta", "sysmeta", "system_meta", "system_metadata", "tail_length", "target", "task_name", "task_state", "task_states", "thing", "timeutils", "to_destroy", "total_alloweds", "type", "units", "updates", "usages", "useds", "user_data", "user_id", "utils", "uuid", "uuidutils", "v", "val", "vals", "value", "values", "version", "vif", "virtual_name", "vm_state", "vm_states", "vol", "volume", "volume_api", "volume_bdm", "volume_id", "vram_mb", "wrap_exception", "wrapped", "x", "API", "for", "interacting", "with", "the", "compute", "manager.\nEnforce", "quota", "limits", "on", "number", "of", "instances", "created.\nEnforce", "quota", "limits", "on", "metadata", "properties.\nExtract", "and", "format", "blank", "devices", "from", "image", "mappings.\nPopulate", "instance", "display_name", "and", "hostname.\nBuild", "the", "beginning", "of", "a", "new", "instance.\nCheck", "whether", "multiple", "instances", "are", "created", "from", "port", "id(s).\nCheck", "whether", "multiple", "instances", "are", "created", "with", "specified", "ip.\nTerminate", "an", "instance.\nTerminate", "an", "instance.\nRestore", "a", "previously", "deleted", "(but", "not", "reclaimed)", "instance.\nForce", "delete", "an", "instance", "in", "any", "vm_state/task_state.\nStop", "an", "instance.\nStart", "an", "instance.\nTrigger", "crash", "dump", "in", "an", "instance.\nGet", "a", "single", "instance", "with", "the", "given", "instance_id.\nReboot", "the", "given", "instance.\nRebuild", "the", "given", "instance", "with", "the", "provided", "attributes.\nReverts", "a", "resize,", "deleting", "the", "'new'", "instance", "in", "the", "process.\nConfirms", "a", "migration/resize", "and", "deletes", "the", "'old'", "instance.\nSpecial", "API", "cell", "logic", "for", "resize.\nRemove", "a", "shelved", "instance", "from", "the", "hypervisor.\nRestore", "a", "shelved", "instance.\nAdd", "fixed_ip", "from", "specified", "network", "to", "given", "instance.\nRemove", "fixed_ip", "from", "specified", "network", "to", "given", "instance.\nPause", "the", "given", "instance.\nUnpause", "the", "given", "instance.\nRetrieve", "diagnostics", "for", "the", "given", "instance.\nRetrieve", "diagnostics", "for", "the", "given", "instance.\nSuspend", "the", "given", "instance.\nResume", "the", "given", "instance.\nRescue", "the", "given", "instance.\nUnrescue", "the", "given", "instance.\nGet", "a", "url", "to", "an", "instance", "Console.\nUsed", "in", "a", "child", "cell", "to", "get", "console", "info.\nGet", "a", "url", "to", "an", "instance", "Console.\nUsed", "in", "a", "child", "cell", "to", "get", "console", "info.\nGet", "a", "url", "to", "an", "instance", "Console.\nUsed", "in", "a", "child", "cell", "to", "get", "console", "info.\nGet", "a", "url", "to", "a", "serial", "console.\nUsed", "in", "a", "child", "cell", "to", "get", "serial", "console.\nGet", "a", "url", "to", "a", "MKS", "console.\nGet", "console", "output", "for", "an", "instance.\nLock", "the", "given", "instance.\nUnlock", "the", "given", "instance.\nReset", "networking", "on", "the", "instance.\nInject", "network", "info", "for", "the", "instance.\nAttach", "an", "existing", "volume", "to", "an", "existing", "instance.\nDetach", "a", "volume", "from", "an", "instance.\nSwap", "volume", "attached", "to", "an", "instance.\nUse", "hotplug", "to", "add", "an", "network", "adapter", "to", "an", "instance.\nDetach", "an", "network", "adapter", "from", "an", "instance.\nGet", "all", "metadata", "associated", "with", "an", "instance.\nGet", "all", "metadata.\nDelete", "the", "given", "metadata", "item", "from", "an", "instance.\nMigrate", "a", "server", "lively", "to", "a", "new", "host.\nGet", "all", "migrations", "for", "the", "given", "filters.\nGet", "all", "migrations", "of", "an", "instance", "in", "progress.\nGet", "the", "migration", "of", "an", "instance", "by", "id.\nSub-set", "of", "the", "Compute", "Manager", "API", "for", "managing", "host", "operations.\nRaise", "HostNotFound", "if", "compute", "host", "doesn't", "exist.\nSets", "the", "specified", "host's", "ability", "to", "accept", "new", "instances.\nReturns", "the", "result", "of", "calling", "\"uptime\"", "on", "the", "target", "host.\nReboots,", "shuts", "down", "or", "powers", "up", "the", "host.\nGet", "service", "entry", "for", "the", "given", "service", "id.\nGet", "service", "entry", "for", "the", "given", "compute", "hostname.\nPerforms", "the", "actual", "service", "update", "operation.\nPerforms", "the", "actual", "Service", "deletion", "operation.\nDeletes", "the", "specified", "service.\nReturn", "all", "instances", "on", "the", "given", "host.\nReturn", "compute", "node", "entry", "for", "particular", "integer", "ID.\nSub-set", "of", "the", "Compute", "Manager", "API", "for", "managing", "instance", "actions.\nSub-set", "of", "the", "Compute", "Manager", "API", "for", "managing", "host", "aggregates.\nCreates", "the", "model", "for", "the", "aggregate.\nGet", "an", "aggregate", "by", "id.\nGet", "all", "the", "aggregates.\nGet", "all", "the", "aggregates", "where", "the", "given", "host", "is", "presented.\nUpdate", "the", "properties", "of", "an", "aggregate.\nUpdates", "the", "aggregate", "metadata.\nDeletes", "the", "aggregate.\nAdds", "the", "host", "to", "an", "aggregate.\nRemoves", "host", "from", "the", "aggregate.\nSubset", "of", "the", "Compute", "Manager", "API", "for", "managing", "key", "pairs.\nImport", "a", "key", "pair", "using", "an", "existing", "public", "key.\nCreate", "a", "new", "key", "pair.\nDelete", "a", "keypair", "by", "name.\nList", "key", "pairs.\nGet", "a", "keypair", "by", "name.\nAdd", "security", "group", "to", "the", "instance.\nRemove", "the", "security", "group", "associated", "with", "the", "instance.\nCalled", "when", "a", "rule", "is", "added", "to", "or", "removed", "from", "a", "security_group.", "NOTE(gibi):", "legacy", "notification", "used", "compute", "as", "a", "service", "but", "these\n", "calls", "still", "run", "on", "the", "client", "side", "of", "the", "compute", "service", "which", "is\n", "nova-api.", "By", "setting", "the", "binary", "to", "nova-api", "below,", "we", "can", "make", "sure\n", "that", "the", "new", "versioned", "notifications", "has", "the", "right", "publisher_id", "but", "the\n", "legacy", "notifications", "does", "not", "change.\n", "Figure", "out", "what", "keys", "went", "away\n", "Compute", "the", "updates\n", "Check", "number", "of", "files", "first\n", "OK,", "now", "count", "path", "and", "content", "lengths;", "we're", "looking", "for\n", "the", "max...\n", "Favor", "path", "limit", "over", "content", "limit", "for", "reporting\n", "purposes\n", "If", "quota_cores", "is", "unlimited", "[-1]:\n", "-", "set", "cores", "headroom", "based", "on", "instances", "headroom:\n", "If", "quota_ram", "is", "unlimited", "[-1]:\n", "-", "set", "ram", "headroom", "based", "on", "instances", "headroom:\n", "Determine", "requested", "cores", "and", "ram\n", "Check", "the", "quota\n", "OK,", "we", "exceeded", "quota;", "let's", "figure", "out", "why...\n", "Reduce", "'allowed'", "instances", "in", "line", "with", "the", "cores", "&", "ram", "headroom\n", "Convert", "to", "the", "appropriate", "exception", "message\n", "We're", "actually", "OK,", "but", "still", "need", "reservations\n", "Because", "metadata", "is", "stored", "in", "the", "DB,", "we", "hard-code", "the", "size", "limits\n", "In", "future,", "we", "may", "support", "more", "variable", "length", "strings,", "so", "we", "act\n", "as", "if", "this", "is", "quota-controlled", "for", "forwards", "compatibility.\n", "Those", "are", "only", "used", "in", "V2", "API,", "from", "V2.1", "API,", "those", "checks", "are\n", "validated", "at", "API", "layer", "schema", "validation.\n", "NOTE(sdague):", "default", "is", "handled", "special\n", "Check", "to", "see", "if", "it's", "a", "nova-network", "or", "neutron", "type.\n", "This", "is", "nova-network", "so", "just", "return", "the", "requested", "name.\n", "The", "id", "for", "neutron", "is", "a", "uuid,", "so", "we", "return", "the", "id", "(uuid).\n", "If", "the", "network", "request", "was", "specifically", "'none'", "meaning", "don't\n", "allocate", "any", "networks,", "we", "just", "return", "the", "number", "of", "requested\n", "instances", "since", "quotas", "don't", "change", "at", "all.\n", "NOTE(danms):", "Temporary", "transition\n", "Inherit", "from", "image", "if", "not", "specified\n", "Force", "to", "None", "if", "using", "null_kernel\n", "Verify", "kernel", "and", "ramdisk", "exist", "(fail-fast)\n", "kernel_id", "could", "have", "been", "a", "URI,", "not", "a", "UUID,", "so", "to", "keep", "behaviour\n", "from", "before,", "which", "leaked", "that", "implementation", "detail", "out", "to", "the\n", "caller,", "we", "return", "the", "image", "UUID", "of", "the", "kernel", "image", "and", "ramdisk\n", "image", "(below)", "and", "not", "any", "image", "URIs", "that", "might", "have", "been\n", "supplied.\n", "TODO(jaypipes):", "Get", "rid", "of", "this", "silliness", "once", "we", "move", "to", "a", "real\n", "Image", "object", "and", "hide", "all", "of", "that", "stuff", "within", "nova.image.api.\n", "NOTE(vish):", "We", "have", "a", "legacy", "hack", "to", "allow", "admins", "to", "specify", "hosts\n", "via", "az", "using", "az:host:node.", "It", "might", "be", "nice", "to", "expose", "an\n", "api", "to", "specify", "specific", "hosts", "to", "force", "onto,", "but", "for\n", "now", "it", "just", "supports", "this", "legacy", "hack.\n", "NOTE(deva):", "It", "is", "also", "possible", "to", "specify", "az::node,", "in", "which", "case\n", "the", "host", "manager", "will", "determine", "the", "correct", "host.\n", "FIXME(comstud):", "Bug", "ID", "1193438", "filed", "for", "this.", "This", "looks", "silly,\n", "but", "this", "is", "because", "the", "config", "drive", "column", "is", "a", "String.", "False\n", "is", "represented", "by", "using", "an", "empty", "string.", "And", "for", "whatever\n", "reason,", "we", "rely", "on", "the", "DB", "to", "cast", "True", "to", "a", "String.\n", "Image", "min_disk", "is", "in", "gb,", "size", "is", "in", "bytes.", "For", "sanity,", "have", "them", "both\n", "in", "bytes.\n", "Target", "disk", "is", "a", "volume.", "Don't", "check", "flavor", "disk", "size", "because", "it\n", "doesn't", "make", "sense,", "and", "check", "min_disk", "against", "the", "volume", "size.\n", "There", "are", "2", "possibilities", "here:", "either", "the", "target", "volume", "already\n", "exists,", "or", "it", "doesn't,", "in", "which", "case", "the", "bdm", "will", "contain", "the\n", "intended", "volume", "size.\n\n", "Cinder", "does", "its", "own", "check", "against", "min_disk,", "so", "if", "the", "target\n", "volume", "already", "exists", "this", "has", "already", "been", "done", "and", "we", "don't\n", "need", "to", "check", "it", "again", "here.", "In", "this", "case,", "volume_size", "may", "not", "be\n", "set", "on", "the", "bdm.\n\n", "If", "we're", "going", "to", "create", "the", "volume,", "the", "bdm", "will", "contain\n", "volume_size.", "Therefore", "we", "should", "check", "it", "if", "it", "exists.", "This", "will\n", "still", "be", "checked", "again", "by", "cinder", "when", "the", "volume", "is", "created,", "but\n", "that", "will", "not", "happen", "until", "the", "request", "reaches", "a", "host.", "By\n", "checking", "it", "here,", "the", "user", "gets", "an", "immediate", "and", "useful", "failure\n", "indication.\n\n", "The", "third", "possibility", "is", "that", "we", "have", "failed", "to", "consider\n", "something,", "and", "there", "are", "actually", "more", "than", "2", "possibilities.", "In\n", "this", "case", "cinder", "will", "still", "do", "the", "check", "at", "volume", "creation", "time.\n", "The", "behaviour", "will", "still", "be", "correct,", "but", "the", "user", "will", "not", "get", "an\n", "immediate", "failure", "from", "the", "api,", "and", "will", "instead", "have", "to\n", "determine", "why", "the", "instance", "is", "in", "an", "error", "state", "with", "a", "task", "of\n", "block_device_mapping.\n\n", "We", "could", "reasonably", "refactor", "this", "check", "into", "_validate_bdm", "at\n", "some", "future", "date,", "as", "the", "various", "size", "logic", "is", "already", "split", "out\n", "in", "there.\n", "Target", "disk", "is", "a", "local", "disk", "whose", "size", "is", "taken", "from", "the", "flavor\n", "NOTE(johannes):", "root_gb", "is", "allowed", "to", "be", "0", "for", "legacy", "reasons\n", "since", "libvirt", "interpreted", "the", "value", "differently", "than", "other\n", "drivers.", "A", "value", "of", "0", "means", "don't", "check", "size.\n", "Get", "the", "block", "device", "mappings", "defined", "by", "the", "image.\n", "NOTE", "(ndipanov):", "Assume", "root", "dev", "name", "is", "'vda'", "if", "not", "supplied.\n", "It's", "needed", "for", "legacy", "conversion", "to", "work.\n", "If", "the", "instance", "is", "booted", "by", "image", "and", "has", "a", "volume", "attached,\n", "the", "volume", "cannot", "have", "the", "same", "device", "name", "as", "root_device_name\n", "NOTE", "(ndipanov):", "client", "will", "insert", "an", "image", "mapping", "into", "the", "v2\n", "block_device_mapping,", "but", "if", "there", "is", "a", "bootable", "device", "in", "image\n", "mappings", "-", "we", "need", "to", "get", "rid", "of", "the", "inserted", "image\n", "NOTE", "(gibi):", "another", "case", "is", "when", "a", "server", "is", "booted", "with", "an\n", "image", "to", "bdm", "mapping", "where", "the", "image", "only", "contains", "a", "bdm", "to", "a\n", "snapshot.", "In", "this", "case", "the", "other", "image", "to", "bdm", "mapping\n", "contains", "an", "unnecessary", "device", "with", "boot_index", "==", "0.\n", "Also", "in", "this", "case", "the", "image_ref", "is", "None", "as", "we", "are", "booting", "from\n", "an", "image", "to", "volume", "bdm.\n", "NOTE(mikal):", "user_data", "is", "stored", "in", "a", "text", "column,", "and\n", "the", "database", "might", "silently", "truncate", "if", "its", "over", "length.\n", "TODO(gcb):", "Just", "use", "base64utils.decode_as_bytes(user_data)\n", "when", "https://review.openstack.org/#/c/410797/", "is", "merged", "and\n", "ensure", "oslo.serialization", ">=2.15.0", "in", "Nova", "requirements.txt.\n", "When", "using", "Neutron,", "_check_requested_secgroups", "will", "translate", "and\n", "return", "any", "requested", "security", "group", "names", "to", "uuids.\n", "Note:", "max_count", "is", "the", "number", "of", "instances", "requested", "by", "the", "user,\n", "max_network_count", "is", "the", "maximum", "number", "of", "instances", "taking", "into\n", "account", "any", "network", "quotas\n", "there", "must", "be", "invalid", "values", "in", "the", "image", "meta", "properties", "so\n", "consider", "this", "an", "invalid", "request\n", "PCI", "requests", "come", "from", "two", "sources:", "instance", "flavor", "and\n", "requested_networks.", "The", "first", "call", "in", "below", "returns", "an\n", "InstancePCIRequests", "object", "which", "is", "a", "list", "of", "InstancePCIRequest\n", "objects.", "The", "second", "call", "in", "below", "creates", "an", "InstancePCIRequest\n", "object", "for", "each", "SR-IOV", "port,", "and", "append", "it", "to", "the", "list", "in", "the\n", "InstancePCIRequests", "object\n", "return", "the", "validated", "options", "and", "maximum", "number", "of", "instances", "allowed\n", "by", "the", "network", "quotas\n", "Reserve", "quotas\n", "Create", "a", "uuid", "for", "the", "instance", "so", "we", "can", "store", "the\n", "RequestSpec", "before", "the", "instance", "is", "created.\n", "Store", "the", "RequestSpec", "that", "will", "be", "used", "for", "scheduling.\n", "Create", "an", "instance", "object,", "but", "do", "not", "store", "in", "db", "yet.\n", "NOTE(danms):", "BDMs", "are", "still", "not", "created,", "so", "we", "need", "to", "pass\n", "a", "clone", "and", "then", "reset", "them", "on", "our", "object", "after", "create", "so\n", "that", "they're", "still", "dirty", "for", "later", "in", "this", "process\n", "Create", "an", "instance_mapping.", "The", "null", "cell_mapping", "indicates\n", "that", "the", "instance", "doesn't", "yet", "exist", "in", "a", "cell,", "and", "lookups\n", "for", "it", "need", "to", "instead", "look", "for", "the", "RequestSpec.\n", "cell_mapping", "will", "be", "populated", "after", "scheduling,", "with", "a\n", "scheduling", "failure", "using", "the", "cell_mapping", "for", "the", "special\n", "cell0.\n", "list", "of", "members", "added", "to", "servers", "group", "in", "this", "iteration\n", "is", "needed", "to", "check", "quota", "of", "server", "group", "during", "add", "next\n", "instance\n", "In", "the", "case", "of", "any", "exceptions,", "attempt", "DB", "cleanup", "and", "rollback", "the\n", "quota", "reservations.\n", "Commit", "the", "reservations\n", "NOTE(alaski):", "A", "volume", "snapshot", "inherits", "metadata", "from", "the\n", "originating", "volume,", "but", "the", "API", "does", "not", "expose", "metadata\n", "on", "the", "snapshot", "itself.", "So", "we", "query", "the", "volume", "for", "it", "below.\n", "Normalize", "and", "setup", "some", "parameters\n", "max_net_count", "is", "the", "maximum", "number", "of", "instances", "requested", "by", "the\n", "user", "adjusted", "for", "any", "network", "quota", "constraints,", "including\n", "consideration", "of", "connections", "to", "each", "requested", "network\n", "We", "can't", "do", "this", "check", "earlier", "because", "we", "need", "bdms", "from", "all", "sources\n", "to", "have", "been", "merged", "in", "order", "to", "get", "the", "root", "bdm.\n", "TODO(alaski):", "Cast", "to", "conductor", "here", "which", "will", "call", "the\n", "scheduler", "and", "defer", "instance", "creation", "until", "the", "scheduler\n", "has", "picked", "a", "cell/host.", "Set", "the", "instance_mapping", "to", "the", "cell\n", "that", "the", "instance", "is", "scheduled", "to.\n", "NOTE(alaski):", "Instance", "and", "block", "device", "creation", "are", "going\n", "to", "move", "to", "the", "conductor.\n", "send", "a", "state", "update", "notification", "for", "the", "initial", "create", "to\n", "show", "it", "going", "from", "non-existent", "to", "BUILDING\n", "NOTE", "(ndipanov):", "inherit", "flavor", "size", "only", "for", "swap", "and", "ephemeral\n", "Copy", "the", "block_device_mapping", "because", "this", "method", "can", "be", "called\n", "multiple", "times", "when", "more", "than", "one", "instance", "is", "booted", "in", "a", "single\n", "request.", "This", "avoids", "'id'", "being", "set", "and", "triggering", "the", "object", "dupe\n", "detection\n", "Create", "the", "BlockDeviceMapping", "objects", "in", "the", "db.\n", "TODO(alaski):", "Why", "is", "this", "done?\n", "Each", "device", "which", "is", "capable", "of", "being", "used", "as", "boot", "device", "should\n", "be", "given", "a", "unique", "boot", "index,", "starting", "from", "0", "in", "ascending", "order.\n", "Make", "sure", "that", "the", "boot", "indexes", "make", "sense.\n", "Setting", "a", "negative", "value", "or", "None", "indicates", "that", "the", "device", "should", "not\n", "be", "used", "for", "booting.\n", "Convert", "the", "BlockDeviceMappingList", "to", "a", "list", "for", "repr", "details.\n", "NOTE(vish):", "For", "now,", "just", "make", "sure", "the", "volumes", "are", "accessible.\n", "Additionally,", "check", "that", "the", "volume", "can", "be", "attached", "to", "this\n", "instance.\n", "There", "should", "be", "only", "one", "swap\n", "NOTE(mriedem):", "This", "is", "only", "here", "for", "test", "simplicity", "since", "a", "server\n", "name", "is", "required", "in", "the", "REST", "API.\n", "NOTE(russellb)", "In", "the", "multi-instance", "case,", "we're", "going", "to\n", "overwrite", "the", "display_name", "using", "the\n", "multi_instance_display_name_template.", "We", "need", "the", "default\n", "display_name", "set", "so", "that", "it", "can", "be", "used", "in", "the", "template,", "though.\n", "Only", "set", "the", "hostname", "here", "if", "we're", "only", "creating", "one", "instance.\n", "Otherwise,", "it", "will", "be", "built", "after", "the", "template", "based\n", "display_name.\n", "Store", "image", "properties", "so", "we", "can", "use", "them", "later\n", "(for", "notifications,", "etc).", "Only", "store", "what", "we", "can.\n", "Make", "sure", "we", "have", "the", "dict", "form", "that", "we", "need", "for", "instance_update.\n", "In", "case", "we", "couldn't", "find", "any", "suitable", "base_image\n", "For", "Neutron", "we", "don't", "actually", "store", "anything", "in", "the", "database,", "we\n", "proxy", "the", "security", "groups", "on", "the", "instance", "from", "the", "ports\n", "attached", "to", "the", "instance.\n", "This", "method", "remains", "because", "cellsv1", "uses", "it", "in", "the", "scheduler\n", "TODO(alaski):", "This", "exception", "block", "can", "be", "removed", "once", "we're\n", "guaranteed", "everyone", "is", "using", "cellsv2.\n", "If", "inst_map", "is", "None", "then", "the", "deployment", "has", "not", "migrated", "to\n", "cellsv2", "yet.\n", "If", "inst_map.cell_mapping", "is", "None", "then", "the", "instance", "is", "not", "in", "a\n", "cell", "yet.", "Until", "instance", "creation", "moves", "to", "the", "conductor", "the\n", "instance", "can", "be", "found", "in", "the", "configured", "database,", "so", "attempt\n", "to", "look", "it", "up.\n", "If", "we", "get", "here", "then", "the", "conductor", "is", "in", "charge", "of", "writing", "the\n", "instance", "to", "the", "database", "and", "hasn't", "done", "that", "yet.", "It's", "up", "to\n", "the", "caller", "of", "this", "method", "to", "determine", "what", "to", "do", "with", "that\n", "information.\n", "Since", "the", "cell_mapping", "exists", "we", "know", "the", "instance", "is", "in\n", "the", "cell,", "however", "InstanceNotFound", "means", "it's", "already\n", "deleted.\n", "After", "service", "version", "15", "deletion", "of", "the", "BuildRequest", "will", "halt", "the\n", "build", "process", "in", "the", "conductor.", "In", "that", "case", "run", "the", "rest", "of", "this\n", "method", "and", "consider", "the", "instance", "deleted.", "If", "we", "have", "not", "yet", "reached\n", "service", "version", "15", "then", "just", "return", "False", "so", "the", "rest", "of", "the", "delete\n", "process", "will", "proceed", "usually.\n", "If", "we've", "reached", "this", "block", "the", "successful", "deletion", "of", "the\n", "buildrequest", "indicates", "that", "the", "build", "process", "should", "be", "halted", "by\n", "the", "conductor.\n", "Since", "conductor", "has", "halted", "the", "build", "process", "no", "cleanup", "of", "the\n", "instance", "is", "necessary,", "but", "quotas", "must", "still", "be", "decremented.\n", "This", "is", "confusing", "but", "actually", "decrements", "quota.\n", "NOTE(alaski):", "Though", "the", "conductor", "halts", "the", "build", "process", "it\n", "does", "not", "currently", "delete", "the", "instance", "record.", "This", "is\n", "because", "in", "the", "near", "future", "the", "instance", "record", "will", "not", "be\n", "created", "if", "the", "buildrequest", "has", "been", "deleted", "here.", "For", "now", "we\n", "ensure", "the", "instance", "has", "been", "set", "to", "deleted", "at", "this", "point.\n", "Yes", "this", "directly", "contradicts", "the", "comment", "earlier", "in", "this\n", "method,", "but", "this", "is", "a", "temporary", "measure.\n", "Look", "up", "the", "instance", "because", "the", "current", "instance", "object", "was\n", "stashed", "on", "the", "buildrequest", "and", "therefore", "not", "complete", "enough\n", "to", "run", ".destroy().\n", "If", "instance", "is", "None", "it", "has", "already", "been", "deleted.\n", "If", "there", "is", "a", "BuildRequest", "then", "the", "instance", "may", "not", "have", "been\n", "written", "to", "a", "cell", "db", "yet.", "Delete", "the", "BuildRequest", "here,", "which\n", "will", "indicate", "that", "the", "Instance", "build", "should", "not", "proceed.\n", "This", "means", "that", "conductor", "has", "deleted", "the", "BuildRequest", "so", "the\n", "instance", "is", "now", "in", "a", "cell", "and", "the", "delete", "needs", "to", "proceed\n", "normally.\n", "If", "there", "is", "an", "instance.host", "the", "instance", "has", "been", "scheduled", "and\n", "sent", "to", "a", "cell/compute", "which", "means", "it", "was", "pulled", "from", "the", "cell", "db.\n", "Normal", "delete", "should", "be", "attempted.\n", "If", "instance.host", "was", "not", "set", "it's", "possible", "that", "the", "Instance\n", "object", "here", "was", "pulled", "from", "a", "BuildRequest", "object", "and", "is", "not\n", "fully", "populated.", "Notably", "it", "will", "be", "missing", "an", "'id'", "field", "which\n", "will", "prevent", "instance.destroy", "from", "functioning", "properly.", "A", "lookup\n", "is", "attempted", "which", "will", "either", "return", "a", "full", "Instance", "or", "None", "if\n", "not", "found.", "If", "not", "found", "then", "it's", "acceptable", "to", "skip", "the", "rest", "of\n", "the", "delete", "processing.\n", "Instance", "is", "already", "deleted.\n", "At", "these", "states", "an", "instance", "has", "a", "snapshot", "associate.\n", "NOTE(maoy):", "no", "expected_task_state", "needs", "to", "be", "set\n", "NOTE(comstud):", "If", "we", "delete", "the", "instance", "locally,", "we'll\n", "commit", "the", "reservations", "here.", "Otherwise,", "the", "manager", "side\n", "will", "commit", "or", "rollback", "the", "reservations", "based", "on", "success.\n", "NOTE(comstud):", "If", "we're", "in", "the", "API", "cell,", "we", "need", "to\n", "skip", "all", "remaining", "logic", "and", "just", "call", "the", "callback,\n", "which", "will", "cause", "a", "cast", "to", "the", "child", "cell.", "Also,\n", "commit", "reservations", "here", "early", "until", "we", "have", "a", "better\n", "way", "to", "deal", "with", "quotas", "with", "cells.\n", "NOTE(snikitin):", "If", "instance's", "vm_state", "is", "'soft-delete',\n", "we", "should", "not", "count", "reservations", "here,", "because", "instance\n", "in", "soft-delete", "vm_state", "have", "already", "had", "quotas\n", "decremented.", "More", "details:\n", "https://bugs.launchpad.net/nova/+bug/1333145\n", "If", "instance", "is", "in", "shelved_offloaded", "state", "or", "compute", "node\n", "isn't", "up,", "delete", "instance", "from", "db", "and", "clean", "bdms", "info", "and\n", "network", "info\n", "NOTE(comstud):", "Race", "condition.", "Instance", "already", "gone.\n", "If", "in", "the", "middle", "of", "a", "resize,", "use", "confirm_resize", "to\n", "ensure", "the", "original", "instance", "is", "cleaned", "up", "too\n", "Call", "since", "this", "can", "race", "with", "the", "terminate_instance.\n", "The", "resize", "is", "done", "but", "awaiting", "confirmation/reversion,\n", "so", "there", "are", "two", "cases:\n", "1.", "up-resize:", "here", "-instance['vcpus'/'memory_mb']", "match\n", "the", "quota", "usages", "accounted", "for", "this", "instance,\n", "so", "no", "further", "quota", "adjustment", "is", "needed\n", "2.", "down-resize:", "here", "-instance['vcpus'/'memory_mb']", "are\n", "shy", "by", "delta(old,", "new)", "from", "the", "quota", "usages", "accounted\n", "for", "this", "instance,", "so", "we", "must", "adjust\n", "NOTE(wangpan):", "if", "the", "instance", "is", "resizing,", "and", "the", "resources\n", "are", "updated", "to", "new", "instance", "type,", "we", "should", "use\n", "the", "old", "instance", "type", "to", "create", "reservation.\n", "see", "https://bugs.launchpad.net/nova/+bug/1099729", "for", "more", "details\n", "NOTE(mriedem):", "We", "didn't", "start", "stashing", "the", "connector", "in", "the\n", "bdm.connection_info", "until", "Mitaka", "so", "it", "might", "not", "be", "there", "on", "old\n", "attachments.", "Also,", "if", "the", "volume", "was", "attached", "when", "the", "instance\n", "was", "in", "shelved_offloaded", "state", "and", "it", "hasn't", "been", "unshelved", "yet\n", "we", "don't", "have", "the", "attachment/connection", "information", "either.\n", "Attempt", "to", "detach", "the", "volume.", "If", "there", "was", "no", "connection\n", "made", "in", "the", "first", "place", "this", "is", "just", "cleaning", "up", "the\n", "volume", "state", "in", "the", "Cinder", "database.\n", "NOTE(liusheng):", "In", "nova-network", "multi_host", "scenario,deleting\n", "network", "info", "of", "the", "instance", "may", "need", "instance['host']", "as\n", "destination", "host", "of", "RPC", "call.", "If", "instance", "in", "SHELVED_OFFLOADED\n", "state,", "instance['host']", "is", "None,", "here,", "use", "shelved_host", "as", "host\n", "to", "deallocate", "network", "info", "and", "reset", "instance['host']", "after", "that.\n", "Here", "we", "shouldn't", "use", "instance.save(),", "because", "this", "will", "mislead\n", "user", "who", "may", "think", "the", "instance's", "host", "has", "been", "changed,", "and\n", "actually,", "the", "instance.host", "is", "always", "None.\n", "cleanup", "volumes\n", "NOTE(maoy):", "we", "allow", "delete", "to", "be", "called", "no", "matter", "what", "vm_state", "says.\n", "Reserve", "quotas\n", "TODO(yamahata):", "injected_files", "isn't", "supported", "right", "now.\n", "It", "is", "used", "only", "for", "osapi.", "not", "for", "ec2", "api.\n", "availability_zone", "isn't", "used", "by", "run_instance.\n", "InstanceMapping", "should", "always", "be", "found", "generally.", "This", "exception\n", "may", "be", "raised", "if", "a", "deployment", "has", "partially", "migrated", "the", "nova-api\n", "services.\n", "Before", "service", "version", "15", "the", "BuildRequest", "is", "not", "cleaned", "up", "during\n", "a", "delete", "request", "so", "there", "is", "no", "reason", "to", "look", "it", "up", "here", "as", "we", "can't\n", "trust", "that", "it's", "not", "referencing", "a", "deleted", "instance.", "Also", "even", "if\n", "there", "is", "an", "instance", "mapping", "we", "don't", "need", "to", "honor", "it", "for", "older\n", "service", "versions.\n", "This", "means", "the", "instance", "has", "not", "been", "scheduled", "and", "put", "in\n", "a", "cell", "yet.", "For", "now", "it", "also", "may", "mean", "that", "the", "deployer\n", "has", "not", "created", "their", "cell(s)", "yet.\n", "Instance", "was", "mapped", "and", "the", "BuildRequest", "was", "deleted\n", "while", "fetching.", "Try", "again.\n", "If", "BuildRequest", "is", "not", "found", "but", "inst_map.cell_mapping\n", "does", "not", "point", "at", "a", "cell", "then", "cell", "migration", "has", "not\n", "happened", "yet.", "This", "will", "be", "a", "failure", "case", "later.\n", "TODO(alaski):", "Make", "this", "a", "failure", "case", "after", "we", "put", "in\n", "a", "block", "that", "requires", "migrating", "to", "cellsv2.\n", "This", "should", "not", "happen", "once", "a", "deployment", "has", "migrated", "to", "cellsv2.\n", "If", "it", "happens", "after", "that", "point", "we", "handle", "it", "gracefully", "for", "now\n", "but", "this", "will", "become", "an", "exception", "in", "the", "future.\n", "TODO(alaski):", "Once", "devstack", "is", "setting", "up", "cellsv2", "by", "default", "add\n", "a", "warning", "log", "message", "that", "this", "will", "become", "an", "exception", "in", "the\n", "future.", "The", "warning", "message", "will", "be", "conditional", "upon", "the\n", "migration", "having", "happened,", "which", "means", "a", "db", "lookup", "to", "check", "that.\n", "NOTE(ameade):", "we", "still", "need", "to", "support", "integer", "ids", "for", "ec2\n", "Fixups", "for", "the", "DB", "call\n", "Turn", "fixed_ip", "into", "a", "regexp", "match.", "Since", "'.'", "matches\n", "any", "character,", "we", "need", "to", "use", "regexp", "escaping", "for", "it.\n", "search_option", "to", "filter_name", "mapping.\n", "copy", "from", "search_opts,", "doing", "various", "remappings", "as", "necessary\n", "Do", "remappings.\n", "Values", "not", "in", "the", "filter_mapping", "table", "are", "copied", "as-is.\n", "If", "remapping", "is", "None,", "option", "is", "not", "copied\n", "If", "the", "remapping", "is", "a", "string,", "it", "is", "the", "filter_name", "to", "use\n", "Remaps", "are", "strings", "to", "translate", "to,", "or", "functions", "to", "call\n", "to", "do", "the", "translating", "as", "defined", "by", "the", "table", "above.\n", "We", "already", "know", "we", "can't", "match", "the", "filter,", "so\n", "return", "an", "empty", "list\n", "IP", "address", "filtering", "cannot", "be", "applied", "at", "the", "DB", "layer,", "remove", "any", "DB\n", "limit", "so", "that", "it", "can", "be", "applied", "after", "the", "IP", "filter.\n", "The", "ordering", "of", "instances", "will", "be\n", "[sorted", "instances", "with", "no", "host]", "+", "[sorted", "instances", "with", "host].\n", "This", "means", "BuildRequest", "and", "cell0", "instances", "first,", "then", "cell\n", "instances\n", "Only", "subtract", "from", "limit", "if", "it", "is", "not", "None\n", "We", "can", "ignore", "this", "since", "we", "need", "to", "look", "in", "the", "cell", "DB\n", "Only", "subtract", "from", "limit", "if", "it", "is", "not", "None\n", "There", "is", "only", "planned", "support", "for", "a", "single", "cell", "here.", "Multiple", "cell\n", "instance", "lists", "should", "be", "proxied", "to", "project", "Searchlight,", "or", "a", "similar\n", "alternative.\n", "TODO(alaski):", "Clean", "up", "the", "objects", "concatenation", "when", "List", "objects\n", "support", "it", "natively.\n", "NOTE(sbauza):", "Given", "we", "only", "persist", "the", "Instance", "object", "after", "we\n", "create", "the", "BuildRequest,", "we", "are", "sure", "that", "if", "the", "Instance", "object\n", "has", "an", "ID", "field", "set,", "then", "it", "was", "persisted", "in", "the", "right", "Cell", "DB.\n", "Instance", "has", "been", "scheduled", "and", "the", "BuildRequest", "has", "been", "deleted\n", "we", "can", "directly", "write", "the", "update", "down", "to", "the", "right", "cell.\n", "If", "inst_map.cell_mapping", "does", "not", "point", "at", "a", "cell", "then", "cell\n", "migration", "has", "not", "happened", "yet.\n", "TODO(alaski):", "Make", "this", "a", "failure", "case", "after", "we", "put", "in\n", "a", "block", "that", "requires", "migrating", "to", "cellsv2.\n", "Instance", "is", "not", "yet", "mapped", "to", "a", "cell,", "so", "we", "need", "to", "update\n", "BuildRequest", "instead\n", "TODO(sbauza):", "Fix", "the", "possible", "race", "conditions", "where", "BuildRequest\n", "could", "be", "deleted", "because", "of", "either", "a", "concurrent", "instance", "delete\n", "or", "because", "the", "scheduler", "just", "returned", "a", "destination", "right\n", "after", "we", "called", "the", "instance", "in", "the", "API.\n", "FIXME(sbauza):", "Here", "we", "are", "updating", "the", "current\n", "thread-related", "BuildRequest", "object.", "Given", "that", "another", "worker\n", "could", "have", "looking", "up", "at", "that", "BuildRequest", "in", "the", "API,", "it\n", "means", "that", "it", "could", "pass", "it", "down", "to", "the", "conductor", "without\n", "making", "sure", "that", "it's", "not", "updated,", "we", "could", "have", "some", "race\n", "condition", "where", "it", "would", "missing", "the", "updated", "fields,", "but\n", "that's", "something", "we", "could", "discuss", "once", "the", "instance", "record\n", "is", "persisted", "by", "the", "conductor.\n", "Instance", "was", "mapped", "and", "the", "BuildRequest", "was", "deleted\n", "while", "fetching", "(and", "possibly", "the", "instance", "could", "have", "been\n", "deleted", "as", "well).", "We", "need", "to", "lookup", "again", "the", "Instance", "object\n", "in", "order", "to", "correctly", "update", "it.\n", "TODO(sbauza):", "Figure", "out", "a", "good", "way", "to", "know", "the", "expected\n", "attributes", "by", "checking", "which", "fields", "are", "set", "or", "not.\n", "If", "inst_map.cell_mapping", "does", "not", "point", "at", "a", "cell", "then\n", "cell", "migration", "has", "not", "happened", "yet.\n", "TODO(alaski):", "Make", "this", "a", "failure", "case", "after", "we", "put", "in\n", "a", "block", "that", "requires", "migrating", "to", "cellsv2.\n", "NOTE(melwitt):", "We", "don't", "check", "instance", "lock", "for", "backup", "because", "lock", "is\n", "intended", "to", "prevent", "accidental", "change/delete", "of", "instances\n", "NOTE(comstud):", "Any", "changes", "to", "this", "method", "should", "also", "be", "made\n", "to", "the", "backup_instance()", "method", "in", "nova/cells/messaging.py\n", "NOTE(melwitt):", "We", "don't", "check", "instance", "lock", "for", "snapshot", "because", "lock", "is\n", "intended", "to", "prevent", "accidental", "change/delete", "of", "instances\n", "NOTE(comstud):", "Any", "changes", "to", "this", "method", "should", "also", "be", "made\n", "to", "the", "snapshot_instance()", "method", "in", "nova/cells/messaging.py\n", "Changing", "the", "instance", "task", "state", "to", "use", "in", "raising", "the\n", "InstanceInvalidException", "below\n", "if", "we're", "making", "a", "snapshot,", "omit", "the", "disk", "and", "container", "formats,\n", "since", "the", "image", "may", "have", "been", "converted", "to", "another", "format,", "and", "the\n", "original", "values", "won't", "be", "accurate.", "The", "driver", "will", "populate", "these\n", "with", "the", "correct", "values", "later,", "on", "image", "upload.\n", "Delete", "properties", "that", "are", "non-inheritable\n", "The", "properties", "in", "extra_properties", "have", "precedence\n", "NOTE(melwitt):", "We", "don't", "check", "instance", "lock", "for", "snapshot", "because", "lock", "is\n", "intended", "to", "prevent", "accidental", "change/delete", "of", "instances\n", "the", "new", "image", "is", "simply", "a", "bucket", "of", "properties", "(particularly", "the\n", "block", "device", "mapping,", "kernel", "and", "ramdisk", "IDs)", "with", "no", "image", "data,\n", "hence", "the", "zero", "size\n", "clean", "properties", "before", "filling\n", "create", "snapshot", "based", "on", "volume_id\n", "NOTE(yamahata):", "Should", "we", "wait", "for", "snapshot", "creation?\n", "Linux", "LVM", "snapshot", "creation", "completes", "in\n", "short", "time,", "it", "doesn't", "matter", "for", "now.\n", "FIXME(comstud):", "There's", "a", "race", "condition", "here", "in", "that", "if\n", "the", "system_metadata", "for", "this", "instance", "is", "updated", "after\n", "we", "do", "the", "previous", "save()", "and", "before", "we", "update..", "those\n", "other", "updates", "will", "be", "lost.", "Since", "this", "problem", "exists", "in\n", "a", "lot", "of", "other", "places,", "I", "think", "it", "should", "be", "addressed", "in\n", "a", "DB", "layer", "overhaul.\n", "Remove", "the", "old", "keys\n", "Add", "the", "new", "ones\n", "Since", "image", "might", "have", "changed,", "we", "may", "have", "new", "values", "for\n", "os_type,", "vm_mode,", "etc\n", "On", "a", "rebuild,", "since", "we're", "potentially", "changing", "images,", "we", "need", "to\n", "wipe", "out", "the", "old", "image", "properties", "that", "we're", "storing", "as", "instance\n", "system", "metadata...", "and", "copy", "in", "the", "properties", "for", "the", "new", "image.\n", "NOTE(sbauza):", "The", "migration", "script", "we", "provided", "in", "Newton", "should", "make\n", "sure", "that", "all", "our", "instances", "are", "currently", "migrated", "to", "have", "an\n", "attached", "RequestSpec", "object", "but", "let's", "consider", "that", "the", "operator", "only\n", "half", "migrated", "all", "their", "instances", "in", "the", "meantime.\n", "Some", "old", "instances", "can", "still", "have", "no", "RequestSpec", "object", "attached\n", "to", "them,", "we", "need", "to", "support", "the", "old", "way\n", "reverse", "quota", "reservation", "for", "increased", "resource", "usage\n", "With", "cells,", "the", "best", "we", "can", "do", "right", "now", "is", "commit", "the", "reservations\n", "immediately...\n", "reserve", "quota", "only", "for", "any", "decrease", "in", "resource", "usage\n", "With", "cells,", "the", "best", "we", "can", "do", "right", "now", "is", "commit", "the", "reservations\n", "immediately...\n", "With", "cells,", "the", "best", "we", "can", "do", "right", "now", "is", "commit", "the\n", "reservations", "immediately...\n", "NOTE(johannes/comstud):", "The", "API", "cell", "needs", "a", "local", "migration\n", "record", "for", "later", "resize_confirm", "and", "resize_reverts", "to", "deal\n", "with", "quotas.", "We", "don't", "need", "source", "and/or", "destination\n", "information,", "just", "the", "old", "and", "new", "flavors.", "Status", "is", "set", "to\n", "'finished'", "since", "nothing", "else", "will", "update", "the", "status", "along\n", "the", "way.\n", "If", "flavor_id", "is", "not", "provided,", "only", "migrate", "the", "instance.\n", "NOTE(sirp):", "We", "don't", "want", "to", "force", "a", "customer", "to", "change", "their", "flavor\n", "when", "Ops", "is", "migrating", "off", "of", "a", "failed", "host.\n", "ensure", "there", "is", "sufficient", "headroom", "for", "upsizes\n", "Commit", "reservations", "early", "and", "create", "migration", "record.\n", "NOTE(sbauza):", "The", "migration", "script", "we", "provided", "in", "Newton", "should", "make\n", "sure", "that", "all", "our", "instances", "are", "currently", "migrated", "to", "have", "an\n", "attached", "RequestSpec", "object", "but", "let's", "consider", "that", "the", "operator", "only\n", "half", "migrated", "all", "their", "instances", "in", "the", "meantime.\n", "Some", "old", "instances", "can", "still", "have", "no", "RequestSpec", "object", "attached\n", "to", "them,", "we", "need", "to", "support", "the", "old", "way\n", "Some", "old", "instances", "can", "still", "have", "no", "RequestSpec", "object", "attached\n", "to", "them,", "we", "need", "to", "support", "the", "old", "way\n", "Only", "update", "the", "lock", "if", "we", "are", "an", "admin", "(non-owner)\n", "when", "the", "creation", "is", "done", "locally", "we", "can't", "specify", "the", "device\n", "name", "as", "we", "do", "not", "have", "a", "way", "to", "check", "that", "the", "name", "specified", "is\n", "a", "valid", "one.\n", "We", "leave", "the", "setting", "of", "that", "value", "when", "the", "actual", "attach\n", "happens", "on", "the", "compute", "manager\n", "NOTE(vish):", "This", "is", "done", "on", "the", "compute", "host", "because", "we", "want\n", "to", "avoid", "a", "race", "where", "two", "devices", "are", "requested", "at\n", "the", "same", "time.", "When", "db", "access", "is", "removed", "from\n", "compute,", "the", "bdm", "will", "be", "created", "here", "and", "we", "will\n", "have", "to", "make", "sure", "that", "they", "are", "assigned", "atomically.\n", "NOTE(vish):", "Fail", "fast", "if", "the", "device", "is", "not", "going", "to", "pass.", "This\n", "will", "need", "to", "be", "removed", "along", "with", "the", "test", "if", "we\n", "change", "the", "logic", "in", "the", "manager", "for", "what", "constitutes\n", "a", "valid", "device.\n", "The", "caller", "likely", "got", "the", "instance", "from", "volume['attachments']\n", "in", "the", "first", "place,", "but", "let's", "sanity", "check.\n", "Some", "old", "instances", "can", "still", "have", "no", "RequestSpec", "object", "attached\n", "to", "them,", "we", "need", "to", "support", "the", "old", "way\n", "NOTE(sbauza):", "Force", "is", "a", "boolean", "by", "the", "new", "related", "API", "version\n", "NOTE(sbauza):", "Unset", "the", "host", "to", "make", "sure", "we", "call", "the", "scheduler\n", "FIXME(sbauza):", "Since", "only", "Ironic", "driver", "uses", "more", "than", "one\n", "compute", "per", "service", "but", "doesn't", "support", "evacuations,\n", "let's", "provide", "the", "first", "one.\n", "TODO(sbauza):", "Hydrate", "a", "fake", "spec", "for", "old", "instances", "not", "yet\n", "having", "a", "request", "spec", "attached", "to", "them", "(particularly", "true", "for\n", "cells", "v1).", "For", "the", "moment,", "let's", "keep", "the", "same", "behaviour", "for\n", "all", "the", "instances", "but", "provide", "the", "destination", "only", "if", "a", "spec\n", "is", "found.\n", "NOTE(pkoniszewski):", "It", "is", "possible", "that", "MessagingTimeout\n", "occurs,", "but", "LM", "will", "still", "be", "in", "progress,", "so", "write\n", "instance", "fault", "to", "database\n", "NOTE(pkoniszewski):", "Get", "migration", "object", "to", "check", "if", "there", "is", "ongoing\n", "live", "migration", "for", "particular", "instance.", "Also", "pass", "migration", "id", "to\n", "compute", "to", "double", "check", "and", "avoid", "possible", "race", "condition.\n", "NOTE(danms):", "Create", "this", "as", "a", "tombstone", "for", "the", "source", "compute\n", "to", "find", "and", "cleanup.", "No", "need", "to", "pass", "it", "anywhere", "else.\n", "Some", "old", "instances", "can", "still", "have", "no", "RequestSpec", "object", "attached\n", "to", "them,", "we", "need", "to", "support", "the", "old", "way\n", "NOTE(sbauza):", "Force", "is", "a", "boolean", "by", "the", "new", "related", "API", "version\n", "NOTE(sbauza):", "Unset", "the", "host", "to", "make", "sure", "we", "call", "the", "scheduler\n", "FIXME(sbauza):", "Since", "only", "Ironic", "driver", "uses", "more", "than", "one\n", "compute", "per", "service", "but", "doesn't", "support", "evacuations,\n", "let's", "provide", "the", "first", "one.\n", "TODO(sbauza):", "Hydrate", "a", "fake", "spec", "for", "old", "instances", "not", "yet\n", "having", "a", "request", "spec", "attached", "to", "them", "(particularly", "true", "for\n", "cells", "v1).", "For", "the", "moment,", "let's", "keep", "the", "same", "behaviour", "for\n", "all", "the", "instances", "but", "provide", "the", "destination", "only", "if", "a", "spec\n", "is", "found.\n", "NOTE(danms):", "The", "external", "API", "consumer", "just", "provides", "events,\n", "but", "doesn't", "know", "where", "they", "go.", "We", "need", "to", "collate", "lists\n", "by", "the", "host", "the", "affected", "instance", "is", "on", "and", "dispatch", "them\n", "according", "to", "host\n", "TODO(salv-orlando):", "Handle", "exceptions", "raised", "by", "the", "rpc", "api", "layer\n", "in", "order", "to", "ensure", "that", "a", "failure", "in", "processing", "events", "on", "a", "host\n", "will", "not", "prevent", "processing", "events", "on", "other", "hosts\n", "All", "filters", "matched.\n", "If", "updated", "values", "include", "availability_zones,", "then", "the", "cache\n", "which", "stored", "availability_zones", "and", "host", "need", "to", "be", "reset\n", "If", "updated", "metadata", "include", "availability_zones,", "then", "the", "cache\n", "which", "stored", "availability_zones", "and", "host", "need", "to", "be", "reset\n", "Update", "the", "availability_zone", "cache", "to", "avoid", "getting", "wrong\n", "availability_zone", "in", "cache", "retention", "time", "when", "add/remove\n", "host", "to/from", "aggregate.\n", "validates", "the", "host;", "ComputeHostNotFound", "is", "raised", "if", "invalid\n", "NOTE(jogo):", "Send", "message", "to", "host", "to", "support", "resource", "pools\n", "validates", "the", "host;", "ComputeHostNotFound", "is", "raised", "if", "invalid\n", "The", "nova", "security", "group", "api", "does", "not", "use", "a", "uuid", "for", "the", "id.\n", "Some", "validation", "to", "ensure", "that", "values", "match", "API", "spec.\n", "-", "Alphanumeric", "characters,", "spaces,", "dashes,", "and", "underscores.\n", "TODO(Daviey):", "LP:", "#813685", "extend", "beyond", "group_name", "checking,", "and\n", "probably", "create", "a", "param", "validator", "that", "can", "be", "used", "elsewhere.\n", "Commit", "the", "reservation\n", "TODO(eglynn):", "support", "a", "wider", "set", "of", "search", "options", "than", "just\n", "all_tenants,", "at", "least", "include", "the", "standard", "filters", "defined", "for\n", "the", "EC2", "DescribeSecurityGroups", "API", "for", "the", "non-admin", "case", "also\n", "Commit", "the", "reservations\n", "check", "if", "the", "security", "group", "is", "associated", "with", "the", "server\n", "check", "if", "the", "security", "group", "is", "associated", "with", "the", "server\n", "NOTE(vish):", "we", "removed", "some", "rules,", "so", "refresh"], "/Users/mehranhassani/repos/nova/nova/safe_utils.py": ["None", "_get_wrapped_function", "closure", "deeper_func", "func", "function", "hasattr", "Utilities", "and", "helper", "functions", "that", "won't", "produce", "circular", "imports.\nGet", "the", "method", "at", "the", "bottom", "of", "a", "stack", "of", "decorators."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_ram.py": ["None", "RamWeigherTestCase", "fakes", "host", "host_attr", "host_state", "host_values", "hostinfo_list", "hosts", "list", "node", "ram", "self", "super", "test", "values", "weighed_host", "weight_properties", "weights", "host1:", "free_ram_mb=512\n", "host2:", "free_ram_mb=1024\n", "host3:", "free_ram_mb=3072\n", "host4:", "free_ram_mb=8192\n", "so,", "host4", "should", "win:\n", "host1:", "free_ram_mb=512\n", "host2:", "free_ram_mb=1024\n", "host3:", "free_ram_mb=3072\n", "host4:", "free_ram_mb=8192\n", "We", "do", "not", "know", "the", "host,", "all", "have", "same", "weight.\n", "host1:", "free_ram_mb=512\n", "host2:", "free_ram_mb=1024\n", "host3:", "free_ram_mb=3072\n", "host4:", "free_ram_mb=8192\n", "so,", "host4", "should", "win:\n", "host1:", "free_ram_mb=512\n", "host2:", "free_ram_mb=1024\n", "host3:", "free_ram_mb=3072\n", "host4:", "free_ram_mb=8192\n", "negativehost:", "free_ram_mb=-512\n", "so,", "host4", "should", "win\n", "and", "negativehost", "should", "lose"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_loadables/fake_loadable1.py": ["FakeLoadableSubClass1", "FakeLoadableSubClass2", "FakeLoadableSubClass4", "_FakeLoadableSubClass3", "fake_loadables", "object", "Classes", "beginning", "with", "'_'", "will", "be", "ignored.\nNot", "a", "correct", "subclass.1"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/all_hosts_filter.py": ["True", "filters", "host_state", "run_filter_once_per_request", "self", "spec_obj", "NOOP", "host", "filter.", "Returns", "all", "hosts.", "list", "of", "hosts", "doesn't", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_nfs.py": ["False", "LibvirtNFSVolumeDriverTestCase", "None", "conf", "connection_info", "device_path", "expected_commands", "export_mnt_base", "export_string", "file_path", "libvirt_driver", "libvirt_utils", "mock", "mock_LOG_debug", "mock_LOG_exception", "mock_is_mounted", "mock_utils_exe", "nfs", "options", "os", "processutils", "self", "super", "test_volume", "tree", "utils", "Tests", "the", "libvirt", "NFS", "volume", "driver."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/compute_capabilities_filter.py": ["AttributeError", "False", "LOG", "None", "True", "ValueError", "__name__", "cap", "dict", "e", "extra_specs_ops", "filters", "getattr", "has_attr", "hasattr", "host_state", "index", "instance_type", "isinstance", "jsonutils", "key", "len", "logging", "range", "req", "run_filter_once_per_request", "scope", "self", "six", "spec_obj", "stats", "str", "HostFilter", "hard-coded", "to", "work", "with", "InstanceType", "records.\nReturn", "a", "list", "of", "hosts", "that", "can", "create", "instance_type.", "Instance", "type", "and", "host", "capabilities", "do", "not", "change", "within", "a", "request\n", "If", "can't", "find,", "check", "stats", "dict\n", "Either", "not", "scope", "format,", "or", "in", "capabilities", "scope\n", "If", "key", "does", "not", "have", "a", "namespace,", "the", "scope's", "size", "is", "1,", "check\n", "whether", "host_state", "contains", "the", "key", "as", "an", "attribute.", "If", "not,\n", "ignore", "it.", "If", "it", "contains,", "deal", "with", "it", "in", "the", "same", "way", "as\n", "'capabilities:key'.", "This", "is", "for", "backward-compatible.\n", "If", "the", "key", "has", "a", "namespace,", "the", "scope's", "size", "will", "be", "bigger", "than\n", "1,", "check", "that", "whether", "the", "namespace", "is", "'capabilities'.", "If", "not,\n", "ignore", "it."], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_quota_model.py": ["False", "None", "True", "added", "api_models", "c", "c_a", "c_b", "column_list", "columns_new", "columns_old", "intersect", "m", "m_a", "m_b", "model", "models", "removed", "self", "set", "test"], "/Users/mehranhassani/repos/nova/nova/consoleauth/rpcapi.py": ["CONF", "ConsoleAuthAPI", "VERSION_ALIASES", "access_url", "cctxt", "console_type", "ctxt", "dict", "host", "instance_uuid", "internal_access_path", "messaging", "msg_args", "nova", "object", "port", "rpc", "self", "super", "target", "token", "version", "version_cap", "The", "remote", "side", "doesn't", "return", "anything,", "but", "we", "want", "to", "block\n", "until", "it", "completes.'"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_volumeutils.py": ["None", "connector", "fake_initiator", "initiator", "mock", "result", "self", "test", "volumeutils", "Start", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/test_bandwidth.py": ["BandwidthTestCase", "devmap", "expect_devmap", "fake_data", "mock_read_proc_net", "plugin_test", "self", "super", "Prevent", "any", "logging", "to", "syslog"], "/Users/mehranhassani/repos/nova/nova/image/glance.py": ["CONF", "Exception", "False", "GlanceClientWrapper", "GlanceImageServiceV2", "IMAGE_ATTRIBUTES", "KeyError", "LOG", "None", "True", "ValueError", "_CONVERT_PROPS", "_LE", "_LI", "_LW", "__name__", "_convert", "_convert_from_string", "_convert_timestamps_to_datetimes", "_convert_to_string", "_convert_to_v2", "_endpoint_from_image_ref", "_extract_attributes_v2", "_extract_query_params", "_extract_query_params_v2", "_glanceclient_from_endpoint", "_images", "_is_image_available", "_is_image_public", "_json_dumps", "_json_loads", "_params", "_remove_read_only", "_reraise_translated_exception", "_reraise_translated_image_exception", "_translate_from_glance", "_translate_image_exception", "_translate_plain_exception", "_translate_to_glance", "accepted_params", "all_props", "api_server", "api_servers", "args", "attempt", "attr", "chunk", "client", "close_file", "context", "controller", "copy", "cryptography", "data", "disk_format_schema", "download_modules", "dst_path", "du", "e", "endpoint", "entry", "ex", "exc_trace", "exc_type", "exc_value", "exception", "excutils", "extra", "fields", "filter_", "filters", "force_activate", "generate_glance_url", "generate_identity_headers", "get_api_servers", "get_default_image_service", "get_remote_image_service", "getattr", "glance_client", "glanceclient", "greenthread", "hasattr", "image", "image_chunks", "image_href", "image_id", "image_meta", "image_meta_dict", "image_ref", "image_schema", "image_service", "image_xfers", "images", "img_sig_cert_uuid", "img_sig_hash_method", "img_sig_key_type", "img_signature", "include_locations", "include_locations_attrs", "inspect", "int", "is_public", "isinstance", "itertools", "jsonutils", "kwargs", "list", "loc_meta", "loc_url", "location", "locations", "logging", "metadata", "method", "mod", "name", "new_exc", "new_filters", "next", "nova", "num_attempts", "o", "object", "objects", "omit_attrs", "open", "output", "param", "params", "parts", "preferred_disk_formats", "preferred_format", "prop", "prop_name", "prop_value", "properties", "props_to_update", "purge_props", "queued", "queued_exclude_attrs", "random", "range", "raw_schema", "recv_service_image_meta", "remove_props", "result", "retry_excs", "schema", "schemas", "scheme", "self", "sent_service_image_meta", "set", "show_deleted", "signature_utils", "six", "sslutils", "status", "str", "stream", "supported_disk_formats", "sys", "time", "timeutils", "updated_at", "urlparse", "user_id", "value", "verifier", "version", "xfer_mod", "Implementation", "of", "an", "image", "service", "that", "uses", "Glance", "as", "the", "backend.\nReturn", "a", "random", "glance", "url", "from", "the", "api", "servers", "we", "know", "about.\nGenerate", "an", "image", "URL", "from", "an", "image_ref.\nInstantiate", "a", "new", "glanceclient.Client", "object.\nGlance", "client", "wrapper", "class", "that", "implements", "retries.\nCreate", "a", "client", "that", "we'll", "use", "for", "every", "call.\nCreate", "a", "client", "that", "will", "be", "used", "for", "one", "call.\nProvides", "storage", "and", "retrieval", "of", "disk", "image", "objects", "within", "Glance.\nCalls", "out", "to", "Glance", "for", "a", "list", "of", "detailed", "image", "information.\nCalls", "out", "to", "Glance", "for", "data", "and", "writes", "data.\nStore", "the", "image", "data", "and", "return", "the", "new", "image", "object.\nModify", "the", "given", "image", "with", "the", "new", "data.\nProvides", "storage", "and", "retrieval", "of", "disk", "image", "objects", "within", "Glance.\nCalls", "out", "to", "Glance", "for", "a", "list", "of", "detailed", "image", "information.\nCalls", "out", "to", "Glance", "for", "data", "and", "writes", "data.\nStore", "the", "image", "data", "and", "return", "the", "new", "image", "object.\nModify", "the", "given", "image", "with", "the", "new", "data.\nReturns", "image", "with", "timestamp", "fields", "converted", "to", "datetime", "objects.\nTransform", "the", "exception", "for", "the", "image", "but", "keep", "its", "traceback", "intact.\nTransform", "the", "exception", "but", "keep", "its", "traceback", "intact.", "the", "endpoint", "is", "everything", "in", "the", "url", "except", "the", "last", "3", "bits\n", "which", "are", "version,", "'images',", "and", "image_id\n", "NOTE(sdague):", "even", "if", "we", "aren't", "using", "keystone,", "it", "doesn't\n", "hurt", "to", "send", "these", "headers.\n", "https", "specific", "params\n", "NOTE(sdague):", "remove", "in", "O.\n", "Convert", "generator", "results", "to", "a", "list,", "so", "that", "we", "can\n", "catch", "any", "potential", "exceptions", "now", "and", "retry", "the", "call.\n", "NOTE(jbresnah)", "build", "the", "table", "of", "download", "handlers", "at", "the", "beginning\n", "so", "that", "operators", "can", "catch", "errors", "at", "load", "time", "rather", "than", "whenever\n", "a", "user", "attempts", "to", "use", "a", "module.", "Note", "this", "cannot", "be", "done", "in", "glance\n", "space", "when", "this", "python", "module", "is", "loaded", "because", "the", "download", "module\n", "may", "require", "configuration", "options", "to", "be", "parsed.\n", "Retrieve", "properties", "for", "verification", "of", "Glance", "image", "signature\n", "Perform", "image", "signature", "verification\n", "NOTE(bcwaldon):", "id", "is", "not", "an", "editable", "field,", "but", "it", "is", "likely", "to", "be\n", "passed", "in", "by", "calling", "code.", "Let's", "be", "nice", "and", "ignore", "it.\n", "NOTE(jbresnah)", "build", "the", "table", "of", "download", "handlers", "at", "the", "beginning\n", "so", "that", "operators", "can", "catch", "errors", "at", "load", "time", "rather", "than", "whenever\n", "a", "user", "attempts", "to", "use", "a", "module.", "Note", "this", "cannot", "be", "done", "in", "glance\n", "space", "when", "this", "python", "module", "is", "loaded", "because", "the", "download", "module\n", "may", "require", "configuration", "options", "to", "be", "parsed.\n", "Retrieve", "properties", "for", "verification", "of", "Glance", "image", "signature\n", "Perform", "image", "signature", "verification\n", "Here", "we", "workaround", "the", "situation", "when", "user", "wants", "to", "activate", "an\n", "empty", "image", "right", "after", "the", "creation.", "In", "Glance", "v1", "api", "(and\n", "therefore", "in", "Nova)", "it", "is", "enough", "to", "set", "'size", "=", "0'.", "v2", "api\n", "doesn't", "allow", "this", "hack", "-", "we", "have", "to", "send", "an", "upload", "request", "with\n", "empty", "data.\n", "'show_multiple_locations'", "must", "be", "enabled", "in", "glance", "api", "conf", "file.\n", "These", "preferred", "disk", "formats", "are", "in", "order:\n", "1.", "we", "want", "qcow2", "if", "possible", "(at", "least", "for", "backward", "compat)\n", "2.", "vhd", "for", "xenapi", "and", "hyperv\n", "3.", "vmdk", "for", "vmware\n", "4.", "raw", "should", "be", "universally", "accepted\n", "Get", "the", "image", "schema", "-", "note", "we", "don't", "cache", "this", "value", "since", "it", "could\n", "change", "under", "us.", "This", "looks", "a", "bit", "funky,", "but", "what", "it's", "basically\n", "doing", "is", "calling", "glanceclient.v2.Client.schemas.get('image').\n", "get", "the", "disk_format", "schema", "property", "from", "the", "raw", "schema\n", "try", "a", "priority", "ordered", "list\n", "alright,", "let's", "just", "return", "whatever", "is", "available\n", "Glance", "v1", "allows", "image", "activation", "without", "setting", "disk", "and\n", "container", "formats,", "v2", "doesn't.", "It", "leads", "to", "the", "dirtiest", "workaround\n", "where", "we", "have", "to", "hardcode", "this", "parameters.\n", "Sending", "image", "location", "in", "a", "separate", "request.\n", "If", "we", "have", "some", "data", "we", "have", "to", "send", "it", "in", "separate", "request", "and\n", "update", "the", "image", "then.\n", "NOTE(bcwaldon):", "id", "is", "not", "an", "editable", "field,", "but", "it", "is", "likely", "to", "be\n", "passed", "in", "by", "calling", "code.", "Let's", "be", "nice", "and", "ignore", "it.\n", "In", "Glance", "v2", "we", "have", "to", "explicitly", "set", "prop", "names\n", "we", "want", "to", "remove.\n", "Sending", "image", "location", "in", "a", "separate", "request.\n", "If", "we", "have", "some", "data", "we", "have", "to", "send", "it", "in", "separate", "request", "and\n", "update", "the", "image", "then.\n", "ensure", "filters", "is", "a", "dict\n", "NOTE(vish):", "don't", "filter", "out", "private", "images\n", "ensure", "filters", "is", "a", "dict\n", "NOTE(vish):", "don't", "filter", "out", "private", "images\n", "adopt", "filters", "to", "be", "accepted", "by", "glance", "v2", "api\n", "remove", "'property-'", "prefix", "from", "filters", "by", "custom", "properties\n", "convert", "old", "'changes-since'", "into", "new", "'updated_at'", "filter\n", "convert", "old", "'is_public'", "flag", "into", "'visibility'", "filter\n", "omit", "the", "filter", "if", "is_public", "is", "None\n", "The", "presence", "of", "an", "auth", "token", "implies", "this", "is", "an", "authenticated\n", "request", "and", "we", "need", "not", "handle", "the", "noauth", "use-case.\n", "NOTE(jaypipes)", "V2", "Glance", "API", "replaced", "the", "is_public", "attribute\n", "with", "a", "visibility", "attribute.", "We", "do", "this", "here", "to", "prevent", "the\n", "glanceclient", "for", "a", "V2", "image", "model", "from", "throwing", "an\n", "exception", "from", "warlock", "when", "trying", "to", "access", "an", "is_public\n", "attribute.\n", "if", "allow_additional_image_properties", "is", "disabled", "we", "can't\n", "define", "kernel_id", "and", "ramdisk_id", "as", "None,", "so", "we", "have", "to", "omit\n", "these", "properties", "if", "they", "are", "not", "set.\n", "in", "glance", "only", "string", "and", "None", "property", "values", "are", "allowed,\n", "v1", "client", "accepts", "any", "values", "and", "converts", "them", "to", "string,\n", "v2", "doesn't", "-", "so", "we", "have", "to", "take", "care", "of", "it.\n", "NOTE(bcwaldon):", "used", "to", "store", "non-string", "data", "in", "glance", "metadata\n", "TODO(mfedosin):", "Remove", "this", "function", "once", "we", "move", "to", "glance", "V2\n", "completely.\n", "NOTE(hdd):", "If", "a", "key", "is", "not", "found,", "base.Resource.__getattr__()", "may", "perform\n", "a", "get(),", "resulting", "in", "a", "useless", "request", "back", "to", "glance.", "This", "list", "is\n", "therefore", "sorted,", "with", "dependent", "attributes", "as", "the", "end\n", "'deleted_at'", "depends", "on", "'deleted'\n", "'checksum'", "depends", "on", "'status'", "==", "'active'\n", "image", "may", "not", "have", "'name'", "attr\n", "NOTE(liusheng):", "queued", "image", "may", "not", "have", "these", "attributes", "and", "'name'\n", "NOTE(mriedem):", "Only", "get", "location", "attrs", "if", "including", "locations.\n", "NOTE(mdorman):", "'size'", "attribute", "must", "not", "be", "'None',", "so", "use", "0", "instead\n", "NOTE(mriedem):", "A", "snapshot", "image", "may", "not", "have", "the", "size", "attribute\n", "set", "so", "default", "to", "0.\n", "NOTE(xarses):", "Anything", "that", "is", "caught", "with", "the", "default", "value\n", "will", "result", "in", "an", "additional", "lookup", "to", "glance", "for", "said", "attr.\n", "Notable", "attributes", "that", "could", "have", "this", "issue:\n", "disk_format,", "container_format,", "name,", "deleted,", "checksum\n", "NOTE(bcwaldon):", "If", "image_href", "doesn't", "look", "like", "a", "URI,", "assume", "its", "a\n", "standalone", "image", "ID"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_virt_drivers.py": ["AbstractDriverTestCase", "Exception", "FakeConnectionTestCase", "False", "LOG", "LibvirtConnTestCase", "None", "NotImplementedError", "REQUIRES_LOCKING", "True", "TypeError", "ValueError", "_", "_FakeDriverBackendTestCase", "_VirtDriverTestCase", "__name__", "_fake_exit", "_instance", "_path", "_self", "a", "any", "args", "available_resource", "badevent", "bandwidth", "base64", "bdm", "block_device_info", "callback", "catch_notimplementederror", "cls", "cm", "connection_info", "console_output", "console_pool", "context", "ctype", "deque", "destination", "device", "domain_xml", "domains", "driver", "driver_block_device", "e", "error", "event", "event1", "event2", "event3", "event4", "exception", "f", "fake", "fake_block_device", "fake_context", "fake_delete_instance_files", "fake_detach_device_with_retry", "fake_extend", "fake_get_instance_disk_info", "fake_image", "fake_imagebackend", "fake_instance", "fake_libvirt_utils", "fake_make_drive", "fake_migrate", "fake_os_brick_connector", "fake_wait", "fakelibvirt", "fixtures", "flags", "flavor_ref", "frame", "get_device_conf_func", "got_events", "handler", "hardware", "host_cpu_status", "host_ip", "host_status", "hypervisor_type", "image", "image_meta", "imagebackend", "img_ref", "importutils", "inc_sleep_time", "info", "instance", "instance_ref", "instances", "int", "ip", "jsonutils", "key", "keys", "kw", "kwargs", "len", "libvirt", "live", "logging", "manager", "max_retry_count", "max_sleep_time", "migrate_data", "migrate_uri", "migration", "mks_console", "mock", "mock_image", "netaddr", "network_info", "new_drivers", "nova", "nova_fixtures", "num_instances", "obj", "object", "objects", "os_vif", "params", "persistent", "rdp_console", "reboot_type", "result", "self", "serial_console", "service_mock", "six", "size", "spice_console", "started_event", "stats", "storage_ip", "super", "supported_instances", "sys", "test", "test_utils", "timeutils", "traceback", "type", "unplug_vifs_mock", "ver", "virtevent", "vnc_console", "want_events", "wrapped_func", "x", "xml", "Tests", "that", "we", "do", "not", "fail", "on", "translated", "unicode", "events.", "So", "that", "the", "_supports_direct_io", "does", "the", "test", "based\n", "on", "the", "current", "working", "directory,", "instead", "of", "the\n", "default", "instances_path", "which", "doesn't", "exist\n", "Put", "fakelibvirt", "in", "place\n", "Still", "calling", "detach,", "but", "instead", "of", "returning", "function\n", "that", "actually", "checks", "if", "device", "is", "gone", "from", "XML,", "just", "continue\n", "because", "XML", "never", "gets", "updated", "in", "these", "tests\n", "We", "can't", "actually", "make", "a", "config", "drive", "v2", "because", "ensure_tree", "has\n", "been", "faked", "out\n", "Restore", "libvirt\n", "TODO(sdague):", "it", "would", "be", "nice", "to", "do", "this", "in", "a", "way", "that", "only\n", "the", "relevant", "backends", "where", "replaced", "for", "tests,", "though", "this\n", "should", "not", "harm", "anything", "by", "doing", "it", "for", "all", "backends\n", "if", "your", "driver", "supports", "being", "tested", "in", "a", "fake", "way,", "it", "can", "go", "here\n", "NOTE(sdague)", "the", "try", "block", "is", "to", "make", "it", "easier", "to", "debug", "a\n", "failure", "by", "knowing", "which", "driver", "broke\n", "NOTE(dripton):", "resolve_driver_format", "does", "some", "file", "reading", "and\n", "writing", "and", "chowning", "that", "complicate", "testing", "too", "much", "by", "requiring\n", "using", "real", "directories", "with", "proper", "permissions.", "Just", "stub", "it", "out\n", "here;", "we", "test", "it", "in", "test_imagebackend.py\n", "Will", "raise", "an", "exception", "if", "it's", "not", "a", "valid", "IP", "at", "all\n", "For", "now,", "assume", "IPv4.\n", "FIXME:", "Create", "security", "group", "and", "add", "the", "instance", "to", "it\n", "FIXME:", "Create", "security", "group", "and", "add", "the", "instance", "to", "it\n", "Passing", "in", "something", "which", "does", "not", "inherit\n", "from", "virtevent.Event\n", "Check", "that", "if", "a", "callback", "raises", "an", "exception,\n", "it", "does", "not", "propagate", "back", "out", "of", "the\n", "'emit_event'", "call\n", "This", "should", "be", "implemented", "by", "any", "driver", "that", "supports", "live", "migrate.\n", "NOTE(jroll)", "self._get_running_instance", "calls", "spawn(),", "so", "we", "can't\n", "use", "it", "to", "test", "this", "method.", "Make", "a", "simple", "object", "instead;", "we", "just\n", "need", "instance.host.\n", "supported_instances", "could", "be", "JSON", "wrapped\n", "Point", "_VirtDriverTestCase", "at", "the", "right", "module\n", "This", "is", "needed", "for", "the", "live", "migration", "tests", "which", "spawn", "off", "the\n", "operation", "for", "monitoring.\n", "When", "using", "CONF.use_neutron=True", "and", "destroying", "an", "instance", "os-vif\n", "will", "try", "to", "execute", "some", "commands", "which", "hangs", "tests", "so", "let's", "just\n", "stub", "out", "the", "unplug", "call", "to", "os-vif", "since", "we", "don't", "care", "about", "it.\n", "there", "is", "lack", "of", "fake", "stuff", "to", "execute", "this", "method.", "so", "pass.\n", "Previous", "status", "of", "the", "service:", "disabled:", "False\n", "Previous", "status", "of", "the", "service:", "disabled:", "True,", "'AUTO:", "ERROR'\n", "Previous", "status", "of", "the", "service:", "disabled:", "True,", "'Manually", "disabled'\n", "Previous", "status", "of", "the", "service:", "disabled:", "True,", "'Manually", "disabled'"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/image_props_filter.py": ["False", "LOG", "True", "__name__", "_compare_product_version", "_compare_props", "any", "checked_img_props", "fields", "filters", "host_state", "hyper_ver_str", "hyper_version", "hypervisor_version", "i", "image_props", "img_arch", "img_h_type", "img_prop_predicate", "img_vm_mode", "logging", "other_props", "props", "run_filter_once_per_request", "self", "spec_obj", "supp_inst", "supp_instances", "version_required", "versionpredicate", "versionutils", "Image", "Properties", "and", "Compute", "Capabilities", "do", "not", "change", "within\n", "a", "request\n", "Supported", "if", "no", "compute-related", "instance", "properties", "are", "specified\n", "Not", "supported", "if", "an", "instance", "property", "is", "requested", "but", "nothing\n", "advertised", "by", "the", "host."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_tag.py": ["None", "RESOURCE_ID", "TAG_NAME1", "TAG_NAME2", "_TestTagList", "_TestTagObject", "_get_tag", "context", "fake", "fake_tag1", "fake_tag2", "fake_tag_list", "get_by_inst", "instance_tag_exists", "len", "mock", "obj", "object", "resource_id", "self", "t", "tag", "tag_add", "tag_delete", "tag_delete_all", "tag_list", "tag_list_obj", "tag_name", "tag_obj", "tag_set", "test_objects", "zip"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/321_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_disk.py": ["DiskWeigherTestCase", "None", "disk", "fakes", "host", "host_attr", "host_state", "host_values", "hostinfo_list", "hosts", "list", "node", "self", "super", "test", "values", "weighed_host", "weight_properties", "weights", "host1:", "free_disk_mb=5120\n", "host2:", "free_disk_mb=10240\n", "host3:", "free_disk_mb=30720\n", "host4:", "free_disk_mb=81920\n", "so,", "host4", "should", "win:\n", "host1:", "free_disk_mb=5120\n", "host2:", "free_disk_mb=10240\n", "host3:", "free_disk_mb=30720\n", "host4:", "free_disk_mb=81920\n", "We", "do", "not", "know", "the", "host,", "all", "have", "same", "weight.\n", "host1:", "free_disk_mb=5120\n", "host2:", "free_disk_mb=10240\n", "host3:", "free_disk_mb=30720\n", "host4:", "free_disk_mb=81920\n", "so,", "host4", "should", "win:\n", "host1:", "free_disk_mb=5120\n", "host2:", "free_disk_mb=10240\n", "host3:", "free_disk_mb=30720\n", "host4:", "free_disk_mb=81920\n", "negativehost:", "free_disk_mb=-5120\n", "so,", "host4", "should", "win\n", "and", "negativehost", "should", "lose"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/308_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_microversions.py": ["LegacyMicroversionsTest", "None", "api_version", "app", "expected_res", "expected_resp", "fakes", "header_name", "headers", "jsonutils", "len", "mock", "mock_maxver", "mock_namespace", "param", "req", "req_header", "req_version", "res", "res_json", "resp_json", "resp_param", "ret_code", "ret_header", "self", "test", "url", "version"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute_mgr.py": ["AttributeError", "CONF", "ComputeManagerBuildInstanceTestCase", "ComputeManagerInstanceUsageAuditTestCase", "ComputeManagerMigrationTestCase", "ComputeManagerUnitTestCase", "Exception", "FakeInstance", "False", "None", "NotImplementedError", "True", "_attach", "_build_networks", "_build_networks_for_instance", "_check_access_ip", "_create_patch", "_deallocate_network", "_detach", "_do_it", "_do_mock_calls", "_do_test", "_fake_get", "_get_compute_info", "_get_instance_block_device_info", "_get_instance_nw_info", "_get_instances_on_driver", "_get_power_state", "_get_resource_tracker", "_instance_update", "_is_instance_storage_shared", "_make_instance_list", "_mark_notify", "_mark_shutdown", "_migrate_instance_finish", "_notify_about_instance_usage", "_notify_usage_calls", "_process_instance_event", "_process_instance_vif_deleted_event", "_shutdown_instance", "_spawn", "_test", "_time", "_validate_instance_group_policy", "a", "add_fault", "add_fault_mock", "add_instance_fault_from_exc", "admin_context", "admin_password", "all_instances", "allow_reboot", "args", "attachment_id", "attr", "avail_nodes", "avail_nodes_l", "b", "bdm", "bdm_delete_dict", "bdm_dict1", "bdm_dict2", "bdm_do_not_delete_dict", "bdm_get", "bdms", "begin", "block_device_info", "block_device_obj", "block_migration", "body", "build_results", "bw_counters", "bw_usage_update", "c", "call", "call_tracker", "callback", "calls", "cinder_exception", "clean_shutdown", "cleanup_volumes", "cls", "cn", "cn_id", "cn_old", "comp_ret", "compute", "compute_notify_about_instance_usage", "compute_shutdown_instance", "compute_utils", "conductor_api", "conn_info_str", "connector_sentinel", "console", "context", "create_end_call", "create_error_call", "ctx", "ctxt", "current_pwr_state", "data", "datetime", "db", "db_instance", "db_list", "db_node", "db_nodes", "dead_node", "deallocate", "defer_iptables_apply", "deleted_instance", "deltas", "dest_check_data", "dest_host", "dest_info", "destroy", "destroy_bdm", "destroy_disks", "detach", "detach_interface", "dhcp_options", "dict", "disk_over_commit", "do_check_attach", "do_cleanup", "do_finish_revert_resize", "do_raise", "do_revert_resize", "do_test", "driver", "driver_instance_names", "driver_instances", "driver_mock", "driver_power_state", "driver_rescue", "driver_unrescue", "driver_uuids", "e", "elevated_context", "elevated_mock", "end", "error", "event", "event_map", "event_obj", "event_pwr_state", "eventlet_event", "events", "ex", "exc", "exception", "exp_uuids", "expected", "expected_attrs", "expected_call", "expected_connector", "expected_exc", "expected_exception", "expected_rt_dict", "expected_sleep_times", "expected_task_state", "expected_vm_state", "extra_update", "extra_usage_info", "f_instance", "fake_bdm", "fake_block_device", "fake_block_device_mapping_update", "fake_db_flavor", "fake_driver", "fake_elevated", "fake_eventlet_event", "fake_flavor", "fake_func_exc", "fake_function", "fake_get", "fake_inst", "fake_inst_destroy", "fake_instance", "fake_instances", "fake_last_completed_audit_period", "fake_migration", "fake_migrations", "fake_network", "fake_network_cache_model", "fake_network_info", "fake_notify", "fake_nw_info", "fake_resource_tracker", "fake_restore", "fake_rt", "fake_save", "fake_spawn", "fake_swap_volume", "fake_task_log", "fake_unpause", "fake_usage", "fake_vol_api_func", "fake_vol_api_roll_detaching", "fake_vol_get", "fake_vol_migrate_volume_completion", "fake_vol_unreserve", "fakes", "fault_create", "fields", "filter", "filters", "final_result", "finish_revert_migration", "finish_revert_resize", "fixtures", "flavor", "force", "force_complete", "gen_password_mock", "get_admin_context", "get_avail_nodes", "get_bdm_mock", "get_by_host", "get_by_id", "get_by_instance_uuid", "get_by_uuid_mac", "get_db_nodes", "get_instance_nw_info", "get_nw_info", "get_nw_info_for_instance", "get_power_state", "get_rescue_image", "get_resource_tracker", "get_rt", "get_state_mock", "get_volume_mock", "getattr", "hardware", "hasattr", "host", "hyp_hostname", "i", "id", "image_id", "image_meta", "info_cache", "init_return", "injected_files", "inst", "inst1", "inst2", "inst3", "inst_from_db", "inst_host", "inst_list", "inst_obj", "inst_update_mock", "inst_uuid", "instance", "instance1", "instance2", "instance3", "instance_1", "instance_2", "instance_destroy", "instance_obj", "instance_obj_load_attr", "instance_old", "instance_save", "instance_save_mock", "instance_update", "instance_update_mock", "instances", "is_shared", "is_volume_backed", "is_vpn", "jsonutils", "k", "kwargs", "last_completed_audit", "last_update_call", "legacy", "len", "list", "local_connector", "lock_name_mock", "log_mock", "macs", "manager", "messaging", "meth", "methods_called", "mgr", "mgr_class", "mig", "mig_data", "migrate_data", "migrate_data_obj", "migrate_instance_finish", "migrate_instance_start", "migration", "migration_id", "migration_list", "migration_obj_as_admin", "migration_save", "migration_type", "mock", "mock_add", "mock_add_fault", "mock_admin_ctxt", "mock_allocate", "mock_bdm", "mock_bdm_destroy", "mock_bdm_get_by_inst", "mock_begin", "mock_blk_device_info", "mock_build", "mock_build_and_run", "mock_build_ins", "mock_build_network", "mock_build_run", "mock_cclms", "mock_check", "mock_check_clean", "mock_check_dest", "mock_check_src", "mock_clean", "mock_clean_inst", "mock_clean_net", "mock_clean_vol", "mock_cleanup_network", "mock_commit", "mock_connector", "mock_create", "mock_create_reservations", "mock_db_update", "mock_dbari", "mock_deallocate", "mock_delete", "mock_delete_instance", "mock_deletion", "mock_destroy", "mock_driver", "mock_driver_instances", "mock_driver_uuids", "mock_elevated", "mock_end", "mock_ev", "mock_event", "mock_event_finish", "mock_event_start", "mock_extra", "mock_extra_update", "mock_fault_create", "mock_fault_from_exc", "mock_filter_off", "mock_filter_on", "mock_finish", "mock_finish_revert", "mock_force", "mock_get", "mock_get_active", "mock_get_by_host", "mock_get_by_instance_uuid", "mock_get_by_uuid", "mock_get_info", "mock_get_inst", "mock_get_instance_nw_info", "mock_get_itype", "mock_get_migration", "mock_get_net", "mock_get_nw", "mock_get_power", "mock_get_power_state", "mock_get_resource", "mock_get_resource_tracker", "mock_get_uuid", "mock_gibdi", "mock_hooks", "mock_host_get", "mock_ids", "mock_ids_from_instance", "mock_image_api", "mock_info_wait", "mock_init_host", "mock_init_virt", "mock_ins_save", "mock_inst", "mock_inst_destroy", "mock_inst_get_by_filters", "mock_inst_init", "mock_inst_save", "mock_instance_fault", "mock_instance_finish", "mock_instance_list", "mock_instance_save", "mock_instance_update", "mock_is_instance_storage_shared", "mock_ivbi", "mock_lm", "mock_lmcf", "mock_load", "mock_log", "mock_macs_for_instance", "mock_mig_get", "mock_mig_save", "mock_miglist_get", "mock_migrate_instance_start", "mock_migration_get_by_filters", "mock_migration_save", "mock_networks", "mock_nil", "mock_notify", "mock_notify_instance_action", "mock_notify_unversioned", "mock_notify_usage_exists", "mock_nw_info", "mock_nwapi", "mock_obj_as_admin", "mock_obj_load_attr", "mock_plm", "mock_plug", "mock_power_off", "mock_prep", "mock_r", "mock_rebuild", "mock_refresh", "mock_register", "mock_reserve", "mock_reset", "mock_resume", "mock_retry", "mock_revert_migration_context", "mock_rpc", "mock_rt", "mock_save", "mock_sem", "mock_set", "mock_set_inst", "mock_set_instance_error_state", "mock_setup", "mock_setup_network", "mock_setup_networks_on_host", "mock_shutdown", "mock_sleep", "mock_spawn", "mock_start", "mock_stop", "mock_sync", "mock_sync_power_state", "mock_task_log", "mock_unpause", "mock_upd", "mock_update", "mock_volume", "mocked_obj", "mountpoint", "msg", "n", "name", "net_req", "net_req_list", "net_req_obj", "netaddr", "network_api", "network_info", "network_model", "new_connection_info", "new_info", "new_volume_id", "nil_out_host_and_node", "node", "not_our_host", "notify", "notify_about_instance_usage", "notify_action_mock", "notify_calls", "notify_inst_usage", "notify_instance_usage", "notify_mock", "notify_usage_calls", "notify_usage_exists", "nova", "nw_info", "nw_info_obj", "nwinfo", "object", "objects", "old_connection_info", "old_vm_state", "old_volume_id", "one_second", "orig_delete", "orig_rpc", "our_host", "patcher", "plug_vifs", "post_live_migration_at_destination", "power_off_instance", "power_off_mock", "power_on", "power_state", "power_state_mock", "powerstate", "ps", "pwr_state", "quotas", "r", "range", "reason", "reboot_instance", "reboot_type", "req_networks", "requested_network", "requested_networks", "res", "reschedule_update", "rescue_image_meta", "reservations", "resize_to", "resource_tracker", "result", "return_power_state", "revert_migration_context", "rt", "rts", "save", "save_inst", "save_mock", "sec_groups", "self", "set", "set_error", "set_error_state", "set_instance_info", "setup_networks_calls", "setup_networks_on_host", "shutdown_terminate", "six", "sleep", "smd", "some_image_related_op", "sorted", "spawn", "specd_compute", "src_host", "src_info", "startup_instances", "state", "staticmethod", "status", "stop", "str", "super", "swap_volume_mock", "sys_meta", "task_state", "task_states", "tasks", "test", "test_exception", "test_instance_fault", "test_instance_info_cache", "time", "timeutils", "transition", "u", "update", "update_bdm_mock", "update_instance_cache_with_nw_info", "update_mock", "update_values", "updates", "usage", "use_slave", "utils", "uuid", "uuids", "uuidutils", "v", "vif1", "vif2", "virt_driver", "virtevent", "vm_state", "vm_states", "vms", "vol_block_info", "volume", "volume_api", "volume_connector_mock", "volume_delete", "volume_id", "volumes", "vs", "x", "y", "z", "zip", "Unit", "tests", "for", "ComputeManager().\nFor", "evacuate,", "terminate_connection", "is", "called", "with", "original", "host.", "spec", "out", "everything", "except", "for", "the", "method", "we", "really", "want\n", "to", "test,", "then", "use", "call_tracker", "to", "verify", "call", "sequence\n", "Make", "the", "2nd", "and", "3rd", "ones", "raise\n", "Update", "ComputeHostNotFound\n", "Update", "TestException\n", "Make", "the", "2nd", "and", "3rd", "ones", "raise\n", "First", "node", "in", "set", "should", "have", "been", "removed", "from", "DB\n", "Ensure", "save", "is", "not", "called", "in", "while", "allocating", "networks,", "the", "instance\n", "is", "saved", "after", "the", "allocation.\n", "Ensures", "that", "we", "don't", "do", "anything", "if", "requested_networks", "has", "'none'\n", "for", "the", "network_id.\n", "Test", "with", "defer_iptables_apply\n", "Test", "without", "defer_iptables_apply\n", "just", "testing", "whether", "the", "cleanup_host", "method\n", "when", "fired", "will", "invoke", "the", "underlying", "driver's\n", "equivalent", "method.\n", "register_event_listener", "is", "called", "on", "startup", "(init_host)", "and\n", "in", "cleanup_host\n", "simulate", "failed", "instance\n", "ensure", "driver.destroy", "is", "called", "so", "that", "driver", "may\n", "clean", "up", "any", "dangling", "files\n", "this", "instance", "will", "plug", "a", "'binding_failed'", "vif\n", "Make", "sure", "instance", "vm_state", "is", "marked", "as", "'DELETED'", "but", "instance", "is\n", "not", "destroyed", "from", "db.\n", "Make", "sure", "that", "instance.destroy", "method", "was", "called", "and\n", "instance", "was", "deleted", "from", "db.\n", "NOTE(dave-mcnally)", "while", "a", "reboot", "of", "a", "vm", "in", "error", "state", "is\n", "possible", "we", "don't", "attempt", "to", "recover", "an", "error", "during", "init\n", "NOTE(dave-mcnally)", "while", "a", "reboot", "of", "a", "vm", "in", "error", "state", "is\n", "possible", "we", "don't", "attempt", "to", "recover", "an", "error", "during", "init\n", "Short", "circuit", "DB", "call,", "get_by_filters", "should", "not", "be", "called\n", "Test", "getting", "instances", "when", "driver", "doesn't", "support\n", "'list_instance_uuids'\n", "Ensure", "that", "migration", "status", "is", "set", "to", "'failed'", "after", "instance\n", "files", "deletion", "for", "those", "instances", "whose", "instance.host", "is", "not\n", "same", "as", "compute", "host", "where", "periodic", "task", "is", "running.\n", "Test", "that", "the", "fault", "methods", "are", "invoked", "when", "an", "attach", "fails\n", "Test", "that", "the", "fault", "methods", "are", "invoked", "when", "a", "detach", "fails\n", "Build", "test", "data", "that", "will", "cause", "a", "PortNotFound", "exception\n", "This", "test", "ensures", "that", "volume_id", "arguments", "are", "passed", "to", "volume_api\n", "and", "that", "volume", "states", "are", "OK\n", "Random", "exception\n", "Good", "path\n", "Error", "paths\n", "This", "test", "ensures", "that", "delete_on_termination", "flag", "arguments\n", "are", "reserved\n", "A", "second", "attempt", "will", "avoid", "creating", "a", "new", "list;", "make", "sure", "we\n", "get", "the", "current", "list\n", "Make", "sure", "all", "the", "three", "events", "are", "handled", "despite", "the", "exceptions", "in\n", "processing", "events", "1", "and", "2\n", "call", "it", "again", "to", "make", "sure", "we", "handle", "that", "gracefully\n", "Has", "no", "'connector'.\n", "assert", "the", "field", "values", "on", "the", "instance", "object\n", "assert", "our", "mock", "calls\n", "assert", "the", "field", "values", "on", "the", "instance", "object\n", "assert", "our", "mock", "calls\n", "Ensure", "instance", "can", "have", "its", "admin", "password", "set.\n", "call", "the", "manager", "method\n", "make", "our", "assertions\n", "Test", "setting", "password", "while", "instance", "is", "rebuilding.\n", "call", "the", "manager", "method\n", "make", "our", "assertions\n", "Ensure", "expected", "exception", "is", "raised", "if", "set_admin_password", "fails.\n", "error", "raised", "from", "the", "driver", "should", "not", "reveal", "internal\n", "information", "so", "a", "new", "error", "is", "raised\n", "setting", "the", "instance", "to", "error", "state\n", "check", "revert_task_state", "decorator\n", "check", "wrap_instance_fault", "decorator\n", "Ensure", "expected", "exception", "is", "raised", "if", "set_admin_password", "not\n", "authorized.\n", "Ensure", "expected", "exception", "is", "raised", "if", "set_admin_password", "not\n", "implemented", "by", "driver.\n", "Only", "instance", "2", "has", "a", "migration", "record\n", "Consider", "the", "migration", "successful\n", "Only", "instance", "2", "should", "be", "deleted.", "Instance", "1", "is", "still", "running\n", "here,", "but", "no", "migration", "from", "our", "host", "exists,", "so", "ignore", "it\n", "Tests", "that", "we", "fail", "init_host", "if", "there", "is", "a", "pci.passthrough_whitelist\n", "configured", "incorrectly.\n", "it's", "invalid", "to", "specify", "both", "in", "the", "same", "devspec\n", "Tests", "that", "stop_instance", "doesn't", "puke", "when", "the", "instance", "power_state\n", "is", "shutdown", "and", "the", "task_state", "is", "None.\n", "run", "the", "code\n", "assert", "the", "calls\n", "Test", "that", "we", "do", "not", "raise", "on", "certain", "exceptions\n", "ironic", "node", "uuid\n", "NOTE(rpodolyaka):", "check", "that", "instance", "has", "been", "powered", "off", "by\n", "the", "time", "we", "detach", "block", "devices,", "exact", "calls", "arguments", "will", "be\n", "checked", "below\n", "NOTE(sdague):", "bw_usage_update", "happens", "at", "some", "time", "in\n", "the", "future,", "so", "what", "last_refreshed", "is", "irrelevant.\n", "Tests", "that", "the", "reverts_task_state", "decorator", "in", "the", "compute", "manager\n", "will", "not", "trace", "when", "an", "InstanceNotFound", "is", "raised.\n", "Send", "a", "single", "instance;", "check", "that", "the", "method", "converts", "to", "an\n", "InstanceList\n", "None", "of", "the", "calls", "should", "have", "been", "made\n", "Tests", "that", "we", "refresh", "the", "bdm", "list", "if", "a", "volume", "bdm", "does", "not", "have", "the\n", "volume_id", "set.\n", "since", "the", "bdms", "passed", "in", "don't", "have", "a", "volume_id,", "we'll", "go", "back", "to", "the\n", "database", "looking", "for", "updated", "versions\n", "make", "sure", "nothing", "was", "logged", "at", "exception", "level\n", "override", "tracker", "with", "a", "version", "that", "doesn't", "need", "the", "database:\n", "NOTE(coreywright):", "we", "want", "to", "test", "the", "return", "value", "of\n", "_do_build_and_run_instance,", "but", "it", "doesn't", "bubble", "all", "the", "way", "up,", "so\n", "mock", "the", "hooking,", "which", "allows", "us", "to", "test", "that", "too,", "though", "a", "little\n", "too", "intimately\n", "This", "test", "when", "sending", "an", "icehouse", "compatible", "rpc", "call", "to", "juno", "compute\n", "node,", "NetworkRequest", "object", "can", "load", "from", "three", "items", "tuple.\n", "Because", "network", "allocation", "is", "asynchronous,", "failures", "may", "not", "present\n", "themselves", "until", "the", "virt", "spawn", "method", "is", "called.\n", "This", "isn't", "really", "a", "driver.spawn", "failure,", "it's", "a", "failure", "from\n", "network_api.allocate_for_instance,", "but", "testing", "it", "here", "is", "convenient.\n", "this", "should", "be", "a", "NetworkInfo,", "not", "NetworkInfoAsyncWrapper,", "to\n", "match", "what", "get_instance_nw_info", "really", "returns\n", "Testing", "that", "this", "doesn't", "raise", "an", "exception\n", "Tests", "that", "we", "don't", "deallocate", "networks", "if", "'none'", "were\n", "specifically", "requested.\n", "Tests", "that", "we", "deallocate", "networks", "if", "we", "were", "requested", "to\n", "auto-allocate", "networks", "or", "requested_networks=None.\n", "Check", "that", "launched_at", "is", "set", "on", "the", "instance\n", "Check", "that", "launched_at", "is", "set", "on", "the", "instance\n", "Tests", "that", "errors_out_migration", "decorator", "in", "compute", "manager\n", "sets", "migration", "status", "to", "'error'", "when", "an", "exception", "is", "raised\n", "from", "decorated", "method\n", "This", "test", "asserts", "that", "_is_instance_storage_shared()", "is", "called", "from\n", "revert_resize()", "and", "the", "return", "value", "is", "passed", "to", "driver.destroy().\n", "Otherwise", "we", "could", "regress", "this.\n", "Inform", "compute", "that", "instance", "uses", "non-shared", "or", "shared", "storage\n", "If", "instance", "storage", "is", "shared,", "driver", "destroy", "method\n", "should", "not", "destroy", "disks", "otherwise", "it", "should", "destroy", "disks.\n", "NOTE(danms):", "Make", "sure", "that", "we", "legacy-ify", "any", "data", "objects\n", "the", "drivers", "give", "us", "back,", "if", "we", "were", "passed", "a", "non-object\n", "fudge", "beginning", "and", "ending", "time", "by", "a", "second", "(backwards", "and", "forwards,\n", "respectively)", "so", "they", "differ", "from", "the", "instance's", "launch", "and\n", "termination", "times", "when", "sub-seconds", "are", "truncated", "and", "fall", "within", "the\n", "audit", "period"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/332_keypair_in_extra.py": ["Column", "MetaData", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/cells/weights/mute_child.py": ["CONF", "LOG", "MUTE_WEIGH_VALUE", "_LW", "__name__", "cell", "last_seen", "logging", "nova", "secs", "self", "timeutils", "weight_properties", "weights", "negative", "multiplier", "=>", "lower", "weight\n", "yep,", "that's", "a", "mute", "child;", "recommend", "highly", "that", "it", "be", "skipped!"], "/Users/mehranhassani/repos/nova/nova/tests/unit/notifications/objects/test_notification.py": ["AssertionError", "False", "None", "SCHEMA", "TestNotificationBase", "TestNotificationPayload", "VERSION", "actual", "actual_payload", "base", "checker", "collections", "data", "expected", "expected_event_type", "expected_payload", "extra_data", "fake_service", "fields", "fixture", "flavor", "flavor_payload", "flavor_values", "get_extra_data", "info_cache", "instance", "instance_values", "issubclass", "k", "len", "mock", "mock_context", "mock_db_service_update", "mock_emit", "mock_legacy", "mock_notifier", "mock_notify", "network_model", "new_hash", "non_populated_payload", "noti", "notification", "notification_base", "notification_object_data", "obj_class", "objects", "old_hash", "payload", "schema_data", "self", "sorted", "source_field", "super", "test", "test_keys", "test_objects", "timeutils", "tuple", "filled", "by", "ctor\n", "filled", "by", "the", "schema\n", "filled", "by", "the", "schema\n", "filled", "by", "ctor\n", "filled", "by", "ctor\n", "filled", "by", "the", "schema\n", "filled", "by", "the", "schema\n", "Get", "the", "SCHEMA", "items", "to", "add", "to", "the", "fingerprint\n", "if", "we", "are", "looking", "at", "a", "notification\n", "Make", "sure", "that", "the", "notification", "payload", "chooses", "the", "values", "in\n", "instance.flavor.$value", "instead", "of", "instance.$value"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_simple_tenant_usage.py": ["SimpleTenantUsageSampleJsonTest", "SimpleTenantUsageV240Test", "astb", "datetime", "microversion", "mock", "mock_uuids", "now", "parse", "query", "range", "response", "sample_dir", "scenarios", "self", "started", "str", "subs", "super", "template_name", "tenant_id", "test_servers", "timeutils", "url", "uuid_format", "x", "setUp", "method", "for", "simple", "tenant", "usage.\ntearDown", "method", "for", "simple", "tenant", "usage.", "Get", "api", "sample", "to", "get", "all", "tenants", "usage", "request.\n", "Get", "all", "tenants", "usage", "information", "with", "detail.\n", "Get", "api", "sample", "to", "get", "specific", "tenant", "usage", "request.\n", "make", "uuids", "incrementing,", "so", "that", "sort", "order", "is", "deterministic"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/openstack/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_cells.py": ["BaseCellsTest", "CellsTestV21", "False", "None", "True", "_self", "args", "bad_request", "body", "body1", "body2", "call_info", "caps", "cell", "cell1", "cell2", "cell_caps", "cell_extension", "cell_id", "cell_name", "cells", "cells_ext_v21", "context", "copy", "dict", "enumerate", "exc", "exception", "expected", "fake_cell_create", "fake_cell_delete", "fake_cell_get", "fake_cell_update", "fake_cells_api_get_all_cell_info", "fakes", "i", "insecure_transport_url", "inst", "kwargs", "len", "mock", "mock_get_capacities", "req", "req1", "req2", "res_dict", "res_dict1", "res_dict2", "resource", "resp", "response", "rpc", "rules", "self", "str", "super", "sync_instances", "test", "timeutils", "transport_url", "url", "values", "Test", "cell", "delete", "with", "just", "cell", "policy\n", "Test", "create", "with", "just", "cells", "policy\n", "Test", "create", "with", "just", "cells", "policy\n", "Test", "cell", "update", "with", "just", "cell", "policy"], "/Users/mehranhassani/repos/nova/nova/virt/ironic/ironic_states.py": ["ACTIVE", "AVAILABLE", "CLEANFAIL", "CLEANING", "CLEANWAIT", "DELETED", "DELETING", "DEPLOYDONE", "DEPLOYFAIL", "DEPLOYING", "DEPLOYWAIT", "ERROR", "INSPECTFAIL", "INSPECTING", "MANAGEABLE", "NOSTATE", "None", "POWER_OFF", "POWER_ON", "PROVISION_STATE_LIST", "REBOOT", "REBUILD", "Node", "is", "successfully", "deployed", "and", "associated", "with", "an", "instance.", "\n", "Node", "deployment", "failed.", "\n", "Node", "is", "actively", "being", "torn", "down.", "\n", "Node", "is", "being", "automatically", "cleaned", "to", "prepare", "it", "for", "provisioning.", "\n", "Node", "failed", "cleaning.", "This", "requires", "operator", "intervention", "to", "resolve.", "\n", "Node", "inspection", "failed.", "\n", "Node", "is", "powered", "on.", "\n", "Node", "is", "powered", "off.", "\n", "Node", "is", "rebooting.", "\n", "A", "list", "of", "all", "provision", "states.", "####################\n", "Provisioning", "states\n####################\n#############\n", "Power", "states\n#############\n#################\n", "Helper", "constants\n#################"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api_samples_test_base/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_objects.py": ["AttributeError", "Child", "FakeIndirectionHack", "False", "Foo", "IndirectionFixture", "LOG", "MyList", "MyNewerObj", "MyObj", "MyObjElement", "MyOlderObj", "MyOwnedObject", "MyOwner", "MyTestObj", "None", "NotImplementedError", "Parent", "ParentObject", "RandomMixInWithNoFields", "TestArgsSerializer", "TestListObj", "TestObj", "TestObject", "TestSubclassedObject", "True", "VERSION", "ValueError", "_BaseTestCase", "_LocalTest", "_RemoteTest", "_TestObject", "__name__", "_api", "_obj_from_primitive", "a", "actual", "all_classes", "allow_missing", "args", "attrname", "backported_to", "bar", "base", "base_fields", "call_context", "checker", "child", "classmethod", "cls", "comp", "comparator", "comparators", "compare_obj", "context", "contextlib", "copy", "datetime", "db_key", "db_obj", "db_val", "delattr", "dt", "enumerate", "exception", "expected", "expected_args", "expected_kwargs", "fail", "fake", "fake_make_compat", "fake_notifier", "fake_obj_from_primitive", "fields", "fingerprints", "fixture", "fixtures", "foo", "get_nova_objects", "getattr", "hasattr", "i", "index", "init_args", "init_kwargs", "inspect", "isinstance", "issubclass", "item", "iterable", "k", "key", "kwargs", "len", "list", "log", "manifest", "mock", "mock_compat", "mock_fn", "mock_get_versions", "mock_mc", "mock_objects", "mock_ofp", "my_list", "my_obj", "my_version", "mylist", "myobj", "myobj3_fields", "myobj_fields", "myowner", "name", "nova_classes", "nova_fixtures", "o", "obj", "obj1", "obj2", "obj_class", "obj_classes", "obj_extra_fields", "obj_name", "obj_primitive", "obj_primitive_data", "obj_relationships", "obj_val", "obj_version", "objclasses", "object", "object_data", "object_versions", "objects", "objinst", "objmethod", "objname", "objver", "ofp", "open", "orig_primitive", "original", "os", "ovo_base", "ovo_exc", "parent", "pprint", "prim", "primitive", "primitive_data", "property", "real_method", "real_ofp", "reg", "repr", "result", "self", "ser", "set", "setattr", "six", "staticmethod", "str", "subobj", "subs", "super", "target_version", "test", "testme", "thing", "thing2", "timeutils", "tuple", "updates", "utils", "v", "val", "value", "version", "versions", "virt_device_metadata", "x", "Used", "to", "test", "object", "inheritance", "using", "a", "mixin", "that", "has", "no", "fields.", "NOTE(danms):", "Simulate", "an", "older", "version", "that", "had", "a", "different\n", "format", "for", "the", "'bar'", "attribute\n", "NOTE(danms):", "register", "these", "here", "instead", "of", "at", "import", "time\n", "so", "that", "they're", "not", "always", "present\n", "Just", "in", "case\n", "Temporarily", "go", "non-remote", "so", "the", "conductor", "handles\n", "this", "request", "directly\n", "FIXME(danms):", "We", "shouldn't", "be", "overriding", "any", "of", "this,", "but", "need", "to\n", "for", "the", "moment", "because", "of", "the", "mocks", "in", "the", "base", "fixture", "that", "don't\n", "hit", "our", "registry", "subclass.\n", "Spot", "check", "a", "few\n", "Now", "check", "the", "test", "one", "in", "this", "file.", "Should", "be", "newest", "version\n", "NOTE(danms):", "If", "we", "call", "obj_from_primitive()", "directly\n", "with", "a", "version", "containing", ".z,", "we'll", "get", "that", "version\n", "in", "the", "resulting", "object.", "In", "reality,", "when", "using", "the\n", "serializer,", "we'll", "get", "that", "snipped", "off", "(tested\n", "elsewhere)\n", "Foo", "has", "value,", "should", "not", "get", "the", "default\n", "Foo", "has", "value,", "should", "return", "the", "value", "without", "error\n", "Bar", "is", "not", "loaded,", "so", "we", "should", "get", "the", "default\n", "Bar", "without", "a", "default", "should", "lazy-load\n", "Bar", "now", "has", "a", "default,", "but", "loaded", "value", "should", "be", "returned\n", "Invalid", "attribute", "should", "raise", "AttributeError\n", "...even", "with", "a", "default\n", "Should", "appear", "unset", "now\n", "Make", "sure", "post-delete,", "references", "trigger", "lazy", "loads\n", "NOTE(danms):", "deleted", "defaults", "to", "False,", "so", "verify", "that", "it", "does\n", "not", "get", "reset", "by", "obj_set_defaults()\n", "NOTE(danms):", "The", "serializer", "is", "where", "the", "logic", "lives", "that\n", "avoids", "backports", "for", "cases", "where", "only", "a", ".z", "difference", "in\n", "the", "received", "object", "version", "is", "detected.", "As", "a", "result,", "we\n", "end", "up", "with", "a", "version", "of", "what", "we", "expected,", "effectively", "the\n", ".0", "of", "the", "object.\n", "Test", "the", "full", "client", "backport", "path", "all", "the", "way", "from", "the", "serializer\n", "to", "the", "conductor", "and", "back.\n", "NOTE(danms):", "Actually", "register", "a", "complex", "set", "of", "objects,\n", "two", "versions", "of", "the", "same", "parent", "object", "which", "contain", "a\n", "child", "sub", "object.\n", "noqa\n", "NOTE(danms):", "Since", "we're", "on", "the", "same", "node", "as", "conductor,\n", "return", "a", "fake", "version", "manifest", "so", "that", "we", "confirm", "that", "it\n", "actually", "honors", "what", "the", "client", "asked", "for", "and", "not", "just", "what\n", "it", "sees", "in", "the", "local", "machine", "state.\n", "NOTE(danms):", "We", "need", "the", "first", "call", "to", "this", "to", "report", "an\n", "incompatible", "object", "version,", "but", "subsequent", "calls", "must\n", "succeed.", "Since", "we're", "testing", "the", "backport", "path", "all", "the\n", "way", "through", "conductor", "and", "RPC,", "we", "can't", "fully", "break", "this\n", "method,", "we", "just", "need", "it", "to", "fail", "once", "to", "trigger", "the\n", "backport.\n", "Our", "newest", "version", "(and", "what", "we", "passed", "back)", "of", "Parent\n", "is", "1.1,", "make", "sure", "that", "the", "manifest", "version", "is", "honored\n", "Our", "newest", "version", "(and", "what", "we", "passed", "back)", "of", "Child\n", "is", "1.10,", "make", "sure", "that", "the", "manifest", "version", "is", "honored\n", "dict", "case\n", "object-action", "updates", "dict", "case\n", "NOTE(danms):", "The", "hashes", "in", "this", "list", "should", "only", "be", "changed", "if\n", "they", "come", "with", "a", "corresponding", "version", "bump", "in", "the", "affected\n", "objects\n", "NOTE(danms):", "This", "is", "normally", "not", "registered", "because", "it", "is", "just", "a\n", "base", "class.", "However,", "the", "test", "fixture", "below", "requires", "it", "to", "be\n", "in", "the", "registry", "so", "that", "it", "can", "verify", "backports", "based", "on", "its\n", "children.", "So,", "register", "it", "here,", "which", "will", "be", "reverted", "after", "the\n", "cleanUp", "for", "this", "(and", "all)", "tests", "is", "run.\n", "Iterate", "all", "object", "classes", "and", "verify", "that", "we", "can", "run\n", "obj_make_compatible", "with", "every", "older", "version", "than", "current.\n", "This", "doesn't", "actually", "test", "the", "data", "conversions,", "but", "it", "at", "least\n", "makes", "sure", "the", "method", "doesn't", "blow", "up", "on", "something", "basic", "like\n", "expecting", "the", "wrong", "version", "format.\n", "Hold", "a", "dictionary", "of", "args/kwargs", "that", "need", "to", "get", "passed", "into\n", "__init__()", "for", "specific", "classes.", "The", "key", "in", "the", "dictionary", "is\n", "the", "obj_class", "that", "needs", "the", "init", "args/kwargs.\n", "Test", "to", "make", "sure", "obj_make_compatible", "works", "with", "no", "'objects'\n", "If", "a", "List", "object", "ever", "has", "a", "version", "that", "did", "not", "contain", "the\n", "'objects'", "key,", "we", "need", "to", "make", "sure", "converting", "back", "to", "that", "version\n", "doesn't", "cause", "backporting", "problems.\n", "pretend", "that", "version", "1.0", "didn't", "have", "'objects'\n", "obj2", "will", "be", "marked", "with", "field", "'three'", "updated"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/migrations.py": ["ALIAS", "False", "MigrationsController", "True", "_collection_name", "_view_builder_class", "add_link", "alias", "api_version_request", "common", "compute", "context", "detail_keys", "extensions", "key", "live_migration_in_progress", "migrations", "migrations_obj", "migrations_policies", "name", "obj", "obj_base", "objects", "req", "resource", "resources", "self", "super", "version", "wsgi", "x", "Controller", "for", "accessing", "migrations", "in", "OpenStack", "API.\nReturn", "all", "migrations", "in", "progress.\nProvide", "data", "on", "migrations.", "TODO(Shaohe", "Feng)", "we", "should", "share", "the", "in-progress", "list.\n", "Note(Shaohe", "Feng):", "We", "need", "to", "leverage", "the", "oslo.versionedobjects.\n", "Then", "we", "can", "pass", "the", "target", "version", "to", "it's", "obj_to_primitive.\n", "NOTE(Shaohe", "Feng)", "above", "version", "2.23,", "add", "migration_type", "for", "all\n", "kinds", "of", "migration,", "but", "we", "only", "add", "links", "just", "for", "in-progress\n", "live-migration."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/252_add_instance_extra_table.py": ["Column", "DateTime", "False", "ForeignKeyConstraint", "Index", "Integer", "MetaData", "String", "Table", "Text", "True", "_columns", "args", "basename", "columns", "dict", "fkey_columns", "fkey_refcolumns", "instance_fkey", "instance_uuid_index", "instances", "kwargs", "meta", "migrate_engine", "prefix", "table", "tuple", "Index\n", "Foreign", "key"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_login.py": ["LOG", "LoginTest", "__name__", "api_major_version", "flavor", "flavors", "integrated_helpers", "logging", "self", "Simple", "check", "-", "we", "list", "flavors", "-", "so", "we", "know", "we're", "logged", "in."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_hosts.py": ["ADMIN_API", "True", "api_sample_base", "response", "sample_dir", "self"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/smbfs.py": ["CONF", "LibvirtSMBFSVolumeDriver", "USERNAME_REGEX", "conf", "connection_info", "device_path", "disk_dev", "disk_info", "fs", "libvirt_utils", "mount_options", "mount_path", "nova", "re", "remotefs", "self", "smbfs_share", "super", "Class", "implements", "libvirt", "part", "of", "volume", "driver", "for", "SMBFS.\nReturns", "xml", "for", "libvirt.\nConnect", "the", "volume.\nDisconnect", "the", "volume.", "Remove", "the", "Domain", "Name", "from", "user", "name"], "/Users/mehranhassani/repos/nova/nova/manager.py": ["CONF", "False", "Manager", "None", "PeriodicTasks", "base", "context", "db_driver", "host", "nova", "periodic_task", "raise_on_error", "rpc", "self", "service_name", "super", "Tasks", "to", "be", "run", "at", "a", "periodic", "interval."], "/Users/mehranhassani/repos/nova/nova/tests/functional/libvirt/test_rt_servers.py": ["NumaHostInfo", "RealTimeServersTest", "ServersTestBase", "client", "cpu_count", "created", "fake_connection", "fake_imagebackend", "fake_libvirt_utils", "fake_network", "fakelibvirt", "fixtures", "flavor", "host_info", "instance", "kwargs", "len", "mock", "self", "server", "super", "topology", "update", "number", "of", "active", "cpus\n", "Replace", "libvirt", "with", "fakelibvirt\n", "Cannot", "set", "realtime", "policy", "in", "a", "non", "dedicated", "cpu", "pinning", "policy\n", "Cannot", "set", "realtime", "policy", "if", "not", "vcpus", "mask", "defined\n", "Realtime", "policy", "not", "supported", "by", "hypervisor"], "/Users/mehranhassani/repos/nova/doc/source/conf.py": ["Exception", "False", "True", "add_module_names", "config_generator_config_file", "copyright", "exclude_patterns", "extensions", "git_cmd", "html_last_updated_fmt", "html_static_path", "htmlhelp_basename", "latex_documents", "man_pages", "master_doc", "modindex_common_prefix", "os", "policy_generator_config_file", "project", "pygments_style", "release", "sample_config_basename", "sample_policy_basename", "show_authors", "source_suffix", "subprocess", "sys", "todo_include_todos", "version", "version_info", "warnings", "If", "extensions", "(or", "modules", "to", "document", "with", "autodoc)", "are", "in", "another", "directory,\n", "add", "these", "directories", "to", "sys.path", "here.", "If", "the", "directory", "is", "relative", "to", "the\n", "documentation", "root,", "use", "os.path.abspath", "to", "make", "it", "absolute,", "like", "shown", "here.\n", "--", "General", "configuration", "----------------------------------------------------\n", "Add", "any", "Sphinx", "extension", "module", "names", "here,", "as", "strings.", "They", "can", "be\n", "extensions", "coming", "with", "Sphinx", "(named", "'sphinx.ext.*')", "or", "your", "custom", "ones.\n", "The", "suffix", "of", "source", "filenames.\n", "The", "encoding", "of", "source", "files.\nsource_encoding", "=", "'utf-8'\n", "The", "master", "toctree", "document.\n", "General", "information", "about", "the", "project.\n", "The", "version", "info", "for", "the", "project", "you're", "documenting,", "acts", "as", "replacement", "for\n", "|version|", "and", "|release|,", "also", "used", "in", "various", "other", "places", "throughout", "the\n", "built", "documents.\n\n", "The", "full", "version,", "including", "alpha/beta/rc", "tags.\n", "The", "short", "X.Y", "version.\n", "The", "language", "for", "content", "autogenerated", "by", "Sphinx.", "Refer", "to", "documentation\n", "for", "a", "list", "of", "supported", "languages.\nlanguage", "=", "None\n", "There", "are", "two", "options", "for", "replacing", "|today|:", "either,", "you", "set", "today", "to", "some\n", "non-false", "value,", "then", "it", "is", "used:\ntoday", "=", "''\n", "Else,", "today_fmt", "is", "used", "as", "the", "format", "for", "a", "strftime", "call.\ntoday_fmt", "=", "'%B", "%d,", "%Y'\n", "A", "list", "of", "glob-style", "patterns", "that", "should", "be", "excluded", "when", "looking", "for\n", "source", "files.", "They", "are", "matched", "against", "the", "source", "file", "names", "relative", "to", "the\n", "source", "directory,", "using", "slashes", "as", "directory", "separators", "on", "all", "platforms.\n", "The", "reST", "default", "role", "(used", "for", "this", "markup:", "`text`)", "to", "use\n", "for", "all", "documents.\ndefault_role", "=", "None\n", "If", "true,", "'()'", "will", "be", "appended", "to", ":func:", "etc.", "cross-reference", "text.\nadd_function_parentheses", "=", "True\n", "If", "true,", "the", "current", "module", "name", "will", "be", "prepended", "to", "all", "description\n", "unit", "titles", "(such", "as", "..", "function::).\n", "If", "true,", "sectionauthor", "and", "moduleauthor", "directives", "will", "be", "shown", "in", "the\n", "output.", "They", "are", "ignored", "by", "default.\n", "The", "name", "of", "the", "Pygments", "(syntax", "highlighting)", "style", "to", "use.\n", "A", "list", "of", "ignored", "prefixes", "for", "module", "index", "sorting.\n", "--", "Options", "for", "man", "page", "output", "----------------------------------------------\n", "Grouping", "the", "document", "tree", "for", "man", "pages.\n", "List", "of", "tuples", "'sourcefile',", "'target',", "u'title',", "u'Authors", "name',", "'manual'\n", "--", "Options", "for", "HTML", "output", "--------------------------------------------------\n", "The", "theme", "to", "use", "for", "HTML", "and", "HTML", "Help", "pages.", "Major", "themes", "that", "come", "with\n", "Sphinx", "are", "currently", "'default'", "and", "'sphinxdoc'.\n", "html_theme_path", "=", "[\".\"]\n", "html_theme", "=", "'_theme'\n", "Theme", "options", "are", "theme-specific", "and", "customize", "the", "look", "and", "feel", "of", "a", "theme\n", "further.", "For", "a", "list", "of", "options", "available", "for", "each", "theme,", "see", "the\n", "documentation.\nhtml_theme_options", "=", "{}\n", "Add", "any", "paths", "that", "contain", "custom", "themes", "here,", "relative", "to", "this", "directory.\nhtml_theme_path", "=", "[]\n", "The", "name", "for", "this", "set", "of", "Sphinx", "documents.", "If", "None,", "it", "defaults", "to\n", "\"<project>", "v<release>", "documentation\".\nhtml_title", "=", "None\n", "A", "shorter", "title", "for", "the", "navigation", "bar.", "Default", "is", "the", "same", "as", "html_title.\nhtml_short_title", "=", "None\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top\n", "of", "the", "sidebar.\nhtml_logo", "=", "None\n", "The", "name", "of", "an", "image", "file", "(within", "the", "static", "path)", "to", "use", "as", "favicon", "of", "the\n", "docs.", "This", "file", "should", "be", "a", "Windows", "icon", "file", "(.ico)", "being", "16x16", "or", "32x32\n", "pixels", "large.\nhtml_favicon", "=", "None\n", "Add", "any", "paths", "that", "contain", "custom", "static", "files", "(such", "as", "style", "sheets)", "here,\n", "relative", "to", "this", "directory.", "They", "are", "copied", "after", "the", "builtin", "static", "files,\n", "so", "a", "file", "named", "\"default.css\"", "will", "overwrite", "the", "builtin", "\"default.css\".\n", "If", "not", "'',", "a", "'Last", "updated", "on:'", "timestamp", "is", "inserted", "at", "every", "page", "bottom,\n", "using", "the", "given", "strftime", "format.\nhtml_last_updated_fmt", "=", "'%b", "%d,", "%Y'\n", "If", "true,", "SmartyPants", "will", "be", "used", "to", "convert", "quotes", "and", "dashes", "to\n", "typographically", "correct", "entities.\nhtml_use_smartypants", "=", "True\n", "Custom", "sidebar", "templates,", "maps", "document", "names", "to", "template", "names.\nhtml_sidebars", "=", "{}\n", "Additional", "templates", "that", "should", "be", "rendered", "to", "pages,", "maps", "page", "names", "to\n", "template", "names.\nhtml_additional_pages", "=", "{}\n", "If", "false,", "no", "module", "index", "is", "generated.\nhtml_use_modindex", "=", "True\n", "If", "false,", "no", "index", "is", "generated.\nhtml_use_index", "=", "True\n", "If", "true,", "the", "index", "is", "split", "into", "individual", "pages", "for", "each", "letter.\nhtml_split_index", "=", "False\n", "If", "true,", "links", "to", "the", "reST", "sources", "are", "added", "to", "the", "pages.\nhtml_show_sourcelink", "=", "True\n", "If", "true,", "an", "OpenSearch", "description", "file", "will", "be", "output,", "and", "all", "pages", "will\n", "contain", "a", "<link>", "tag", "referring", "to", "it.", "The", "value", "of", "this", "option", "must", "be", "the\n", "base", "URL", "from", "which", "the", "finished", "HTML", "is", "served.\nhtml_use_opensearch", "=", "''\n", "If", "nonempty,", "this", "is", "the", "file", "name", "suffix", "for", "HTML", "files", "(e.g.", "\".xhtml\").\nhtml_file_suffix", "=", "''\n", "Output", "file", "base", "name", "for", "HTML", "help", "builder.\n", "--", "Options", "for", "LaTeX", "output", "-------------------------------------------------\n", "The", "paper", "size", "('letter'", "or", "'a4').\nlatex_paper_size", "=", "'letter'\n", "The", "font", "size", "('10pt',", "'11pt'", "or", "'12pt').\nlatex_font_size", "=", "'10pt'\n", "Grouping", "the", "document", "tree", "into", "LaTeX", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,", "author,", "documentclass\n", "[howto/manual]).\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top", "of\n", "the", "title", "page.\nlatex_logo", "=", "None\n", "For", "\"manual\"", "documents,", "if", "this", "is", "true,", "then", "toplevel", "headings", "are", "parts,\n", "not", "chapters.\nlatex_use_parts", "=", "False\n", "Additional", "stuff", "for", "the", "LaTeX", "preamble.\nlatex_preamble", "=", "''\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\nlatex_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\nlatex_use_modindex", "=", "True"], "/Users/mehranhassani/repos/nova/nova/conf/serial_console.py": ["ALL_OPTS", "CLI_OPTS", "DEFAULT_PORT_RANGE", "False", "cfg", "conf", "serial_opt_group", "TODO(macsz)", "check", "if", "WS", "protocol", "is", "still", "being", "used"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_weights.py": ["FakeWeigher", "None", "TypeError", "fakes", "host", "host_values", "hostinfo", "len", "map_", "maxval", "minval", "mock", "mock_weigh", "node", "ram", "result", "ret", "scheduler_weights", "self", "seq", "test", "tuple", "values", "weighed_host", "weighers", "weight_handler", "weights", "weight_list,", "expected_result,", "minval,", "maxval"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_usage.py": ["DATE1", "DATE2", "DATE3", "ServerUsageTestV21", "UUID1", "UUID2", "UUID3", "_prefix", "args", "body", "content_type", "datetime", "db_list", "exception", "fake_compute_get", "fake_compute_get_all", "fake_instance", "fakes", "fields", "inst", "instance_obj", "jsonutils", "launched_at", "objects", "prefix", "req", "res", "resp_launched_at", "resp_terminated_at", "return_server", "self", "server", "servers", "super", "terminated_at", "test", "timeutils", "url", "utils_fixture"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_xenapi.py": ["CONF", "Exception", "FAKE_VMS", "False", "IMAGE_FIXTURES", "IMAGE_FROM_VOLUME", "IMAGE_IPXE_ISO", "IMAGE_ISO", "IMAGE_KERNEL", "IMAGE_MACHINE", "IMAGE_RAMDISK", "IMAGE_RAW", "IMAGE_VHD", "IOError", "LOG", "MockComputeAPI", "MockXapiSession", "None", "NotImplementedError", "REQUIRES_LOCKING", "ResourcePoolWithStubs", "Session", "StubDependencies", "True", "VMOpsMock", "XenAPIAggregateTestCase", "XenAPIAutoDiskConfigTestCase", "XenAPIBWCountersTestCase", "XenAPIDiffieHellmanTestCase", "XenAPIDom0IptablesFirewallTestCase", "XenAPIGenerateLocal", "XenAPIHostTestCase", "XenAPIInjectMetadataTestCase", "XenAPILiveMigrateTestCase", "XenAPIMigrateInstance", "XenAPIVMTestCase", "XenAPIVolumeTestCase", "__file__", "__name__", "_create_service_entries", "_fake_get_vif_device_map", "_get_instance_nw_info", "_ignore", "_in6_filter_rules", "_in_rules", "_mount_handler", "_readlink_handler", "_self", "_session", "_sr_ref", "_tee_handler", "_umount_handler", "_vm_ref", "_vmops", "_x", "action", "actual", "actual_exception", "actual_injected_files", "actual_path", "admin_ctxt", "agent", "agg", "aggr", "aggr_name", "aggr_state", "aggr_zone", "aggregate", "aggregate_host", "aggregate_id", "aggregate_list", "alice_pub", "alice_shared", "api_calls", "architecture", "args", "ast", "attrs", "avail_zone", "base", "base64", "base_uuid", "block_device_info", "block_info", "block_migration", "bob_pub", "bob_shared", "bootable", "called", "calls", "check_injection", "classmethod", "cls", "cmd", "cmd_parts", "compute_api", "compute_utils", "compute_uuid", "config_fixture", "conn", "conn_info", "console", "contents", "context", "contextlib", "copy", "cow", "cow_uuid", "create_bad_vbd", "create_instance_with_system_metadata", "create_record", "crypto", "ctx", "ctxt", "data", "db", "db_fakes", "dec", "decorated_function", "dest", "dest_check_data", "destination", "destination_hostname", "destination_sr_ref", "dev", "dev_info", "dict", "diff", "disk_image_type", "disk_type", "dst", "dummy", "dummy_callback", "elem", "empty", "empty_dns", "enc", "end_list", "end_vms", "eph1_vdi_ref", "eph2_vdi_ref", "error", "ex", "exception", "expected", "expected_calls", "expected_data", "expected_disk_type", "expected_exception_cls", "expected_name", "expected_path", "expected_raw_diagnostics", "expected_role", "f", "fail_msg", "failure", "fake", "fake_add_instance_fault", "fake_add_to_param_xenstore", "fake_agent_call", "fake_aggregate", "fake_aggregate_get", "fake_aggregate_get_by_host", "fake_call_xenapi", "fake_clear_pool", "fake_create_kernel_and_ramdisk", "fake_create_vbd", "fake_delete_from_xenstore", "fake_destroy_kernel_ramdisk", "fake_dev", "fake_driver_add_to_aggregate", "fake_eject_slave", "fake_encrypt_text", "fake_fetch_disk_image", "fake_find_sr", "fake_finish_revert_migration", "fake_flavor", "fake_forget_sr", "fake_fw", "fake_generate_ephemeral", "fake_generate_iso", "fake_generate_swap", "fake_generate_vdi_map", "fake_get_console_output", "fake_get_host_opaque_ref", "fake_get_instance_vdis_for_sr", "fake_get_iscsi_srs", "fake_get_partitions", "fake_get_rrd", "fake_get_vm_opaque_ref", "fake_host_find", "fake_image", "fake_image_download", "fake_image_upload", "fake_init_pool", "fake_inject_file", "fake_inject_instance_metadata", "fake_inst", "fake_inst2", "fake_instance", "fake_is_xsm_sr_check_relaxed", "fake_join_slave", "fake_live_migrate", "fake_lookup_kernel_ramdisk", "fake_network", "fake_network_info", "fake_pool_set_name_label", "fake_processutils", "fake_raise", "fake_remove_from_aggregate", "fake_remove_from_param_xenstore", "fake_resetnetwork", "fake_resize_part_and_fs", "fake_safe_copy_vdi", "fake_safe_find_sr", "fake_start", "fake_strip_base_mirror_from_vdis", "fake_unpause_and_wait", "fake_vdi_attached", "fake_vdi_map", "fake_vdi_ref", "fake_vdi_resize", "fake_vdi_uuid", "fake_vm_start", "fake_write_to_xenstore", "fake_zone", "fakes", "find_aggregate", "find_host", "flags", "flavor", "func_call_matcher", "function", "functools", "get_fake_device_info", "get_session", "glance", "host", "host_param", "host_ref", "host_uuid", "hostname", "hosts", "hs", "i", "id", "image_id", "image_meta", "image_ref", "image_service", "image_type", "image_type_id", "image_type_str", "img_id", "importutils", "in_rules", "injected_files", "inst", "inst2", "inst_ipv4", "inst_ipv6", "inst_uuid", "instance", "instance_chain", "instance_id", "instance_ref", "instance_type_id", "instance_uuids", "instance_values", "instances", "int", "ip", "ipv4", "ipv4_addr_per_network", "ipv4_len", "ipv4_network_rules", "ipv4_rules_per_addr", "ipv6", "ipv6_addr_per_network", "ipv6_len", "ipv6_network_rules", "ipv6_rules_per_addr", "islive", "jsonutils", "k", "kernel", "kernel_id", "key", "key_data", "kw", "kwargs", "l", "len", "line", "list", "local_sr", "lockutils", "logging", "manager", "marker", "match_rules", "matchers", "mem_bytes", "mem_kib", "message", "metadata", "method", "migrate_data", "migration_values", "mock", "mock_destroy", "mock_get", "mock_get_by_host", "mock_lookup", "mock_save", "mox", "name", "name_label", "network", "network_info", "network_model", "networks", "networks_count", "new_pass", "new_sectors", "new_vdi_ref", "new_vdi_uuid", "nova", "obj", "obj_fields", "object", "objects", "old_sectors", "old_vdi_ref", "open", "options", "orig_image_download", "orig_vdi_attached", "os", "os_type", "osvol", "partition", "password", "path", "pbd_rec", "pbd_ref", "pbd_refs", "pif_rec", "pif_ref", "plugin_file", "plugin_version", "pool", "pool_add_to_aggregate", "pool_ref", "pool_remove_from_aggregate", "pool_states", "post_method", "power_on", "power_state", "pre", "query", "ramdisk", "ramdisk_id", "range", "re", "read_only", "real_call_xenapi", "real_result", "rec", "record", "recover_method", "ref", "regex", "rel_path_elem", "rescue_name", "rescue_ref", "rescue_vm", "result", "root_vdi_ref", "rule", "rules", "rulesv4", "rulesv6", "secgroup", "security_group_chain", "self", "self_", "server_info", "service", "service_host", "session", "set", "set_image_fixtures", "setattr", "six", "slave", "slave_info", "software_version", "somedata", "spawn", "sr_path", "sr_rec", "sr_ref", "src", "src_instance_ref", "src_secgroup", "sshkey", "start", "start_list", "start_vms", "staticmethod", "stats", "str", "stub_vm_utils_with_vdi_attached", "stubs", "super", "swap_vdi_ref", "target_iqn", "task_states", "tcpip_data", "test", "test_aggregate", "test_utils", "tests", "testtools", "to_supported_instances", "unpluggable", "url", "user", "userdevice", "uuids", "uuidutils", "v", "val", "value", "values", "vbd", "vbd0", "vbd2", "vbd_labels", "vbd_rec", "vbd_ref", "vbd_type", "vbds", "vcpu_weight", "vcpus", "vdi0", "vdi1", "vdi2", "vdi_key", "vdi_map", "vdi_rec", "vdi_rec2", "vdi_recs_end", "vdi_recs_start", "vdi_ref", "vdi_ref2", "vdi_refs", "vdi_role", "vdi_to_copy_ref", "vdi_uuid", "vdi_uuids", "vdis", "vif_map", "vif_rec", "vif_ref", "virtual_size", "vm", "vm_info", "vm_labels", "vm_rec", "vm_ref", "vm_states", "vm_utils", "vm_uuid", "vmops", "vmref", "vms", "vol_vdi_ref", "volume_utils", "was", "x", "xenapi_conn", "xenapi_fake", "xenapi_session", "xenstore_data", "xenstore_value", "Test", "suite", "for", "XenAPI.\nUnit", "tests", "for", "Volume", "operations.\nUnit", "tests", "for", "VM", "operations.\nCreates", "and", "spawns", "a", "test", "instance.\nUnit", "tests", "for", "Diffie-Hellman", "code.\nUnit", "test", "for", "verifying", "migration-related", "actions.\nTest", "ImageType", "class.\nUnit", "tests", "for", "code", "that", "detects", "the", "ImageType.\nTest", "generating", "of", "local", "disks,", "like", "swap", "and", "ephemeral.\nUnit", "tests", "for", "testing", "we", "find", "the", "right", "SR.\nUnit", "tests", "for", "aggregate", "operations.\nStub", "dependencies", "for", "ResourcePool.\nA", "ResourcePool,", "use", "stub", "dependencies.\nUnit", "tests", "for", "live_migration.\nValidate", "that", "2.0", "is", "equivalent", "to", "1.8.", "FIXME:", "'sr_uuid',", "'introduce_sr_keys',", "sr_type", "and", "vdi_uuid\n", "can", "be", "removed", "from", "the", "dict", "when", "LP", "bug", "#1087308", "is", "fixed\n", "This", "shows", "how", "to", "test", "Ops", "classes'", "methods.\n", "check", "that", "the", "VM", "has", "a", "VBD", "attached", "to", "it\n", "Get", "XenAPI", "record", "for", "VBD\n", "This", "shows", "how", "to", "test", "when", "exceptions", "are", "raised.\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "Local", "root", "disk\n", "Instance", "VDI\n", "Only", "looks", "like", "instance", "VDI\n", "Note(sulo):", "We", "don't", "care", "about", "session", "id", "in", "test\n", "they", "will", "always", "differ", "so", "strip", "that", "out\n", "Set", "instance", "state", "to", "rescued\n", "Note(sulo):", "We", "don't", "care", "about", "session", "id", "in", "test\n", "they", "will", "always", "differ", "so", "strip", "that", "out\n", "Stubbing", "out", "firewall", "driver", "as", "previous", "stub", "sets", "alters\n", "xml", "rpc", "result", "parsing\n", "Stubbing", "out", "firewall", "driver", "as", "previous", "stub", "sets", "alters\n", "xml", "rpc", "result", "parsing\n", "Ensure", "VM", "was", "torn", "down\n", "Ensure", "VBDs", "were", "torn", "down\n", "Ensure", "task", "states", "changed", "in", "correct", "order\n", "Ensure", "VDIs", "were", "torn", "down\n", "Get", "Nova", "record", "for", "VM\n", "Get", "XenAPI", "record", "for", "VM\n", "Check", "that", "the", "VM", "is", "running", "according", "to", "Nova\n", "Check", "that", "the", "VM", "is", "running", "according", "to", "XenAPI.\n", "check", "that", "these", "are", "not", "set\n", "check", "that", "these", "are", "not", "set\n", "check", "that", "these", "are", "not", "set\n", "If", "the", "cache", "is", "turned", "on", "then", "the", "base", "disk", "will", "be\n", "there", "even", "after", "the", "cleanup\n", "Fake", "out", "inject_instance_metadata\n", "NOTE(tr3buchet):", "this", "is", "a", "terrible", "way", "to", "do", "this...\n", "ipxe", "inject", "shouldn't", "be", "called\n", "ipxe", "inject", "shouldn't", "be", "called\n", "ipxe", "inject", "shouldn't", "be", "called\n", "Test", "spawning", "with", "an", "empty", "dns", "list.\n", "m1.xlarge\n", "No", "additional", "VDI", "should", "be", "found.\n", "No", "additional", "VMs", "should", "be", "found.\n", "No", "additional", "VDI", "should", "be", "found.\n", "No", "additional", "VMs", "should", "be", "found.\n", "No", "additional", "VDI", "should", "be", "found.\n", "No", "additional", "VMs", "should", "be", "found.\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Capture", "the", "tee", ".../etc/network/interfaces", "command\n", "When", "mounting,", "create", "real", "files", "under", "the", "mountpoint", "to", "simulate\n", "files", "in", "the", "mounted", "filesystem\n", "mount", "point", "will", "be", "the", "last", "item", "of", "the", "command", "list\n", "Touch", "the", "file", "using", "open\n", "Umount", "would", "normally", "make", "files", "in", "the", "mounted", "filesystem\n", "disappear,", "so", "do", "that", "here\n", "tee", "must", "not", "run", "in", "this", "case,", "where", "an", "injection-capable\n", "guest", "agent", "is", "detected\n", "Reset", "network", "table\n", "Instance", "2", "will", "use", "vlan", "network", "(see", "db/fakes.py)\n", "TODO(salvatore-orlando):", "a", "complete", "test", "here", "would", "require\n", "a", "check", "for", "making", "sure", "the", "bridge", "for", "the", "VM's", "VIF", "is\n", "consistent", "with", "bridge", "specified", "in", "nova", "db\n", "Test", "spawning", "with", "key_data", "on", "an", "instance.", "Should", "use\n", "agent", "file", "injection.\n", "The", "following", "ssh", "key", "was", "injected", "by", "'\n", "Test", "spawning", "with", "key_data", "on", "an", "instance.", "Should", "use\n", "agent", "file", "injection.\n", "The", "following", "ssh", "key", "was", "injected", "by", "'\n", "Test", "spawning", "with", "injected_files.\n", "NOTE(johngarbutt):", "as", "returned", "by", "FreeBSD", "and", "Gentoo\n", "test", "that", "the", "original", "disk", "is", "preserved", "if", "rescue", "setup", "fails\n", "bug", "#1227898\n", "raise", "an", "error", "in", "the", "spawn", "setup", "process", "and", "trigger", "the\n", "undo", "manager", "logic:\n", "confirm", "original", "disk", "still", "exists:\n", "Unrescue", "expects", "the", "original", "instance", "to", "be", "powered", "off\n", "Ensure", "that", "it", "will", "not", "unrescue", "a", "non-rescued", "instance.\n", "Record", "all", "the", "xenapi", "calls,", "and", "return", "a", "fake", "list", "of", "hosts\n", "for", "the", "host.get_all", "call\n", "We", "expect", "the", "VM.pool_migrate", "call", "to", "have", "been", "called", "to\n", "migrate", "our", "instance", "to", "the", "'bar'", "host\n", "Paused", "instances", "still", "consume", "resources:\n", "Suspended", "instances", "do", "not", "consume", "memory:\n", "m1.large\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "m1.large\n", "Resize", "instance", "would", "be", "determined", "by", "the", "compute", "call\n", "Can", "convert", "from", "type", "id", "to", "type", "string.\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "Values", "from", "fake.create_local_srs", "(ext", "SR)\n", "Values", "from", "fake._plugin_xenhost_host_data\n", "No", "VMs", "running\n", "Must", "trigger", "construction", "of", "'host_state'", "property\n", "before", "introducing", "the", "stub", "which", "raises", "the", "error\n", "On", "the", "third", "call", "(the", "second", "below)", "change", "the", "hostname\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "m1.large\n", "Should", "not", "partition", "unless", "fail", "safes", "pass.\n", "Should", "not", "partition", "unless", "fail", "safes", "pass.\n", "Should", "not", "partition", "unless", "fail", "safes", "pass.\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "m1.large\n", "Test", "swap", "disk", "generation.\n", "Test", "ephemeral", "disk", "generation.\n910045.\n", "TODO(salvatore-orlando):", "this", "class", "and\n", "nova.tests.unit.virt.test_libvirt.IPTablesFirewallDriverTestCase\n", "share", "a", "lot", "of", "code.", "Consider", "abstracting", "common", "code", "in", "a", "base\n", "class", "for", "firewall", "driver", "testing.\n\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "Generated", "by", "iptables-save", "v1.4.10", "on", "Sat", "Feb", "19", "00:03:19", "2011',\n", "Completed", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Generated", "by", "iptables-save", "v1.4.4", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Completed", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Generated", "by", "iptables-save", "v1.4.4", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Completed", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Generated", "by", "ip6tables-save", "v1.4.4", "on", "Tue", "Jan", "18", "23:47:56", "2011',\n", "Completed", "on", "Tue", "Jan", "18", "23:47:56", "2011',\n')]\n", "This", "is", "pretty", "crude,", "but", "it'll", "do", "for", "now\n", "last", "two", "octets", "change\n", "This", "is", "pretty", "crude,", "but", "it'll", "do", "for", "now\n", "noqa\n", "Extra", "test", "for", "TCP", "acceptance", "rules\n", "Extra", "rules", "are", "for", "the", "DHCP", "request\n", "add", "a", "rule", "to", "the", "security", "group\n", "validate", "the", "extra", "rule\n", "Ensure", "StorageRepositoryNotFound", "is", "raise", "when", "wrong", "filter.\n", "Ensure", "the", "default", "local-storage", "is", "found.\n", "This", "test", "is", "only", "guaranteed", "if", "there", "is", "one", "host", "in", "the", "pool\n", "Ensure", "the", "SR", "is", "found", "when", "using", "a", "different", "filter.\n", "Ensure", "the", "default", "SR", "is", "found", "regardless", "of", "other-config.\n", "FIXME(sirp):", "convert", "this", "to", "use", "XenAPITestBaseNoDB\n", "Ensure", "join_slave", "gets", "called", "when", "the", "request", "gets", "to", "master.\n", "Ensure", "eject", "slave", "gets", "called.\n", "Ensure", "metadata", "are", "cleared", "after", "removal.\n", "Ensure", "AggregateError", "is", "raised", "if", "removing", "the", "master.\n", "Ensure", "we", "can", "remove", "a", "host", "from", "an", "aggregate", "even", "if", "in", "error.\n", "let's", "mock", "the", "fact", "that", "the", "aggregate", "is", "ready!\n", "let's", "mock", "the", "fact", "that", "the", "aggregate", "is", "in", "error!\n", "Ensure", "the", "undo", "operation", "works", "correctly", "on", "add.\n", "ensure", "method", "is", "present\n", "pass", "block_migration", "=", "True", "and", "migrate", "data\n", "pass", "block_migration", "=", "True", "and", "migrate", "data\n", "Add", "some", "system_metadata", "to", "ensure", "it", "doesn't", "get", "added\n", "to", "xenstore\n", "Check", "xenstore", "key", "sanitizing\n", "Check", "xenstore", "key", "sanitizing\n", "Test", "XenStore", "key", "sanitizing", "here,", "too.\n", "Import", "the", "plugin", "to", "extract", "its", "version"], "/Users/mehranhassani/repos/nova/nova/policies/certificates.py": ["POLICY_ROOT", "base", "certificates_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/021_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_attach_interfaces.py": ["AttachInterfacesPolicyEnforcementv21", "FAKE_BAD_NET_ID", "FAKE_NET_ID1", "FAKE_NET_ID2", "FAKE_NET_ID3", "FAKE_NOT_FOUND_PORT_ID", "FAKE_PORT_ID1", "FAKE_PORT_ID2", "FAKE_PORT_ID3", "FAKE_UUID1", "FAKE_UUID2", "InterfaceAttachTestsV21", "None", "NotImplementedError", "True", "_mock", "args", "attach_interfaces_v21", "attach_mock", "body", "compute_api", "context", "controller_cls", "ctxt", "exc", "exception", "fake_attach_interface", "fake_attach_interface_invalid_state", "fake_attach_interface_to_locked_server", "fake_detach_interface", "fake_detach_interface_from_locked_server", "fake_detach_interface_invalid_state", "fake_get_instance", "fake_instance", "fake_network_cache_model", "fake_networks", "fake_show_port", "fakes", "func", "get_mock", "in_use_exc", "instance", "isinstance", "kwargs", "mock", "mock_get", "network_id", "not_found_exc", "not_usable_exc", "objects", "param", "port", "port_data1", "port_data2", "port_data3", "port_id", "ports", "requested_ip", "result", "self", "show_port_patch", "status_int", "super", "test", "validate_exc", "vif", "if", "no", "network_id", "is", "given", "when", "add", "a", "port", "to", "an", "instance,", "use", "the\n", "first", "default", "network.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/releasenotes/source/conf.py": ["False", "copyright", "exclude_patterns", "extensions", "html_static_path", "html_theme", "html_use_index", "htmlhelp_basename", "latex_documents", "latex_elements", "locale_dirs", "man_pages", "master_doc", "nova_version", "project", "pygments_style", "release", "source_suffix", "templates_path", "texinfo_documents", "version", "If", "extensions", "(or", "modules", "to", "document", "with", "autodoc)", "are", "in", "another", "directory,\n", "add", "these", "directories", "to", "sys.path", "here.", "If", "the", "directory", "is", "relative", "to", "the\n", "documentation", "root,", "use", "os.path.abspath", "to", "make", "it", "absolute,", "like", "shown", "here.\nsys.path.insert(0,", "os.path.abspath('.'))\n", "--", "General", "configuration", "------------------------------------------------\n", "If", "your", "documentation", "needs", "a", "minimal", "Sphinx", "version,", "state", "it", "here.\nneeds_sphinx", "=", "'1.0'\n", "Add", "any", "Sphinx", "extension", "module", "names", "here,", "as", "strings.", "They", "can", "be\n", "extensions", "coming", "with", "Sphinx", "(named", "'sphinx.ext.*')", "or", "your", "custom\n", "ones.\n", "Add", "any", "paths", "that", "contain", "templates", "here,", "relative", "to", "this", "directory.\n", "The", "suffix", "of", "source", "filenames.\n", "The", "encoding", "of", "source", "files.\nsource_encoding", "=", "'utf-8-sig'\n", "The", "master", "toctree", "document.\n", "General", "information", "about", "the", "project.\n", "The", "version", "info", "for", "the", "project", "you're", "documenting,", "acts", "as", "replacement", "for\n", "|version|", "and", "|release|,", "also", "used", "in", "various", "other", "places", "throughout", "the\n", "built", "documents.\n\n", "The", "short", "X.Y", "version.\n", "The", "full", "version,", "including", "alpha/beta/rc", "tags.\n", "The", "language", "for", "content", "autogenerated", "by", "Sphinx.", "Refer", "to", "documentation\n", "for", "a", "list", "of", "supported", "languages.\nlanguage", "=", "None\n", "There", "are", "two", "options", "for", "replacing", "|today|:", "either,", "you", "set", "today", "to", "some\n", "non-false", "value,", "then", "it", "is", "used:\ntoday", "=", "''\n", "Else,", "today_fmt", "is", "used", "as", "the", "format", "for", "a", "strftime", "call.\ntoday_fmt", "=", "'%B", "%d,", "%Y'\n", "List", "of", "patterns,", "relative", "to", "source", "directory,", "that", "match", "files", "and\n", "directories", "to", "ignore", "when", "looking", "for", "source", "files.\n", "The", "reST", "default", "role", "(used", "for", "this", "markup:", "`text`)", "to", "use", "for", "all\n", "documents.\ndefault_role", "=", "None\n", "If", "true,", "'()'", "will", "be", "appended", "to", ":func:", "etc.", "cross-reference", "text.\nadd_function_parentheses", "=", "True\n", "If", "true,", "the", "current", "module", "name", "will", "be", "prepended", "to", "all", "description\n", "unit", "titles", "(such", "as", "..", "function::).\nadd_module_names", "=", "True\n", "If", "true,", "sectionauthor", "and", "moduleauthor", "directives", "will", "be", "shown", "in", "the\n", "output.", "They", "are", "ignored", "by", "default.\nshow_authors", "=", "False\n", "The", "name", "of", "the", "Pygments", "(syntax", "highlighting)", "style", "to", "use.\n", "A", "list", "of", "ignored", "prefixes", "for", "module", "index", "sorting.\nmodindex_common_prefix", "=", "[]\n", "If", "true,", "keep", "warnings", "as", "\"system", "message\"", "paragraphs", "in", "the", "built", "documents.\nkeep_warnings", "=", "False\n", "--", "Options", "for", "HTML", "output", "----------------------------------------------\n", "The", "theme", "to", "use", "for", "HTML", "and", "HTML", "Help", "pages.", "See", "the", "documentation", "for\n", "a", "list", "of", "builtin", "themes.\n", "Theme", "options", "are", "theme-specific", "and", "customize", "the", "look", "and", "feel", "of", "a", "theme\n", "further.", "For", "a", "list", "of", "options", "available", "for", "each", "theme,", "see", "the\n", "documentation.\nhtml_theme_options", "=", "{}\n", "Add", "any", "paths", "that", "contain", "custom", "themes", "here,", "relative", "to", "this", "directory.\nhtml_theme_path", "=", "[]\n", "The", "name", "for", "this", "set", "of", "Sphinx", "documents.", "If", "None,", "it", "defaults", "to\n", "\"<project>", "v<release>", "documentation\".\nhtml_title", "=", "None\n", "A", "shorter", "title", "for", "the", "navigation", "bar.", "Default", "is", "the", "same", "as", "html_title.\nhtml_short_title", "=", "None\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top\n", "of", "the", "sidebar.\nhtml_logo", "=", "None\n", "The", "name", "of", "an", "image", "file", "(within", "the", "static", "path)", "to", "use", "as", "favicon", "of", "the\n", "docs.", "This", "file", "should", "be", "a", "Windows", "icon", "file", "(.ico)", "being", "16x16", "or", "32x32\n", "pixels", "large.\nhtml_favicon", "=", "None\n", "Add", "any", "paths", "that", "contain", "custom", "static", "files", "(such", "as", "style", "sheets)", "here,\n", "relative", "to", "this", "directory.", "They", "are", "copied", "after", "the", "builtin", "static", "files,\n", "so", "a", "file", "named", "\"default.css\"", "will", "overwrite", "the", "builtin", "\"default.css\".\n", "Add", "any", "extra", "paths", "that", "contain", "custom", "files", "(such", "as", "robots.txt", "or\n", ".htaccess)", "here,", "relative", "to", "this", "directory.", "These", "files", "are", "copied\n", "directly", "to", "the", "root", "of", "the", "documentation.\nhtml_extra_path", "=", "[]\n", "If", "not", "'',", "a", "'Last", "updated", "on:'", "timestamp", "is", "inserted", "at", "every", "page", "bottom,\n", "using", "the", "given", "strftime", "format.\nhtml_last_updated_fmt", "=", "'%b", "%d,", "%Y'\n", "If", "true,", "SmartyPants", "will", "be", "used", "to", "convert", "quotes", "and", "dashes", "to\n", "typographically", "correct", "entities.\nhtml_use_smartypants", "=", "True\n", "Custom", "sidebar", "templates,", "maps", "document", "names", "to", "template", "names.\nhtml_sidebars", "=", "{}\n", "Additional", "templates", "that", "should", "be", "rendered", "to", "pages,", "maps", "page", "names", "to\n", "template", "names.\nhtml_additional_pages", "=", "{}\n", "If", "false,", "no", "module", "index", "is", "generated.\nhtml_domain_indices", "=", "True\n", "If", "false,", "no", "index", "is", "generated.\n", "If", "true,", "the", "index", "is", "split", "into", "individual", "pages", "for", "each", "letter.\nhtml_split_index", "=", "False\n", "If", "true,", "links", "to", "the", "reST", "sources", "are", "added", "to", "the", "pages.\nhtml_show_sourcelink", "=", "True\n", "If", "true,", "\"Created", "using", "Sphinx\"", "is", "shown", "in", "the", "HTML", "footer.", "Default", "is", "True.\nhtml_show_sphinx", "=", "True\n", "If", "true,", "\"(C)", "Copyright", "...\"", "is", "shown", "in", "the", "HTML", "footer.", "Default", "is", "True.\nhtml_show_copyright", "=", "True\n", "If", "true,", "an", "OpenSearch", "description", "file", "will", "be", "output,", "and", "all", "pages", "will\n", "contain", "a", "<link>", "tag", "referring", "to", "it.", "The", "value", "of", "this", "option", "must", "be", "the\n", "base", "URL", "from", "which", "the", "finished", "HTML", "is", "served.\nhtml_use_opensearch", "=", "''\n", "This", "is", "the", "file", "name", "suffix", "for", "HTML", "files", "(e.g.", "\".xhtml\").\nhtml_file_suffix", "=", "None\n", "Output", "file", "base", "name", "for", "HTML", "help", "builder.\n", "--", "Options", "for", "LaTeX", "output", "---------------------------------------------\n", "The", "paper", "size", "('letterpaper'", "or", "'a4paper').\n'papersize':", "'letterpaper',\n", "The", "font", "size", "('10pt',", "'11pt'", "or", "'12pt').\n'pointsize':", "'10pt',\n", "Additional", "stuff", "for", "the", "LaTeX", "preamble.\n'preamble':", "'',\n", "Grouping", "the", "document", "tree", "into", "LaTeX", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,\n", "author,", "documentclass", "[howto,", "manual,", "or", "own", "class]).\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top", "of\n", "the", "title", "page.\nlatex_logo", "=", "None\n", "For", "\"manual\"", "documents,", "if", "this", "is", "true,", "then", "toplevel", "headings", "are", "parts,\n", "not", "chapters.\nlatex_use_parts", "=", "False\n", "If", "true,", "show", "page", "references", "after", "internal", "links.\nlatex_show_pagerefs", "=", "False\n", "If", "true,", "show", "URL", "addresses", "after", "external", "links.\nlatex_show_urls", "=", "False\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\nlatex_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\nlatex_domain_indices", "=", "True\n", "--", "Options", "for", "manual", "page", "output", "---------------------------------------\n", "One", "entry", "per", "manual", "page.", "List", "of", "tuples\n", "(source", "start", "file,", "name,", "description,", "authors,", "manual", "section).\n", "If", "true,", "show", "URL", "addresses", "after", "external", "links.\nman_show_urls", "=", "False\n", "--", "Options", "for", "Texinfo", "output", "-------------------------------------------\n", "Grouping", "the", "document", "tree", "into", "Texinfo", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,", "author,\n", "dir", "menu", "entry,", "description,", "category)\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\ntexinfo_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\ntexinfo_domain_indices", "=", "True\n", "How", "to", "display", "URL", "addresses:", "'footnote',", "'no',", "or", "'inline'.\ntexinfo_show_urls", "=", "'footnote'\n", "If", "true,", "do", "not", "generate", "a", "@detailmenu", "in", "the", "\"Top\"", "node's", "menu.\ntexinfo_no_detailmenu", "=", "False\n", "--", "Options", "for", "Internationalization", "output", "------------------------------"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/migrationops.py": ["Exception", "False", "LOG", "None", "True", "_", "_LE", "_LW", "__name__", "base_disk_path", "base_vhd_copy_path", "base_vhd_path", "block_device_info", "block_device_manager", "configdrive", "configdrive_path", "constants", "context", "curr_root_gb", "curr_size", "dest", "dest_path", "diff_vhd_path", "disk_file", "disk_files", "disk_info", "enumerate", "eph", "eph_name", "eph_vhd_info", "ephemerals", "ex", "exception", "excutils", "existing_eph_path", "flavor", "image_meta", "imagecache", "index", "instance", "instance_name", "instance_path", "len", "logging", "migration", "network_info", "new_eph_gb", "new_root_gb", "new_size", "object", "objects", "os", "pathutils", "power_on", "resize_instance", "retry_interval", "revert_path", "root_device", "root_vhd_info", "root_vhd_path", "self", "shared_storage", "src_base_disk_path", "sum", "timeout", "units", "utilsfactory", "vhd_info", "vhd_path", "vm_gen", "vmops", "volume_drives", "volumeops", "TODO(mikal):", "it", "would", "be", "nice", "if", "this", "method", "took", "a", "full", "instance,\n", "because", "it", "could", "then", "be", "passed", "to", "the", "log", "messages", "below.\n", "Since", "source", "and", "target", "are", "the", "same,", "we", "copy", "the", "files", "to\n", "a", "temporary", "location", "before", "moving", "them", "into", "place.\n", "This", "applies", "when", "the", "migration", "target", "is", "the", "source", "host", "or\n", "when", "shared", "storage", "is", "used", "for", "the", "instance", "files.\n", "Log", "and", "ignore", "this", "exception\n", "disk_info", "is", "not", "used\n", "Replace", "the", "differential", "VHD", "with", "the", "merged", "one\n", "A", "differential", "VHD", "cannot", "be", "resized.", "This", "limitation\n", "does", "not", "apply", "to", "the", "VHDX", "format.\n", "If", "the", "location", "of", "the", "base", "host", "differs", "between", "source\n", "and", "target", "hosts", "we", "need", "to", "reconnect", "the", "base", "disk\n", "NOTE(claudiub):", "Resize", "only", "if", "there", "is", "one", "ephemeral.", "If", "there\n", "are", "more", "than", "1,", "resizing", "them", "can", "be", "problematic.", "This", "behaviour\n", "also", "exists", "in", "the", "libvirt", "driver", "and", "it", "has", "to", "be", "addressed", "in\n", "the", "future.\n", "New", "ephemeral", "size", "is", "different", "from", "the", "original", "ephemeral", "size\n", "and", "there", "are", "multiple", "ephemerals.\n", "ephemerals", "should", "have", "existed.\n", "create", "ephemerals\n", "ephemerals", "exist.", "resize", "them.\n", "ephemeral", "new", "size", "is", "0,", "remove", "it."], "/Users/mehranhassani/repos/nova/nova/common/config.py": ["cfg", "cors", "Update", "default", "configuration", "options", "for", "oslo.middleware.", "CORS", "Defaults\n", "TODO(krotscheck):", "Update", "with", "https://review.openstack.org/#/c/285368/"], "/Users/mehranhassani/repos/nova/nova/loadables.py": ["classes", "cls", "cls_name", "dir", "dirnames", "dirpath", "error_str", "exception", "ext", "filenames", "fname", "getattr", "importutils", "inspect", "issubclass", "itm", "loadable_class_names", "loadable_cls_type", "mod", "mod_classes", "module", "module_name", "obj", "obj_name", "object", "os", "relpath", "relpkg", "root", "self", "sys", "Get", "the", "classes", "from", "a", "module", "that", "match", "the", "type", "we", "want.", "Skip", "objects", "that", "are", "meant", "to", "be", "private.\n", "Get", "list", "of", "classes", "from", "a", "function"], "/Users/mehranhassani/repos/nova/nova/tests/unit/image/test_fake.py": ["FakeImageServiceTestCase", "None", "StringIO", "blob", "bool", "check_is_bool", "context", "datetime", "exception", "image", "image_count", "img", "index", "isinstance", "key", "keys", "len", "nova", "res", "s1", "s2", "self", "set", "super", "test", "val", "Make", "sure", "there's", "still", "one", "left"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/server_external_events.py": ["False", "create", "external_event_obj"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_exact_core_filter.py": ["TestExactCoreFilter", "exact_core_filter", "fakes", "host", "host_attributes", "objects", "self", "spec_obj", "super", "test", "vcpus"], "/Users/mehranhassani/repos/nova/nova/ipv6/api.py": ["CONF", "IMPL", "None", "driver", "ipv6_address", "mac", "nova", "prefix", "project_id", "reset_backend"], "/Users/mehranhassani/repos/nova/nova/notifications/objects/exception.py": ["VERSION", "base", "classmethod", "cls", "fault", "fields", "inspect", "module", "module_name", "nova_base", "six", "trace", "Version", "1.0:", "Initial", "version\n", "TODO(gibi):", "apply", "strutils.mask_password", "on", "exception_message", "and\n", "consider", "emitting", "the", "exception_message", "only", "if", "the", "safe", "flag", "is\n", "true", "in", "the", "exception", "like", "in", "the", "REST", "API\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/notifications/__init__.py": ["Note(gibi):", "Importing", "publicly", "called", "functions", "so", "the", "caller", "code", "does", "not\n", "need", "to", "be", "changed", "after", "we", "moved", "these", "function", "inside", "the", "package\n", "Todo(gibi):", "remove", "these", "imports", "after", "legacy", "notifications", "using", "these", "are\n", "transformed", "to", "versioned", "notifications\n", "noqa\n", "noqa\n", "noqa\n", "noqa\n", "noqa\n", "noqa\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/api/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/base.py": ["COMPUTE_API", "NETWORK_ATTACH_EXTERNAL", "RULE_ADMIN_API", "RULE_ADMIN_OR_OWNER", "RULE_ANY", "policy", "rules"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/014_keypairs.py": ["Column", "DateTime", "Enum", "False", "Integer", "MetaData", "String", "Table", "Text", "True", "UniqueConstraint", "enum", "keypair", "keypairs", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_block_device.py": ["False", "None", "True", "_TestBlockDeviceMappingListObject", "_TestBlockDeviceMappingObject", "attr", "bdm", "bdm_create_mock", "bdm_del", "bdm_id", "bdm_list", "bdm_object", "bdm_update", "bdm_update_mock", "bdm_update_or_create_mock", "bdms_by_uuid", "block_device_obj", "boot_index", "cell_type", "cells_destroy", "cells_rpcapi", "cells_update_mock", "context", "create", "ctx", "db", "device_name", "dicts", "exception", "fake_bdm", "fake_bdm_vol", "fake_bdm_vol1", "fake_bdm_vol2", "fake_block_device", "fake_inst", "fake_instance", "faked", "fakes", "get_all", "get_all_by_inst", "get_all_by_inst_uuids", "get_by_vol_id", "getattr", "got", "instance", "instance_uuid", "k", "len", "list", "method", "mock", "mock_get", "obj_bdm", "object", "objects", "objs", "primitive", "self", "six", "test", "test_objects", "update_device_name", "update_or_create", "uuids", "v", "values", "vol_bdm", "zip", "NOTE(danms):", "Include", "two", "results", "to", "make", "sure", "the", "first", "was", "picked.\n", "An", "invalid", "second", "item", "shouldn't", "be", "touched", "--", "if", "it", "is,", "it'll\n", "fail", "from_db_object()."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/231_add_ephemeral_key_uuid.py": ["Column", "MetaData", "None", "String", "Table", "True", "ephemeral_key_uuid", "instances", "meta", "migrate_engine", "shadow_instances", "Function", "adds", "ephemeral", "storage", "encryption", "key", "uuid", "field."], "/Users/mehranhassani/repos/nova/nova/scheduler/ironic_host_manager.py": ["CONF", "IronicHostManager", "IronicNodeState", "LOG", "None", "__name__", "c", "compute", "compute_nodes", "context", "context_module", "host", "host_manager", "ht", "kwargs", "logging", "node", "non_ironic_computes", "nova", "obj_fields", "objects", "self", "spec", "spec_obj", "staticmethod", "super", "Update", "information", "about", "a", "host", "from", "a", "ComputeNode", "object.\nConsume", "nodes", "entire", "resources", "regardless", "of", "instance", "request.\nIronic", "HostManager", "class.\nFactory", "function/property", "to", "create", "a", "new", "HostState.\nIronic", "hosts", "should", "not", "pass", "instance", "info.\nIronic", "hosts", "should", "not", "pass", "instance", "info.", "NOTE(jichenjc):", "if", "the", "compute", "record", "is", "just", "created", "but", "not", "updated\n", "some", "field", "such", "as", "free_disk_gb", "can", "be", "None\n", "update", "allocation", "ratios", "given", "by", "the", "ComputeNode", "object"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_task_log.py": ["NOW", "None", "_TestTaskLog", "_TestTaskLogList", "datetime", "dict", "enumerate", "fake_task_log", "fake_task_logs", "index", "iso8601", "mock", "mock_begin_task", "mock_end_task", "mock_get", "mock_get_all", "object", "objects", "self", "task_log", "task_logs", "test_objects", "timeutils", "utils"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_fixed_ips.py": ["False", "FixedIpTest", "None", "address", "columns_to_join", "context", "dict", "exception", "fake_fixed_ip_get_by_address", "fake_fixed_ip_update", "fake_fixed_ips", "fixed_ip", "instance", "key", "kwargs", "microversion", "project", "response", "sample_dir", "scenarios", "self", "super", "test_network", "test_servers", "test_utils", "uuids", "values", "Reserve", "a", "Fixed", "IP.\n", "Return", "data", "about", "the", "given", "fixed", "ip.\n", "NOTE(gmann):", "microversion", "tests", "do", "not", "need", "to", "run", "for", "v2", "API\n", "so", "defining", "scenarios", "only", "for", "v2.4", "which", "will", "run", "the", "original", "tests\n", "by", "appending", "'(v2_4)'", "in", "test_id."], "/Users/mehranhassani/repos/nova/nova/servicegroup/drivers/base.py": ["None", "NotImplementedError", "group", "member", "object", "self", "service", "Base", "class", "for", "all", "ServiceGroup", "drivers.\nCheck", "whether", "the", "given", "member", "is", "up."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/345_require_online_migration_completion.py": ["MetaData", "Table", "True", "_", "aggregates", "base_msg", "count", "exception", "func", "instance_groups", "instance_types", "keypairs", "meta", "migrate_engine", "msg", "select", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_services.py": ["ADMIN_API", "None", "ServicesJsonTest", "True", "api_sample_base", "microversion", "response", "sample_dir", "scenarios", "self", "subs", "super", "test_services", "utils_fixture", "Return", "a", "list", "of", "all", "agent", "builds.\nEnable", "an", "existing", "agent", "build.\nDisable", "an", "existing", "agent", "build.\nDisable", "an", "existing", "service", "and", "log", "the", "reason.\nDelete", "an", "existing", "service.\nReturn", "a", "list", "of", "all", "agent", "builds.\nSet", "forced_down", "flag", "NOTE(gryf):", "There", "is", "no", "need", "to", "run", "those", "tests", "on", "v2", "API.", "Only\n", "scenarios", "for", "v2_11", "will", "be", "run."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/pathutils.py": ["CONF", "ERROR_INVALID_NAME", "False", "LOG", "None", "True", "WindowsError", "_", "__name__", "args", "base_dir", "configdrive_image_name", "configdrive_path", "console_log_path", "constants", "create_dir", "dest", "dest_dir", "dest_host", "dict", "dir_name", "eph_name", "ex", "exception", "ext", "file_name", "file_path", "format_ext", "image_name", "instance_dir", "instance_name", "instance_path", "instances_path", "kwargs", "local_inst_dir", "local_instance_path", "local_log_path", "local_log_paths", "logging", "nova", "os", "path", "pathutils", "remote_inst_dir", "remote_log_path", "remote_log_paths", "remote_server", "remove_dir", "rescue", "self", "shared_storage", "src_dir", "src_path", "tempfile", "test_path", "time", "tmp_file", "vhd_path", "vhd_path_func", "zip", "NOTE(claudiub):", "part", "of", "the", "pre-existing", "PathUtils", "is", "nova-specific", "and\n", "it", "does", "not", "belong", "in", "the", "os-win", "library.", "In", "order", "to", "ensure", "the", "same\n", "functionality", "with", "the", "least", "amount", "of", "changes", "necessary,", "adding", "as", "a", "mixin\n", "the", "os_win.pathutils.PathUtils", "class", "into", "this", "PathUtils.\n", "Use", "an", "administrative", "share\n", "Note:", "it", "is", "possible", "that", "the", "path", "doesn't", "exist\n", "Check", "if", "shared", "storage", "is", "being", "used", "by", "creating", "a", "temporary\n", "file", "at", "the", "destination", "path", "and", "checking", "if", "it", "exists", "at", "the\n", "source", "path.\n", "Checks", "if", "the", "instances", "dir", "from", "a", "remote", "host", "points\n", "to", "the", "same", "storage", "location", "as", "the", "local", "instances", "dir."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/extended_status.py": ["ALIAS", "ExtendedStatusController", "False", "alias", "context", "controller", "db_instance", "es_policies", "extension", "extensions", "id", "instance", "key", "list", "name", "req", "resp_obj", "self", "server", "servers", "state", "version", "wsgi", "The", "Extended", "Status", "Admin", "API", "extension.\nExtended", "Status", "support.", "Note(gmann):", "Removed", "'locked_by'", "from", "extended", "status\n", "to", "make", "it", "same", "as", "V2.", "If", "needed", "it", "can", "be", "added", "with\n", "microversion.\n", "NOTE(mriedem):", "The", "OS-EXT-STS", "prefix", "should", "not", "be", "used", "for", "new\n", "attributes", "after", "v2.1.", "They", "are", "only", "in", "v2.1", "for", "backward", "compat\n", "with", "v2.0.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'show'", "method.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'detail'", "method."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/guest.py": ["AttributeError", "BlockDevice", "BlockDeviceJobInfo", "COMMIT_DEFAULT_BANDWIDTH", "Exception", "False", "JobInfo", "LIBVIRT_POWER_STATE", "LOG", "None", "REBASE_DEFAULT_BANDWIDTH", "True", "VCPUInfo", "VIR_DOMAIN_BLOCKED", "VIR_DOMAIN_CRASHED", "VIR_DOMAIN_NOSTATE", "VIR_DOMAIN_PAUSED", "VIR_DOMAIN_PMSUSPENDED", "VIR_DOMAIN_RUNNING", "VIR_DOMAIN_SHUTDOWN", "VIR_DOMAIN_SHUTOFF", "_", "_LE", "_LW", "__name__", "_do_wait_and_retry_detach", "_have_job_stats", "async", "bandwidth", "base", "cfg", "classmethod", "cls", "code", "compat", "conf", "config", "copy", "cpu", "cur", "destination", "dev", "device", "device_xml", "devs", "devtype", "disk", "disk_only", "doc", "dom", "dom_info", "domain", "domain_xml", "dump_inactive", "dump_migratable", "dump_sensitive", "e", "encodeutils", "end", "errcode", "errmsg", "error_code", "etree", "ex", "exception", "excutils", "flags", "get_device_conf_func", "guest", "hardware", "host", "id", "importutils", "inc_sleep_time", "info", "int", "interface", "interfaces", "isinstance", "job", "kwargs", "libvirt", "live", "logging", "loopingcall", "max_retry_count", "max_sleep_time", "migrate_uri", "msg", "mstime", "new_pass", "no_metadata", "node", "nodes", "nseconds", "object", "params", "pause", "persistent", "pivot", "power_state", "property", "quiesce", "reason", "relative", "reuse_ext", "seconds", "self", "shallow", "size_kb", "state", "stats", "status", "t", "target", "time", "top", "user", "utils", "vconfig", "vcpu", "vcpus", "xml", "Stops", "a", "running", "guest.\nInjects", "an", "NMI", "to", "a", "guest.\nResumes", "a", "paused", "guest.\nEnables", "hairpin", "mode", "for", "this", "guest.\nReturns", "a", "list", "of", "all", "network", "interfaces", "for", "this", "domain.\nUndefines", "a", "domain", "from", "hypervisor.\nWhether", "domain", "config", "is", "persistently", "stored", "on", "the", "host.\nReturns", "a", "block", "device", "wrapper", "for", "disk.\nConfigures", "a", "new", "user", "password.\nFreeze", "filesystems", "within", "guest.\nThaw", "filesystems", "within", "guest.\nShutdown", "guest\nRequests", "to", "abort", "current", "background", "job\nSwitch", "running", "live", "migration", "to", "post-copy", "mode\nWrapper", "around", "block", "device", "API\nResize", "block", "device", "to", "KiB", "size", "The", "DOMAIN_BLOCKED", "state", "is", "only", "valid", "in", "Xen.", "It", "means", "that\n", "the", "VM", "is", "running", "and", "the", "vCPU", "is", "idle.", "So,", "we", "map", "it", "to", "RUNNING\n", "The", "libvirt", "API", "doc", "says", "that", "DOMAIN_SHUTDOWN", "means", "the", "domain\n", "is", "being", "shut", "down.", "So", "technically", "the", "domain", "is", "still\n", "running.", "SHUTOFF", "is", "the", "real", "powered", "off", "state.", "But", "we", "will", "map\n", "both", "to", "SHUTDOWN", "anyway.\n", "http://libvirt.org/html/libvirt-libvirt.html\n", "The", "highest", "priority", "is", "not", "to", "let", "this", "method", "crash", "and", "thus\n", "disrupt", "its", "caller", "in", "any", "way.", "So", "we", "swallow", "this", "error", "here,\n", "to", "be", "absolutely", "safe.\n", "NOTE(leehom)", "LibvirtConfigGuestInterface", "get", "from", "domain", "and\n", "LibvirtConfigGuestInterface", "generated", "by\n", "nova.virt.libvirt.vif.get_config", "must", "be", "identical.\n", "Older", "versions", "of", "libvirt", "don't", "support", "undefine", "flags,\n", "trying", "to", "remove", "managed", "image\n", "Device", "is", "already", "detached", "from", "persistent", "domain\n", "and", "only", "transient", "domain", "needs", "update\n", "In", "migrateToURI3", "this", "paramenter", "is", "searched", "in\n", "the", "`params`", "dict\n", "Remote", "libvirt", "doesn't", "support", "new", "API\n", "Transient", "guest", "finished", "migration,", "so", "it", "has", "gone\n", "away", "completclsely\n", "Local", "python", "binding", "doesn't", "support", "new", "API\n", "in", "MiB/s", "-", "0", "unlimited\n", "in", "MiB/s", "-", "0", "unlimited\n", "libvirt's", "blockJobInfo()", "raises", "libvirt.libvirtError", "if", "there", "was", "an\n", "error.", "It", "returns", "{}", "if", "the", "job", "no", "longer", "exists,", "or", "a", "fully\n", "populated", "dict", "if", "the", "job", "exists.\n", "The", "job", "no", "longer", "exists\n", "NOTE(mdbooth):", "This", "method", "polls", "for", "block", "job", "completion.", "It", "returns\n", "true", "if", "either", "we", "get", "a", "status", "which", "indicates", "completion,", "or", "there\n", "is", "no", "longer", "a", "record", "of", "the", "job.", "Ideally", "this", "method", "and", "its\n", "callers", "would", "be", "rewritten", "to", "consume", "libvirt", "events", "from", "the", "job.\n", "This", "would", "provide", "a", "couple", "of", "advantages.", "Firstly,", "as", "it", "would", "no\n", "longer", "be", "polling", "it", "would", "notice", "completion", "immediately", "rather", "than\n", "at", "the", "next", "0.5s", "check,", "and", "would", "also", "consume", "fewer", "resources.\n", "Secondly,", "with", "the", "current", "method", "we", "only", "know", "that", "'no", "job'\n", "indicates", "completion.", "It", "does", "not", "necessarily", "indicate", "successful\n", "completion:", "the", "job", "could", "have", "failed,", "or", "been", "cancelled.", "When\n", "polling", "for", "block", "job", "info", "we", "have", "no", "way", "to", "detect", "this,", "so", "we\n", "assume", "success.\n", "If", "the", "job", "no", "longer", "exists,", "it", "is", "because", "it", "has", "completed\n", "NOTE(mdbooth):", "See", "comment", "above:", "it", "may", "not", "have", "succeeded.\n", "NOTE(slaweq):", "because", "of", "bug", "in", "libvirt,", "which", "is", "described", "in\n", "http://www.redhat.com/archives/libvir-list/2016-September/msg00017.html\n", "if", "status.end", "==", "0", "job", "is", "not", "started", "yet", "so", "it", "is", "not", "finished\n", "NOTE(mdbooth):", "The", "fix", "was", "committed", "upstream", "here:\n", "http://libvirt.org/git/?p=libvirt.git;a=commit;h=988218c\n", "The", "earliest", "tag", "which", "contains", "this", "commit", "is", "v2.3.0-rc1,", "so", "we\n", "should", "be", "able", "to", "remove", "this", "workaround", "when", "MIN_LIBVIRT_VERSION\n", "reaches", "2.3.0,", "or", "we", "move", "to", "handling", "job", "events", "instead.\n", "Make", "the", "old", "virDomainGetJobInfo", "method", "look", "similar", "to", "the\n", "modern", "virDomainGetJobStats", "method\n", "When", "migration", "of", "a", "transient", "guest", "completes,", "the", "guest\n", "goes", "away", "so", "we'll", "see", "NO_DOMAIN", "error", "code\n\n", "When", "migration", "of", "a", "persistent", "guest", "completes,", "the", "guest\n", "merely", "shuts", "off,", "but", "libvirt", "unhelpfully", "raises", "an\n", "OPERATION_INVALID", "error", "code\n\n", "Lets", "pretend", "both", "of", "these", "mean", "success"], "/Users/mehranhassani/repos/nova/nova/conf/upgrade_levels.py": ["cfg", "conf", "upgrade_group", "upgrade_levels_opts", "TODO(sneti):", "Add", "default=auto", "for", "compute"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_snapshotops.py": ["False", "None", "SnapshotOpsTestCase", "base_dest_disk_path", "base_disk_path", "basename", "dest_vhd_path", "expected", "expected_update", "fake_exp_dir", "fake_instance", "fake_snapshot_path", "fake_src_path", "glance_image_service", "image_metadata", "mock", "mock_get_remote_image_service", "mock_get_vhd_path", "mock_instance", "mock_lookup_path", "mock_reconnect", "mock_save_glance_image", "mock_update", "os", "self", "snapshotops", "super", "task_states", "test_base", "Unit", "tests", "for", "the", "Hyper-V", "SnapshotOps", "class."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_password.py": ["ServerPasswordPolicyEnforcementV21", "ServerPasswordTestV21", "compute", "content_type", "context", "ctxt", "delete_call", "eval", "exc", "exception", "fake_convert_password", "fake_extract_password", "fake_instance", "fakes", "instance", "method", "mock", "password", "res", "rule_name", "self", "server_password", "server_password_v21", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_create_backup.py": ["CreateBackupSamplesJsonTest", "fake", "mock", "mock_method", "response", "sample_dir", "self", "super", "test_servers", "Get", "api", "samples", "to", "backup", "server", "request."], "/Users/mehranhassani/repos/nova/nova/virt/volumeutils.py": ["None", "connector", "execute", "iscsi", "putils", "root_helper", "utils", "Get", "iscsi", "initiator", "name", "for", "this", "machine.", "so", "we", "can", "mock", "out", "the", "execute", "itself\n", "in", "unit", "tests."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/instance_usage_audit_log.py": ["ALIAS", "CONF", "InstanceUsageAuditLogController", "None", "ValueError", "_", "alias", "before", "before_date", "begin", "compute", "context", "datetime", "dict", "done_hosts", "end", "ext", "extensions", "filters", "hosts", "id", "iual_policies", "len", "list", "log", "missing_hosts", "msg", "name", "nova", "overall_status", "req", "running_hosts", "seen_hosts", "self", "serv", "services", "set", "str", "task_log", "task_logs", "tl", "tlog", "total_errors", "total_items", "utils", "version", "webob", "wsgi", "Admin-only", "Task", "Log", "Monitoring.", "We", "do", "this", "in", "this", "way", "to", "include", "disabled", "compute", "services,\n", "which", "can", "have", "instances", "on", "them.", "(mdragon)"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_diagnostics.py": ["ALIAS", "NotImplementedError", "ServerDiagnosticsController", "alias", "common", "compute", "context", "e", "exception", "extensions", "instance", "name", "parent_def", "req", "resources", "sd_policies", "self", "server_id", "state_error", "version", "webob", "wsgi", "Allow", "Admins", "to", "view", "server", "diagnostics", "through", "server", "action.", "NOTE(gmann):", "To", "make", "V21", "same", "as", "V2", "API,", "this", "method", "will", "call\n", "'get_diagnostics'", "instead", "of", "'get_instance_diagnostics'.\n", "In", "future,", "'get_instance_diagnostics'", "needs", "to", "be", "called", "to\n", "provide", "VM", "diagnostics", "in", "a", "defined", "format", "for", "all", "driver.\n", "BP", "-", "https://blueprints.launchpad.net/nova/+spec/v3-diagnostics."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_vcpu_model.py": ["ValueError", "_TestVirtCPUFeatureObj", "_TestVirtCPUModel", "fake_cpu_model_feature", "fake_cpu_model_feature_obj", "fake_vcpumodel", "fake_vcpumodel_dict", "feature", "model", "modelin", "modelout", "obj", "obj_fields", "object", "objects", "self", "setattr", "test_objects"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/fakes.py": ["COMPUTE_NODES", "FakeHostState", "False", "NUMA_TOPOLOGIES_W_HT", "NUMA_TOPOLOGY", "None", "SERVICES", "True", "attribute_dict", "context", "datetime", "driver", "filter_properties", "host", "host_manager", "inst", "instances", "key", "node", "objects", "request_spec", "self", "service", "services", "set", "setattr", "six", "super", "val", "Broken", "entry"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/image_size.py": ["ALIAS", "False", "ImageSizeController", "alias", "context", "controller", "extension", "extensions", "id", "image", "image_cache", "image_cached", "image_resp", "images_resp", "is_policies", "key", "list", "name", "req", "resp_obj", "self", "version", "wsgi", "Adds", "image", "size", "to", "image", "listings.", "NOTE(mriedem):", "The", "OS-EXT-*", "prefix", "should", "not", "be", "used", "for", "new\n", "attributes", "after", "v2.1.", "They", "are", "only", "in", "v2.1", "for", "backward", "compat\n", "with", "v2.0.\n", "image", "guaranteed", "to", "be", "in", "the", "cache", "due", "to", "the", "core", "API", "adding\n", "it", "in", "its", "'show'", "method\n", "images", "guaranteed", "to", "be", "in", "the", "cache", "due", "to", "the", "core", "API", "adding\n", "it", "in", "its", "'detail'", "method"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/hypervisors.py": ["False", "_collection_name", "coll_name", "common", "detail", "hypervisors", "request", "self"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/aggregate_image_properties_isolation.py": ["AttributeError", "CONF", "False", "LOG", "None", "True", "_LW", "__name__", "cfg_namespace", "cfg_separator", "filters", "host_state", "image_props", "key", "logging", "metadata", "nova", "options", "prop", "run_filter_once_per_request", "self", "six", "spec_obj", "str", "utils", "AggregateImagePropertiesIsolation", "works", "with", "image", "properties.", "Aggregate", "data", "and", "instance", "type", "does", "not", "change", "within", "a", "request\n", "NOTE(sbauza):", "Aggregate", "metadata", "is", "only", "strings,", "we", "need", "to\n", "stringify", "the", "property", "to", "match", "with", "the", "option\n", "TODO(sbauza):", "Fix", "that", "very", "ugly", "pattern", "matching"], "/Users/mehranhassani/repos/nova/tools/regression_tester.py": ["False", "True", "__name__", "args", "cmd", "expect_failure", "fail_ok", "main", "new_branch", "obj", "options", "optparse", "original_branch", "parser", "print", "run", "string", "subprocess", "sys", "test", "test_list", "test_works", "tests", "usage", "run", "new", "tests", "with", "old", "code\n", "identify", "which", "tests", "have", "changed\n", "run", "new", "tests,", "expect", "them", "to", "fail\n", "cleanup"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_quobyte.py": ["False", "True", "cmd", "conf", "config_file_dummy", "connection_info", "exception", "exe_side_effect", "exec_side_effect", "exerror", "expected_commands", "export_mnt_base", "export_string", "file_path", "fileutils", "image_format", "libvirt_driver", "libvirt_utils", "mnt_base", "mock", "mock_access", "mock_debug", "mock_ensure_tree", "mock_exception", "mock_execute", "mock_is_mounted", "mock_mount_volume", "mock_umount_volume", "mock_validate_volume", "name", "os", "processutils", "quobyte", "quobyte_volume", "self", "test", "test_volume", "tree", "utils", "Unit", "tests", "for", "the", "Quobyte", "volume", "driver", "module.\nTests", "the", "nova.virt.libvirt.volume.quobyte", "module", "utilities.\nTests", "the", "LibvirtQuobyteVolumeDriver", "class."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/security_group_default_rules.py": ["ALIAS", "MAX_PROXY_API_SUPPORT_VERSION", "None", "SecurityGroupDefaultRulesController", "_", "alias", "body", "cidr", "context", "ex", "exc", "exception", "extensions", "fmt_rule", "from_port", "id", "ip_protocol", "msg", "name", "openstack_driver", "req", "resources", "ret", "rule", "rule_fmt", "security_group_rule", "self", "sg", "sg_rule", "sgdr_policies", "to_port", "values", "version", "wsgi", "Default", "rules", "for", "security", "group", "support."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_mapping.py": ["None", "_TestInstanceMappingListObject", "_TestInstanceMappingObject", "cell_obj", "create_in_db", "db_mapping", "db_val", "destroy_in_db", "get_db_mapping", "instance_mapping", "mapping_obj", "mock", "object", "objects", "project_id_from_db", "save_in_db", "self", "test_cell_mapping", "test_objects", "updates", "uuid", "uuid_from_db", "uuidutils", "Just", "ensure", "this", "doesn't", "raise", "an", "exception"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_hypervisors.py": ["CPU_INFO", "CellHypervisorsTestV21", "DETAIL_HYPERS_DICTS", "DETAIL_NULL_CPUINFO_DICT", "False", "HypervisorsTestV21", "HypervisorsTestV228", "INDEX_HYPER_DICTS", "None", "TEST_HYPERS", "TEST_HYPERS_OBJ", "TEST_SERVERS", "TEST_SERVICES", "True", "_CELL_PATH", "_test", "api_version", "cells_utils", "classmethod", "cls", "compute_id", "compute_node_get_all", "compute_nodes", "context", "copy", "cpu_info", "dict", "exc", "exception", "expected", "expected_dict", "fake_compute_node_get", "fake_compute_node_get_all", "fake_compute_node_search_by_hypervisor", "fake_compute_node_search_by_hypervisor_return_empty", "fake_compute_node_statistics", "fake_get_host_uptime", "fake_instance", "fake_instance_get_all_by_host", "fake_instance_get_all_by_host_return_empty", "fake_service_get_by_compute_host", "fakes", "getattr", "host", "hyp", "hyper", "hyper_dct", "hypervisor", "hypervisor_re", "hypervisors_v21", "inst", "inst_obj", "int", "jsonutils", "key", "len", "limit", "link", "marker", "marker_found", "memo", "mock", "mock_get", "netaddr", "obj", "objects", "output", "req", "result", "results", "self", "server", "servers", "service", "set", "str", "super", "test", "test_hypervisor_obj", "url", "use_admin_context", "uuids", "copying", "the", "objects", "locally", "so", "the", "cells", "testcases", "can", "provide", "their", "own\n", "two", "computes,", "a", "matching", "service", "only", "exists", "for", "the", "first", "one\n", "two", "computes,", "a", "matching", "service", "only", "exists", "for", "the", "first", "one\n", "we", "don't", "care", "about", "all", "of", "the", "details,", "just", "make", "sure", "we", "get\n", "the", "subset", "we", "care", "about", "and", "there", "are", "more", "keys", "than", "what", "index\n", "would", "return\n", "__deepcopy__", "is", "added", "for", "copying", "an", "object", "locally", "in\n", "_test_view_hypervisor_detail_cpuinfo_null"], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/encryptors/test_base.py": ["Exception", "None", "ValueError", "VolumeEncryptorInitTestCase", "VolumeEncryptorTestCase", "cryptsetup", "device_path", "e", "encryption", "encryptor", "encryptors", "expected_provider_class", "fake", "log", "luks", "mock", "nop", "provider", "self", "super", "test", "TODO(lyarwood):", "Remove", "the", "following", "in", "16.0.0", "Pike\n", "TODO(lyarwood):", "Remove", "the", "following", "in", "16.0.0", "Pike\n", "TODO(lyarwood):", "Remove", "the", "following", "in", "16.0.0", "Pike"], "/Users/mehranhassani/repos/nova/nova/objects/task_log.py": ["None", "TaskLog", "True", "VERSION", "base", "cls", "context", "db", "db_task_log", "db_task_logs", "field", "fields", "host", "period_beginning", "period_ending", "self", "setattr", "state", "staticmethod", "task_log", "task_name", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/storage/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/test_partition_utils.py": ["False", "None", "PartitionUtils", "True", "expected_calls", "mock", "mock__mkfs", "mock_exists", "mock_run", "mock_sleep", "plugin_test", "ret", "self", "super", "test", "Prevent", "any", "logging", "to", "syslog"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_start_stop.py": ["ServerStartStopPolicyEnforcementV21", "ServerStartStopTestV21", "body", "compute_api", "db", "dict", "ex", "exc", "exception", "ext_info", "extension_info", "fakes", "get_mock", "mock", "oslo_policy", "policy", "rules", "self", "server_v21", "six", "start_mock", "start_policy", "stop_mock", "stop_policy", "super", "test", "uuids", "webob", "Change", "the", "user_id", "in", "request", "context.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/293_add_migration_type.py": ["Boolean", "Column", "Enum", "False", "MetaData", "Table", "True", "enum", "hasattr", "hidden", "meta", "migrate_engine", "migration_type", "migrations", "shadow_migrations"], "/Users/mehranhassani/repos/nova/nova/policies/images.py": ["POLICY_ROOT", "base", "images_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/hide_server_addresses.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "hide_server_addresses_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/notifications/base.py": ["CONF", "Exception", "False", "LOG", "None", "True", "_LE", "__name__", "_compute_states_payload", "_get_nwinfo_old_skool", "_map_service_to_binary", "_send_instance_update_notification", "_send_versioned_instance_update", "admin_context", "arg", "args", "audit_end", "audit_period", "audit_period_bounds", "audit_start", "b", "bandwidth", "bandwidth_usage", "begin", "binary", "body", "bw", "bw_usages", "cached_info", "common_context", "context", "ctxt", "current_period", "datetime", "dict", "end", "exception", "excutils", "fields", "fire_update", "fixed_ips", "flavor", "fn", "getattr", "glance", "host", "ignore_missing_network_data", "image_meta", "image_meta_props", "image_ref_url", "info_from_instance", "instance", "instance_flavorid", "instance_info", "instance_notification", "instance_ref", "instance_type", "instance_type_name", "int", "ip", "isinstance", "key", "kw", "kwarg", "label", "log", "macs", "md_key", "md_value", "method", "name", "network", "network_info", "network_model", "new_instance", "new_task_state", "new_vm_state", "notification", "notification_base", "notifier", "nova", "null_safe_int", "null_safe_isotime", "null_safe_str", "nw_info", "obj_base", "objects", "old_display_name", "old_instance", "old_task_state", "old_vm_state", "payload", "rpc", "s", "send_update_with_states", "service", "six", "state_update", "states_payload", "status", "str", "system_metadata", "timeutils", "update_with_state_change", "url", "utils", "uuids", "verify_states", "versioned_payload", "vif", "wrapped_func", "Send", "an", "api.fault", "notification.\nSupport", "for", "getting", "network", "info", "without", "objects.", "skip", "all", "this", "if", "updates", "are", "disabled\n", "we", "should", "check", "if", "we", "need", "to", "send", "a", "state", "change", "or", "a", "regular\n", "notification\n", "yes,", "the", "vm", "state", "is", "changing:\n", "yes,", "the", "task", "state", "is", "changing:\n", "send", "a", "notification", "with", "state", "changes\n", "value", "of", "verify_states", "need", "not", "be", "True", "as", "the", "check", "for", "states", "is\n", "already", "done", "here\n", "skip", "all", "this", "if", "updates", "are", "disabled\n", "send", "update", "notification", "by", "default\n", "check", "whether", "we", "need", "to", "send", "notification", "related", "to", "state", "changes\n", "do", "not", "send", "notification", "if", "the", "conditions", "for", "vm", "and(or)", "task", "state\n", "are", "not", "satisfied\n", "yes,", "the", "vm", "state", "is", "changing:\n", "yes,", "the", "task", "state", "is", "changing:\n", "send", "either", "a", "state", "change", "or", "a", "regular", "notification\n", "If", "the", "states", "were", "not", "specified", "we", "assume", "the", "current", "instance\n", "states", "are", "the", "correct", "information.", "This", "is", "important", "to", "do", "for\n", "both", "old", "and", "new", "states", "because", "otherwise", "we", "create", "some", "really\n", "confusing", "notifications", "like:\n\n", "None(None)", "=>", "Building(none)\n\n", "When", "we", "really", "were", "just", "continuing", "to", "build\n", "determine", "how", "we'll", "report", "states\n", "add", "audit", "fields:\n", "add", "bw", "usage", "info:\n", "add", "old", "display", "name", "if", "it", "is", "changed\n", "FIXME(comstud):", "Temporary", "as", "we", "transition", "to", "objects.\n", "Owner", "properties\n", "Identity", "properties\n", "Type", "properties\n", "Capacity", "properties\n", "Note(dhellmann):", "This", "makes", "the", "disk_gb", "value", "redundant,", "but\n", "we", "are", "keeping", "it", "for", "backwards-compatibility", "with", "existing\n", "users", "of", "notifications.\n", "Location", "properties\n", "Date", "properties\n", "Terminated", "and", "Deleted", "are", "slightly", "different", "(although", "being\n", "terminated", "and", "not", "deleted", "is", "a", "transient", "state),", "so", "include\n", "both", "and", "let", "the", "recipient", "decide", "which", "they", "want", "to", "use.\n", "Image", "properties\n", "Status", "properties\n", "accessIPs\n", "add", "image", "metadata\n", "add", "instance", "metadata"], "/Users/mehranhassani/repos/nova/nova/tests/functional/libvirt/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/scheduler/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_ram_filters.py": ["TestAggregateRamFilter", "TestRamFilter", "agg_mock", "fakes", "host", "mock", "objects", "ram_filter", "self", "set", "spec_obj", "super", "test", "False:", "fallback", "to", "default", "flag", "w/o", "aggregates\n", "True:", "use", "ratio", "from", "aggregates\n", "use", "the", "minimum", "ratio", "from", "aggregates"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavor_rxtx.py": ["FlavorRxtxTestV21", "_prefix", "body", "content_type", "fakes", "flavor", "flavors", "jsonutils", "req", "res", "rxtx", "self", "super", "test", "url"], "/Users/mehranhassani/repos/nova/nova/db/api.py": ["CONF", "Exception", "False", "IMPL", "LOG", "MAX_INT", "None", "SQL_SP_FLOAT_MAX", "True", "_BACKEND_MAPPING", "_LE", "__name__", "action_id", "address", "agent_build_id", "agent_update_id", "aggregate_id", "architecture", "associate", "auto_assigned", "availability_zone", "bdm_id", "begin", "binary", "bw_in", "bw_out", "cell_name", "cells_rpcapi", "cidr", "class_name", "columns", "columns_to_join", "compute_host", "compute_id", "concurrency", "conditions", "confirm_window", "connection", "console_id", "console_type", "constraint", "context", "delete", "deltas", "dest_compute", "dev_addr", "device_name", "disabled", "disassociate_host", "disassociate_project", "ec2_id", "end", "errors", "event_id", "expected", "expire", "extra_specs", "f", "filters", "fixed_address", "fixed_ip_id", "flavor_id", "floating_address", "force", "forced_id", "fqdomain", "get_network", "group_id", "group_ids", "group_name", "group_uuid", "host", "host_id", "hv_type", "hypervisor", "hypervisor_match", "id", "image_id", "image_uuid", "inactive", "include_disabled", "instance_id", "instance_uuid", "instance_uuids", "ips", "key", "keys", "kwargs", "last_ctr_in", "last_ctr_out", "last_refreshed", "latest", "legacy", "limit", "logging", "mac", "marker", "max_age", "max_count", "max_rows", "members", "message", "metadata", "migration_id", "migration_type", "name", "network_id", "network_uuid", "network_uuids", "node", "node_id", "nodename", "nova", "os", "parent_addr", "period_beginning", "period_ending", "policies", "pool", "pool_id", "project", "project_id", "project_only", "projects", "proxy_host", "quotas", "rd_bytes", "rd_req", "read_deleted", "reboot_window", "request_id", "reservations", "reserved", "resource", "resources", "rule", "rule_id", "rv", "security_group_id", "security_group_rule_default_id", "security_group_rule_id", "service_id", "set_delete", "snapshot_id", "snapshot_uuid", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "start_period", "state", "status", "tag", "tags", "task_items", "task_name", "time", "token_hash", "topic", "type_id", "until_refresh", "update_cells", "update_totals", "updates", "user_id", "user_quotas", "uuid", "uuids", "value", "values", "vif_id", "vif_uuid", "virtual_interface_id", "volume_id", "volume_uuid", "want_result", "wr_bytes", "wr_req", "zone", "Return", "a", "constraint", "object", "suitable", "for", "use", "with", "some", "updates.\nReturn", "a", "context", "manager", "for", "a", "cell", "database", "connection.\nDestroy", "the", "service", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "a", "service", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "the", "minimum", "service", "version", "in", "the", "database.\nGet", "a", "service", "by", "hostname", "and", "topic", "it", "listens", "to.\nGet", "a", "service", "by", "hostname", "and", "binary.\nGet", "all", "services.\nGet", "all", "services", "for", "a", "given", "topic.\nGet", "all", "services", "for", "a", "given", "host.\nCreate", "a", "service", "from", "the", "values", "dictionary.\nCreate", "a", "certificate", "from", "the", "values", "dictionary.\nGet", "all", "certificates", "for", "a", "project.\nGet", "all", "certificates", "for", "a", "user.\nGet", "all", "certificates", "for", "a", "user", "and", "project.\nReturns", "a", "list", "of", "floating", "IP", "pools.\nDestroy", "a", "lot", "of", "floating", "IPs", "from", "the", "values", "dictionary.\nCreate", "a", "floating", "IP", "from", "the", "values", "dictionary.\nDeallocate", "a", "floating", "IP", "by", "address.\nDestroy", "the", "floating_ip", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "all", "floating", "IPs.\nGet", "all", "floating", "IPs", "by", "host.\nGet", "all", "floating", "IPs", "by", "project.\nGet", "a", "floating", "IP", "by", "address", "or", "raise", "if", "it", "doesn't", "exist.\nGet", "a", "floating", "IPs", "by", "fixed", "address.\nGet", "a", "floating", "IPs", "by", "fixed", "address.\nUpdate", "a", "floating", "IP", "by", "address", "or", "raise", "if", "it", "doesn't", "exist.\nGet", "a", "list", "of", "all", "dnsdomains", "in", "our", "database.\nAssociated", "a", "DNS", "domain", "with", "an", "availability", "zone.\nAssociated", "a", "DNS", "domain", "with", "a", "project", "id.\nPurge", "associations", "for", "the", "specified", "DNS", "zone.\nGet", "the", "db", "record", "for", "the", "specified", "domain.\nUpdate", "a", "migration", "instance.\nCreate", "a", "migration", "record.\nFinds", "a", "migration", "by", "the", "id.\nFinds", "a", "migration", "by", "the", "migration", "id", "and", "the", "instance", "uuid.\nFinds", "a", "migration", "by", "the", "instance", "uuid", "its", "migrating.\nFinds", "all", "migrations", "in", "progress.\nFinds", "all", "migrations", "of", "an", "instance", "in", "progress.\nCreate", "a", "fixed", "IP", "from", "the", "values", "dictionary.\nCreate", "a", "lot", "of", "fixed", "IPs", "from", "the", "values", "dictionary.\nDisassociate", "a", "fixed", "IP", "from", "an", "instance", "by", "address.\nDisassociate", "old", "fixed", "IPs", "from", "host.\nGet", "all", "defined", "fixed", "IPs.\nGet", "a", "fixed", "IP", "by", "address", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "a", "fixed", "IP", "by", "a", "floating", "address.\nGet", "fixed", "IPs", "by", "instance", "or", "raise", "if", "none", "exist.\nGet", "fixed", "IPs", "by", "compute", "host.\nGet", "fixed", "IP", "for", "a", "host", "in", "a", "network.\nGet", "fixed", "IPs", "by", "virtual", "interface", "or", "raise", "if", "none", "exist.\nCreate", "a", "fixed", "IP", "from", "the", "values", "dictionary.\nCreate", "a", "virtual", "interface", "record", "in", "the", "database.\nCreate", "a", "virtual", "interface", "record", "in", "the", "database.\nGets", "a", "virtual", "interface", "from", "the", "table.\nGets", "a", "virtual", "interface", "from", "the", "table", "filtering", "on", "address.\nGets", "a", "virtual", "interface", "from", "the", "table", "filtering", "on", "vif", "uuid.\nGets", "all", "virtual_interfaces", "for", "instance.\nGets", "all", "virtual", "interfaces", "for", "instance.\nDelete", "virtual", "interface", "records", "associated", "with", "instance.\nDelete", "virtual", "interface", "by", "id.\nGets", "all", "virtual", "interfaces", "from", "the", "table.\nCreate", "an", "instance", "from", "the", "values", "dictionary.\nDestroy", "the", "instance", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "an", "instance", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "an", "instance", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "all", "instances.\nGet", "all", "instances", "that", "match", "all", "filters.\nGet", "all", "instances", "belonging", "to", "a", "host.\nGet", "all", "instances", "belonging", "to", "a", "node.\nGet", "all", "instances", "belonging", "to", "a", "host", "with", "a", "different", "type_id.\nGet", "instances", "with", "rules", "granted", "to", "them", "by", "a", "list", "of", "secgroups", "ids.\nGet", "all", "floating", "IP", "addresses", "of", "an", "instance.\nGet", "all", "instances", "stuck", "in", "a", "rebooting", "state.\nAssociate", "the", "given", "security", "group", "with", "the", "given", "instance.\nDisassociate", "the", "given", "security", "group", "from", "the", "given", "instance.\nGet", "a", "specific", "group", "by", "id.\nGet", "the", "group", "an", "instance", "is", "a", "member", "of.\nUpdate", "the", "attributes", "of", "an", "group.\nDelete", "an", "group.\nGet", "all", "groups.\nGet", "all", "groups", "for", "a", "specific", "project_id.\nAdd", "members", "to", "the", "group.\nDelete", "a", "specific", "member", "from", "the", "group.\nGet", "the", "members", "from", "the", "group.\nCreate", "a", "key_pair", "from", "the", "values", "dictionary.\nDestroy", "the", "key_pair", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "a", "key_pair", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "all", "key_pairs", "by", "user.\nCount", "number", "of", "key", "pairs", "for", "the", "given", "user", "ID.\nAssociate", "a", "free", "network", "to", "a", "project.\nReturn", "the", "number", "of", "reserved", "IPs", "in", "the", "network.\nGet", "a", "network", "or", "raise", "if", "it", "does", "not", "exist.\nReturn", "all", "defined", "networks.\nReturn", "networks", "by", "ids.\nIndicates", "if", "a", "network", "is", "currently", "in", "use", "on", "host.\nGet", "all", "network's", "IPs", "that", "have", "been", "associated.\nGet", "a", "network", "by", "uuid", "or", "raise", "if", "it", "does", "not", "exist.\nGet", "a", "network", "by", "cidr", "or", "raise", "if", "it", "does", "not", "exist.\nAll", "networks", "for", "which", "the", "given", "host", "is", "the", "network", "host.\nSafely", "set", "the", "host", "for", "network.\nCreate", "a", "quota", "for", "the", "given", "project", "and", "resource.\nRetrieve", "a", "quota", "or", "raise", "if", "it", "does", "not", "exist.\nRetrieve", "all", "quotas", "associated", "with", "a", "given", "project", "and", "user.\nRetrieve", "all", "quotas", "associated", "with", "a", "given", "project.\nRetrieve", "all", "user", "quotas", "associated", "with", "a", "given", "project.\nUpdate", "a", "quota", "or", "raise", "if", "it", "does", "not", "exist.\nCreate", "a", "quota", "class", "for", "the", "given", "name", "and", "resource.\nRetrieve", "a", "quota", "class", "or", "raise", "if", "it", "does", "not", "exist.\nRetrieve", "all", "default", "quotas.\nRetrieve", "all", "quotas", "associated", "with", "a", "given", "quota", "class.\nUpdate", "a", "quota", "class", "or", "raise", "if", "it", "does", "not", "exist.\nRetrieve", "a", "quota", "usage", "or", "raise", "if", "it", "does", "not", "exist.\nRetrieve", "all", "usage", "associated", "with", "a", "given", "resource.\nRetrieve", "all", "usage", "associated", "with", "a", "given", "resource.\nUpdate", "a", "quota", "usage", "or", "raise", "if", "it", "does", "not", "exist.\nCheck", "quotas", "and", "create", "appropriate", "reservations.\nCommit", "quota", "reservations.\nRoll", "back", "quota", "reservations.\nDestroy", "all", "quotas", "associated", "with", "a", "given", "project", "and", "user.\nDestroy", "all", "quotas", "associated", "with", "a", "given", "project.\nRoll", "back", "any", "expired", "reservations.\nCreate", "an", "entry", "of", "block", "device", "mapping.\nUpdate", "an", "entry", "of", "block", "device", "mapping.\nGet", "all", "block", "device", "mapping", "belonging", "to", "a", "list", "of", "instances.\nGet", "all", "block", "device", "mapping", "belonging", "to", "an", "instance.\nGet", "block", "device", "mapping", "for", "a", "given", "volume.\nGet", "block", "device", "mapping", "for", "a", "given", "volume", "ID", "and", "instance", "UUID.\nDestroy", "the", "block", "device", "mapping.\nDestroy", "the", "block", "device", "mapping.\nDestroy", "the", "block", "device", "mapping.\nGet", "all", "security", "groups.\nGet", "security", "group", "by", "its", "id.\nReturns", "a", "security", "group", "with", "the", "specified", "name", "from", "a", "project.\nGet", "all", "security", "groups", "belonging", "to", "a", "project.\nGet", "security", "groups", "to", "which", "the", "instance", "is", "assigned.\nIndicates", "if", "a", "security", "group", "is", "currently", "in", "use.\nCreate", "a", "new", "security", "group.\nUpdate", "a", "security", "group.\nDeletes", "a", "security", "group.\nCreate", "a", "new", "security", "group.\nGet", "all", "rules", "for", "a", "given", "security", "group.\nGet", "all", "rules", "for", "a", "given", "instance.\nDeletes", "a", "security", "group", "rule.\nGets", "a", "security", "group", "rule.\nCount", "rules", "in", "a", "given", "security", "group.\nAdd", "a", "firewall", "rule", "at", "the", "provider", "level", "(all", "hosts", "&", "instances).\nGet", "all", "provider-level", "firewall", "rules.\nDelete", "a", "provider", "firewall", "rule", "from", "the", "database.\nCreate", "console", "pool.\nFetch", "a", "console", "pool", "for", "a", "given", "proxy", "host,", "compute", "host,", "and", "type.\nFetch", "all", "pools", "for", "given", "proxy", "host", "and", "type.\nCreate", "a", "console.\nDelete", "a", "console.\nGet", "console", "entry", "for", "a", "given", "instance", "and", "pool.\nGet", "consoles", "for", "a", "given", "instance.\nGet", "a", "specific", "console", "(possibly", "on", "a", "given", "instance).\nCreate", "a", "new", "instance", "type.\nGet", "all", "instance", "flavors.\nGet", "instance", "type", "by", "id.\nGet", "instance", "type", "by", "name.\nGet", "instance", "type", "by", "flavor", "id.\nDelete", "an", "instance", "type.\nGet", "flavor", "access", "by", "flavor", "id.\nAdd", "flavor", "access", "for", "project.\nRemove", "flavor", "access", "for", "project.\nGet", "all", "extra", "specs", "for", "an", "instance", "type.\nDelete", "the", "given", "extra", "specs", "item.\nGet", "PCI", "device", "by", "address.\nGet", "PCI", "device", "by", "id.\nGet", "all", "PCI", "devices", "for", "one", "host.\nGet", "PCI", "devices", "allocated", "to", "instance.\nGet", "all", "PCI", "devices", "by", "parent", "address.\nDelete", "a", "PCI", "device", "record.\nUpdate", "a", "pci", "device.\nCreate", "a", "new", "child", "Cell", "entry.\nUpdate", "a", "child", "Cell", "entry.\nDelete", "a", "child", "Cell.\nGet", "a", "specific", "child", "Cell.\nGet", "all", "child", "Cells.\nGet", "all", "metadata", "for", "an", "instance.\nDelete", "the", "given", "metadata", "item.\nUpdate", "metadata", "if", "it", "exists,", "otherwise", "create", "it.\nGet", "all", "system", "metadata", "for", "an", "instance.\nUpdate", "metadata", "if", "it", "exists,", "otherwise", "create", "it.\nCreate", "a", "new", "agent", "build", "entry.\nGet", "agent", "build", "by", "hypervisor/OS/architecture", "triple.\nGet", "all", "agent", "builds.\nDestroy", "agent", "build", "entry.\nUpdate", "agent", "build", "entry.\nReturn", "bw", "usage", "for", "instance", "and", "mac", "in", "a", "given", "audit", "period.\nReturn", "bw", "usages", "for", "instance(s)", "in", "a", "given", "audit", "period.\nReturn", "volumes", "usage", "that", "have", "been", "updated", "after", "a", "specified", "time.\nFind", "local", "s3", "image", "represented", "by", "the", "provided", "id.\nFind", "local", "s3", "image", "represented", "by", "the", "provided", "uuid.\nCreate", "local", "s3", "image", "represented", "by", "provided", "uuid.\nCreate", "a", "new", "aggregate", "with", "metadata.\nGet", "a", "specific", "aggregate", "by", "id.\nGet", "a", "list", "of", "aggregates", "that", "host", "belongs", "to.\nGet", "a", "specific", "aggregate", "by", "uuid.\nDelete", "an", "aggregate.\nGet", "all", "aggregates.\nAdd/update", "metadata.", "If", "set_delete=True,", "it", "adds", "only.\nGet", "metadata", "for", "the", "specified", "aggregate.\nDelete", "the", "given", "metadata", "key.\nAdd", "host", "to", "the", "aggregate.\nGet", "hosts", "for", "the", "specified", "aggregate.\nDelete", "the", "given", "host", "from", "the", "aggregate.\nCreate", "a", "new", "Instance", "Fault.\nGet", "all", "instance", "faults", "for", "the", "provided", "instance_uuids.\nStart", "an", "action", "for", "an", "instance.\nFinish", "an", "action", "for", "an", "instance.\nGet", "all", "instance", "actions", "for", "the", "provided", "instance.\nGet", "the", "action", "by", "request_id", "and", "given", "instance.\nStart", "an", "event", "on", "an", "instance", "action.\nFinish", "an", "event", "on", "an", "instance", "action.\nGet", "the", "events", "by", "action", "id.\nGet", "uuid", "through", "ec2", "id", "from", "instance_id_mappings", "table.\nCreate", "the", "ec2", "id", "to", "instance", "uuid", "mapping", "on", "demand.\nMark", "a", "task", "as", "complete", "for", "a", "given", "host/time", "period.\nMark", "a", "task", "as", "started", "for", "a", "given", "host/time", "period.\nAdd", "tag", "to", "the", "instance.\nReplace", "all", "of", "the", "instance", "tags", "with", "specified", "list", "of", "tags.\nGet", "all", "tags", "for", "a", "given", "instance.\nDelete", "specified", "tag", "from", "the", "instance.\nDelete", "all", "tags", "from", "the", "instance.\nCheck", "if", "specified", "tag", "exist", "on", "the", "instance.\nCreate", "a", "console", "authorization.\nDelete", "all", "console", "authorizations", "belonging", "to", "the", "instance.", "The", "maximum", "value", "a", "signed", "INT", "type", "may", "have\n", "NOTE(dosaboy):", "This", "is", "supposed", "to", "represent", "the", "maximum", "value", "that", "we", "can\n", "place", "into", "a", "SQL", "single", "precision", "float", "so", "that", "we", "can", "check", "whether", "values\n", "are", "oversize.", "Postgres", "and", "MySQL", "both", "define", "this", "as", "their", "max", "whereas", "Sqlite\n", "uses", "dynamic", "typing", "so", "this", "would", "not", "apply.", "Different", "dbs", "react", "in", "different\n", "ways", "to", "oversize", "values", "e.g.", "postgres", "will", "raise", "an", "exception", "while", "mysql\n", "will", "round", "off", "the", "value.", "Nevertheless", "we", "may", "still", "want", "to", "know", "prior", "to\n", "insert", "whether", "the", "value", "is", "oversize", "or", "not.\n##################\n##################\n##################\n##################\n", "TODO(edleafe):", "remove", "once", "the", "compute", "node", "resource", "provider", "migration", "is\n", "complete,", "and", "this", "distinction", "is", "no", "longer", "necessary.\n##################\n##################\n###################\n###################\n###################\n###################\n", "Note:", "This", "function", "exists", "for", "backwards", "compatibility", "since", "calls", "to\n", "the", "instance", "layer", "coming", "in", "over", "RPC", "may", "specify", "the", "single", "sort\n", "key/direction", "values;", "in", "this", "case,", "this", "function", "is", "invoked", "instead\n", "of", "the", "'instance_get_all_by_filters_sort'", "function.\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "as", "conductor", "RPC", "API", "moves", "to", "v2.0.\n###################\n##################\n##################\n##################\n###################\n##############\n##################\n##################\n##################\n##################\n###################\n###################\n###################\n##################\n##################\n##################\n##################\n#################\n###################\n##################\n###################\n###################\n###################\n###################\n##################\n##################\n###################\n###################\n###################\n###################\n###################\n###################\n###################\n###################"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/host.py": ["CONF", "False", "LOG", "None", "True", "VCState", "_LW", "__name__", "_get_ds_capacity_and_freespace", "about_info", "capacity", "cluster", "context", "ctx", "data", "datastore_regex", "ds", "ds_util", "enabled", "ex", "exception", "freespace", "host_name", "logging", "nova", "obj_fields", "object", "objects", "refresh", "self", "service", "session", "stats", "str", "super", "units", "versionutils", "vexc", "vim_util", "vm_util", "Manages", "information", "about", "the", "vCenter", "cluster\nUpdate", "the", "current", "state", "of", "the", "cluster.\nSets", "the", "compute", "host's", "ability", "to", "accept", "new", "instances.", "Get", "cpu,", "memory", "stats", "from", "the", "cluster\n", "VimAttributeException", "is", "thrown", "when", "vpxd", "service", "is", "down"], "/Users/mehranhassani/repos/nova/nova/policies/migrations.py": ["POLICY_ROOT", "base", "migrations_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/262_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/compute/task_states.py": ["ALLOW_REBOOT", "BLOCK_DEVICE_MAPPING", "DELETING", "IMAGE_BACKUP", "IMAGE_PENDING_UPLOAD", "IMAGE_SNAPSHOT", "IMAGE_SNAPSHOT_PENDING", "IMAGE_UPLOADING", "MIGRATING", "NETWORKING", "None", "PAUSING", "POWERING_OFF", "POWERING_ON", "REBOOTING", "REBOOTING_HARD", "REBOOT_PENDING", "REBOOT_PENDING_HARD", "REBOOT_STARTED", "REBOOT_STARTED_HARD", "REBUILDING", "REBUILD_BLOCK_DEVICE_MAPPING", "REBUILD_SPAWNING", "RESCUING", "RESIZE_CONFIRMING", "RESIZE_FINISH", "RESIZE_MIGRATED", "RESIZE_MIGRATING", "RESIZE_PREP", "RESIZE_REVERTING", "RESTORING", "RESUMING", "SCHEDULING", "SHELVING", "SHELVING_IMAGE_PENDING_UPLOAD", "SHELVING_IMAGE_UPLOADING", "SHELVING_OFFLOADING", "SOFT_DELETING", "SPAWNING", "SUSPENDING", "UNPAUSING", "UNRESCUING", "UNSHELVING", "UPDATING_PASSWORD", "fields", "possible", "task", "states", "during", "create()\n", "possible", "task", "states", "during", "snapshot()\n", "possible", "task", "states", "during", "backup()\n", "possible", "task", "states", "during", "set_admin_password()\n", "possible", "task", "states", "during", "resize()\n", "possible", "task", "states", "during", "revert_resize()\n", "possible", "task", "states", "during", "confirm_resize()\n", "possible", "task", "states", "during", "reboot()\n", "possible", "task", "states", "during", "pause()\n", "possible", "task", "states", "during", "unpause()\n", "possible", "task", "states", "during", "suspend()\n", "possible", "task", "states", "during", "resume()\n", "possible", "task", "states", "during", "power_off()\n", "possible", "task", "states", "during", "power_on()\n", "possible", "task", "states", "during", "rescue()\n", "possible", "task", "states", "during", "unrescue()\n", "possible", "task", "states", "during", "rebuild()\n", "possible", "task", "states", "during", "live_migrate()\n", "possible", "task", "states", "during", "delete()\n", "possible", "task", "states", "during", "soft_delete()\n", "possible", "task", "states", "during", "restore()\n", "possible", "task", "states", "during", "shelve()\n", "possible", "task", "states", "during", "shelve_offload()\n", "possible", "task", "states", "during", "unshelve()"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/remote_consoles.py": ["ALIAS", "NotImplementedError", "RemoteConsolesController", "alias", "args", "body", "common", "compute", "console_type", "context", "controller", "e", "exception", "extension", "extensions", "handler", "id", "instance", "kwargs", "name", "output", "parent", "protocol", "rc_policies", "remote_consoles", "req", "resources", "self", "server_id", "super", "validation", "version", "webob", "wsgi", "Get", "text", "console", "output.\nGet", "text", "console", "output.\nGet", "text", "console", "output.\nGet", "connection", "to", "a", "serial", "console.\nInteractive", "Console", "support.", "If", "type", "is", "not", "supplied", "or", "unknown,", "get_vnc_console", "below", "will", "cope\n", "If", "type", "is", "not", "supplied", "or", "unknown,", "get_spice_console", "below", "will", "cope\n", "If", "type", "is", "not", "supplied", "or", "unknown,", "get_rdp_console", "below", "will", "cope\n", "NOTE(mikal):", "get_rdp_console()", "can", "raise", "InstanceNotFound,", "so\n", "we", "still", "need", "to", "catch", "it", "here.\n", "If", "type", "is", "not", "supplied", "or", "unknown", "get_serial_console", "below", "will", "cope"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/pluginlib_nova.py": ["ArgumentError", "Exception", "False", "None", "PluginError", "True", "XenAPI", "_", "_get_domain_0", "_vbd_unplug_with_retry", "args", "dom0", "e", "expr", "f", "formatter", "gettext", "key", "len", "list", "log", "logging", "name", "read_only", "self", "session", "sysh", "this_host_ref", "time", "translations", "vbd", "vbd_rec", "vdi", "Base", "Exception", "class", "for", "all", "plugin", "errors.", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n\n", "Helper", "functions", "for", "the", "Nova", "xapi", "plugins.", "In", "time,", "this", "will", "merge\n", "with", "the", "pluginlib.py", "shipped", "with", "xapi,", "but", "for", "now,", "that", "file", "is", "not\n", "very", "stable,", "so", "it's", "easiest", "just", "to", "have", "a", "copy", "of", "all", "the", "functions\n", "that", "we", "need.\n\n", "Logging", "setup\n", "Exceptions\n", "Argument", "validation\n", "noqa\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_services.py": ["FakeRequest", "FakeRequestWithHost", "FakeRequestWithHostService", "FakeRequestWithService", "False", "GET", "KeyError", "None", "ServicesCellsTestV21", "ServicesPolicyEnforcementV21", "ServicesTestV21", "True", "_service_get_by_id", "_service_update", "api_version", "availability_zones", "bad_request", "binary", "body", "cells_utils", "compute", "context", "copy", "datetime", "db_driver", "dict", "disabled", "environ", "exc", "exception", "extensions", "fake", "fake_db_service_get_by_host_binary", "fake_db_service_update", "fake_service_get_all", "fake_services_list", "fake_utcnow", "fakes", "filters", "has_disabled", "has_id", "host", "host_api", "iso8601", "mock", "mock_is_up", "object", "objects", "os_wsgi", "reason", "req", "res", "res_dict", "response", "rule_name", "self", "service", "service_delete", "service_get_all", "service_get_by_host_binary", "service_id", "service_is_up_exc", "service_obj", "service_proxy", "service_update", "services", "services_list", "services_v21", "set_zones", "super", "test", "test_service", "utc", "utils_fixture", "value", "values", "version", "webob", "wsgi_api_version", "NOTE(rpodolyaka):", "API", "services", "are", "special", "case", "and", "must", "be", "filtered", "out\n", "version='2.1'):\n", "This", "test", "is", "just", "to", "verify", "that", "the", "servicegroup", "API", "gets", "used", "when\n", "calling", "the", "API"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/fakelibosinfo.py": ["Db", "Device", "DeviceList", "None", "Os", "OsList", "classmethod", "cls", "dev", "devlist", "fedora", "flt_key", "fltr", "getattr", "index", "key", "len", "list", "match_item", "net", "new_list", "obj", "object", "os", "self", "val", "Generate", "test", "devices"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_shelve.py": ["ShelvePolicyEnforcementV21", "ShelvePolicyTestV21", "compute_api", "exc", "exception", "fake_instance", "fakes", "get_instance_mock", "instance", "mock", "oslo_policy", "plugin", "policy", "rule_name", "rules", "self", "shelve_mock", "shelve_v21", "super", "test", "uuidsentinel", "webob", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/consoleauth/manager.py": ["CONF", "ConsoleAuthManager", "False", "LOG", "None", "_LI", "__name__", "access_url", "args", "cache_utils", "cells_rpcapi", "compute_rpcapi", "console_type", "context", "data", "host", "instance", "instance_uuid", "internal_access_path", "jsonutils", "kwargs", "logging", "manager", "messaging", "name", "nova", "objects", "port", "property", "scheduler_driver", "self", "super", "target", "time", "tok", "token", "token_dict", "token_str", "token_valid", "token_values", "tokens", "tokens_str", "value", "zip", "Auth", "Components", "for", "Consoles.\nManages", "token", "based", "authentication.", "Remove", "the", "expired", "tokens", "from", "cache.\n", "NOTE(comstud):", "consoleauth", "was", "meant", "to", "run", "in", "API", "cells.", "So,\n", "if", "cells", "is", "enabled,", "we", "must", "call", "down", "to", "the", "child", "cell", "for\n", "the", "instance."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/326_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_hide_server_addresses.py": ["False", "HideServerAddressesTestV21", "SENTINEL", "True", "_args", "_return_server", "addresses", "args", "base_url", "body", "content_type", "exception", "exists", "fake_compute_get", "fake_instance", "fakes", "fields", "get_all", "inst", "instance", "instance_0", "instance_1", "instance_id", "instance_obj", "instances", "jsonutils", "kwargs", "len", "object", "objects", "req", "res", "return_server", "self", "server", "servers", "six", "staticmethod", "super", "test", "url", "uuid", "vm_states"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/ironic/utils.py": ["FakeNodeClient", "FakePortClient", "False", "None", "True", "default_extra_specs", "detail", "fields", "flavor", "get_test_node", "instance_uuid", "ironic_states", "kw", "node", "node_uuid", "object", "objects", "patch", "port", "port_uuid", "self", "target", "type"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_multiple_nodes.py": ["BaseTestCase", "CONF", "FakeDriverMultiNodeTestCase", "FakeDriverSingleNodeTestCase", "False", "MultiNodeComputeTestCase", "None", "cn", "compute_node_id", "context", "ctx", "fake", "fake_compute_node_delete", "fake_compute_nodes", "fake_get_compute_nodes_in_db", "len", "manager", "nova", "objects", "res", "res_a", "res_b", "res_x", "self", "sorted", "super", "test", "use_slave", "uuidsentinel", "Tests", "for", "compute", "service", "with", "multiple", "compute", "nodes.", "Verify", "nothing", "is", "deleted", "if", "driver", "and", "db", "compute", "nodes", "match\n", "Verify", "B", "gets", "deleted", "since", "now", "only", "A", "is", "reported", "by", "driver"], "/Users/mehranhassani/repos/nova/nova/compute/cells_api.py": ["ComputeCellsAPI", "ComputeRPCAPIRedirect", "ComputeRPCProxyAPI", "ConductorTaskRPCAPIRedirect", "False", "HostAPI", "InstanceActionAPI", "None", "RPCClientCellsProxy", "True", "ValueError", "_noop_rpc_wrapper", "action", "action_id", "address", "args", "availability_zones", "bdms", "beginning", "binary", "c", "cell_name", "cell_path", "cell_paths", "cells_compatible", "cells_rpcapi", "cells_rpcapi_obj", "cells_utils", "check_instance_cell", "check_instance_lock", "check_instance_state", "clean_shutdown", "client", "compute_api", "compute_id", "compute_rpcapi", "connect_info", "console_type", "context", "ctxt", "delete", "delete_type", "device", "device_type", "disk_bus", "enabled", "ending", "exc", "exception", "excutils", "filters", "getattr", "host", "host_name", "hypervisor_match", "i", "id", "instance", "instance_uuid", "instances", "key", "kwargs", "limit", "marker", "max_count", "messaging", "metadata", "method", "method_name", "msg", "must_be_up", "obj_base", "object", "objects", "params_to_update", "request_id", "requested_networks", "rescue_image_ref", "rescue_password", "result", "ret", "rpc", "rv", "s", "self", "serializer", "server", "service", "service_id", "services", "set_zones", "state", "super", "target", "task_name", "topic", "type", "version", "version_cap", "vm_states", "volume", "volume_id", "zip", "zone_filter", "Compute", "API", "that", "proxies", "via", "Cells", "Service.\nRestore", "a", "previously", "deleted", "(but", "not", "reclaimed)", "instance.\nEvacuate", "the", "given", "instance", "with", "the", "provided", "attributes.\nAdd", "fixed_ip", "from", "specified", "network", "to", "given", "instance.\nRemove", "fixed_ip", "from", "specified", "network", "to", "given", "instance.\nRetrieve", "diagnostics", "for", "the", "given", "instance.\nRetrieve", "diagnostics", "for", "the", "given", "instance.\nRescue", "the", "given", "instance.\nUnrescue", "the", "given", "instance.\nShelve", "the", "given", "instance.\nOffload", "the", "shelved", "instance.\nUnshelve", "the", "given", "instance.\nGet", "a", "url", "to", "a", "VNC", "Console.\nGet", "a", "url", "to", "a", "SPICE", "Console.\nGet", "a", "url", "to", "a", "RDP", "Console.\nGet", "a", "url", "to", "a", "serial", "console.\nGet", "console", "output", "for", "an", "instance.\nAttach", "an", "existing", "volume", "to", "an", "existing", "instance.\nDetach", "a", "volume", "from", "an", "instance.\nDelete", "the", "given", "metadata", "item", "from", "an", "instance.\nReturns", "the", "result", "of", "calling", "\"uptime\"", "on", "the", "target", "host.\nDeletes", "the", "specified", "service.\nInstanceActionAPI()", "class", "for", "cells.", "NOTE(comstud):", "These", "are", "a", "list", "of", "methods", "where", "the", "cells_rpcapi\n", "and", "the", "compute_rpcapi", "methods", "have", "the", "same", "signatures.", "This\n", "is", "for", "transitioning", "to", "a", "common", "interface", "where", "we", "can", "just\n", "swap", "out", "the", "compute_rpcapi", "class", "with", "the", "cells_rpcapi", "class.\n", "NOTE(comstud):", "These", "are", "a", "list", "of", "methods", "where", "the", "cells_rpcapi\n", "and", "the", "compute_task_rpcapi", "methods", "have", "the", "same", "signatures.", "This\n", "is", "for", "transitioning", "to", "a", "common", "interface", "where", "we", "can", "just\n", "swap", "out", "the", "compute_task_rpcapi", "class", "with", "the", "cells_rpcapi", "class.\n", "Avoid", "casts/calls", "directly", "to", "compute\n", "Redirect", "conductor", "build_instances", "to", "cells\n", "NOTE(danms):", "If", "we", "try", "to", "delete", "an", "instance", "with", "no", "cell,\n", "there", "isn't", "anything", "to", "salvage,", "so", "we", "can", "hard-delete", "here.\n", "NOTE(alaski):", "We", "very", "likely", "got", "here", "because", "the", "host\n", "constraint", "in", "instance.destroy()", "failed.", "This", "likely", "means\n", "that", "an", "update", "came", "up", "from", "a", "child", "cell", "and", "cell_name", "is\n", "set", "now.", "We", "handle", "this", "similarly", "to", "how", "the\n", "ObjectActionError", "is", "handled", "below.\n", "If", "instance.cell_name", "was", "not", "set", "it's", "possible", "that", "the", "Instance\n", "object", "here", "was", "pulled", "from", "a", "BuildRequest", "object", "and", "is", "not\n", "fully", "populated.", "Notably", "it", "will", "be", "missing", "an", "'id'", "field", "which\n", "will", "prevent", "instance.destroy", "from", "functioning", "properly.", "A\n", "lookup", "is", "attempted", "which", "will", "either", "return", "a", "full", "Instance", "or\n", "None", "if", "not", "found.", "If", "not", "found", "then", "it's", "acceptable", "to", "skip", "the\n", "rest", "of", "the", "delete", "processing.\n", "Instance", "has", "been", "deleted", "out", "from", "under", "us\n", "NOTE(alaski):", "We", "very", "likely", "got", "here", "because", "the", "host\n", "constraint", "in", "instance.destroy()", "failed.", "This", "likely", "means\n", "that", "an", "update", "came", "up", "from", "a", "child", "cell", "and", "cell_name", "is\n", "set", "now.", "If", "so", "try", "the", "delete", "again.\n", "NOTE(melwitt):", "If", "the", "instance", "has", "already", "been\n", "deleted", "by", "instance_destroy_at_top", "from", "a", "cell,\n", "instance.refresh()", "will", "raise", "InstanceNotFound.\n", "NOTE(melwitt):", "We", "can", "get", "here", "if", "anything", "tries", "to\n", "lookup", "the", "instance", "after", "an", "instance_destroy_at_top", "hits.\n", "FIXME(comstud):", "Cache", "this?\n", "Also:", "only", "calling", "super()", "to", "get", "state/policy", "checking\n", "FIXME(comstud):", "Cache", "this?\n", "Also:", "only", "calling", "super()", "to", "get", "state/policy", "checking\n", "NOTE(comstud):", "Calling", "super()", "just", "to", "get", "policy", "check\n", "TODO(sbauza):", "set_availability_zones", "returns", "flat", "dicts,\n", "we", "should", "rather", "modify", "the", "RPC", "API", "to", "amend", "service_get_all", "by\n", "adding", "a", "set_zones", "argument\n", "NOTE(sbauza):", "As", "services", "is", "a", "list", "of", "flat", "dicts,", "we", "need", "to\n", "rehydrate", "the", "corresponding", "ServiceProxy", "objects\n", "NOTE(lyj):", "No", "pagination", "for", "cells,", "just", "make", "sure", "the", "arguments\n", "for", "the", "method", "are", "the", "same", "with", "the", "compute.api", "for", "now."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_volumeops.py": ["Exception", "FakeException", "False", "None", "True", "VolumeOpsTestBase", "call", "conn", "conn_info", "connection_info", "data", "details", "dict", "exception", "expected", "expected_find", "expected_scan", "find_sr_calls", "find_sr_from_vdi", "list", "mock", "mock_attach", "mock_conf", "mock_debug", "mock_destroy", "mock_destroy_vbd", "mock_detach", "mock_driver", "mock_find_sr", "mock_find_vbd", "mock_forget", "mock_get", "mock_get_all", "mock_get_device_num", "mock_get_vm", "mock_hypervisor", "mock_intro", "mock_introduce_sr", "mock_is_vm", "mock_lookup", "mock_parse", "mock_plug", "mock_provider", "mock_purge", "mock_scan", "mock_shutdown", "mock_unplug", "mock_unplug_vbd", "mock_vbd", "mock_vdi", "mock_vm", "ops", "password_logged", "purge_sr", "purge_sr_calls", "ref", "result", "self", "session", "sr_ref", "sr_refs", "stubs", "super", "test", "uuid", "vdi_ref", "vdi_refs", "vm_utils", "volume_utils", "volumeops", "Tests", "that", "the", "connection_data", "is", "scrubbed", "before", "logging.\n", "The", "call", "object", "is", "a", "tuple", "of", "(args,", "kwargs)"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/storage/test_rbd.py": ["CEPH_MON_DUMP", "Exception", "FakeException", "False", "None", "RbdTestCase", "True", "_inner", "args", "client", "client_stack", "disk", "exception", "exception_name", "f", "filter_fn", "formats", "hosts", "image", "image_meta", "inst", "instance", "kwargs", "len", "libvirt_utils", "loc", "location", "locations", "map", "mock", "mock__enter__", "mock_client", "mock_cluster", "mock_connect", "mock_connect_from_rados", "mock_disconnect_from_rados", "mock_execute", "mock_get_fsid", "mock_proxy", "mock_rados", "mock_rbd", "name", "objects", "pool", "ports", "proxy", "rbd", "rbd_utils", "remove_call", "ret", "self", "setattr", "six", "size", "snap", "snapshot", "str", "super", "task_states", "test", "tpool", "utils", "uuids", "vol", "capture", "both", "rados", "client", "used", "to", "perform", "the", "clone\n", "capture", "both", "rados", "client", "used", "to", "perform", "the", "clone\n", "this", "is", "duplicated", "from", "nova/virt/libvirt/driver.py\n", "this", "is", "duplicated", "from", "nova/virt/libvirt/driver.py\n", "NOTE(danms):", "10", "retries", "+", "1", "final", "attempt", "to", "propagate", "=", "11\n", "this", "is", "duplicated", "from", "nova/virt/libvirt/driver.py\n", "this", "is", "duplicated", "from", "nova/virt/libvirt/driver.py\n", "Make", "sure", "that", "we", "entered", "and", "exited", "the", "RADOSClient"], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_firewall.py": ["FakeNWFilterInternal", "False", "IptablesFirewallTestCase", "NWFilterFakes", "NWFilterTestCase", "None", "SRC_UUID", "True", "UUID", "_ensure_all_called", "_fake_instlist", "_fake_network_info", "_fake_stub_out_get_nw_info", "_ipv4_like", "allow_dhcp", "assert_filterref", "bytes", "cmd", "ctxt", "debug", "define", "dependencies", "dhcp_server", "dom", "error", "etree", "exception", "expected", "expected_filter_calls", "expected_rules_calls", "f", "fake_define", "fake_iptables_execute", "fake_network", "fakefilter", "fakelibvirt", "filter_name", "firewall", "flags", "fr", "fref", "frefs", "greenthread", "host", "id", "in6_filter_rules", "in_rules", "in_use", "inst", "inst_ipv4", "inst_ipv6", "instance", "instance1", "instance2", "instance_chain", "instance_filter", "instance_filter_name", "instance_ref", "insts", "ip", "ipv4", "ipv4_addr_per_network", "ipv4_cidr", "ipv4_len", "ipv4_network_rules", "ipv4_rules_per_addr", "ipv6", "ipv6_addr_per_network", "ipv6_cidr", "ipv6_len", "ipv6_network_rules", "ipv6_rules_per_addr", "isinstance", "kwargs", "l", "len", "lines", "linux_net", "lock_fixture", "look", "mac", "mask", "match_rules", "minidom", "mock", "mock_add_filters", "mock_define", "mock_filter", "mock_has_chain", "mock_instance_rules", "mock_instlist", "mock_ir", "mock_lookup", "mock_secrule", "mock_sleep", "mock_undefine", "name", "net", "netutils", "network_info", "network_model", "networks_count", "nic_id", "not_found", "object", "objects", "ord", "original_filter_count", "parameter", "parameters", "parent", "prefix", "process_input", "r1", "r2", "r3", "r4", "r5", "ra_server", "re", "ref", "regex", "required", "required_not", "required_not_list", "requiredlist", "rule", "rules", "rulesv4", "rulesv6", "secgroup", "secgroup_list", "security_group_chain", "self", "set", "src_instance_ref", "src_secgroup", "src_secgroup_list", "subnet_v4", "subnet_v6", "super", "test", "tree", "u", "uuid", "uuids", "vif", "xml", "Generated", "by", "iptables-save", "v1.4.10", "on", "Sat", "Feb", "19", "00:03:19", "2011',\n", "Completed", "on", "Tue", "Dec", "18", "15:50:25", "2012',\n", "Generated", "by", "iptables-save", "v1.4.12", "on", "Tue", "Dec", "18", "15:50:25", "201;',\n", "Completed", "on", "Tue", "Dec", "18", "15:50:25", "2012',\n", "Generated", "by", "iptables-save", "v1.4.4", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Completed", "on", "Mon", "Dec", "6", "11:54:13", "2010',\n", "Generated", "by", "ip6tables-save", "v1.4.4", "on", "Tue", "Jan", "18", "23:47:56", "2011',\n", "Completed", "on", "Tue", "Jan", "18", "23:47:56", "2011',\n')]\n", "This", "is", "pretty", "crude,", "but", "it'll", "do", "for", "now\n", "last", "two", "octets", "change\n", "This", "is", "pretty", "crude,", "but", "it'll", "do", "for", "now\n", "Extra", "rules", "are", "for", "the", "DHCP", "request\n", "NOTE(danms):", "Make", "sure", "that", "it", "is", "checking", "has_chain", "each", "time,\n", "continuing", "to", "process", "all", "the", "instances,", "and", "never", "adding", "the\n", "new", "chains", "back", "if", "has_chain()", "is", "False\n", "should", "undefine", "just", "the", "instance", "filter\n", "These", "come", "pre-defined", "by", "libvirt\n", "since", "there", "is", "one", "(network_info)", "there", "is", "one", "vif\n", "pass", "this", "vif's", "mac", "to", "_ensure_all_called()\n", "to", "set", "the", "instance_filter", "properly\n", "Tests", "that", "we", "try", "to", "undefine", "the", "network", "filter", "when", "it's", "in", "use\n", "until", "we", "hit", "a", "timeout.", "We", "try", "two", "times", "and", "sleep", "once", "in", "between.\n", "Tests", "that", "we", "exit", "if", "the", "nw", "filter", "is", "not", "found.\n", "Tests", "that", "we", "retry", "on", "in-use", "error", "but", "pass", "if", "undefine()", "works\n", "while", "looping."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/console_output.py": ["ALIAS", "ConsoleOutputController", "NotImplementedError", "alias", "args", "body", "co_policies", "common", "compute", "console_output", "context", "controller", "e", "exception", "extension", "extensions", "id", "instance", "kwargs", "length", "name", "output", "re", "remove_re", "req", "self", "super", "validation", "version", "webob", "wsgi", "Get", "text", "console", "output.\nConsole", "log", "output", "support,", "with", "tailing", "ability.", "TODO(cyeoh):", "In", "a", "future", "API", "update", "accept", "a", "length", "of", "-1\n", "as", "meaning", "unlimited", "length", "(convert", "to", "None)\n", "NOTE(cyeoh):", "This", "covers", "race", "conditions", "where", "the", "instance", "is\n", "deleted", "between", "common.get_instance", "and", "get_console_output\n", "being", "called\n", "XML", "output", "is", "not", "correctly", "escaped,", "so", "remove", "invalid", "characters\n", "NOTE(cyeoh):", "We", "don't", "support", "XML", "output", "with", "V2.1,", "but", "for\n", "backwards", "compatibility", "reasons", "we", "continue", "to", "filter", "the", "output\n", "We", "should", "remove", "this", "in", "the", "future"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/kernel.py": ["False", "KERNEL_DIR", "OSError", "XenAPIPlugin", "__name__", "_copy_vdi", "_remove_file", "args", "cache_file", "cached_image", "cached_image_filename", "copy_args", "copy_vdi", "create_kernel_ramdisk", "data", "dest", "dev", "errno", "exc", "exists", "f", "filename", "filepath", "image_uuid", "int", "kernel_file", "logging", "of", "open", "optional", "os", "pluginlib_nova", "ramdisk_file", "remove_kernel_ramdisk", "session", "shutil", "size", "vdi", "vdi_size", "vdi_uuid", "with_vdi_in_dom0", "Handle", "the", "manipulation", "of", "kernel", "images.\nRemoves", "kernel", "and/or", "ramdisk", "from", "dom0's", "file", "system.", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n", "Copyright", "(c)", "2010", "Citrix", "Systems,", "Inc.\n", "Copyright", "2010", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "Make", "sure", "KERNEL_DIR", "exists,", "otherwise", "create", "it\n", "Read", "data", "from", "/dev/", "and", "write", "into", "a", "file", "on", "/boot/guest\n", "Copy", "only", "vdi_size", "bytes\n", "Create", "a", "cache", "file.", "If", "caching", "is", "enabled,", "kernel", "images", "do", "not", "have\n", "to", "be", "fetched", "from", "glance.\n", "Use", "the", "uuid", "as", "a", "filename\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_server_attributes.py": ["ExtendedServerAttributesTestV21", "ExtendedServerAttributesTestV216", "ExtendedServerAttributesTestV23", "NAME_FMT", "None", "True", "UUID1", "UUID2", "UUID3", "UUID4", "UUID5", "body", "cfg", "compute", "content_type", "enumerate", "exception", "fake_compute_get", "fake_compute_get_all", "fake_services", "fake_url", "fakes", "host", "host_status", "hostname", "i", "inst_list", "instance_name", "jsonutils", "kernel_id", "launch_index", "len", "mock", "mock_get_all_method", "node", "objects", "os_wsgi", "prefix", "ramdisk_id", "req", "res", "reservation_id", "root_device_name", "self", "server", "service_list", "super", "test", "url", "user_data", "wsgi_api_version", "check", "status", "code", "200", "with", "empty", "instance", "list"], "/Users/mehranhassani/repos/nova/nova/conductor/api.py": ["CONF", "False", "LOG", "None", "True", "_LI", "_LW", "__name__", "admin_password", "async", "attempt", "baserpc", "bdms", "block_device_mapping", "block_migration", "build_requests", "clean_shutdown", "context", "disk_over_commit", "early_attempts", "early_timeout", "extra_instance_updates", "filter_properties", "flavor", "has_timedout", "host", "host_name", "image", "image_ref", "injected_files", "instance", "instances", "kwargs", "legacy_bdm", "logging", "messaging", "new_pass", "nova", "object", "object_versions", "objinst", "on_shared_storage", "orig_image_ref", "orig_sys_metadata", "preserve_ephemeral", "recreate", "request_spec", "requested_networks", "reservations", "rpcapi", "scheduler_hint", "security_groups", "self", "timeout", "Handles", "all", "requests", "to", "the", "conductor", "service.\nConductor", "API", "that", "does", "updates", "via", "RPC", "to", "the", "ConductorManager.\nComputeTask", "API", "that", "queues", "up", "compute", "tasks", "for", "nova-conductor.", "if", "we", "show", "the", "timeout", "message,", "make", "sure", "we", "show", "a", "similar\n", "message", "saying", "that", "everything", "is", "now", "working", "to", "avoid\n", "confusion\n", "NOTE(danms):", "Try", "ten", "times", "with", "a", "short", "timeout,", "and", "then", "punt\n", "to", "the", "configured", "RPC", "timeout", "after", "that\n", "NOTE(russellb):", "This", "is", "running", "during", "service", "startup.", "If", "we\n", "allow", "an", "exception", "to", "be", "raised,", "the", "service", "will", "shut", "down.\n", "This", "may", "fail", "the", "first", "time", "around", "if", "nova-conductor", "wasn't\n", "running", "when", "this", "service", "started.\n", "NOTE(comstud):", "'extra_instance_updates'", "is", "not", "used", "here", "but", "is\n", "needed", "for", "compatibility", "with", "the", "cells_rpcapi", "version", "of", "this\n", "method.\n", "kwargs", "unused", "but", "required", "for", "cell", "compatibility"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_compat.py": ["CompatTestCase", "False", "None", "True", "actual", "compat", "domain", "expected", "fakelibvirt", "host", "mock", "mock_has_min_version", "power_state", "race", "self", "super", "test", "test_host"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/hide_server_addresses.py": ["ALIAS", "CONF", "Controller", "False", "alias", "args", "context", "dir", "extensions", "getattr", "hidden_states", "hsa_policies", "id", "instance", "kwargs", "list", "name", "nova", "req", "resp", "resp_obj", "resp_server", "self", "server", "state", "super", "valid_vm_states", "version", "vm_states", "wsgi", "Extension", "for", "hiding", "server", "addresses", "in", "certain", "states.\nSupport", "hiding", "server", "addresses", "in", "certain", "states.", "NOTE(jkoelker)", "_", "is", "not", "considered", "uppercase", ";)"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/host.py": ["CONF", "False", "HostState", "LOG", "None", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_compile_hex", "_host_find", "_parse_pci_device_string", "_uuid_find", "_version", "action", "aggregate", "arg_dict", "args", "call_xenhost", "capability", "cfg", "cntxt", "compute_host", "context", "cpu_info", "ctxt", "data", "dest", "dev_string", "dev_string_info", "dict", "e", "enabled", "exception", "guestarch", "host", "host_capabilities", "host_cpu_info", "host_list", "host_memory", "host_ref", "host_uuid", "i", "instance", "int", "jsonutils", "logging", "lspci_out", "method", "methods", "migrations_counter", "mode", "msg", "name", "name_label", "new_dev", "obj_fields", "object", "objects", "ostype", "passthrough_devices", "pattern", "pci_list", "pool_states", "product_id", "product_regex", "re", "refresh", "response", "result", "self", "service", "session", "six", "slot_id", "slot_regex", "sr_rec", "sr_ref", "src_aggregate", "str", "super", "task_states", "to_cpu_model", "to_supported_instances", "topology", "total", "type_pci", "used", "uuid", "vcpus_used", "vendor_id", "vendor_regex", "virtapi", "vm_counter", "vm_rec", "vm_ref", "vm_states", "vm_utils", "Implements", "host", "related", "operations.\nReboots", "or", "shuts", "down", "the", "host.\nSets", "the", "compute", "host's", "ability", "to", "accept", "new", "instances.\nReturns", "the", "result", "of", "calling", "\"uptime\"", "on", "the", "target", "host.\nReturn", "instance", "uuid", "by", "name_label.", "Ensure", "only", "guest", "instances", "are", "migrated\n", "Since", "capabilities", "are", "gone,", "use", "service", "table", "to", "disable", "a", "node\n", "in", "scheduler\n", "Domain:", "(optional)\n", "Bus:\n", "Device.\n", "Function\n", "Devices", "are", "separated", "by", "a", "blank", "line.", "That", "is", "why", "we\n", "use", "\"\\n\\n\"", "as", "separator.\n", "For", "each", "device", "of", "the", "list,", "check", "if", "it", "uses", "the", "pciback\n", "kernel", "driver", "and", "if", "it", "does,", "get", "information", "and", "add", "it\n", "to", "the", "list", "of", "passthrough_devices.", "Ignore", "it", "if", "the", "driver\n", "is", "not", "pciback.\n", "'capability'is", "unicode", "but", "we", "want", "arch/ostype\n", "to", "be", "strings", "to", "match", "the", "standard", "constants\n", "The", "XenAPI", "driver", "returns", "data", "in", "the", "format\n\n", "{\"physical_features\":", "\"0098e3fd-bfebfbff-00000001-28100800\",\n", "\"modelname\":", "\"Intel(R)", "Xeon(R)", "CPU", "X3430", "@", "2.40GHz\",\n", "\"vendor\":", "\"GenuineIntel\",\n", "\"features\":", "\"0098e3fd-bfebfbff-00000001-28100800\",\n", "\"family\":", "6,\n", "\"maskable\":", "\"full\",\n", "\"cpu_count\":", "4,\n", "\"socket_count\":", "\"1\",\n", "\"flags\":", "\"fpu", "de", "tsc", "msr", "pae", "mce", "cx8", "apic", "sep", "mtrr", "mca", "cmov\n", "pat", "clflush", "acpi", "mmx", "fxsr", "sse", "sse2", "ss", "ht", "nx\n", "constant_tsc", "nonstop_tsc", "aperfmperf", "pni", "vmx", "est\n", "ssse3", "sse4_1", "sse4_2", "popcnt", "hypervisor", "ida\n", "tpr_shadow", "vnmi", "flexpriority", "ept", "vpid\",\n", "\"stepping\":", "5,\n", "\"model\":", "30,\n", "\"features_after_reboot\":", "\"0098e3fd-bfebfbff-00000001-28100800\",\n", "\"speed\":", "\"2394.086\"}\n", "TODO(berrange)", "the", "data", "we're", "putting", "in", "model", "is", "not\n", "exactly", "comparable", "to", "what", "libvirt", "puts", "in", "model.", "The\n", "libvirt", "model", "names", "are", "a", "well", "defined", "short", "string\n", "which", "is", "really", "an", "aliass", "for", "a", "particular", "set", "of\n", "feature", "flags.", "The", "Xen", "model", "names", "are", "raw", "printable\n", "strings", "from", "the", "kernel", "with", "no", "specific", "semantics\n", "TODO(berrange)", "perhaps", "we", "could", "fill", "in", "'arch'", "field", "too\n", "by", "looking", "at", "'host_capabilities'", "for", "the", "Xen", "host", "?\n", "TODO(berrange):", "if", "'ht'", "is", "present", "in", "the", "'flags'", "list\n", "is", "it", "possible", "to", "infer", "that", "the", "'cpu_count'", "is", "in", "fact\n", "sockets", "*", "cores", "*", "threads", "?", "Unclear", "if", "'ht'", "would", "remain\n", "visible", "when", "threads", "are", "disabled", "in", "BIOS", "?\n", "Create", "a", "task", "ID", "as", "something", "that", "won't", "match", "any", "instance", "ID\n", "NOTE:", "this", "would", "be", "a", "lot", "simpler", "if", "nova-compute", "stored\n", "CONF.host", "in", "the", "XenServer", "host's", "other-config", "map.\n", "TODO(armando-migliaccio):", "improve", "according", "the", "note", "above"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/337_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/image_metadata.py": ["False", "copy", "create", "parameter_types", "single_metadata", "update", "update_all"], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/test_migrations.py": ["False", "KILO_START", "None", "NovaMigrationsCheckers", "TIMEOUT_SCALING_FACTOR", "True", "UniqueConstraint", "__file__", "action_events", "banned", "bdm", "c", "check", "column", "column_whitelist", "compare_to", "compute_nodes", "cons", "console", "consoles", "constraint", "constraint_name", "constraint_names", "constraints", "context", "count", "data", "db_utils", "diff", "dst_column", "dst_table", "element", "engine", "ex", "exception", "exceptions", "f", "fake_console", "fake_fixed_ip", "fake_instance", "fake_keypair", "fake_migration", "fake_network", "fake_quotas", "fake_volume", "fixed_ip", "fixed_ips", "fk", "fkeys", "fname", "getattr", "glob", "has_downgrade", "has_upgrade", "havana_placeholders", "helpful_msg", "i", "icehouse_placeholders", "idx", "includes_downgrade", "index", "index_columns", "inspector", "instance", "instance_extra", "instances", "iscsi_targets", "juno_placeholders", "key_pairs", "keypair", "kilo_placeholders", "len", "liberty_placeholders", "line", "list", "members", "migrate_repo", "migration", "migrations", "mitaka_placeholders", "mock", "models", "name", "network", "networks", "newton_placeholders", "noninnodb", "nova_fixtures", "null", "object_", "open", "os", "oslodbutils", "path", "pci_devices", "property", "py_glob", "quota", "quota_usages", "range", "reflected", "reflection", "removed_column", "repository", "rows", "sa_migration", "self", "services", "shadow_compute_nodes", "shadow_instance_extra", "shadow_key_pairs", "shadow_pci_devices", "shadow_services", "sorted", "special", "sqlalchemy", "src_column", "src_table", "super", "t", "table", "table_name", "table_names", "test", "test_base", "test_migrations", "topdir", "total", "type_", "version", "volume", "volume_usage_cache", "volumes", "with_data", "Test", "sqlalchemy-migrate", "migrations.", "create", "user", "openstack_citest", "with", "createdb", "login", "password\n", "create", "database", "openstack_citest", "with", "owner", "openstack_citest;\n", "TODO(sdague):", "no", "tests", "in", "the", "nova/tests", "tree", "should", "inherit", "from\n", "base", "test", "classes", "in", "another", "library.", "This", "causes", "all", "kinds", "of", "havoc\n", "in", "these", "doing", "things", "incorrectly", "for", "what", "we", "need", "in", "subunit\n", "reporting.", "This", "is", "a", "long", "unwind,", "but", "should", "be", "done", "in", "the", "future\n", "and", "any", "code", "needed", "out", "of", "oslo_db", "should", "be", "exported", "/", "accessed", "as\n", "a", "fixture.\n", "NOTE(sdague):", "the", "oslo_db", "base", "test", "case", "completely\n", "invalidates", "our", "logging", "setup,", "we", "actually", "have", "to", "do", "that\n", "before", "it", "is", "called", "to", "keep", "this", "from", "vomitting", "all", "over", "our\n", "test", "output.\n", "NOTE(rpodolyaka):", "we", "need", "to", "repeat", "the", "functionality", "of", "the", "base\n", "test", "case", "a", "bit", "here", "as", "this", "gets", "overridden", "by", "oslotest", "base", "test\n", "case", "and", "nova", "base", "test", "case", "cleanup", "must", "be", "the", "last", "one", "(as", "it\n", "deletes", "attributes", "of", "test", "case", "instances)\n", "NOTE(johannes):", "Order", "of", "columns", "can", "matter.", "Most", "SQL", "databases\n", "can", "use", "the", "leading", "columns", "for", "optimizing", "queries", "that", "don't\n", "include", "all", "of", "the", "covered", "columns.\n", "Implementations", "for", "ModelsMigrationsSync\n", "migrate_version", "is", "a", "sqlalchemy-migrate", "control", "table", "and\n", "isn't", "included", "in", "the", "model.", "shadow_*", "are", "generated", "from\n", "the", "model", "and", "have", "their", "own", "tests", "to", "ensure", "they", "don't\n", "drift.\n", "Havana\n", "NOOP", "migration", "due", "to", "revert\n", "NOTE(danms):", "This", "is", "a", "list", "of", "migrations", "where", "we", "allow", "dropping\n", "things.", "The", "rules", "for", "adding", "things", "here", "are", "very", "very", "specific.\n", "Chances", "are", "you", "don't", "meet", "the", "critera.\n", "Reviewers:", "DO", "NOT", "ALLOW", "THINGS", "TO", "BE", "ADDED", "HERE\n", "267", "enforces", "non-nullable", "instance.uuid.", "This", "was", "mostly\n", "a", "special", "case", "because", "instance.uuid", "shouldn't", "be", "able\n", "to", "be", "nullable\n", "278", "removes", "a", "FK", "restriction,", "so", "it's", "an", "alter", "operation\n", "that", "doesn't", "break", "existing", "users\n", "280", "enforces", "non-null", "keypair", "name.", "This", "is", "really", "not\n", "something", "we", "should", "allow,", "but", "it's", "in", "the", "past\n", "292", "drops", "completely", "orphaned", "tables", "with", "no", "users,", "so\n", "it", "can", "be", "done", "without", "affecting", "anything.\n", "346", "Drops", "column", "scheduled_at", "from", "instances", "table", "since", "it\n", "is", "no", "longer", "used.", "The", "field", "value", "is", "always", "NULL", "so\n", "it", "does", "not", "affect", "anything.\n", "Reviewers:", "DO", "NOT", "ALLOW", "THINGS", "TO", "BE", "ADDED", "HERE\n", "NOTE(danms):", "We", "only", "started", "requiring", "things", "be", "additive", "in\n", "kilo,", "so", "ignore", "all", "migrations", "before", "that", "point.\n", "Insert", "fake_quotas", "with", "the", "longest", "resource", "name.\n", "Check", "we", "can", "get", "the", "longest", "resource", "name.\n", "create", "a", "fake", "network\n", "mtu", "should", "default", "to", "None\n", "dhcp_server", "should", "default", "to", "None\n", "enable", "dhcp", "should", "default", "to", "true\n", "share", "address", "should", "default", "to", "false\n", "Assert", "that", "only", "one", "index", "exists", "that", "covers", "columns\n", "instance_uuid", "and", "device_name\n", "Assert", "that", "only", "one", "index", "exists", "that", "covers", "columns\n", "host", "and", "deleted\n", "and", "only", "one", "index", "covers", "host", "column\n", "Create", "a", "fixed_ips", "row", "with", "a", "null", "instance_uuid", "(if", "not", "already\n", "there)", "to", "make", "sure", "that's", "not", "deleted.\n", "Create", "an", "instance", "record", "with", "a", "valid", "(non-null)", "UUID", "so", "we", "make\n", "sure", "we", "don't", "do", "something", "stupid", "and", "delete", "valid", "records.\n", "Add", "a", "null", "instance_uuid", "entry", "for", "the", "volumes", "table\n", "since", "it", "doesn't", "have", "a", "foreign", "key", "back", "to", "the", "instances", "table.\n", "Make", "sure", "the", "column", "is", "non-nullable", "and", "the", "UC", "exists.\n", "Make", "sure", "the", "instances", "record", "with", "the", "valid", "uuid", "is", "still", "there.\n", "Check", "that", "the", "null", "entry", "in", "the", "volumes", "table", "is", "still", "there", "since\n", "we", "skipped", "tables", "that", "don't", "have", "FK's", "back", "to", "the", "instances", "table.\n", "This", "is", "separate", "from", "test_walk_versions", "so", "we", "can", "test", "the", "case\n", "where", "there", "are", "non-null", "instance_uuid", "entries", "in", "the", "database", "which\n", "cause", "the", "267", "migration", "to", "fail.\n", "Create", "a", "consoles", "record", "with", "a", "null", "instance_uuid", "so\n", "we", "can", "test", "that", "the", "upgrade", "fails", "if", "that", "entry", "is", "found.\n", "NOTE(mriedem):", "We", "use", "the", "consoles", "table", "since", "that's", "the", "only", "table\n", "created", "in", "the", "216", "migration", "with", "a", "ForeignKey", "created", "on", "the\n", "instance_uuid", "table", "for", "sqlite.\n", "NOTE(mriedem):", "We", "handle", "the", "267", "migration", "where", "we", "expect", "to\n", "hit", "a", "ValidationError", "on", "the", "consoles", "table", "to", "have\n", "a", "null", "instance_uuid", "entry\n", "Remove", "the", "consoles", "entry", "with", "the", "null", "instance_uuid", "column.\n", "Now", "run", "the", "267", "upgrade", "again.\n", "Make", "sure", "the", "consoles", "entry", "with", "the", "null", "instance_uuid\n", "was", "deleted.\n", "We", "can", "only", "assert", "that", "the", "col", "exists,", "not", "the", "unique", "constraint\n", "as", "the", "engine", "is", "running", "sqlite\n", "Removed", "on", "MySQL,", "never", "existed", "on", "other", "databases\n", "Drop", "a", "variety", "of", "unique", "constraints", "to", "ensure", "that", "the", "script\n", "properly", "readds", "them", "back\n", "Need", "to", "use", "sqlalchemy-migrate", "UniqueConstraint\n", "Create", "a", "keypair", "record", "so", "we", "can", "test", "that", "the", "upgrade", "will", "set\n", "'ssh'", "as", "default", "value", "in", "the", "new", "column", "for", "the", "previous", "keypair\n", "entries.\n", "Make", "sure", "the", "keypair", "entry", "will", "have", "the", "type", "'ssh'\n", "NOTE(danms):", "This", "is", "a", "dummy", "migration", "that", "just", "does", "a", "consistency\n", "check\n", "NOTE(nic):", "This", "is", "a", "MySQL-specific", "migration,", "and", "is", "a", "no-op", "from\n", "the", "point-of-view", "of", "unit", "tests,", "since", "they", "use", "SQLite\n", "Overriding", "the", "parent", "method", "to", "decide", "on", "certain", "attributes\n", "that", "maybe", "present", "in", "the", "DB", "but", "not", "in", "the", "models.py\n", "Define", "a", "whitelist", "of", "columns", "that", "would", "be", "removed", "from", "the\n", "DB", "at", "a", "later", "release.\n", "Just", "a", "sanity-check", "migration\n", "NOTE(danms):", "Just", "a", "sanity-check", "migration"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/helpers.py": ["API_ACCESS_V4", "API_ACCESS_V6", "API_DISK_CONFIG", "CREATE", "False", "None", "REBUILD", "RESIZE", "True", "UPDATE", "_", "auto_disk_config", "auto_disk_config_raw", "disk_config_from_api", "exc", "get_injected_files", "injected_files", "item", "msg", "op", "operation_kwargs", "personality", "preserve", "server_dict", "strutils", "value", "possible", "ops\n", "Disk", "config\n", "This", "is", "only", "ever", "expected", "during", "rebuild", "operations,", "and", "only\n", "does", "anything", "with", "Ironic", "driver.", "It", "also", "demonstrates", "the", "lack\n", "of", "understanding", "of", "the", "word", "ephemeral.\n", "yes,", "we", "use", "different", "kwargs,", "this", "goes", "all", "the", "way", "back", "to\n", "commit", "cebc98176926f57016a508d5c59b11f55dfcf2b3.\n", "NOTE(sdague):", "the", "deprecated", "hooks", "infrastructure", "doesn't\n", "function", "if", "injected", "files", "is", "not", "defined", "as", "a", "list.", "Once", "hooks\n", "are", "removed,", "this", "should", "go", "back", "inside", "the", "personality\n", "conditional", "above."], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_servers.py": ["False", "LOG", "None", "ServerTestV220", "ServersTest", "ServersTestBase", "True", "__name__", "_access_ipv4_parameter", "_access_ipv6_parameter", "_flavor_ref_parameter", "_force_delete_parameter", "_image_ref_parameter", "_min_count_parameter", "_retries", "_return_resv_id_parameter", "api_major_version", "attach_response", "attachment_id", "base64", "block_device_obj", "client", "cm", "compute_api", "context", "created_server", "created_server_id", "ctxt", "data", "datetime", "desc", "desc_in_resp", "ex", "exception", "expected_desc", "fake_block_device", "fake_network", "fakes", "found_server", "from_status", "good_server", "i", "integrated_helpers", "len", "logging", "metadata", "mock", "mock_attach", "mock_check", "mock_clean_vols", "mock_get_bdms", "mock_reserve", "mock_rpc", "mock_vol", "new_name", "objects", "personality", "post", "range", "reservation_id", "response", "rpcapi", "s", "self", "server", "server_id", "server_ids", "server_map", "server_post", "server_req", "servers", "set_desc", "super", "test", "the_past", "throw_error", "time", "timeutils", "volume", "volume_attachment", "zlib", "The", "network", "service", "is", "called", "as", "part", "of", "server", "creates", "but", "no\n", "networks", "have", "been", "populated", "in", "the", "db,", "so", "stub", "the", "methods.\n", "The", "networks", "aren't", "relevant", "to", "what", "is", "being", "tested.\n", "Wait", "(briefly)", "for", "deletion\n", "TODO(justinsb):", "Mock", "doesn't", "yet", "do", "accurate", "state", "changes\n", "if", "found_server['status']", "!=", "'deleting':\n", "break\n", "Should", "be", "gone\n", "Delete", "the", "server\n", "Simple", "check", "that", "listing", "servers", "works.\n", "Create", "a", "server", "which", "will", "enter", "error", "state.\n", "Creates", "and", "deletes", "a", "server.\n", "Create", "server\n", "Build", "the", "server", "data", "gradually,", "checking", "errors", "along", "the", "way\n", "Without", "an", "imageRef,", "this", "throws", "500.\n", "TODO(justinsb):", "Check", "whatever", "the", "spec", "says", "should", "be", "thrown", "here\n", "With", "an", "invalid", "imageRef,", "this", "throws", "500.\n", "TODO(justinsb):", "Check", "whatever", "the", "spec", "says", "should", "be", "thrown", "here\n", "Add", "a", "valid", "imageRef\n", "Without", "flavorRef,", "this", "throws", "500\n", "TODO(justinsb):", "Check", "whatever", "the", "spec", "says", "should", "be", "thrown", "here\n", "Without", "a", "name,", "this", "throws", "500\n", "TODO(justinsb):", "Check", "whatever", "the", "spec", "says", "should", "be", "thrown", "here\n", "Set", "a", "valid", "server", "name\n", "Check", "it's", "there\n", "It", "should", "also", "be", "in", "the", "all-servers", "list\n", "It", "should", "be", "available...\n", "TODO(justinsb):", "Mock", "doesn't", "yet", "do", "this...\n", "Make", "sure", "that", "compute", "manager", "thinks", "the", "instance", "is\n", "old", "enough", "to", "be", "expired\n", "Creates,", "deletes", "and", "waits", "for", "server", "to", "be", "reclaimed.\n", "Create", "server\n", "Wait", "for", "it", "to", "finish", "being", "created\n", "It", "should", "be", "available...\n", "Cannot", "restore", "unless", "instance", "is", "deleted\n", "Delete", "the", "server\n", "Wait", "for", "queued", "deletion\n", "Wait", "for", "real", "deletion\n", "Creates,", "deletes", "and", "restores", "a", "server.\n", "Create", "server\n", "Wait", "for", "it", "to", "finish", "being", "created\n", "It", "should", "be", "available...\n", "Delete", "the", "server\n", "Wait", "for", "queued", "deletion\n", "Restore", "server\n", "Wait", "for", "server", "to", "become", "active", "again\n", "Creates,", "deletes", "and", "force", "deletes", "a", "server.\n", "Create", "server\n", "Wait", "for", "it", "to", "finish", "being", "created\n", "It", "should", "be", "available...\n", "Delete", "the", "server\n", "Wait", "for", "queued", "deletion\n", "Force", "delete", "server\n", "Wait", "for", "real", "deletion\n", "Creates", "a", "server", "with", "metadata.\n", "Build", "the", "server", "data", "gradually,", "checking", "errors", "along", "the", "way\n", "The", "server", "should", "also", "be", "in", "the", "all-servers", "details", "list\n", "Details", "do", "include", "metadata\n", "The", "server", "should", "also", "be", "in", "the", "all-servers", "summary", "list\n", "Summary", "should", "not", "include", "metadata\n", "Cleanup\n", "Create", "server", "with", "metadata\n", "Change", "status", "from", "ACTIVE", "to", "SHELVED", "for", "negative", "test\n", "Update", "Metadata", "item", "in", "SHELVED", "(not", "ACTIVE,", "etc.)\n", "Delete", "Metadata", "item", "in", "SHELVED", "(not", "ACTIVE,", "etc.)\n", "Cleanup\n", "Rebuild", "a", "server", "with", "metadata.\n", "create", "a", "server", "with", "initially", "has", "no", "metadata\n", "rebuild", "the", "server", "with", "metadata", "and", "other", "server", "attributes\n", "rebuild", "the", "server", "with", "empty", "metadata", "and", "nothing", "else\n", "Cleanup\n", "Test", "building", "and", "renaming", "a", "server.\n", "Create", "a", "server\n", "Rename", "the", "server", "to", "'new-name'\n", "Check", "the", "name", "of", "the", "server\n", "Cleanup\n", "Creates", "multiple", "servers", "and", "checks", "for", "reservation_id.\n", "Create", "2", "servers,", "setting", "'return_reservation_id,", "which", "should\n", "return", "a", "reservation_id\n", "Create", "1", "more", "server,", "which", "should", "not", "return", "a", "reservation_id\n", "lookup", "servers", "created", "by", "the", "first", "request.\n", "The", "server", "from", "the", "2nd", "request", "should", "not", "be", "there.\n", "Should", "have", "found", "2", "servers.\n", "Cleanup\n", "Creates", "a", "server", "with", "injected_files.\n", "Inject", "a", "text", "file\n", "Inject", "a", "binary", "file\n", "Create", "server\n", "Check", "it's", "there\n", "Cleanup\n", "Create", "server\n", "Start", "server", "in", "ACTIVE\n", "NOTE(mkoshiya):", "When", "os-start", "API", "runs,", "the", "server", "status\n", "must", "be", "SHUTOFF.\n", "By", "returning", "409,", "I", "want", "to", "confirm", "that", "the", "ACTIVE", "server", "does", "not\n", "cause", "unexpected", "behavior.\n", "Stop", "server\n", "Stop", "server", "in", "SHUTOFF\n", "NOTE(mkoshiya):", "When", "os-stop", "API", "runs,", "the", "server", "status\n", "must", "be", "ACTIVE", "or", "ERROR.\n", "By", "returning", "409,", "I", "want", "to", "confirm", "that", "the", "SHUTOFF", "server", "does", "not\n", "cause", "unexpected", "behavior.\n", "Cleanup\n", "Creates", "a", "server", "with", "a", "description", "and", "verifies", "it", "is\n", "in", "the", "GET", "responses.\n", "Updates", "a", "server", "with", "a", "description", "and", "verifies", "it", "is\n", "in", "the", "GET", "responses.\n", "Rebuilds", "a", "server", "with", "a", "description", "and", "verifies", "it", "is\n", "in", "the", "GET", "responses.\n", "Calls", "GET", "on", "the", "servers", "and", "verifies", "that", "the", "description\n", "is", "set", "as", "expected", "in", "the", "response,", "or", "not", "set", "at", "all.\n", "Verify", "the", "description", "is", "set", "as", "expected", "(can", "be", "None)\n", "Verify", "the", "description", "is", "not", "included", "in", "the", "response.\n", "Verify", "the", "description", "is", "set", "as", "expected", "(can", "be", "None)\n", "Verify", "the", "description", "is", "not", "included", "in", "the", "response.\n", "Verifies", "that", "a", "400", "error", "is", "thrown", "on", "create", "server\n", "Verifies", "that", "a", "400", "error", "is", "thrown", "on", "update", "server\n", "Verifies", "that", "a", "400", "error", "is", "thrown", "on", "rebuild", "server\n", "Create", "and", "get", "a", "server", "with", "a", "description\n", "Create", "and", "get", "a", "server", "with", "an", "empty", "description\n", "Create", "and", "get", "a", "server", "with", "description", "set", "to", "None\n", "Create", "and", "get", "a", "server", "without", "setting", "the", "description\n", "Create", "a", "server", "with", "an", "initial", "description\n", "Update", "and", "get", "the", "server", "with", "a", "description\n", "Update", "and", "get", "the", "server", "name", "without", "changing", "the", "description\n", "Update", "and", "get", "the", "server", "with", "an", "empty", "description\n", "Update", "and", "get", "the", "server", "by", "removing", "the", "description", "(set", "to", "None)\n", "Update", "and", "get", "the", "server", "with", "a", "2nd", "new", "description\n", "Cleanup\n", "Create", "a", "server", "with", "an", "initial", "description\n", "Rebuild", "and", "get", "the", "server", "with", "a", "description\n", "Rebuild", "and", "get", "the", "server", "name", "without", "changing", "the", "description\n", "Rebuild", "and", "get", "the", "server", "with", "an", "empty", "description\n", "Rebuild", "and", "get", "the", "server", "by", "removing", "the", "description", "(set", "to", "None)\n", "Rebuild", "and", "get", "the", "server", "with", "a", "2nd", "new", "description\n", "Cleanup\n", "Create", "a", "server", "with", "microversion", "v2.19", "and", "a", "description.\n", "Verify", "that", "the", "description", "is", "not", "included", "on", "V2.18", "GETs\n", "Verify", "that", "updating", "the", "server", "with", "description", "on", "V2.18\n", "results", "in", "a", "400", "error\n", "Verify", "that", "rebuilding", "the", "server", "with", "description", "on", "V2.18\n", "results", "in", "a", "400", "error\n", "Cleanup\n", "Create", "a", "server", "on", "V2.18", "and", "verify", "that", "the", "description\n", "defaults", "to", "the", "name", "on", "a", "V2.19", "GET\n", "Cleanup\n", "Verify", "that", "creating", "a", "server", "with", "description", "on", "V2.18\n", "results", "in", "a", "400", "error\n", "Create", "servers", "with", "invalid", "descriptions.", "These", "throw", "400.\n", "Invalid", "unicode", "with", "non-printable", "control", "char\n", "Description", "is", "longer", "than", "255", "chars\n", "Update", "and", "rebuild", "servers", "with", "invalid", "descriptions.\n", "These", "throw", "400.\n", "Invalid", "unicode", "with", "non-printable", "control", "char\n", "Description", "is", "longer", "than", "255", "chars\n", "Test", "attach", "volume\n", "Test", "detach", "volume\n", "Test", "attach", "volume\n", "Test", "detach", "volume"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_keypairs.py": ["Exception", "FAKE_UUID", "KeyPairController", "KeypairPolicyTestV21", "KeypairsTestV21", "KeypairsTestV22", "KeypairsTestV235", "None", "QUOTAS", "True", "_db_key_pair_get", "base_url", "body", "compute_api", "context", "db_key_pair_create", "db_key_pair_create_duplicate", "db_key_pair_destroy", "db_key_pair_get_all_by_user", "db_key_pair_get_not_found", "dict", "ex", "exception", "expected", "fake_keypair", "fake_quotas_count", "fakes", "jsonutils", "keypair", "keypair_data", "keypair_obj", "keypairs_v21", "len", "limit", "marker", "mock", "mock_create", "mock_destroy", "mock_g", "mock_get", "mock_get_all", "mock_kp_get", "name", "objects", "os_wsgi", "oslo_policy", "policy", "policy_path", "quota", "req", "res", "res_dict", "resource", "response", "rules", "self", "server_dict", "server_dicts", "staticmethod", "super", "test", "test_keypair", "user_id", "userid", "uuids", "validation_error", "webob", "wsgi_api_version", "FIXME(ja):", "Should", "we", "check", "that", "public_key", "was", "sent", "to", "create?\n", "NOTE(sdague):", "because", "of", "the", "way", "extensions", "work,", "we", "have", "to\n", "also", "stub", "out", "the", "Request", "compute", "cache", "with", "a", "real", "compute\n", "object.", "Delete", "this", "once", "we", "remove", "all", "the", "gorp", "of\n", "extensions", "modifying", "the", "server", "objects.\n", "NOTE(danms):", "Orphan", "these", "fakes", "(no", "context)", "so", "that", "we\n", "are", "sure", "that", "the", "API", "is", "requesting", "what", "it", "needs", "without\n", "having", "to", "lazy-load."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_pci_requests.py": ["FAKE_REQUEST_UUID", "FAKE_UUID", "False", "None", "True", "_TestInstancePCIRequests", "backported", "db_req", "dict", "enumerate", "fake_legacy_pci_requests", "fake_pci_requests", "fakesysmeta", "index", "instance", "jsonutils", "len", "mock", "mock_get", "object", "objects", "primitive", "req", "request", "requests", "result", "self", "test_objects", "uuids", "x", "NOTE(danms):", "Yes,", "these", "are", "the", "same", "right", "now,", "but", "going", "forward,\n", "we", "have", "changes", "to", "make", "which", "will", "be", "reflected", "in", "the", "format\n", "in", "instance_extra,", "but", "not", "in", "system_metadata."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/isolated_hosts_filter.py": ["CONF", "None", "True", "filters", "host_isolated", "host_state", "image_isolated", "image_ref", "isolated_hosts", "isolated_images", "nova", "restrict_isolated_hosts_to_isolated_images", "run_filter_once_per_request", "self", "spec_obj", "Keep", "specified", "images", "to", "selected", "hosts.", "The", "configuration", "values", "do", "not", "change", "within", "a", "request\n", "If", "the", "configuration", "does", "not", "list", "any", "hosts,", "the", "filter", "will", "always\n", "return", "True,", "assuming", "a", "configuration", "error,", "so", "letting", "all", "hosts\n", "through.\n", "As", "there", "are", "no", "images", "to", "match,", "return", "True", "if", "the", "filter", "is\n", "not", "restrictive", "otherwise", "return", "False", "if", "the", "host", "is", "in", "the\n", "isolation", "list."], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/usage.py": ["_", "_serialize_usages", "context", "exc", "exception", "jsonutils", "objects", "req", "resource", "resource_provider", "response", "usage", "usage_dict", "util", "uuid", "webob", "Placement", "API", "handlers", "for", "usage", "information.", "Resource", "provider", "object", "needed", "for", "two", "things:", "If", "it", "is\n", "NotFound", "we'll", "get", "a", "404", "here,", "which", "needs", "to", "happen", "because\n", "get_all_by_resource_provider_uuid", "can", "return", "an", "empty", "list.\n", "It", "is", "also", "needed", "for", "the", "generation,", "used", "in", "the", "outgoing\n", "representation."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/types.py": ["None", "TypeError", "dialect", "impl", "netaddr", "netutils", "postgresql", "self", "str", "types", "utils", "value", "Custom", "SQLAlchemy", "types.\nAn", "SQLAlchemy", "type", "representing", "an", "IP-address.\nProcess/Formats", "the", "value", "before", "insert", "it", "into", "the", "db.\nAn", "SQLAlchemy", "type", "representing", "a", "CIDR", "definition.\nProcess/Formats", "the", "value", "before", "insert", "it", "into", "the", "db.", "NOTE(maurosr):", "The", "purpose", "here", "is", "to", "convert", "ipv6", "to", "the", "shortened\n", "form,", "not", "validate", "it.\n", "NOTE(sdague):", "normalize", "all", "the", "inserts"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/legacy_v2/extensions/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/318_resource_provider_name_aggregates.py": ["Column", "DDL", "False", "Index", "Integer", "MetaData", "Table", "True", "Unicode", "UniqueConstraint", "can_host", "conn", "generation", "hasattr", "inventories", "inventories_uc", "meta", "migrate_engine", "name", "name_col_ddl", "resource_provider_aggregates", "resource_providers", "uc", "utils", "NOTE(cdent):", "The", "resource_providers", "table", "is", "defined", "as\n", "latin1", "to", "be", "more", "efficient.", "Now", "we", "need", "the", "name", "column\n", "to", "be", "UTF8.", "First", "create", "the", "column,", "then", "modify", "it,\n", "otherwise", "the", "declarative", "handling", "in", "sqlalchemy", "gets\n", "confused.\n", "Add", "a", "unique", "constraint", "so", "that", "any", "resource", "provider", "can", "have\n", "only", "one", "inventory", "for", "any", "given", "resource", "class."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_network.py": ["False", "None", "True", "_TestNetworkObject", "associate", "create", "db_obj", "db_val", "delete", "dict", "disassociate", "fake_network", "field", "get", "get_all", "get_nets", "in_use", "isinstance", "len", "mock", "netaddr", "network", "network_obj", "networks", "obj", "obj_val", "object", "primitive", "result", "self", "set_host", "str", "test_objects", "update", "uuids"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/workarounds.py": ["__name__", "_copy_vdis", "dst", "os", "pluginlib_nova", "safe_copy_vdis", "seq_num", "session", "shutil", "sr_path", "src", "staging_path", "utils", "uuid_stack", "vdi_uuid", "vdi_uuids", "Handle", "the", "uploading", "and", "downloading", "of", "images", "via", "Glance.", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_ec2.py": ["None", "_TestEC2Ids", "_TestEC2InstanceMapping", "_TestEC2SnapshotMapping", "_TestEC2VolumeMapping", "_TestS3ImageMapping", "create", "db", "ec2_obj", "fake_map", "field", "get", "getattr", "imap", "inst", "mock", "mock_glance", "mock_inst", "mock_type", "obj", "object", "objects", "result", "s3imap", "self", "smap", "staticmethod", "test", "test_objects", "uuids", "value", "vmap"], "/Users/mehranhassani/repos/nova/nova/cloudpipe/pipelib.py": ["CONF", "IOError", "LOG", "__name__", "_load_boot_script", "base64", "boot_script", "ca_crt", "compute", "context", "crl", "crypto", "db", "encoded", "exception", "f", "filename", "fileutils", "flavor", "flavors", "group", "group_name", "group_ref", "image_id", "instance_name", "key_dir", "key_name", "key_path", "keypair_api", "logging", "nova", "object", "open", "os", "private_key", "project_id", "result", "rule", "s", "self", "server_crt", "server_key", "shellfile", "string", "tmpdir", "user_data", "utils", "z", "zipfile", "zippath", "zippy", "Make", "a", "payload.zip\n", "genvpn,", "sign", "csr\n", "NOTE(vish):", "run", "instances", "expects", "encoded", "userdata,\n", "it", "is", "decoded", "in", "the", "get_metadata_call.\n", "autorun.sh", "also", "decodes", "the", "zip", "file,\n", "hence", "the", "double", "encoding.\n", "NOTE(vish):", "No", "need", "to", "trigger", "the", "group", "since", "the", "instance\n", "has", "not", "been", "run", "yet."], "/Users/mehranhassani/repos/nova/nova/virt/disk/api.py": ["CONF", "Exception", "FS_FORMAT_EXT2", "FS_FORMAT_EXT3", "FS_FORMAT_EXT4", "FS_FORMAT_NTFS", "FS_FORMAT_VFAT", "FS_FORMAT_XFS", "False", "LOG", "None", "SUPPORTED_FS_TO_EXTEND", "True", "_", "_DEFAULT_FILE_SYSTEM", "_DEFAULT_FS_BY_OSTYPE", "_DEFAULT_MKFS_COMMAND", "_DiskImage", "_LE", "_LW", "_MKFS_COMMAND", "__name__", "_generate_salt", "_inject_admin_password_into_fs", "_inject_file_into_fs", "_inject_files_into_fs", "_inject_key_into_fs", "_inject_metadata_into_fs", "_inject_net_into_fs", "_set_passwd", "_setup_selinux_for_keys", "admin_passwd", "admin_password", "admin_user", "algos", "append", "c", "can_resize_image", "check_exit_code", "container_dir", "container_root_device", "contents", "crypt", "dev", "device", "e", "encrypted_passwd", "entry", "exc", "exception", "extension", "fields", "files", "finally_call", "found", "fs", "fs_label", "functions", "get_disk_size", "ifp", "image", "images", "img", "imgmodel", "inject", "inject_data_into_fs", "inject_func", "inject_val", "is_image_extendable", "isinstance", "items", "jsonutils", "key", "key_data", "keyfile", "len", "line", "list", "logging", "mandatory", "metadata", "mkfs_command", "mount", "mount_dir", "mount_name", "mounter", "msg", "net", "netdir", "netfile", "new_entry", "new_shadow", "new_shadow_data", "nova", "object", "open", "os", "os_type", "p_file", "parent_dir", "partition", "passwd_data", "passwd_path", "path", "processutils", "property", "random", "rc_d", "rclocal", "resize2fs", "restorecon", "run_as_root", "s", "s_file", "safe_resize2fs", "salt", "salt_set", "self", "shadow_data", "shadow_path", "size", "specified_fs", "split_entry", "sshdir", "staticmethod", "status", "target", "tempfile", "tmp_prefix", "units", "username", "utils", "vfs", "virt_size", "Check", "whether", "we", "can", "extend", "the", "image.\nProvide", "operations", "on", "a", "disk", "image", "file.\nReset", "internal", "state", "for", "a", "previously", "mounted", "directory.\nReturn", "the", "collated", "errors", "from", "all", "operations.\nUmount", "a", "mount", "point", "from", "the", "filesystem.\nRemove", "a", "disk", "image", "from", "the", "file", "system.\nGet", "selinux", "guests", "to", "ensure", "correct", "context", "on", "injected", "keys.", "NOTE(yamahata):", "mkfs", "command", "may", "includes", "'='", "for", "its", "options.\n", "So", "item.partition('=')", "doesn't", "work", "here\n", "Currently", "can", "only", "resize", "FS", "in", "local", "images\n", "if", "we", "can't", "access", "the", "filesystem,", "we", "can't", "do", "anything", "more\n", "NOTE(vish):", "attempts", "to", "resize", "filesystem\n", "in", "case", "of", "non-raw", "disks", "we", "can't", "just", "resize", "the", "image,", "but\n", "rather", "the", "mounted", "device", "instead\n", "Check", "that", "we're", "increasing", "the", "size\n", "For", "anything", "except", "a", "local", "raw", "file", "we", "must\n", "go", "via", "the", "VFS", "layer\n", "FIXME(sahid):", "At", "this", "step", "we", "probably", "want", "to", "break", "the\n", "process", "if", "something", "wrong", "happens", "however", "our", "CI\n", "provides", "a", "bad", "configuration", "for", "libguestfs", "reported", "in\n", "the", "bug", "lp#1413142.", "When", "resolved", "we", "should", "remove", "this\n", "except", "to", "let", "the", "error", "to", "be", "propagated.\n", "For", "raw,", "we", "can", "directly", "inspect", "the", "file", "system\n", "These", "passed", "to", "each", "mounter\n", "Internal\n", "Public", "module", "functions\n", "If", "a", "mandatory", "item", "is", "passed", "to", "this", "function,\n", "then", "reraise", "the", "exception", "to", "indicate", "the", "error.\n", "Make", "sure", "container_root_device", "is", "released", "when", "teardown", "container.\n", "NOTE(wangpan):", "Ensure", "the", "parent", "dir", "of", "injecting", "file", "exists\n", "Note", "some", "systems", "end", "rc.local", "with", "\"exit", "0\"\n", "and", "so", "to", "append", "there", "you'd", "need", "something", "like:\n", "utils.execute('sed',", "'-i',", "'${/^exit", "0$/d}'", "rclocal,", "run_as_root=True)\n", "Added", "by", "Nova", "to", "ensure", "injected", "ssh", "keys", "have", "the", "right", "context\\n',\n!/bin/sh')\n", "The", "following", "ssh", "key", "was", "injected", "by", "Nova',\n", "The", "approach", "used", "here", "is", "to", "copy", "the", "password", "and", "shadow\n", "files", "from", "the", "instance", "filesystem", "to", "local", "files,", "make", "any\n", "necessary", "changes,", "and", "then", "copy", "them", "back.\n", "encryption", "algo", "-", "id", "pairs", "for", "crypt()\n", "crypt()", "depends", "on", "the", "underlying", "libc,", "and", "may", "not", "support", "all\n", "forms", "of", "hash.", "We", "try", "md5", "first.", "If", "we", "get", "only", "13", "characters", "back,\n", "then", "the", "underlying", "crypt()", "didn't", "understand", "the", "'$n$salt'", "magic,\n", "so", "we", "fall", "back", "to", "DES.\n", "md5", "is", "the", "default", "because", "it's", "widely", "supported.", "Although", "the\n", "local", "crypt()", "might", "support", "stronger", "SHA,", "the", "target", "instance\n", "might", "not.\n", "username", "MUST", "exist", "in", "passwd", "file", "or", "it's", "an", "error\n", "update", "password", "in", "the", "shadow", "file.It's", "an", "error", "if", "the\n", "the", "user", "doesn't", "exist."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_virtual_interfaces.py": ["FAKE_UUID", "FakeRequest", "False", "None", "ServerVirtualInterfaceEnforcementV21", "ServerVirtualInterfaceTestV21", "True", "_generate_fake_vifs", "api_version_request", "compute", "compute_api", "compute_api_get", "context", "dict", "exc", "exception", "expected_attrs", "expected_response", "fake_context", "fake_req", "fake_vifs", "fakes", "get_vifs_by_instance", "instance_id", "network", "object", "req", "res_dict", "rule_name", "self", "super", "test", "uuids", "vi21", "vif", "vif_obj", "webob", "wsgi_api_version", "Tests", "that", "a", "400", "is", "returned", "when", "using", "neutron", "as", "the", "backend", "These", "APIs", "aren't", "implemented", "by", "the", "neutronv2", "API", "code", "in", "Nova", "so\n", "the", "tests", "need", "to", "specifically", "run", "against", "nova-network", "unless\n", "otherwise", "setup", "to", "run", "with", "Neutron", "and", "expect", "failure.\n", "unset", "the", "get_vifs_by_instance", "stub", "from", "setUp\n", "reset", "the", "controller", "to", "use", "the", "neutron", "network", "API"], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_whitelist.py": ["dev_dict", "len", "parsed", "self", "test", "white_list", "whitelist", "wl1", "wl2"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/glusterfs.py": ["CONF", "False", "LOG", "LibvirtGlusterfsVolumeDriver", "None", "True", "_LE", "_LW", "__name__", "conf", "connection_info", "data", "disk_dev", "disk_info", "ensure", "exc", "export", "fs", "gluster_cmd", "glusterfs_export", "glusterfs_share", "libvirt_utils", "logging", "mount_device", "mount_path", "nova", "options", "processutils", "self", "six", "source_host", "super", "utils", "vol_name", "Class", "implements", "libvirt", "part", "of", "volume", "driver", "for", "GlusterFS.\nReturns", "xml", "for", "libvirt.\nDisconnect", "the", "volume.\nMount", "glusterfs", "export", "to", "mount", "path."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_chance_scheduler.py": ["None", "_return_hosts", "_return_no_host", "all_hosts", "calls", "chance", "dests", "driver_cls", "exception", "filtered", "host", "hosts", "len", "mock", "mock_random_choice", "node", "objects", "self", "spec_obj", "test_scheduler", "Test", "case", "for", "Chance", "Scheduler."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavor_swap.py": ["FlavorSwapTestV21", "base_url", "body", "content_type", "fakes", "flavor", "flavors", "jsonutils", "prefix", "req", "res", "self", "super", "swap", "test", "url"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_dns_domain.py": ["None", "_TestDNSDomain", "db", "dns_domain", "dnsd", "fake_dnsd", "field", "get", "getattr", "mock", "obj", "object", "self", "staticmethod", "test", "test_objects", "value"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/017_aggregates.py": ["Column", "DateTime", "False", "ForeignKey", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "aggregate_hosts", "aggregate_metadata", "aggregates", "meta", "migrate_engine", "API", "Database", "migrations", "for", "aggregates"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_tags.py": ["TAG1", "TAG2", "expected_location", "microversion", "models", "response", "sample_dir", "scenarios", "self", "subs", "tag", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/311_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/flavor_access.py": ["False", "add_tenant_access", "remove_tenant_access", "defined", "from", "project_id", "in", "instance_type_projects", "table\n", "defined", "from", "project_id", "in", "instance_type_projects", "table"], "/Users/mehranhassani/repos/nova/nova/policies/networks_associate.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "networks_associate_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_num_instances_filters.py": ["agg_mock", "fakes", "host", "mock", "num_instances_filter", "objects", "self", "set", "spec_obj", "test", "No", "aggregate", "defined", "for", "that", "host.\n", "Aggregate", "defined", "for", "that", "host."], "/Users/mehranhassani/repos/nova/nova/pci/devspec.py": ["ANY", "False", "KeyError", "MAX_BUS", "MAX_DOMAIN", "MAX_FUNC", "MAX_PRODUCT_ID", "MAX_SLOT", "MAX_VENDOR_ID", "None", "PciAddressGlobSpec", "PciAddressRegexSpec", "PciAddressSpec", "PhysicalPciAddress", "REGEX_ANY", "True", "ValueError", "WhitelistPciAddress", "_", "a", "abc", "address_obj", "address_str", "all", "bool", "c", "conditions", "dbs", "dbs_all", "dbs_checked", "dbs_fields", "dev_dict", "dev_spec", "dict", "exception", "func", "get_pci_dev_info", "getattr", "hex_value", "int", "is_physical_function", "isinstance", "len", "max", "object", "pci_addr", "pci_addr_obj", "pci_address", "pci_obj", "pci_phys_addr", "pci_phys_addr_obj", "pf", "phys_pci_addr", "property", "re", "s", "self", "sep", "setattr", "six", "string", "utils", "v", "If", "we", "got", "a", "partial", "address", "like", "\":00.\",", "we", "need", "to", "turn", "this\n", "into", "a", "domain", "of", "ANY,", "a", "bus", "of", "ANY,", "and", "a", "slot", "of", "00.", "This", "code\n", "allows", "the", "address", "bus", "and/or", "domain", "to", "be", "left", "off\n", "Try", "to", "match", "on", "the", "parent", "PCI", "address", "if", "the", "PciDeviceSpec", "is", "a\n", "PF", "(sriov", "is", "available)", "and", "the", "device", "to", "match", "is", "a", "VF.", "This\n", "makes", "possible", "to", "specify", "the", "PCI", "address", "of", "a", "PF", "in", "the\n", "pci_passthrough_whitelist", "to", "match", "any", "of", "it's", "VFs", "PCI", "devices.\n", "Try", "to", "match", "on", "the", "device", "PCI", "address", "only.\n", "Note(moshele):", "The", "address", "attribute", "can", "be", "a", "string", "or", "a", "dict.\n", "For", "glob", "syntax", "or", "specific", "pci", "it", "is", "a", "string", "and", "for", "regex", "syntax\n", "it", "is", "a", "dict.", "The", "WhitelistPciAddress", "class", "handles", "both", "types.\n", "Note(moshele):", "In", "this", "case", "we", "always", "passing", "a", "string\n", "of", "the", "PF", "pci", "address"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_deferred_delete.py": ["DeferredDeleteExtensionTestV21", "DeferredDeletePolicyEnforcementV21", "FakeRequest", "None", "compute_api", "context", "dd_v21", "ex", "exc", "exception", "ext_ver", "fake_instance", "fakes", "force_delete_mock", "get_instance_mock", "instance", "isinstance", "mock", "mock_force_delete", "mock_get", "object", "req", "res", "rule_name", "self", "status_int", "super", "test", "webob", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_keypairs.py": ["CONF", "CreateImportSharedTestMixIn", "False", "KeypairAPITestCase", "QUOTAS", "True", "action", "args", "certif", "cfg", "compute_api", "context", "db_key_pair_create", "db_key_pair_create_duplicate", "db_key_pair_destroy", "db_key_pair_get", "db_key_pair_get_all_by_user", "dict", "exc", "exc_class", "exception", "expected_message", "fake_crypto", "fake_notifier", "fake_quotas_count", "fingerprint", "func", "func_name", "getattr", "k", "key_name", "keypair", "keypair_obj", "keypairs", "len", "limit", "marker", "msg", "n1", "n2", "name", "object", "private_key", "processutils", "quota", "resource", "self", "six", "super", "test_compute", "test_keypair", "user_id", "Tests", "for", "keypair", "API.", "X509", "keypairs", "will", "fail", "if", "the", "Subject", "they're", "created", "with\n", "is", "longer", "than", "64", "characters.", "The", "previous", "unit", "tests", "could", "not\n", "detect", "the", "issue", "because", "the", "ctxt.user_id", "was", "too", "short.\n", "This", "unit", "tests", "is", "added", "to", "prove", "this", "issue."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_metadata.py": ["CONF", "nova", "response", "sample_dir", "self", "subs", "test_servers", "uuid", "vanilla_regexes", "Test", "setting", "all", "metadata", "for", "a", "server.\n", "Test", "updating", "all", "metadata", "for", "a", "server.\n", "Test", "getting", "all", "metadata", "for", "a", "server.\n", "Test", "putting", "an", "individual", "metadata", "item", "for", "a", "server.\n", "Test", "getting", "an", "individual", "metadata", "item", "for", "a", "server.\n", "Test", "deleting", "an", "individual", "metadata", "item", "for", "a", "server."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/229_add_extra_resources_in_compute_nodes.py": ["Column", "MetaData", "Table", "Text", "True", "compute_nodes", "extra_resources", "meta", "migrate_engine", "shadow_compute_nodes", "shadow_extra_resources", "Add", "a", "new", "column", "extra_resources", "to", "save", "extra_resources", "info", "for\n", "compute", "nodes"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/226_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_keypair.py": ["KeyPairObjectTestCase", "None", "api_keys", "context", "count", "db_api", "done", "exception", "keypair", "kp", "kpl", "len", "main_keys", "objects", "self", "set", "super", "test", "total", "vals", "values", "x", "NOTE(danms):", "This", "only", "fetches", "from", "the", "API", "DB\n", "NOTE(danms):", "This", "only", "fetches", "from", "the", "main", "DB\n", "check", "all", "4", "keypairs", "(2", "api", "and", "2", "main)\n", "check", "only", "1", "keypair", "(1", "api)\n", "check", "only", "3", "keypairs", "(2", "api", "and", "1", "main)\n", "check", "keypairs", "after", "'apikey1'", "(1", "api", "and", "2", "main)\n", "check", "keypairs", "after", "'mainkey2'", "(no", "keypairs)\n", "check", "only", "2", "keypairs", "after", "'apikey1'", "(1", "api", "and", "1", "main)\n", "check", "non-existing", "keypair\n", "create", "keypairs", "for", "two", "users\n", "check", "all", "2", "keypairs", "for", "user1", "(1", "api", "and", "1", "main)\n", "check", "all", "2", "keypairs", "for", "user2", "(1", "api", "and", "1", "main)\n", "check", "only", "1", "keypair", "for", "user1", "(1", "api)\n", "check", "keypairs", "after", "'apikey'", "for", "user2", "(1", "main)\n", "check", "only", "2", "keypairs", "after", "'apikey'", "for", "user1", "(1", "main)\n", "check", "non-existing", "keypair", "for", "user2"], "/Users/mehranhassani/repos/nova/nova/cmd/dhcpbridge.py": ["CONF", "LOG", "TypeError", "_LE", "__name__", "action", "actions", "add_action_parsers", "add_lease", "api", "cfg", "cmd_common", "conductor_rpcapi", "config", "context", "ctxt", "del_lease", "func", "importutils", "init_leases", "int", "ip_address", "jsonutils", "logging", "mac", "network", "network_id", "network_manager", "network_rpcapi", "nova", "objects", "objects_base", "old_lease", "os", "parser", "print", "rpc", "subparsers", "sys", "Set", "the", "IP", "that", "was", "assigned", "by", "the", "DHCP", "server.\nCalled", "when", "an", "old", "lease", "is", "recognized.\nCalled", "when", "a", "lease", "expires.\nGet", "the", "list", "of", "hosts", "for", "a", "network.\nParse", "environment", "and", "arguments", "and", "call", "the", "appropriate", "action.", "NOTE(vish):", "We", "assume", "we", "heard", "about", "this", "lease", "the", "first", "time.\n", "If", "not,", "we", "will", "get", "it", "the", "next", "time", "the", "lease", "is\n", "renewed.\n", "NOTE(cfb):", "dnsmasq", "always", "passes", "mac,", "and", "ip.", "hostname\n", "is", "passed", "if", "known.", "We", "don't", "care", "about\n", "hostname,", "but", "argparse", "will", "complain", "if", "we\n", "do", "not", "accept", "it.\n", "NOTE(sdague):", "old", "is", "the", "most", "frequent", "message", "sent,", "and\n", "it's", "a", "noop.", "We", "should", "just", "exit", "immediately", "otherwise", "we\n", "can", "stack", "up", "a", "bunch", "of", "requests", "in", "dnsmasq.", "A", "SIGHUP", "seems\n", "to", "dump", "this", "list,", "so", "actions", "queued", "up", "get", "lost."], "/Users/mehranhassani/repos/nova/nova/conf/ironic.py": ["cfg", "conf", "ironic_group", "ironic_options", "ks_loading", "TODO(raj_singh):", "Change", "this", "default", "to", "some", "sensible", "number"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_lock_server.py": ["LockServerPolicyEnforcementV21", "LockServerTestsV21", "None", "True", "_api_version", "_fake_controller", "admin_ctxt", "admin_only_action_common", "admin_req", "authorization_error", "body", "common", "context", "controller_name", "ctxt", "exc", "exception", "fake_instance", "fakes", "get_instance_mock", "getattr", "instance", "lock_mock", "lock_server", "lock_server_v21", "mock", "mock_get_instance", "mock_unlock", "rule_name", "rules", "self", "super", "test", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/023_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/test_pluginlib_nova.py": ["Exception", "FakeUnplugException", "False", "None", "PluginlibNova", "args", "details", "error", "fake_args", "fake_vdi", "handle_function", "kwargs", "mock", "mock_Formatter", "mock_Logger_addHandler", "mock_Logger_setLevel", "mock_connect", "mock_get_this_host", "mock_get_vm_records", "mock_sysh_setFormatter", "mock_sysh_setLevel", "mock_vbd_create", "mock_vbd_destroy", "mock_vbd_plug", "mock_vbd_unplug_with_retry", "name", "plugin_test", "ret_value", "return_value", "self", "side_effects", "super", "vbd", "the", "fake", "vbd", "handle", "function"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/exact_core_filter.py": ["False", "LOG", "True", "_LW", "__name__", "filters", "host_state", "logging", "required_vcpus", "self", "spec_obj", "usable_vcpus", "Exact", "Core", "Filter.\nReturn", "True", "if", "host", "has", "the", "exact", "number", "of", "CPU", "cores.", "Fail", "safe\n", "NOTE(mgoddard):", "Setting", "the", "limit", "ensures", "that", "it", "is", "enforced", "in\n", "compute.", "This", "ensures", "that", "if", "multiple", "instances", "are", "scheduled", "to", "a\n", "single", "host,", "then", "all", "after", "the", "first", "will", "fail", "in", "the", "claim."], "/Users/mehranhassani/repos/nova/nova/api/openstack/__init__.py": ["APIMapper", "APIRouterV21", "CONF", "Exception", "False", "FaultWrapper", "LOG", "None", "NotImplementedError", "ProjectMapper", "True", "_LE", "_LI", "_LW", "__name__", "_check_load_extension", "_status_to_type", "args", "base_wsgi", "classmethod", "clazz", "cls", "collection", "collection_name", "controller", "dict", "environ", "ex", "ext", "ext_has_inherits", "ext_list", "ext_name", "ext_no_inherits", "extension", "filtered_vary", "getattr", "global_config", "handler", "headers", "inherits", "init_only", "inner", "inner_msg", "kargs", "kwargs", "list", "logging", "mapper", "member_name", "msg_dict", "notifications", "nova", "outer", "p_collection", "p_member", "parent_resource", "project_id_regex", "project_id_token", "property", "req", "resource", "response", "result", "routes", "safe", "self", "sorted", "staticmethod", "status", "stevedore", "super", "translate", "url", "user_locale", "utils", "vary", "vary_headers", "webob", "wsgi", "wsgi_resource", "Calls", "down", "the", "middleware", "stack,", "making", "exceptions", "into", "faults.\nSimple", "paste", "factory,", ":class:`nova.wsgi.Router`", "doesn't", "have", "one.", "NOTE(johannes):", "We", "leave", "the", "explanation", "empty", "here", "on\n", "purpose.", "It", "could", "possibly", "have", "sensitive", "information\n", "that", "should", "not", "be", "returned", "back", "to", "the", "user.", "See\n", "bugs", "868360", "and", "874472\n", "NOTE(eglynn):", "However,", "it", "would", "be", "over-conservative", "and\n", "inconsistent", "with", "the", "EC2", "API", "to", "hide", "every", "exception,\n", "including", "those", "that", "are", "safe", "to", "expose,", "see", "bug", "1021373\n", "NOTE(vish):", "Default", "the", "format", "part", "of", "a", "route", "to", "only", "accept", "json\n", "and", "xml", "so", "it", "doesn't", "eat", "all", "characters", "after", "a", "'.'\n", "in", "the", "url.\n", "NOTE(sdague):", "project_id", "parameter", "is", "only", "valid", "if", "its", "hex\n", "or", "hex", "+", "dashes", "(note,", "integers", "are", "a", "subset", "of", "this).", "This\n", "is", "required", "to", "hand", "our", "overlaping", "routes", "issues.\n", "while", "we", "are", "in", "transition", "mode,", "create", "additional", "routes\n", "for", "the", "resource", "that", "do", "not", "include", "project_id.\n", "NOTE(cyeoh)", "Core", "API", "support", "is", "rewritten", "as", "extensions\n", "but", "conceptually", "still", "have", "core\n", "NOTE(cyeoh):", "Stevedore", "raises", "an", "exception", "if", "there", "are\n", "no", "plugins", "detected.", "I", "wonder", "if", "this", "is", "a", "bug.\n", "non", "core-API", "plugins", "use", "the", "collection", "name", "as", "the\n", "member", "name,", "but", "the", "core-API", "plugins", "use", "the\n", "singular/plural", "convention", "for", "member/collection", "names"], "/Users/mehranhassani/repos/nova/nova/conf/console.py": ["True", "cfg", "conf", "console_opts", "socket", "TODO(pumaranikar):", "Move", "this", "config", "to", "stevedore", "plugin", "system.\n", "TODO(sfinucan):", "Convert", "this", "to", "URIOpt\n", "TODO(pumaranikar):", "We", "can", "consider", "moving", "these", "options", "to", "console", "group\n", "and", "renaming", "them", "all", "to", "drop", "console", "bit."], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1620248.py": ["REQUIRES_LOCKING", "TestServerUpdate", "True", "api_fixture", "cast_as_call", "dict", "nova", "nova_fixtures", "policy_fixture", "self", "server", "server_id", "server_name", "super", "test", "Simulate", "requests", "coming", "in", "before", "the", "instance", "is", "scheduled", "by\n", "using", "a", "no-op", "for", "conductor", "build_instances\n", "the", "image", "fake", "backend", "needed", "for", "image", "discovery"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/versioned_method.py": ["end_version", "func", "name", "object", "self", "start_version"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/302_pgsql_add_instance_system_metadata_index.py": ["INDEX_COLUMNS", "INDEX_NAME", "SYS_META_TABLE_NAME", "migrate_engine", "utils", "using", "the", "index", "name", "same", "with", "mysql\n", "This", "index", "was", "already", "added", "by", "migration", "216", "for", "MySQL\n", "Adds", "index", "for", "PostgreSQL", "and", "other", "DB"], "/Users/mehranhassani/repos/nova/nova/virt/firewall.py": ["CONF", "False", "FirewallDriver", "KeyError", "LOG", "None", "NotImplementedError", "True", "_LI", "__name__", "_instance", "args", "chain_name", "cidr", "cidrs", "cidrv6", "cidrv6s", "compute_utils", "context", "ctxt", "default", "dhcp_server", "dhcp_servers", "dict", "fw_class", "fw_rules", "gateway_v6", "gateways_v6", "icmp_code", "icmp_type", "icmp_type_arg", "id_list", "importutils", "inst", "inst_ipv4_rules", "inst_ipv6_rules", "instance", "instance_id", "insts", "ip", "ips", "ips_v4", "ips_v6", "ipv4_rules", "ipv6_rules", "isinstance", "key", "kwargs", "linux_net", "list", "logging", "netutils", "network_info", "nova", "nw_info", "object", "objects", "protocol", "rule", "rules", "security_group", "security_group_id", "self", "str", "subnet", "subnets", "subrule", "utils", "v4_subnets", "v6_subnets", "version", "vif", "Defer", "application", "of", "IPTables", "rules.\nTurn", "off", "deferral", "of", "IPTables", "rules", "and", "apply", "the", "rules", "now.\nStop", "filtering", "instance.\nCheck", "nova-instance-instance-xxx", "exists.\nDriver", "which", "enforces", "security", "groups", "through", "iptables", "rules.\nNo-op.", "Everything", "is", "done", "in", "prepare_instance_filter.\nFirewall", "driver", "which", "just", "provides", "No-op", "methods.", "Flags", "for", "DHCP", "request", "rule\n", "Ensure", "that", "DHCP", "request", "rule", "is", "updated", "if", "necessary\n", "Always", "drop", "invalid", "packets\n", "Allow", "established", "connections\n", "return", "empty", "list", "if", "icmp_type", "==", "-1\n", "NOTE(danms):", "allow", "old-world", "instance", "objects", "from\n", "unconverted", "callers;", "all", "we", "need", "is", "instance.uuid", "below\n", "Initialize", "with", "basic", "rules\n", "Set", "up", "rules", "to", "allow", "traffic", "to/from", "DHCP", "server\n", "Allow", "project", "network", "traffic\n", "We", "wrap", "these", "in", "CONF.use_ipv6", "because", "they", "might", "cause\n", "a", "DB", "lookup.", "The", "other", "ones", "are", "just", "list", "operations,", "so\n", "they're", "not", "worth", "the", "clutter.\n", "Allow", "RA", "responses\n", "then,", "security", "group", "chains", "and", "rules\n", "NOTE(danms):", "instance", "cache", "must", "have", "been", "modified,\n", "ignore", "this", "deleted", "instance", "and", "move", "on"], "/Users/mehranhassani/repos/nova/nova/policies/config_drive.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "config_drive_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/compute/monitors/base.py": ["MonitorBase", "None", "NotImplementedError", "abc", "compute_manager", "fields", "metric_list", "object", "self", "set", "six", "Base", "class", "for", "all", "monitors", "that", "return", "CPU-related", "metrics."], "/Users/mehranhassani/repos/nova/nova/objects/security_group.py": ["None", "SecurityGroupList", "VERSION", "args", "base", "cls", "context", "db", "db_secgroup", "field", "fields", "group_name", "groups", "instance", "kwargs", "objects", "primitive", "project_id", "property", "secgroup", "secgroup_id", "secgroups", "security_groups", "self", "setattr", "sg", "staticmethod", "super", "target_version", "updates", "uuidutils", "versionutils", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Added", "uuid", "field", "for", "Neutron", "security", "groups.\n", "The", "uuid", "field", "is", "only", "used", "for", "Neutron", "security", "groups", "and", "is", "not\n", "persisted", "to", "the", "Nova", "database.\n", "We", "don't", "store", "uuid", "in", "the", "Nova", "database", "so", "remove", "it", "if", "someone\n", "mistakenly", "tried", "to", "save", "a", "neutron", "security", "group", "object.", "We", "only\n", "need", "the", "uuid", "in", "the", "object", "for", "obj_to_primitive()", "calls", "where", "this\n", "object", "is", "serialized", "and", "stored", "in", "the", "RequestSpec", "object.\n", "Version", "1.0:", "Initial", "version\n", "SecurityGroup", "<=", "version", "1.1\n", "This", "is", "a", "neutron", "security", "group", "uuid", "so", "store", "in", "the", "uuid", "field.\n", "This", "is", "either", "a", "nova-network", "security", "group", "name,", "or", "it's", "the\n", "special", "'default'", "security", "group", "in", "the", "case", "of", "neutron."], "/Users/mehranhassani/repos/nova/nova/cmd/novncproxy.py": ["CONF", "baseproxy", "config", "nova", "sys", "vnc", "set", "default", "web", "flag", "option"], "/Users/mehranhassani/repos/nova/nova/tests/unit/image/test_glance.py": ["AttributeError", "CONF", "Exception", "Exceptionator", "FakeDiskException", "FakeSchema", "False", "IMAGE_ATTRIBUTES", "ImageV2", "KeyError", "MyFakeGlanceImage", "NOVA_IMAGE_ATTRIBUTES", "NOW_DATETIME", "NOW_GLANCE_FORMAT", "None", "StringIO", "TestDownloadSignatureVerification", "TestGlanceClientWrapperRetries", "TestIsImageAvailable", "TestTranslateToGlance", "True", "_", "_ignored", "_trans_from_mock", "a_mock", "api_servers", "auth_token", "avail_mock", "client", "client_mock", "consumer", "context", "converted", "copy", "create_call_kwargs", "create_client_mock", "cryptography", "ctx", "ctxt", "data", "datetime", "deleted", "dict", "disk_format", "exception", "expected", "expected_disk_format", "expected_endpoint", "expected_filters_v1", "expected_params", "expected_servers", "expected_url", "expected_v2_image", "ext_query_mock", "fake_image_cls", "fake_path", "fixture", "gcwi_mocked", "get_tran_mock", "glance", "glance_image", "glance_servers", "glanceclient", "i", "id", "id_or_uri", "image", "image_fixtures", "image_id", "image_info", "image_meta", "image_mock", "image_v2", "image_v2_dict", "image_v2_meta", "images", "images_mock", "img", "in_exc", "include_locations", "info", "init_mock", "input_filters", "is_avail_mock", "key", "len", "locations", "metadata", "mock", "mock_client", "mock_dest", "mock_get_verifier", "mock_glance_image_service", "mock_log", "mock_open", "mock_show", "mocked_schema", "nova", "nova_image_dict", "object", "observed", "open_mock", "out_exc", "params", "prop_name", "properties", "props", "raised", "raw", "raw_schema", "reraise_mock", "res", "result", "schema", "schemas", "self", "server", "service", "set", "show_mock", "shuffle_mock", "side_effect", "six", "sleep_mock", "some_generator", "ssl_enable_mock", "staticmethod", "str", "super", "test", "test_schema", "testtools", "tran_mod", "trans_from_mock", "trans_to_mock", "translated", "type", "tzinfo", "url", "uuids", "value", "version", "visibility", "writer", "Tests", "the", "internal", "_is_image_available", "function.\nTests", "the", "show", "method", "of", "the", "GlanceImageService.\nTests", "the", "detail", "method", "of", "the", "GlanceImageService.\nTests", "the", "create", "method", "of", "the", "GlanceImageService.\nTests", "the", "update", "method", "of", "the", "GlanceImageService.\nTests", "the", "delete", "method", "of", "the", "GlanceImageService.\nTest", "that", "image", "was", "translated", "correct", "to", "be", "accepted", "by", "Glance", "Wrapper", "class", "that", "is", "used", "to", "comply", "with", "dual", "nature", "of\n", "warlock", "objects,", "that", "are", "inherited", "from", "dict", "and", "have", "'schema'\n", "attribute.\n", "Verify", "behavior", "from", "glance", "objects", "that", "are", "missing", "attributes\n", "TODO(jaypipes):", "Find", "a", "better", "way", "of", "testing", "this", "crappy\n", "glanceclient", "magic", "object", "stuff.\n", "NOTE(tdurakov):", "Assertion", "of", "serialized", "objects", "won't", "work\n", "during", "using", "of", "random", "PYTHONHASHSEED.", "Assertion", "of\n", "serialized/deserialized", "object", "and", "initial", "one", "is", "enough\n", "Test", "the", "version", "is", "properly", "passed", "to", "glanceclient.\n", "Test", "that", "the", "IPv6", "bracketization", "adapts", "the", "endpoint", "properly.\n", "Here", "we", "are", "testing", "the", "behaviour", "that", "calling", "client.call()", "twice\n", "when", "there", "are", "no", "retries", "will", "cycle", "through", "the", "api_servers", "and", "not\n", "sleep", "(which", "would", "be", "an", "indication", "of", "a", "retry)\n", "NOTE(jaypipes):", "This", "really", "shouldn't", "be", "allowed,", "but", "because", "of", "the\n", "horrible", "design", "of", "the", "download()", "method", "in", "GlanceImageService,", "no\n", "error", "is", "raised,", "and", "the", "dst_path", "is", "ignored...\n", "#TODO(jaypipes):", "Fix", "the", "aforementioned", "horrible", "design", "of\n", "the", "download()", "method.\n", "NOTE(mikal):", "data", "is", "a", "file", "like", "object,", "which", "in", "our", "case", "always\n", "raises", "an", "exception", "when", "we", "attempt", "to", "write", "to", "the", "file.\n", "Test", "that", "we", "fall", "back", "to", "downloading", "to", "the", "dst_path\n", "if", "the", "download", "method", "of", "the", "transfer", "module", "raised\n", "an", "exception.\n", "NOTE(jaypipes):", "log", "messages", "call", "open()", "in", "part", "of", "the\n", "download", "path,", "so", "here,", "we", "just", "check", "that", "the", "last", "open()\n", "call", "was", "done", "for", "the", "dst_path", "file", "descriptor.\n", "Test", "that", "we", "fall", "back", "to", "downloading", "to", "the", "dst_path\n", "if", "no", "appropriate", "transfer", "module", "is", "found...\n", "an", "exception.\n", "NOTE(jaypipes):", "log", "messages", "call", "open()", "in", "part", "of", "the\n", "download", "path,", "so", "here,", "we", "just", "check", "that", "the", "last", "open()\n", "call", "was", "done", "for", "the", "dst_path", "file", "descriptor.\n", "We", "emulate", "warlock", "validation", "that", "throws", "an", "AttributeError\n", "if", "you", "try", "to", "call", "is_public", "on", "an", "image", "model", "returned", "by\n", "a", "call", "to", "V2", "image.get().", "Here,", "the", "ImageSpecV2", "does", "not", "have\n", "an", "is_public", "attribute", "and", "MagicMock", "will", "throw", "an", "AttributeError.\n", "fake", "image", "cls", "without", "disk_format,", "container_format,", "name", "attributes\n", "Verify", "that", "the", "'id'", "element", "has", "been", "removed", "as", "a", "kwarg", "to\n", "the", "call", "to", "glanceclient's", "update", "(since", "the", "image", "ID", "is\n", "supplied", "as", "a", "positional", "arg),", "and", "that", "the\n", "purge_props", "default", "is", "True.\n", "Now", "verify", "that", "if", "we", "supply", "image", "data", "to", "the", "call,\n", "that", "the", "client", "is", "also", "called", "with", "the", "data", "kwarg\n", "size=0", "will", "trigger", "force_activate=True\n", "Verify", "that", "the", "disk_format", "and", "container_format", "kwargs", "are", "passed.\n", "For", "this", "test", "we", "want", "to", "skip", "qcow2", "since", "that's", "primary.\n", "For", "this", "test", "we", "want", "to", "skip", "qcow2", "since", "that's", "primary.\n", "Verify", "that", "the", "'id'", "element", "has", "been", "removed", "as", "a", "kwarg", "to\n", "the", "call", "to", "glanceclient's", "update", "(since", "the", "image", "ID", "is\n", "supplied", "as", "a", "positional", "arg),", "and", "that", "the\n", "purge_props", "default", "is", "True.\n", "Now", "verify", "that", "if", "we", "supply", "image", "data", "to", "the", "call,\n", "that", "the", "client", "is", "also", "called", "with", "the", "data", "kwarg"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_reset_state.py": ["None", "ResetStateTestsV21", "True", "admin_act", "admin_actions_v21", "admin_state_reset", "bad_request", "body", "check_state", "dict", "exc", "exception", "expected", "fakes", "getattr", "instance", "isinstance", "k", "objects", "result", "self", "set", "status_int", "super", "test", "uuidutils", "v", "vm_states", "webob", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/rpc.py": ["ALLOWED_EXMODS", "AssertionError", "CONF", "ClientRouter", "ClientWrapper", "EXTRA_EXMODS", "False", "JsonPayloadSerializer", "KeyError", "LEGACY_NOTIFIER", "LOG", "LegacyValidatingNotifier", "NOTIFICATION_TRANSPORT", "NOTIFIER", "None", "RequestContextSerializer", "TRANSPORT", "TRANSPORT_ALIASES", "True", "_", "__all__", "__name__", "allowed_legacy_notification_event_types", "args", "base", "cell_mapping", "client", "client_id", "client_wrapper", "conf", "context", "control_exchange", "create_transport", "ctxt", "default_client", "endpoints", "entity", "event_type", "exmods", "fatal", "functools", "get_allowed_exmods", "get_transport_url", "getattr", "host", "instance", "items_copy", "jsonutils", "last_access_time", "list", "logging", "message", "messaging", "notifier", "nova", "object", "objects", "payload", "periodic_task", "priority", "property", "publisher_id", "self", "serializer", "service", "set", "setattr", "stale", "staticmethod", "super", "target", "timeout", "timeutils", "transport", "url", "url_str", "version_cap", "Wraps", "an", "oslo.messaging", "Notifier", "and", "checks", "for", "allowed", "event_types.", "NOTE(markmc):", "The", "nova.openstack.common.rpc", "entries", "are", "for", "backwards", "compat\n", "with", "Havana", "rpc_backend", "configuration", "values.", "The", "nova.rpc", "entries", "are", "for\n", "compat", "with", "Essex", "values.\n", "If", "true", "an", "exception", "is", "thrown", "if", "the", "event_type", "is", "not", "allowed,", "if", "false\n", "then", "only", "a", "WARNING", "is", "logged\n", "This", "list", "contains", "the", "already", "existing", "therefore", "allowed", "legacy\n", "notification", "event_types.", "New", "items", "shall", "not", "be", "added", "to", "the", "list", "as\n", "Nova", "does", "not", "allow", "new", "legacy", "notifications", "any", "more.", "This", "list", "will", "be\n", "removed", "when", "all", "the", "notification", "is", "transformed", "to", "versioned\n", "notifications.\n", "nova.exception_wrapper.wrap_exception", "decorator", "emits", "notification\n", "where", "the", "event_type", "is", "the", "name", "of", "the", "decorated", "function.", "This\n", "is", "used", "in", "many", "places", "but", "it", "will", "be", "converted", "to", "versioned\n", "notification", "in", "one", "run", "by", "updating", "the", "decorator", "so", "it", "is", "pointless\n", "to", "white", "list", "all", "the", "function", "names", "here", "we", "white", "list", "the\n", "notification", "itself", "detected", "by", "the", "special", "payload", "keys.\n", "NOTE(melwitt):", "Cells", "v1", "does", "its", "own", "serialization", "and", "won't\n", "have", "a", "serializer", "available", "on", "the", "client", "object.\n", "Prevent", "this", "empty", "context", "from", "overwriting", "the", "thread", "local", "copy\n", "Never", "expire", "the", "default", "client\n", "Not", "a", "cells", "v2", "deployment\n", "Not", "a", "cells", "v2", "deployment"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_instance_actions.py": ["InstanceActionsTestV2", "InstanceActionsTestV21", "InstanceActionsTestV221", "actions", "api_major_version", "client", "created_server", "created_server_id", "fake_network", "found_server", "microversion", "self", "server", "super", "test_servers", "Tests", "Instance", "Actions", "API", "TODO(mriedem):", "We", "should", "pull", "this", "up", "into", "the", "parent", "class", "so", "we\n", "don't", "have", "so", "much", "copy/paste", "in", "these", "functional", "tests.\n", "Create", "a", "server\n", "Check", "it's", "there\n", "It", "should", "be", "available..."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_external_event.py": ["ValueError", "_TestInstanceExternalEventObject", "event", "external_event_obj", "key", "make_key", "mock", "object", "self", "test_objects"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/limits.py": ["FILTERED_LIMITS", "False", "None", "True", "absolute_limits", "filter_result", "filtered_limits", "limit_name", "limit_names", "limits", "max_image_meta", "name", "object", "output", "self", "value", "OpenStack", "API", "base", "limits", "view", "builder.", "This", "is", "a", "list", "of", "limits", "which", "needs", "to", "filter", "out", "from", "the", "API", "response.\n", "This", "is", "due", "to", "the", "deprecation", "of", "network", "related", "proxy", "APIs,", "the", "related\n", "limit", "should", "be", "removed", "from", "the", "API", "also."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_tenant_networks.py": ["ADMIN_API", "CONF", "TenantNetworksJsonTests", "True", "api_sample_base", "fake", "jsonutils", "net", "nova", "response", "sample_dir", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/placement/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/test_cinder.py": ["CONF", "CinderApiTestCase", "FakeSnapshot", "FakeVolume", "False", "None", "NotImplementedError", "True", "actual", "attachment", "attachments", "cinder", "cinder_exception", "connection_info", "connector", "context", "created_snapshot", "created_volume", "ex", "exception", "expected", "expected_exc", "fake_instance_obj", "instance", "keystone_exception", "len", "mock", "mock_cinderclient", "mock_get_instance_az", "mock_log", "mock_volume_snapshots", "mock_volumes", "multiattach", "my_func", "nova", "object", "raised_exc", "res", "self", "size", "snap", "snapshot", "snapshot1", "snapshot2", "snapshot_id", "snapshot_list", "snapshots", "super", "test", "timeutils", "uuids", "vol", "volume", "volume1", "volume2", "volume_id", "volume_list", "volumes", "wrapper"], "/Users/mehranhassani/repos/nova/nova/cells/filters/target_cell.py": ["LOG", "None", "_LI", "__name__", "cell_name", "cells", "ctxt", "filter_properties", "filters", "logging", "scheduler", "scheduler_hints", "self", "This", "filter", "only", "makes", "sense", "at", "the", "top", "level,", "as", "a", "full\n", "cell", "name", "is", "specified.", "So", "we", "pop", "'target_cell'", "out", "of", "the\n", "hints", "dict.\n", "This", "authorization", "is", "after", "popping", "off", "target_cell,", "so\n", "that", "in", "case", "this", "fails,", "'target_cell'", "is", "not", "left", "in", "the\n", "dict", "when", "child", "cells", "go", "to", "schedule.\n", "No", "filtering,", "if", "not", "authorized.\n", "Returning", "None", "means", "to", "skip", "further", "scheduling,", "because", "we\n", "handled", "it."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_legacy_v2_compatible_wrapper.py": ["False", "StopIteration", "TestSoftAdditionalPropertiesValidation", "True", "exc", "fake_app", "gen", "instance", "jsonschema_exc", "next", "nova", "req", "resp", "response", "self", "super", "test", "validator", "validators", "webob", "wrapper", "wsgi"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/monitors/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_connection_switch.py": ["CellDatabasesTestCase", "ConnectionSwitchTestCase", "OSError", "True", "USES_DB_SELF", "context", "ctxt", "exception", "fake_conn", "fix", "inst", "instance", "mapping", "mapping1", "mapping2", "nova_fixtures", "objects", "os", "self", "super", "test", "test_filename", "uuid", "uuidutils", "Use", "a", "file-based", "sqlite", "database", "so", "data", "will", "persist", "across", "new\n", "connections\n", "The", "'main'", "database", "connection", "will", "stay", "open,", "so", "in-memory", "is", "fine\n", "Make", "a", "request", "context", "with", "a", "cell", "mapping\n", "Create", "an", "instance", "in", "the", "cell", "database\n", "Must", "set", "project_id", "because", "instance", "get", "specifies\n", "project_only=True", "to", "model_query,", "which", "means", "non-admin\n", "users", "can", "only", "read", "instances", "for", "their", "project\n", "Verify", "the", "instance", "is", "found", "in", "the", "cell", "database\n", "Verify", "the", "instance", "isn't", "found", "in", "the", "main", "database\n", "Create", "an", "instance", "and", "read", "it", "from", "cell1\n", "Make", "sure", "it", "can't", "be", "read", "from", "cell2\n", "Make", "sure", "it", "can", "still", "be", "read", "from", "cell1\n", "Create", "an", "instance", "and", "read", "it", "from", "cell2\n", "Make", "sure", "it", "can't", "be", "read", "from", "cell1"], "/Users/mehranhassani/repos/nova/nova/policies/attach_interfaces.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "attach_interfaces_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/monkey_patch_example/example_a.py": ["arg1", "arg2", "object", "self", "Example", "Module", "A", "for", "testing", "utils.monkey_patch()."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/user_data.py": ["server_create", "server_create_v20"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_ips_mac.py": ["ALL_IPS", "ExtendedIpsMacTestV21", "NW_CACHE", "None", "UUID1", "UUID2", "UUID3", "_i", "body", "cache", "content_type", "dict", "enumerate", "fake_compute_get", "fake_compute_get_all", "fakes", "fixed", "floating", "inst", "inst_list", "ip", "jsonutils", "network", "objects", "prefix", "req", "res", "results", "sanitized", "self", "server", "six", "subnet", "super", "test", "url", "x"], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/encryptors/test_nop.py": ["None", "connection_info", "nop", "self", "test_base"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/create_backup.py": ["ALIAS", "CreateBackupController", "alias", "api_version_request", "args", "backup_type", "body", "cb_policies", "common", "compute", "context", "controller", "create_backup", "e", "entity", "exception", "extension", "extensions", "id", "image", "image_id", "image_name", "image_ref", "instance", "int", "kwargs", "metadata", "name", "props", "req", "resp", "rotation", "self", "state_error", "str", "super", "validation", "version", "webob", "wsgi", "Create", "a", "backup", "of", "a", "server.", "Starting", "from", "microversion", "2.39", "we", "don't", "check", "quotas", "on", "createBackup\n", "build", "location", "of", "newly-created", "image", "entity", "if", "rotation", "is", "not", "zero"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1627838.py": ["TestThreadLocalContext", "common_context", "context", "context_fixture", "self", "super", "test", "This", "will", "set", "the", "thread", "local", "copy", "of", "the", "context\n", "Start", "the", "compute", "service", "to", "initialize", "compute", "RPC\n", "None", "of", "the", "periodic", "tasks", "should", "have", "overwritten", "the\n", "thread", "local", "copy", "of", "the", "context"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_volume_usage.py": ["False", "NOW", "None", "True", "_TestVolumeUsage", "fake_vol_usage", "mock", "mock_upd", "object", "objects", "self", "test_objects", "timeutils", "uuids", "vol_usage"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_availability_zone.py": ["AvailabilityZoneApiTestV21", "CONF", "FAKE_UUID", "False", "None", "ServersControllerCreateTestV21", "True", "__fake_service", "admin_context", "agg", "args", "availability_zone", "availability_zones", "az_v21", "base_url", "binary", "body", "cfg", "compute_api", "context", "controller", "create", "created_at", "datetime", "db", "def_image_ref", "dict", "disabled", "exception", "expected", "expected_response", "ext_info", "extension_info", "fake", "fake_get_availability_zones", "fake_instance", "fake_service_get_all", "fake_service_is_up", "fake_set_availability_zones", "fakes", "flavor_ref", "flavors", "host", "image_href", "image_uuid", "inst", "inst_type", "instance", "instance_create", "iso8601", "kwargs", "len", "matchers", "nova_network_timestamp", "old_create", "params", "req", "res", "resp_dict", "result", "self", "server", "servers_v21", "service", "servicegroup", "services", "super", "test", "test_service", "timestamp", "updated_at", "zone_name", "zones", "Shared", "implementation", "for", "tests", "below", "that", "create", "instance."], "/Users/mehranhassani/repos/nova/nova/cmd/api_metadata.py": ["CONF", "conductor_rpcapi", "config", "gmr", "logging", "nova", "objects", "objects_base", "server", "service", "should_use_ssl", "sys", "utils", "version", "Starter", "script", "for", "Nova", "Metadata", "API."], "/Users/mehranhassani/repos/nova/nova/policies/ips.py": ["POLICY_ROOT", "base", "ips_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/common/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/serialproxy.py": ["None", "SerialProxy", "True", "_", "addr", "args", "client_addr", "client_connected", "constants", "data", "err", "exception", "func", "functools", "handle_socket_errors", "input_queue", "instance_name", "job", "kwargs", "msg", "output_queue", "patcher", "port", "self", "socket", "super", "threading", "worker", "worker_running", "workers", "wrapper", "Note(lpetrut):", "Eventlet", "greenpipes", "are", "not", "supported", "on", "Windows.", "The", "named\n", "pipe", "handlers", "implemented", "in", "os-win", "use", "Windows", "API", "calls", "which", "can", "block\n", "the", "whole", "thread.", "In", "order", "to", "avoid", "this,", "those", "workers", "run", "in", "separate\n", "'native'", "threads.\n\n", "As", "this", "proxy", "communicates", "with", "those", "workers", "via", "queues,", "the", "serial", "console\n", "proxy", "workers", "have", "to", "run", "in", "'native'", "threads", "as", "well."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_block_device.py": ["BDM", "BlockDeviceTestCase", "False", "None", "TestBlockDeviceDict", "True", "_assert_volume_in_mapping", "_get_bootable_bdms", "_get_image_bdms", "api", "api_dict", "bdm", "bdm1", "bdm2", "bdm_dict", "bdmlist", "bdms", "block_device", "block_device_info", "block_device_mapping", "boot_bdms", "cool_volume_size_bdm", "dct", "dev_dict", "device_name", "dict", "ephemerals", "exception", "expected", "expected_results", "fake_block_device", "fake_validate", "fld", "got_legacy", "image_bdms", "in_mapping", "key", "lame_bdm", "lame_dev_bdm", "lame_volume_size_bdm", "legacy", "len", "mapping", "mapping_bdm", "mappings", "matchers", "new", "new_no_img", "new_no_root", "new_with_img", "new_with_img_and_root", "obj", "objects", "prepended", "properties0", "properties1", "removed_fields", "res", "retexp", "root_bdm", "root_device0", "root_device1", "self", "set", "size", "snapshot", "sorted", "super", "swap", "swap_list", "template", "test", "true_or_false", "truthy_bdm", "uuids", "v", "value", "verbose_bdm", "zip", "Make", "sure", "db", "fields", "are", "not", "picked", "up", "if", "they", "are", "not\n", "in", "the", "original", "dict\n", "Make", "sure", "all", "expected", "fields", "are", "defaulted\n", "Unless", "they", "are", "not", "meant", "to", "be\n", "Passing", "kwargs", "to", "constructor", "works\n", "Make", "sure", "that", "when", "delete_on_termination", "is", "not", "passed", "it's\n", "still", "set", "to", "False", "and", "not", "None"], "/Users/mehranhassani/repos/nova/nova/keymgr/conf_key_mgr.py": ["CONF", "ConfKeyManager", "KeyError", "LOG", "None", "NotImplementedError", "ValueError", "_", "_LW", "__name__", "algorithm", "binascii", "bytes", "configuration", "context", "exception", "key", "key_bytes", "key_manager", "len", "length", "logging", "managed_object", "managed_object_id", "nova", "self", "str", "super", "Stores", "(i.e.,", "registers)", "a", "key", "with", "the", "key", "manager."], "/Users/mehranhassani/repos/nova/nova/policies/block_device_mapping_v1.py": ["POLICY_ROOT", "base", "block_device_mapping_v1_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/server_groups.py": ["False", "True", "copy", "create", "create_v215", "parameter_types", "policies", "NOTE(russellb)", "There", "is", "one", "other", "policy,", "'legacy',", "but", "we", "don't", "allow", "that\n", "being", "set", "via", "the", "API.", "It's", "only", "used", "when", "a", "group", "gets", "automatically\n", "created", "to", "support", "the", "legacy", "behavior", "of", "the", "'group'", "scheduler", "hint."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_migrations.py": ["ALIAS", "ServerMigrationsController", "_", "alias", "body", "common", "compute", "context", "e", "exc", "exception", "extensions", "id", "in_progress", "instance", "member_actions", "migration", "migrations", "msg", "name", "output", "parent", "req", "resources", "self", "server_id", "server_migrations", "sm_policies", "state_error", "super", "validation", "version", "wsgi", "The", "server", "migrations", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "all", "migrations", "of", "an", "instance", "in", "progress.\nReturn", "the", "migration", "of", "an", "instance", "in", "progress", "by", "id.\nAbort", "an", "in", "progress", "migration", "of", "an", "instance.\nServer", "Migrations", "API.", "NOTE(Shaohe", "Feng)", "just", "check", "the", "instance", "is", "available.", "To", "keep\n", "consistency", "with", "other", "API,", "check", "it", "before", "get", "migrations.\n", "NOTE(Shaohe", "Feng)", "just", "check", "the", "instance", "is", "available.", "To", "keep\n", "consistency", "with", "other", "API,", "check", "it", "before", "get", "migrations.\n", "TODO(Shaohe", "Feng)", "we", "should", "share", "the", "in-progress", "list."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_security_groups.py": ["AttrDict", "CONF", "FAKE_UUID1", "FAKE_UUID2", "False", "None", "PolicyEnforcementV21", "SecurityGroupActionPolicyEnforcementV21", "SecurityGroupPolicyEnforcementV21", "SecurityGroupRulesPolicyEnforcementV21", "SecurityGroupsOutputPolicyEnforcementV21", "SecurityGroupsOutputTestV21", "ServerSecurityGroupPolicyEnforcementV21", "TestSecurityGroupRulesDeprecation", "TestSecurityGroupRulesV21", "TestSecurityGroupsDeprecation", "TestSecurityGroupsV21", "True", "UUID1", "UUID2", "UUID3", "UUID_SERVER", "all", "all_groups", "arg", "args", "attrs", "base", "base_url", "body", "cfg", "columns_to_join", "compute", "content_type", "context", "context_maker", "db1", "db2", "dict", "encodeutils", "enumerate", "exc", "exception", "expected", "expected_rule", "fake_compute_create", "fake_compute_get", "fake_compute_get_all", "fake_instance", "fakes", "from_port", "func", "group", "group_id", "group_name", "groups", "i", "id", "id1", "id2", "image_uuid", "in_use", "inst", "inst_list", "instance_uuid", "is_neutron_security_groups", "j", "jsonutils", "k", "kwarg", "kwargs", "mock", "mock_add_security_group", "mock_authorize", "mock_db_get_ins", "mock_remove_sec_group", "mock_sec_group", "name", "nova", "num", "objects", "path", "power_state", "project", "project_id", "proto", "quota", "range", "req", "res", "res_dict", "result", "return_all_security_groups", "return_instance", "return_non_running_server", "return_security_group", "return_security_group_by_name", "return_security_group_without_instances", "return_security_groups", "return_server", "return_server_by_uuid", "return_server_nonexistent", "return_tenant_security_groups", "return_update_security_group", "rule", "rule1", "rule2", "rules", "search_opts", "secgroups", "secgroups_v21", "secgrp_act_ctl_cls", "secgrp_ctl_cls", "security_group", "security_group_db", "security_group_destroy", "security_group_in_use", "security_group_request_template", "security_group_rule", "security_group_rule_db", "security_group_rule_destroy", "security_group_rule_get", "security_group_rule_template", "security_group_template", "self", "server", "server_id", "server_secgrp_ctl_cls", "server_uuid", "servers", "sg", "sg_update", "super", "tenant_groups", "tenant_specific", "test", "to_port", "url", "use_neutron", "use_slave", "user_id", "uuids", "values", "webob", "wsgi", "Check", "that", "no", "reservations", "are", "leaked", "during", "tests.", "This", "class", "is", "subclassed", "by", "Neutron", "security", "group", "API", "tests", "so", "we", "need\n", "to", "be", "able", "to", "override", "this", "before", "creating", "the", "controller", "object.\n", "Neutron", "security", "groups", "are", "tested", "in", "test_neutron_security_groups.py\n", "This", "needs", "to", "be", "done", "here", "to", "set", "fake_id", "because", "the", "derived\n", "class", "needs", "to", "be", "called", "first", "if", "it", "wants", "to", "set\n", "'security_group_api'", "and", "this", "setUp", "method", "needs", "to", "be", "called.\n", "FIXME:", "Stub", "out", "_get", "instead", "of", "creating", "twice\n", "An", "expected", "rule", "here", "needs", "to", "be", "created", "as", "the", "api", "returns\n", "different", "attributes", "on", "the", "rule", "for", "a", "response", "than", "what", "was\n", "passed", "in.", "For", "example:\n", "\"cidr\":", "\"0.0.0.0/0\"", "->\"ip_range\":", "{\"cidr\":", "\"0.0.0.0/0\"}\n", "Ensure", "quota", "usage", "for", "security", "group", "is", "correct.\n", "Delete", "the", "security", "group", "by", "admin.\n", "Ensure", "quota", "for", "security", "group", "in", "use", "is", "released.\n", "This", "class", "is", "subclassed", "by", "Neutron", "security", "group", "API", "tests", "so", "we", "need\n", "to", "be", "able", "to", "override", "this", "before", "creating", "the", "controller", "object.\n", "Neutron", "security", "groups", "are", "tested", "in", "test_neutron_security_groups.py\n", "Neutron", "security", "groups", "are", "tested", "in", "test_neutron_security_groups.py"], "/Users/mehranhassani/repos/nova/nova/conf/neutron.py": ["ALL_OPTS", "False", "NEUTRON_GROUP", "True", "cfg", "conf", "ks_loading", "metadata_proxy_opts", "neutron_group", "neutron_opts"], "/Users/mehranhassani/repos/nova/nova/policies/extended_status.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "extended_status_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_devspec.py": ["False", "None", "True", "TypeError", "_dev", "address", "address_regex", "address_str", "addresses", "component", "dev", "devspec", "dict", "exc", "exception", "glob_addr", "invalid_addresses", "invalid_val_addr", "mock", "mock_get_function_by_ifname", "mock_is_physical_function", "msg", "objects", "pci", "pci_addr", "pci_dev", "pci_info", "pci_obj", "phys_addr", "phys_addr1", "phys_addr2", "regex_addr", "self", "six", "str", "test"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_paste_fixture.py": ["ApiPasteV21Fixture", "CONF", "fixtures", "line", "nova", "open", "orig_api_paste", "os", "paths", "self", "super", "target_file", "tmp_api_paste_dir", "tmp_api_paste_file_name", "tmp_file", "TODO(johnthetubaguy)", "should", "really", "point", "the", "tests", "at", "/v2.1"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_l3.py": ["l3", "self", "test"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/290_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/conf/placement.py": ["cfg", "conf", "ks_loading", "placement_group", "placement_opts"], "/Users/mehranhassani/repos/nova/nova/policies/volumes_attachments.py": ["POLICY_ROOT", "base", "policy", "volumes_attachments_policies"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/bandwidth.py": ["__name__", "_get_bandwitdth_from_proc", "_read_proc_net", "d", "dev", "devmap", "devs", "dict", "dlist", "dom", "f", "fetch_all_bandwidth", "int", "l", "name", "open", "pluginlib_nova", "re", "session", "slist", "stats", "utils", "vif_pattern", "vifnum", "Fetch", "Bandwidth", "data", "from", "VIF", "network", "devices.", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "ignore", "headers\n", "Note,", "we", "deliberately", "swap", "in", "and", "out,", "as", "instance", "traffic\n", "shows", "up", "inverted", "due", "to", "going", "though", "the", "bridge.", "(mdragon)"], "/Users/mehranhassani/repos/nova/nova/weights.py": ["None", "True", "WeighedObject", "abc", "enumerate", "float", "i", "len", "loadables", "max", "maxval", "min", "minval", "normalize", "obj", "obj_list", "object", "object_class", "range_", "self", "six", "sorted", "weighed_obj_list", "weighed_objs", "weigher", "weighers", "weighing_properties", "weight", "weight_list", "weight_properties", "weights", "x", "Object", "with", "weight", "information.\nWeigh", "an", "specific", "object.\nReturn", "a", "sorted", "(descending),", "normalized", "list", "of", "WeighedObjects.", "Calculate", "the", "weights\n", "Record", "the", "min", "and", "max", "values", "if", "they", "are", "None.", "If", "they", "anything\n", "but", "none", "we", "assume", "that", "the", "weigher", "has", "set", "them\n", "Normalize", "the", "weights"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_host_api.py": ["ComputeHostAPICellsTestCase", "ComputeHostAPITestCase", "False", "None", "True", "_do_test", "aggregate", "binary", "cell_and_host", "cell_service_id", "cells_utils", "compute", "compute_api", "context", "copy", "db_obj", "db_obj_list", "destroy", "dict", "enumerate", "exception", "exp_service", "exp_services", "expected_result", "fake_filters", "fake_notifier", "fake_service", "fakes", "filters", "get_by_id", "host_name", "index", "instances", "jsonutils", "kwargs", "len", "mock", "mock_assert_host_exists", "mock_get", "mock_get_host_uptime", "mock_host_maintenance_mode", "mock_host_power_action", "mock_service_get_all", "mock_service_get_by_compute_host", "mock_service_get_by_host_and_binary", "mock_service_is_up", "mock_service_update", "mock_set_host_enabled", "mock_task_log_get_all", "msg", "obj", "obj_list", "objects", "params_to_update", "result", "self", "service", "service_attrs", "service_delete", "service_id", "services", "super", "test", "test_objects", "test_service", "testtools", "Test", "no", "filters\n", "Test", "no", "filters", "#2\n", "Test", "w/", "filter\n", "Test", "no", "filters\n", "Test", "no", "filters", "#2\n", "Test", "w/", "filter\n", "Test", "w/", "zone", "filter", "but", "no", "set_zones", "arg.\n", "this", "test", "is", "not", "valid", "for", "cell\n", "The", "corresponding", "Compute", "test", "case", "depends", "on", "the\n", "_assert_host_exists", "which", "is", "a", "no-op", "in", "the", "cells", "api"], "/Users/mehranhassani/repos/nova/nova/tests/unit/image_fixtures.py": ["False", "NOW_DATE", "None", "True", "add_fixture", "datetime", "deleted", "deleted_at", "fixtures", "image_id", "kwargs", "snapshot_properties", "status", "str", "uuid", "nova.image.glance._translate_from_glance()", "returns", "datetime\n", "objects,", "not", "strings.\n", "Public", "image\n", "Snapshot", "for", "User", "1\n", "Image", "without", "a", "name\n", "Image", "for", "permission", "tests"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_fibrechannel.py": ["conf", "connection_info", "connector", "device_path", "fibrechannel", "libvirt_driver", "mock", "mock_machine", "obj_fields", "platform", "self", "test_volume", "tree"], "/Users/mehranhassani/repos/nova/nova/cells/weights/__init__.py": ["BaseCellWeigher", "CellWeightHandler", "WeightedCell", "object_class", "self", "super", "weights", "Base", "class", "for", "cell", "weights.\nReturn", "a", "list", "of", "weight", "plugin", "classes", "found", "in", "this", "directory."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/utils.py": ["CONF", "False", "LOG", "None", "OSError", "RESIZE_SNAPSHOT_NAME", "RuntimeError", "True", "_", "_LI", "_LW", "__name__", "_id_map_to_config", "args", "backing_file", "base_cmd", "base_details", "basename", "check_cmd", "cmd", "compression", "contents", "context", "cow_opts", "csv_opts", "dest", "dest_fmt", "disk", "disk_format", "disk_path", "domain", "driver", "err", "errno", "etree", "exc", "execute", "f", "filesystem", "format", "fp", "free", "get_instance_path", "gid_maps_str", "hddinfo", "host", "hostname", "hypervisor_version", "id_map", "id_maps", "image_arch", "image_id", "image_meta", "images", "instance", "instance_dir", "instance_relative_path", "int", "is_block_dev", "isinstance", "kwargs", "logging", "migrate_data", "mount_path", "nova", "obj_fields", "on_completion", "on_execute", "open", "os", "os_type", "out", "out_path", "owner", "path", "processutils", "qemu_img_cmd", "re", "receive", "relative", "remote_filesystem_driver", "remotefs", "saved_umask", "size", "source", "source_fmt", "src", "target", "total", "uid_maps_str", "umask", "used", "utils", "vconfig", "virt_dom", "volumeutils", "xml_desc", "Retrieve", "disk", "type", "(raw,", "qcow2,", "lvm,", "ploop)", "for", "given", "file.\nGrab", "image.\nCheck", "if", "the", "given", "source", "is", "mounted", "at", "given", "destination", "point.", "Explicitly", "inherit", "the", "value", "of", "'cluster_size'", "property", "of", "a", "qcow2\n", "overlay", "image", "from", "its", "backing", "file.", "This", "can", "be", "useful", "in", "cases\n", "when", "people", "create", "a", "base", "image", "with", "a", "non-default", "'cluster_size'\n", "value", "or", "cases", "when", "images", "were", "created", "with", "very", "old", "QEMU\n", "versions", "which", "had", "a", "different", "default", "'cluster_size'.\n", "Format", "as", "a", "comma", "separated", "list\n", "4002000", "==", "4.2.0\n", "libvirt", "will", "try", "to", "use", "libxl", "toolstack\n", "libvirt", "will", "try", "to", "use", "libxl", "toolstack\n", "libvirt", "will", "use", "xend/xm", "toolstack\n", "4000000", "==", "4.0.0\n", "UML", "doesn't", "want", "a", "driver_name", "set\n", "We", "shell", "out", "to", "cp", "because", "that", "will", "intelligently", "copy\n", "sparse", "files.", "I.E.", "holes", "will", "not", "be", "written", "to", "DEST,\n", "rather", "recreated", "efficiently.", "In", "addition,", "since\n", "coreutils", "8.11,", "holes", "can", "be", "read", "efficiently", "too.\n", "we", "add", "'-r'", "argument", "because", "ploop", "disks", "are", "directories\n", "touch", "can", "intermittently", "fail", "when", "launching", "several", "instances", "with\n", "the", "same", "base", "image", "and", "using", "shared", "storage,", "so", "log", "the", "exception\n", "but", "don't", "fail.", "Ideally", "we'd", "know", "if", "we", "were", "on", "shared", "storage", "and\n", "would", "re-raise", "the", "error", "if", "we", "are", "not", "on", "shared", "storage.\n", "NOTE(markmc):", "ISO", "is", "just", "raw", "to", "qemu-img\n", "Conditionally", "enable", "compression", "of", "snapshots.\n", "This", "is", "a", "legacy", "quirk", "of", "libvirt/xen.", "Everything", "else", "should\n", "report", "the", "on-disk", "format", "in", "type.\n", "We", "can't", "reliably", "determine", "the", "type", "from", "this", "path\n", "NOTE(mikal):", "this", "doesn't", "use", "libvirt_utils.get_instance_path\n", "because", "we", "are", "ensuring", "that", "the", "same", "instance", "directory", "name\n", "is", "used", "as", "was", "at", "the", "source\n", "info", "since", "it's", "not", "required", "to", "have", "this", "tool."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/__init__.py": ["APIRouterV21", "None", "ext", "extension_info", "init_only", "nova", "property", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_notifier.py": ["FakeMessage", "FakeNotifier", "FakeVersionedNotifier", "NOTIFICATIONS", "None", "SUBSCRIBERS", "VERSIONED_NOTIFICATIONS", "_notify_subscribers", "collections", "ctxt", "event_type", "functools", "getattr", "jsonutils", "messaging", "msg", "notification", "object", "payload", "priority", "publisher_id", "rpc", "self", "serializer", "setattr", "test", "threading", "timeout", "transport", "NOTE(sileht):", "simulate", "the", "kombu", "serializer\n", "this", "permit", "to", "raise", "an", "exception", "if", "something", "have", "not\n", "been", "serialized", "correctly\n", "NOTE(melwitt):", "Try", "to", "serialize", "the", "context,", "as", "the", "rpc", "would.\n", "An", "exception", "will", "be", "raised", "if", "something", "is", "wrong\n", "with", "the", "context.\n", "NOTE:", "The", "event", "stored", "in", "SUBSCRIBERS", "is", "not", "used", "for", "synchronizing\n", "the", "access", "to", "shared", "state", "as", "there", "is", "no", "parallel", "access", "to\n", "SUBSCRIBERS", "because", "the", "only", "parallelism", "is", "due", "to", "eventlet.\n", "The", "event", "is", "simply", "used", "to", "avoid", "polling", "the", "list", "of", "received\n", "notifications"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_migrations.py": ["False", "None", "SERVER_UUID", "ServerMigrationsPolicyEnforcementV21", "ServerMigrationsPolicyEnforcementV223", "ServerMigrationsTestsV21", "ServerMigrationsTestsV223", "ServerMigrationsTestsV224", "True", "_do_test", "base", "body_args", "compute_api_get", "copy", "datetime", "exc", "exception", "expected_exc", "fake_exc", "fake_migrations", "fakes", "live_migrate_force_complete", "m_get_instance", "m_get_mig", "mig", "migrations", "migrations_in_progress", "migrations_obj", "mock", "mock_abort", "mock_get", "non_progress_mig", "objects", "response", "rule_name", "self", "server_migrations", "super", "test", "uuids", "webob", "wsgi_api_version"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/versions.py": ["None", "VERSIONS", "ViewBuilder", "base_url", "common", "copy", "dict", "href", "links", "path", "req", "reval", "self", "sorted", "version", "version_data", "version_number", "version_objs", "versions", ":param", "base_url:", "url", "of", "the", "root", "wsgi", "application.\nGenerate", "a", "container", "of", "links", "that", "refer", "to", "the", "provided", "version.\nCreate", "an", "url", "that", "refers", "to", "a", "specific", "version_number."], "/Users/mehranhassani/repos/nova/nova/conf/api.py": ["API_OPTS", "BUILDING", "False", "True", "allow_instance_snapshots_opts", "api_group", "auth_opts", "cfg", "conf", "deprecated_opts", "enable_inst_pw_opts", "file_opts", "fping_path_opts", "metadata_opts", "os_network_opts", "osapi_hide_opts", "osapi_opts", "NOTE(edleafe):", "I", "would", "like", "to", "import", "the", "value", "directly", "from\n", "nova.compute.vm_states,", "but", "that", "creates", "a", "circular", "import.", "Since", "this", "value\n", "is", "not", "likely", "to", "be", "changed,", "I'm", "copy/pasting", "it", "here.\n", "VM", "only", "exists", "in", "DB"], "/Users/mehranhassani/repos/nova/nova/cells/state.py": ["CONF", "CellState", "CellStateManager", "CellStateManagerDB", "CellStateManagerFile", "False", "LOG", "None", "True", "_LE", "__name__", "_defaultdict_int", "_free_units", "_get_compute_hosts", "_unset", "alive", "args", "attempts", "base", "canonical", "cap", "capab_name", "capabilities", "capabs", "capacities", "cell", "cell_db_info", "cell_info", "cell_list", "cell_metadata", "cell_name", "cell_state_cls", "cells_config", "cells_dict", "cfg", "chost", "cls", "collections", "compute", "compute_hosts", "compute_nodes", "compute_values", "context", "copy", "ctxt", "data", "datetime", "db_cells", "db_cells_dict", "db_dict", "db_exc", "db_fields_to_return", "db_info", "dict", "diff", "disk_mb_free_units", "disk_mb_slot", "disk_mb_slots", "exception", "f", "field", "force", "free", "free_units", "frozenset", "functools", "getattr", "host", "include_children", "inst_type", "instance_types", "int", "is_me", "is_parent", "isinstance", "jsonutils", "k", "key", "kwargs", "list", "logging", "max", "me", "memory_mb_slot", "memory_mb_slots", "message", "min_free", "my_cell_capabs", "name", "nova", "object", "objects", "per_inst", "ram_mb_free_units", "reloaded", "reserve_level", "result", "rpc", "rpc_driver", "self", "service", "service_refs", "servicegroup", "set", "six", "src", "str", "super", "sync_after", "sync_before", "target", "time", "timeutils", "total", "total_disk_mb_free", "total_ram_mb_free", "units", "url", "url_fields_to_return", "utils", "v", "value", "values", "wrapper", "Holds", "information", "for", "a", "particular", "cell.\nUpdate", "cell", "credentials", "from", "db.\nUpdate", "cell", "capabilities", "for", "a", "cell.\nUpdate", "capacity", "information", "for", "a", "cell.\nReturn", "subset", "of", "cell", "information", "for", "OS", "API", "use.\nMake", "our", "cell", "info", "map", "match", "the", "db.\nIs", "it", "time", "to", "sync", "the", "DB", "against", "our", "memory", "cache?\nReturn", "cell", "information", "for", "all", "neighbor", "cells.\nReturn", "information", "for", "my", "(this)", "cell.\nReturn", "list", "of", "child", "cell_infos.\nReturn", "list", "of", "parent", "cell_infos.\nUpdate", "capabilities", "for", "a", "cell.\nUpdate", "capacities", "for", "a", "cell.", "TODO(comstud):", "The", "DB", "will", "specify", "the", "driver", "to", "use", "to", "talk\n", "to", "this", "cell,", "but", "there's", "no", "column", "for", "this", "yet.", "The", "only\n", "available", "driver", "is", "the", "rpc", "driver.\n", "Update", "current", "cells.", "Delete", "ones", "that", "disappeared\n", "Add", "new", "cells\n", "NOTE:", "This", "works", "because", "it", "is", "only", "used", "for", "computes", "found\n", "in", "the", "cell", "this", "is", "run", "in.", "It", "can", "not", "be", "used", "to", "check", "on\n", "computes", "in", "a", "child", "cell", "from", "the", "api", "cell.", "If", "this", "is", "run\n", "in", "the", "api", "cell", "objects.ComputeNodeList.get_all()", "above", "will\n", "return", "an", "empty", "list.\n", "Make", "sure", "capabilities", "are", "sets."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_instance_actions.py": ["FAKE_REQUEST_ID", "FAKE_UUID", "False", "InstanceActionsPolicyTestV21", "InstanceActionsTestV21", "None", "True", "act", "action", "action_id", "actions", "compute_api", "context", "copy", "event", "events", "evt", "exc", "exception", "expected_attrs", "fake_action", "fake_events", "fake_get", "fake_get_action", "fake_get_actions", "fake_get_events", "fake_no_action", "fake_server_actions", "fake_url", "fakes", "format_action", "format_event", "instance_actions", "instance_actions_v21", "instance_uuid", "key", "mock", "mock_instance_get", "models", "objects", "os_wsgi", "oslo_policy", "policy", "project_id", "req", "request_id", "res", "res_dict", "rules", "self", "six", "str", "super", "test", "to_delete", "use_admin_context", "uuid", "uuids", "wsgi_api_version", "NOTE(danms):", "Without", "WSGI", "above", "us,", "these", "will", "be", "just", "stringified\n", "NOTE(danms):", "Without", "WSGI", "above", "us,", "these", "will", "be", "just", "stringified\n", "NOTE(danms):", "Without", "WSGI", "above", "us,", "these", "will", "be", "just", "stringified"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_agents.py": ["AgentsPolicyEnforcementV21", "AgentsTestV21", "None", "True", "agent", "agent_build_all", "agent_build_id", "agent_build_ref", "agent_update_id", "agents_list", "agents_v21", "body", "context", "controller", "db", "exc", "exception", "fake_agent_build_create", "fake_agent_build_create_with_exited_agent", "fake_agent_build_destroy", "fake_agent_build_get_all", "fake_agent_build_update", "fake_agents_list", "fakes", "hypervisor", "key", "mock", "models", "req", "res_dict", "response", "rule_name", "self", "super", "test", "validation_error", "values", "webob"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/tenant_networks.py": ["ALIAS", "CONF", "Exception", "LOG", "MAX_PROXY_API_SUPPORT_VERSION", "None", "QUOTAS", "TenantNetworkController", "_", "_LE", "__name__", "_register_network_quota", "_rollback_quota", "_sync_networks", "alias", "body", "context", "ctx", "dict", "e", "exc", "exception", "ext", "extensions", "id", "k", "keys", "kwargs", "label", "len", "list", "logging", "msg", "n", "name", "net", "netaddr", "netexc", "network", "network_api", "network_dict", "networks", "nova", "nova_context", "project_id", "quota", "req", "reservation", "schema", "self", "session", "six", "str", "tn_policies", "v", "validation", "version", "wsgi", "Tenant-based", "Network", "Management", "Extension.", "NOTE(danms):", "Here,", "network", "should", "be", "an", "object,", "which", "could", "have", "come\n", "from", "neutron", "and", "thus", "be", "missing", "most", "of", "the", "attributes.", "Providing", "a\n", "default", "to", "get()", "avoids", "trying", "to", "lazy-load", "missing", "attributes."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/images.py": ["ALIAS", "AttributeError", "ImagesController", "IndexError", "KeyError", "MAX_PROXY_API_SUPPORT_VERSION", "SUPPORTED_FILTERS", "_", "_view_builder_class", "alias", "coll_actions", "common", "context", "e", "exception", "explanation", "extensions", "filter_name", "filters", "id", "image", "images", "kwargs", "name", "nova", "page_params", "param", "req", "resource", "self", "super", "version", "views_images", "webob", "wsgi", "Base", "controller", "for", "retrieving/displaying", "images.\nProxying", "API", "for", "Images.", "map", "filter", "name", "or", "carry", "through", "if", "property-*\n", "ensure", "server", "filter", "is", "the", "instance", "uuid\n", "The", "Image", "API", "expects", "us", "to", "use", "lowercase", "strings", "for", "status\n", "The", "image", "service", "raises", "this", "exception", "on", "delete", "if", "glanceclient\n", "raises", "HTTPForbidden."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/fs.py": ["False", "LibvirtBaseFileSystemVolumeDriver", "NotImplementedError", "abc", "connection_info", "export", "host", "libvirt_volume", "mount_path", "os", "self", "share", "six", "super", "utils", "The", "base", "class", "for", "file", "system", "type", "volume", "drivers"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_driver_api.py": ["AttributeError", "CONF", "CONTEXT", "CopyError", "DEFAULT_FLAVORS", "DEFAULT_FLAVOR_OBJS", "DeleteError", "Exception", "False", "NoDiskSpace", "None", "NotImplementedError", "OptionValue", "REQUIRES_LOCKING", "True", "VMwareAPIVMTestCase", "_call_method", "_fake_check_session", "_fake_create_session", "_fake_extend", "_fake_get_timestamp_filename", "_fake_login", "_fake_sleep", "_fake_wait", "_mock_bdm", "_self", "_wait_for_task", "actual", "adapter_type", "aging_time", "all_instances", "args", "attach_disk_to_vm", "backing", "bdi", "bdm", "block_device", "block_device_info", "block_device_info_get_mapping", "c", "cache", "cached_image", "call", "call_count", "collections", "compute_api", "config_drive", "connection_info", "connector", "connector_dict", "constants", "context", "controller_key", "cookies", "cur_time", "data", "data_store_name", "data_store_ref", "datetime", "dc_ref", "dc_val", "detach_volume", "device", "device_name", "dict", "discover", "disk_1", "disk_2", "disk_info", "disk_size", "disk_type", "disk_uuid", "dns_4", "driver", "ds_obj", "ds_util", "e", "ephemeral", "ephemerals", "error_util", "ex", "exception", "exists", "exp_detach_calls", "expected", "expected_arg", "expected_calls", "expected_exception_type", "extras", "fake", "fake_attach_cdrom", "fake_attach_cdrom_to_vm", "fake_attach_disk_to_vm", "fake_call_method", "fake_create", "fake_create_config_drive", "fake_extend_virtual_disk", "fake_instance", "fake_invoke", "fake_power_on_instance", "fake_stats", "fake_target_portal", "fake_vm", "fake_vm_id", "fake_vm_ref_from_name", "fake_wait_for_task", "fault", "find", "flavor", "folder", "found_iface_id", "found_vm_uuid", "func_call_matcher", "gb_cache", "get_profile_mock", "get_vm_ref", "get_vmdk_info", "get_volume_ref", "getattr", "glance", "greenthread", "gw_4", "gw_6", "host", "host_storage_sys", "id", "iid", "image", "image_id", "image_ref", "image_service", "imagecache", "images", "img_info", "img_props", "index", "info", "injected_files", "inst", "instance", "instance_type", "instance_type_updates", "instance_uuid", "instances", "int", "invalid_instance", "iscsi_hba", "iscsi_hba_array", "iso_path", "iso_uploaded_path", "k", "key", "kwargs", "len", "linked_clone", "matchers", "mem_kib", "metadata", "method", "migrate_data", "mock", "mock_call", "mock_call_method", "mock_destroy", "mock_detach_volume", "mock_extend", "mock_find_ext", "mock_from_image", "mock_get", "mock_get_by_inst", "mock_get_dc", "mock_get_device", "mock_get_ds_ref", "mock_get_vm_state", "mock_init", "mock_is_vim", "mock_power_off", "mock_reboot", "mock_register", "mock_save", "mock_service", "mock_stats", "mock_version", "mock_wait_for_task", "mock_warning", "module", "mount_point", "mox", "name", "network_info", "network_model", "network_neutron", "node", "nodelist", "nova", "num_found", "num_iface_ids", "num_instances", "objects", "opt_val", "oslo_vim_util", "password", "path", "pbm", "power_state", "powered_on", "pwr_state", "reboot_type", "requested_size", "result", "root", "root_disk", "self", "service", "service_ref", "session", "set_image_ref", "side_effect", "snapshot_ref", "startup_flags", "state", "stats", "str", "stubs", "subnet_4", "subnet_6", "super", "task_mdo", "task_ref", "task_state", "task_states", "test", "test_mor", "timestamp", "tmp_file", "ts", "ts_path", "type", "unit_number", "units", "update_volume_details", "updates", "utils", "utils_fixture", "uuid", "uuids", "uuidsentinel", "uuidutils", "v", "v_driver", "values", "vcdriver", "vcpus", "vcstate", "version", "version_arg_found", "vexc", "vif", "vif_bridge_neutron", "vim_util", "vm", "vm_info", "vm_name", "vm_ref", "vm_states", "vm_util", "vmdk_info", "vmdk_path", "vmops", "vms", "vmwareapi_fake", "vnc_console", "volumeops", "vops", "Unit", "tests", "for", "Vmware", "API", "connection", "calls.\nCreate", "and", "spawn", "the", "VM.\nTest", "image", "disk", "is", "cached", "when", "use_linked_clone", "is", "True.\nTest", "fall", "back", "to", "use", "name", "when", "can't", "find", "by", "uuid.", "noqa\n", "Getting", "the", "InvalidInput", "exception", "signifies", "that", "no", "exception\n", "is", "raised", "regarding", "missing", "user/password/host\n", "NOTE(vish):", "none", "of", "the", "network", "plugging", "code", "is", "actually\n", "being", "tested\n", "Get", "record", "for", "VM\n", "Get", "Nova", "record", "for", "VM\n", "Check", "that", "m1.large", "above", "turned", "into", "the", "right", "thing.\n", "Check", "that", "the", "VM", "is", "running", "according", "to", "Nova\n", "Check", "that", "the", "VM", "is", "running", "according", "to", "vSphere", "API.\n", "Check", "that", "the", "VM", "is", "not", "running", "according", "to", "Nova\n", "Check", "that", "the", "VM", "is", "not", "running", "according", "to", "vSphere", "API.\n", "Spawn", "instance\n", "copy", "for", "extend", "fails", "without", "creating", "a", "file\n\n", "Expect", "the", "copy", "error", "to", "be", "raised\n", "Spawn", "instance\n", "Copy", "for", "extend", "fails,", "leaving", "a", "file", "behind\n\n", "Expect", "the", "file", "to", "be", "cleaned", "up\n", "Expect", "the", "copy", "error", "to", "be", "raised\n", "N.B.", "We", "don't", "test", "for", "-flat", "here", "because", "real\n", "CopyVirtualDisk_Task", "doesn't", "actually", "create", "it\n", "Spawn", "instance\n", "Copy", "for", "extend", "fails,", "leaves", "file", "behind\n", "File", "cleanup", "fails\n\n", "Expect", "file", "to", "be", "left", "behind\n", "Expect", "file", "cleanup", "error", "to", "be", "raised\n", "N.B.", "We", "don't", "test", "for", "-flat", "here", "because", "real\n", "CopyVirtualDisk_Task", "doesn't", "actually", "create", "it\n", "The", "test", "will", "validate", "that", "the", "spawn", "completes\n", "successfully.", "The", "\"MoveDatastoreFile_Task\"", "will\n", "raise", "an", "file", "exists", "exception.", "The", "flag\n", "self.exception", "will", "be", "checked", "to", "see", "that\n", "the", "exception", "has", "indeed", "been", "raised.\n", "The", "test", "will", "validate", "that", "the", "spawn", "completes\n", "successfully.", "The", "\"MoveDatastoreFile_Task\"", "will\n", "raise", "a", "general", "exception.", "The", "flag", "self.exception\n", "will", "be", "checked", "to", "see", "that", "the", "exception", "has\n", "indeed", "been", "raised.\n", "The", "test", "will", "validate", "that", "the", "spawn", "completes\n", "successfully.", "The", "\"MoveDatastoreFile_Task\"", "will\n", "raise", "a", "file", "exists", "exception.", "The", "flag", "self.exception\n", "will", "be", "checked", "to", "see", "that", "the", "exception", "has\n", "indeed", "been", "raised.\n", "Disrupt", "the", "fake", "Virtual", "Machine", "object", "so", "that", "extraConfig\n", "cannot", "be", "matched.\n", "We", "should", "not", "get", "a", "Virtual", "Machine", "through", "extraConfig.\n", "Check", "if", "we", "can", "find", "the", "Virtual", "Machine", "using", "the", "name.\n", "Delete", "the", "vmPathName\n", "validate", "that", "the", "power", "on", "is", "only", "called", "once\n", "simulate", "target", "not", "found\n", "rescan", "gets", "called", "with", "target", "portal\n", "simulate", "target", "found\n", "Check", "the", "host", "system", "does", "not", "have", "the", "send", "target\n", "Rescan", "HBA", "with", "the", "target", "portal\n", "Check", "if", "HBA", "has", "the", "target", "portal", "configured\n", "Rescan", "HBA", "with", "same", "portal\n", "Tests", "if", "we", "raise", "an", "exception", "for", "Invalid", "Regular", "Expression", "in\n", "vmware_datastore_regex\n", "Check", "to", "make", "sure", "the", "method", "raises", "NotImplementedError.\n", "Check", "to", "make", "sure", "the", "method", "raises", "NotImplementedError.\n", "Tests", "that", "the", "VMwareVCDriver", "does", "not", "implement", "the", "pause", "method.\n", "Tests", "that", "the", "VMwareVCDriver", "does", "not", "implement", "the", "unpause", "method.\n", "currently", "there", "are", "2", "data", "stores\n", "Ensure", "that", "the", "method", "has", "been", "implemented", "in", "the", "driver\n", "assert", "that", "the", "next", "min", "version", "is", "in", "the", "warning", "message\n", "ensure", "the", "service", "is", "enabled", "again", "when", "there", "is", "no", "connection\n", "exception\n", "ensure", "objects.Service.save", "method", "is", "not", "called", "more", "than", "once\n", "after", "the", "service", "is", "enabled"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/partition_utils.py": ["_", "__name__", "_mkfs", "args", "dev", "dev_base", "dev_path", "fs", "fs_label", "fs_type", "i", "label", "logging", "make_partition", "mapperdir", "max_seconds", "mkfs", "os", "out", "partition_end", "partition_path", "partition_start", "partnum", "path", "pluginlib", "range", "session", "time", "utils", "wait_for_dev", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "add", "-F", "to", "force", "no", "interactive", "execute", "on", "non-block", "device.\n", "Always", "remove", "partitions", "otherwise", "we", "can't", "unplug", "the", "VBD"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_shelve.py": ["CONF", "False", "None", "True", "_fake_resources", "check_save", "claims", "clean_shutdown", "context", "ctxt", "cur_time", "data", "db", "dict", "expected_task_state", "fake_claim", "fake_create", "fake_delete", "fake_image", "fake_init", "fake_instance", "fake_parse_hook", "fake_soi", "fake_spec", "filter_properties", "get_by_instance_uuid", "host", "image", "image_id", "image_meta", "instance", "instance1", "instance2", "limits", "metadata", "mock", "mock_cleanup", "mock_cleanup_call_list", "mock_get_by_filters", "mock_get_power_state", "mock_get_power_state_call_list", "mock_image_meta", "mock_notify", "mock_notify_instance_usage", "mock_notify_instance_usage_call_list", "mock_older", "mock_parse", "mock_power_off", "mock_power_off_call_list", "mock_save", "mock_snapshot", "mox", "node", "nova", "objects", "requests", "resources", "self", "self2", "shelved_offload_time", "shelved_time", "soi", "sys_meta", "task_states", "test", "test_compute", "time_fixture", "timestring", "timeutils", "tracking", "unshelve", "utils_fixture", "uuids", "vm_states", "prepare", "expect", "call", "lists\n", "instance.host", "is", "replaced", "with", "host", "because\n", "original", "instance.host", "is", "clear", "after\n", "ComputeManager.shelve_instance", "execute", "with\n", "shelved_offload_time", "==", "0\n", "Adding", "shelved_*", "keys", "in", "system", "metadata", "to", "verify\n", "whether", "those", "are", "deleted", "after", "unshelve", "call.\n", "Test", "instances", "are", "not", "offloaded", "when", "shelved_offload_time", "is", "-1\n", "Ensure", "instance", "can", "be", "shelved.\n", "In", "original", "_FakeImageService.__init__(),", "some", "fake", "images", "are\n", "created.", "To", "verify", "the", "snapshot", "name", "of", "this", "test", "only,", "here\n", "sets", "a", "fake", "method.\n", "Ensure", "instance", "can", "be", "unshelved."], "/Users/mehranhassani/repos/nova/nova/network/os_vif_util.py": ["CONF", "False", "LOG", "None", "NotImplementedError", "True", "_", "__name__", "_get_hybrid_bridge_name", "_get_vif_instance", "_get_vif_name", "_is_firewall_required", "_nova_to_osvif_ip", "_nova_to_osvif_ips", "_nova_to_osvif_network", "_nova_to_osvif_route", "_nova_to_osvif_routes", "_nova_to_osvif_subnet", "_nova_to_osvif_subnets", "cfg", "cls", "dnsaddrs", "exception", "fip", "floating_ips", "func", "funcname", "getattr", "info", "instance", "ip", "ips", "kwargs", "logging", "model", "netobj", "network", "obj", "objects", "path", "profile", "route", "routes", "subnet", "subnets", "sys", "vif", "vifobj", "VIF_TYPE_BRIDGE", "=", "'bridge'\n", "VIF_TYPE_OVS", "=", "'ovs'\n", "VIF_TYPE_VHOST_USER", "=", "'vhostuser'\n", "VIF_TYPE_IVS", "=", "'ivs'\n", "VIF_TYPE_DVS", "=", "'dvs'\n", "VIF_TYPE_IOVISOR", "=", "'iovisor'\n", "VIF_TYPE_802_QBG", "=", "'802.1qbg'\n", "VIF_TYPE_802_QBH", "=", "'802.1qbh'\n", "VIF_TYPE_HW_VEB", "=", "'hw_veb'\n", "VIF_TYPE_IB_HOSTDEV", "=", "'ib_hostdev'\n", "VIF_TYPE_MIDONET", "=", "'midonet'\n", "VIF_TYPE_VROUTER", "=", "'vrouter'\n", "VIF_TYPE_TAP", "=", "'tap'\n", "VIF_TYPE_MACVTAP", "=", "'macvtap'\n", "VIF_TYPE_HOSTDEV", "=", "'hostdev_physical'"], "/Users/mehranhassani/repos/nova/nova/db/__init__.py": ["noqa"], "/Users/mehranhassani/repos/nova/nova/objects/volume_usage.py": ["False", "True", "VERSION", "base", "context", "db", "db_vol_usage", "field", "fields", "self", "setattr", "staticmethod", "update_totals", "vol_usage", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_client.py": ["SchedulerClientTestCase", "aggregate", "aggregates", "fake_args", "fake_spec", "messaging", "mock", "mock_delete_agg", "mock_select_destinations", "mock_update_aggs", "mock_update_resource_stats", "objects", "scheduler_client", "scheduler_query_client", "scheduler_report_client", "self", "super", "test", "Tests", "for", "Scheduler", "Client.", "check", "if", "the", "scheduler", "service", "times", "out", "properly\n", "scenario:", "the", "scheduler", "service", "times", "out", "&", "recovers", "after", "failure"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/fake_imagebackend.py": ["ImageBackendFixture", "None", "True", "any", "args", "backend_self", "cache_mode", "collections", "config", "device_type", "disk", "disk_bus", "disk_dev", "disk_name", "driver", "exists", "extra_specs", "fetch_func", "filename", "fixtures", "functools", "got_files", "hypervisor_version", "image_init", "image_type", "imagebackend", "imported_files", "info", "instance", "kwargs", "libvirt_utils", "local_filename", "mock", "mock_disk", "name", "os", "path", "property", "remote_filename", "self", "setattr", "six", "size", "super", "Mock", "template", "functions", "passed", "to", "cache\n", "Backend.backend", "creates", "all", "Image", "objects\n", "A", "disk", "was", "created", "iff", "either", "cache()", "or", "import_file()", "was", "called.\n", "This", "is", "the", "generator", "passed", "to", "the", "disks", "defaultdict.", "It", "returns\n", "a", "mocked", "Image", "object,", "but", "note", "that", "the", "returned", "object", "has", "not\n", "yet", "been", "'constructed'.", "We", "don't", "know", "at", "this", "stage", "what", "arguments\n", "will", "be", "passed", "to", "the", "constructor,", "so", "we", "don't", "know,", "eg,", "its", "type\n", "or", "path.\n\n", "The", "reason", "for", "this", "2", "phase", "construction", "is", "to", "allow", "tests", "to\n", "manipulate", "mocks", "for", "disks", "before", "they", "have", "been", "created.", "eg", "a\n", "test", "can", "do", "the", "following", "before", "executing", "the", "method", "under", "test:\n\n", "disks['disk'].cache.side_effect", "=", "ImageNotFound...\n\n", "When", "the", "'constructor'", "(image_init", "in", "_mock_backend)", "later", "runs,\n", "it", "will", "return", "the", "same", "object", "we", "created", "here,", "and", "when", "the\n", "caller", "calls", "cache()", "it", "will", "raise", "the", "requested", "exception.\n", "NOTE(mdbooth):", "fake_cache", "and", "fake_import_file", "are", "for", "compatibility\n", "with", "existing", "tests", "which", "test", "got_files", "and", "imported_files.", "They\n", "should", "be", "removed", "when", "they", "have", "no", "remaining", "users.\n", "NOTE(mdbooth):", "test_virt_drivers", "assumes", "libvirt_info", "has", "functional\n", "output\n", "This", "method", "mocks", "Backend.backend,", "which", "returns", "a", "subclass", "of", "Image\n", "(it", "returns", "a", "class,", "not", "an", "instance).", "This", "mocked", "method", "doesn't\n", "return", "a", "class;", "it", "returns", "a", "function", "which", "returns", "a", "Mock.", "IOW,\n", "instead", "of", "the", "getting", "a", "QCow2,", "the", "caller", "gets", "image_init,\n", "so", "instead", "of:\n\n", "QCow2(instance,", "disk_name='disk')\n\n", "the", "caller", "effectively", "does:\n\n", "image_init(instance,", "disk_name='disk')\n\n", "Therefore", "image_init()", "must", "have", "the", "same", "signature", "as", "an", "Image\n", "subclass", "constructor,", "and", "return", "a", "mocked", "Image", "object.\n\n", "The", "returned", "mocked", "Image", "object", "has", "the", "following", "additional\n", "properties", "which", "are", "useful", "for", "testing:\n\n", "*", "Calls", "with", "the", "same", "disk_name", "return", "the", "same", "object", "from\n", "self.disks.", "This", "means", "tests", "can", "assert", "on", "multiple", "calls", "for\n", "the", "same", "disk", "without", "worrying", "about", "whether", "they", "were", "also", "on\n", "the", "same", "object.\n\n", "*", "Mocked", "objects", "have", "an", "additional", "image_type", "attribute", "set", "to\n", "the", "image_type", "originally", "passed", "to", "Backend.backend()", "during\n", "their", "construction.", "Tests", "can", "use", "this", "to", "assert", "that", "disks", "were\n", "created", "of", "the", "expected", "type.\n", "There's", "nothing", "special", "about", "this", "path", "except", "that", "it's\n", "predictable", "and", "unique", "for", "(instance,", "disk).\n", "Used", "directly", "by", "callers.", "These", "would", "have", "been", "set", "if", "called\n", "the", "real", "constructor.\n", "Used", "by", "tests.", "Note", "that", "image_init", "is", "a", "closure", "over", "image_type.\n", "Used", "by", "tests", "to", "manipulate", "which", "disks", "exist.\n", "We", "don't", "just", "cache", "the", "return", "value", "here", "because", "the\n", "caller", "may", "want,", "eg,", "a", "test", "where", "the", "disk", "initially", "does", "not\n", "exist", "and", "later", "exists.\n", "Execute", "the", "template", "function", "so", "we", "can", "test", "the", "arguments", "it", "was\n", "called", "with.\n", "For", "legacy", "tests", "which", "use", "got_files\n", "For", "legacy", "tests", "which", "use", "imported_files\n", "For", "tests", "in", "test_virt_drivers", "which", "expect", "libvirt_info", "to", "be\n", "functional"], "/Users/mehranhassani/repos/nova/nova/objects/instance_numa_topology.py": ["False", "InstanceNUMACell", "InstanceNUMATopology", "None", "True", "VERSION", "all", "base", "cell", "cell_dict", "cell_id", "classmethod", "cls", "context", "cpu_list", "cpu_pairs", "cpu_pinning", "cpuset", "data_dict", "db", "db_extra", "db_obj", "exception", "fields", "hardware", "instance_uuid", "iter", "jsonutils", "kwargs", "len", "list", "map", "memory", "obj_fields", "obj_topology", "pagesize", "pcpu", "pinning_dict", "primitive", "property", "self", "set", "sorted", "super", "target_version", "threads", "values", "vcpu", "versionutils", "zip", "Defined", "so", "that", "boolean", "testing", "works", "the", "same", "as", "for", "lists.\nDetermines", "whether", "emulator", "threads", "should", "be", "isolated", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "pagesize", "field\n", "Version", "1.2:", "Add", "cpu_pinning_raw", "and", "topology", "fields\n", "Version", "1.3:", "Add", "cpu_policy", "and", "cpu_thread_policy", "fields\n", "NOTE(sahid):", "Used", "as", "legacy,", "could", "be", "renamed", "in\n", "_legacy_to_dict_", "to", "the", "future", "to", "avoid", "confusing.\n", "NOTE(sahid):", "Used", "as", "legacy,", "could", "be", "renamed", "in\n", "_legacy_from_dict_", "to", "the", "future", "to", "avoid", "confusing.\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Takes", "into", "account", "pagesize\n", "Version", "1.2:", "InstanceNUMACell", "1.2\n", "Version", "1.3:", "Add", "emulator", "threads", "policy\n", "NOTE(danms):", "The", "'id'", "field", "is", "no", "longer", "used", "and", "should", "be\n", "removed", "in", "the", "future", "when", "convenient\n", "NOTE(sahid):", "This", "compatibility", "code", "needs", "to", "stay", "until", "we", "can\n", "guarantee", "that", "there", "are", "no", "cases", "of", "the", "old", "format", "stored", "in\n", "the", "database", "(or", "forever,", "if", "we", "can", "never", "guarantee", "that).\n", "No", "benefit", "to", "store", "a", "list", "of", "changed", "fields\n", "TODO(ndipanov)", "Remove", "this", "method", "on", "the", "major", "version", "bump", "to", "2.0\n", "NOTE(sahid):", "Used", "as", "legacy,", "could", "be", "renamed", "in", "_legacy_to_dict_\n", "in", "the", "future", "to", "avoid", "confusing.\n", "NOTE(sahid):", "Used", "as", "legacy,", "could", "be", "renamed", "in", "_legacy_from_dict_\n", "in", "the", "future", "to", "avoid", "confusing."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_quota_sets.py": ["ADMIN_API", "True", "api_sample_base", "response", "sample_dir", "self", "Get", "api", "sample", "to", "show", "quotas.\n", "Get", "api", "sample", "to", "show", "quotas", "defaults.\n", "Get", "api", "sample", "to", "show", "quotas", "detail.\n", "Get", "api", "sample", "to", "update", "quotas.\n", "Get", "api", "sample", "to", "delete", "quota.\n", "Get", "api", "sample", "to", "update", "quotas.\n", "Get", "api", "sample", "to", "show", "quotas", "for", "user.\n", "Get", "api", "sample", "to", "update", "quotas", "for", "user."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_admin_password.py": ["AdminPasswordPolicyEnforcementV21", "AdminPasswordTestV21", "False", "None", "NotImplementedError", "admin_password_v21", "arg", "body", "context", "controller_method", "exc", "exception", "expected_attrs", "expected_status", "fake_get", "fake_get_instance", "fake_instance", "fake_set_admin_password", "fakes", "func", "id", "instance", "kwarg", "mock", "mock_get", "mock_set_admin_password", "password", "password_mock", "req", "req_context", "res", "rule", "rule_name", "rules", "self", "super", "test", "validation_error", "webob", "run", "with", "enable_instance_password", "disabled", "to", "verify", "adminPass\n", "is", "missing", "from", "response.", "See", "lp", "bug", "921814\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/iscsi.py": ["CONF", "LOG", "LibvirtISCSIVolumeDriver", "None", "True", "_LW", "__name__", "conf", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "exc", "host", "libvirt_volume", "logging", "nova", "os_brick_exception", "self", "super", "transport", "utils", "Libvirt", "volume", "driver", "for", "iSCSI\nDriver", "to", "attach", "Network", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt.\nAttach", "the", "volume", "to", "instance_name.\nDetach", "the", "volume", "from", "instance_name.", "Call", "the", "factory", "here", "so", "we", "can", "support\n", "more", "than", "x86", "architectures."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/eventhandler.py": ["CONF", "LOG", "None", "True", "_LW", "_TRANSITION_MAP", "_WAIT_TIMEOUT", "__name__", "constants", "instance_name", "instance_power_state", "instance_state", "instance_uuid", "list", "logging", "nova", "object", "os_win_exc", "self", "serialconsoleops", "state_change_callback", "transition", "utils", "utilsfactory", "virt_event", "virtevent", "The", "event", "listener", "timeout", "is", "set", "to", "0", "in", "order", "to", "return", "immediately\n", "and", "avoid", "blocking", "the", "thread.\n", "Instance", "uuid", "set", "by", "Nova.", "If", "this", "is", "missing,", "we", "assume", "that\n", "the", "instance", "was", "not", "created", "by", "Nova", "and", "ignore", "the", "event.\n", "The", "instance", "has", "been", "deleted."], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_aggregate.py": ["AggregateMigrationTestCase", "AggregateObjectCellTestCase", "AggregateObjectDbTestCase", "False", "NOW", "None", "SUBS", "True", "_aggregate_host_get_all", "_aggregate_metadata_get_all", "_create_aggregate", "_create_aggregate_with_hosts", "_get_fake_aggregate", "_get_fake_hosts", "_get_fake_metadata", "agg", "agg_map", "aggr", "aggregate", "aggregate_id", "aggregate_metadata", "aggregate_obj", "aggs", "ah1", "api_db_agg", "api_models", "base_compare", "c", "ca1", "ca2", "cell_db_agg", "compare_obj", "context", "create_aggregate", "created", "db", "db_api", "db_exc", "db_id", "deepcopy", "done", "exception", "expected", "expected_metadata", "fake_agg", "fake_aggregate", "fake_create_aggregate", "getattr", "h1", "h2", "host", "host_model", "hosts", "i", "in_api", "insert_mock", "key", "len", "list", "main_aggregates_len", "match", "matchers", "md", "metadata", "mock", "new_agg", "new_metadata", "new_values", "new_zone", "r", "r1", "r2", "range", "result", "results", "rh1", "rh2", "rl1", "self", "source", "str", "super", "test", "timeutils", "updated", "updated_at_comparator", "uuidsentinel", "value", "values", "Tests", "for", "the", "case", "where", "all", "aggregate", "data", "is", "in", "Cell", "DB\nTests", "the", "aggregate", "in", "the", "case", "where", "all", "data", "is", "in", "the", "API", "DB\nTests", "the", "aggregate", "in", "the", "case", "where", "data", "is", "in", "both", "databases\nTests", "the", "aggregate", "in", "the", "case", "where", "data", "is", "migrated", "to", "the", "API", "db", "this", "does", "not", "exist!\n", "this", "does", "not", "exist!\n", "this", "does", "not", "exist!\n", "NOTE(danms):", "This", "validates", "the", "\"or", "0\"", "default", "if", "there", "are", "no\n", "aggregates", "(and", "thus", "no", "max", "id)."], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/metrics.py": ["CONF", "KeyError", "exception", "float", "host_state", "m", "metrics_dict", "name", "nova", "ratio", "self", "utils", "value", "weight_properties", "weights", "Override", "the", "weight", "multiplier.", "NOTE(sbauza):", "Keying", "a", "dict", "of", "Metrics", "per", "metric", "name", "given", "that", "we\n", "have", "a", "MonitorMetricList", "object\n", "We", "treat", "the", "unavailable", "metric", "as", "the", "most", "negative\n", "factor,", "i.e.", "set", "the", "value", "to", "make", "this", "obj", "would", "be\n", "at", "the", "end", "of", "the", "ordered", "weighed", "obj", "list\n", "Do", "nothing", "if", "ratio", "or", "weight_multiplier", "is", "0."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_hv_spec.py": ["_TestHVSpecObject", "obj_fields", "object", "objects", "self", "spec", "spec_dict", "spec_dict_parallels", "spec_dict_vz", "spec_dict_vz_copy", "spec_list", "spec_obj", "test_objects", "check", "1.1->1.0", "compatibility\n", "check", "that", "nothing", "changed"], "/Users/mehranhassani/repos/nova/nova/virt/ironic/__init__.py": ["IronicDriver", "driver"], "/Users/mehranhassani/repos/nova/nova/policies/multinic.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "multinic_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/storage/test_lvm.py": ["CONF", "None", "True", "args", "cfg", "cmd", "exception", "executes", "expected_commands", "fake_execute", "fake_lvm_size", "libvirt_utils", "lvm", "lvm_size", "mock", "mock_clear", "mock_execute", "mock_path_exists", "path", "processutils", "self", "size", "test", "utils", "Test", "the", "correct", "dd", "commands", "are", "run", "for", "various", "sizes\n", "Test", "volume_clear_size", "limits", "the", "size\n", "Test", "volume_clear=shred\n", "Test", "volume_clear=none", "does", "nothing"], "/Users/mehranhassani/repos/nova/nova/tests/unit/consoleauth/test_consoleauth.py": ["CellsConsoleauthTestCase", "ConsoleauthTestCase", "ControlauthMemcacheEncodingTestCase", "False", "None", "True", "console_port", "console_type", "context", "ctxt", "fake_validate_console_port", "i", "instance", "instance_uuid", "len", "manager", "mock", "mock_delete_multi", "mock_get", "mock_get_multi", "mock_instance_delete", "mock_instance_get", "mock_instance_set", "mock_rpc", "mock_set", "mox", "old_rpcapi", "port", "range", "result", "self", "six", "stored_tokens", "str", "super", "test", "timeutils", "token", "token1", "tokens", "Test", "Case", "for", "consoleauth.\nTest", "Case", "for", "consoleauth", "w/", "cells", "enabled.", "Test", "that", "tokens", "expire", "correctly.\n", "when", "trying", "to", "store", "token1,", "expired", "token", "is", "removed", "fist."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_suspend_server.py": ["SuspendServerPolicyEnforcementV21", "SuspendServerTestsV21", "_api_version", "_fake_controller", "admin_only_action_common", "controller_name", "exc", "exception", "fake_instance", "fakes", "get_instance_mock", "getattr", "instance", "mock", "rule_name", "self", "super", "suspend_mock", "suspend_server", "suspend_server_v21", "test", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_bandwidth_usage.py": ["None", "_TestBandwidthUsage", "bandwidth_usage", "bw_in", "bw_out", "bw_usage", "bw_usages", "context", "datetime", "db", "expected_bw_usage1", "fake_bw_usage", "field", "getattr", "ignored_fields", "iso8601", "last_ctr_in", "last_ctr_out", "len", "mock", "mock_create", "mock_get", "mock_get_by_uuids", "mock_update", "now", "obj", "obj_field", "self", "start_period", "staticmethod", "super", "test", "test_objects", "time", "timeutils", "uuids", "value"], "/Users/mehranhassani/repos/nova/nova/cells/utils.py": ["AttributeError", "BLOCK_SYNC_FLAG", "CONF", "ComputeNodeProxy", "False", "None", "PATH_CELL_SEP", "ProxyObjectSerializer", "ServiceProxy", "True", "_CELL_ITEM_SEP", "_CellProxy", "__name__", "_get_paginated_instances", "_iteritems", "cell_and_item", "cell_name", "cell_path", "cell_with_item", "classmethod", "cls", "compute_node", "compute_proxy", "context", "deleted", "filters", "getattr", "instance", "instances", "item", "items", "iteritems", "key", "klass", "klass_name", "len", "limit", "list", "marker", "name", "nova", "obj", "obj_base", "obj_p", "obj_primitive", "object", "objects", "objprim", "primitive", "project_id", "property", "random", "result", "self", "serializer", "service", "service_proxy", "shuffle", "six", "str", "super", "sys", "task_log", "updated_since", "uuids_only", "Turn", "cell_name", "and", "item", "into", "<cell_name>@<item>.\nSplit", "a", "combined", "cell@item", "and", "return", "them.", "Separator", "used", "between", "cell", "names", "for", "the", "'full", "cell", "name'", "and", "routing\n", "path\n", "Flag", "prepended", "to", "a", "cell", "name", "to", "indicate", "data", "shouldn't", "be", "synced", "during\n", "an", "instance", "save.", "There", "are", "no", "illegal", "chars", "in", "a", "cell", "name", "so", "using", "the\n", "meaningful", "PATH_CELL_SEP", "in", "an", "invalid", "way", "will", "need", "to", "suffice.\n", "Separator", "used", "between", "cell", "name", "and", "item\n", "dict-ish", "syntax", "sugar\n", "NOTE(sbauza):", "As", "the", "Service", "object", "is", "still", "having", "a", "nested\n", "ComputeNode", "object", "that", "consumers", "of", "this", "Proxy", "don't", "use,", "we", "can\n", "safely", "remove", "it", "from", "what's", "returned\n", "NOTE(claudiub):", "needed", "for", "py34", "compatibility.\n", "get", "self._obj", "first,", "without", "ending", "into", "an", "infinite", "recursion.\n", "NOTE(melwitt/alaski):", "Need", "a", "list", "that", "supports", "assignment", "for\n", "shuffle.", "And", "pop()", "on", "the", "returned", "result.\n", "Active", "instances", "first.\n", "NOTE(sbauza):", "As", "compute_node", "is", "a", "ComputeNode", "object,", "we", "need", "to", "wrap", "it\n", "for", "adding", "the", "cell_path", "information\n", "NOTE(sbauza):", "As", "service", "is", "a", "Service", "object,", "we", "need", "to", "wrap", "it\n", "for", "adding", "the", "cell_path", "information"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_group.py": ["False", "None", "True", "_DB_UUID", "_INST_GROUP_DB", "_TS_NOW", "_TestInstanceGroupListObject", "_TestInstanceGroupObject", "_mock_db_list_get", "changed_group", "copy", "error", "exception", "expected_filters", "fake_member_models", "fake_member_uuids", "getattr", "hosts", "ig", "inst_list", "instance", "instances", "len", "members", "mock", "mock_api_get", "mock_ctx", "mock_db_create", "mock_db_delete", "mock_db_get", "mock_db_update", "mock_get_by_filt", "mock_get_db", "mock_il_get", "mock_members_add_db", "mock_name", "mock_notify", "mock_uuid", "obj", "obj_primitive", "object", "objects", "result", "self", "set", "test_objects", "timeutils", "uuids", "values", "o.vo.fields.DateTimeField", "converts", "to", "tz-aware", "and\n", "in", "process", "we", "lose", "microsecond", "resolution.\n", "Remove", "policy", "2\n", "Remove", "member", "2\n", "make", "sure", "that", "we", "can", "save", "by", "removing", "hosts", "from", "what", "is", "updated\n", "since", "hosts", "was", "the", "only", "update,", "there", "is", "no", "actual", "call\n", "Test", "manual", "exclusion\n", "Need", "the", "project_id", "value", "set,", "otherwise", "we'd", "use", "mock.sentinel"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/utils.py": ["Exception", "LOG", "MetaData", "None", "NullType", "OperationalError", "Table", "True", "_", "_LE", "__name__", "c", "col_name_col_instance", "column", "columns", "db", "db_exc", "exception", "isinstance", "logging", "meta", "migrate_engine", "name", "new_column", "oslodbutils", "repr", "shadow_column", "shadow_columns", "shadow_table", "shadow_table_name", "table", "table_name", "type", "NOTE(ekudryashova):", "At", "the", "moment", "there", "is", "a", "case", "in", "oslo.db", "code,\n", "which", "raises", "unwrapped", "OperationalError,", "so", "we", "should", "catch", "it", "until\n", "oslo.db", "would", "wraps", "all", "such", "exceptions"], "/Users/mehranhassani/repos/nova/nova/tests/unit/policy_fixture.py": ["CONF", "RealPolicyFixture", "RoleBasedPolicyFixture", "True", "action", "args", "f", "fake_policy", "fixtures", "fp", "jsonutils", "kwargs", "nova", "open", "os", "oslo_policy", "overwrite", "paths", "policies", "policy", "policy_rules", "role", "rule", "rules", "self", "six", "super", "Allow", "changing", "of", "the", "policy", "before", "we", "get", "started", "policy_file", "can", "be", "overridden", "by", "subclasses\n", "load", "the", "fake_policy", "data", "and", "add", "the", "missing", "default", "rules.\n", "Convert", "all", "actions", "to", "require", "specified", "role"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_volumes.py": ["ExtendedVolumesEnforcementV21", "ExtendedVolumesTestV21", "False", "None", "True", "UUID1", "UUID2", "UUID3", "actual", "args", "body", "compute", "content_type", "db_list", "enumerate", "exp_volumes_detail", "exp_volumes_show", "extended_volumes_v21", "fake_bdms_get_all_by_instance_uuids", "fake_block_device", "fake_compute_get", "fake_compute_get_all", "fake_instance", "fake_volume_get", "fakes", "fields", "i", "inst", "instance_obj", "jsonutils", "mock", "mock_extend", "objects", "os_wsgi", "prefix", "req", "res", "return_server", "rule_name", "self", "server", "super", "test", "url", "volume", "wsgi_api_version", "Pass", "ResponseObj", "as", "None,", "the", "code", "shouldn't", "touch", "the", "None.\n", "Pass", "ResponseObj", "as", "None,", "the", "code", "shouldn't", "touch", "the", "None."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/openstack/placement/test_placement_api.py": ["None", "TESTS_DIR", "True", "__file__", "__name__", "driver", "fixtures", "inner_fixtures", "loader", "nova_fixtures", "os", "pattern", "test_dir", "tests", "wsgi_intercept", "Provide", "a", "TestSuite", "to", "the", "discovery", "process.", "Check", "that", "wsgi", "application", "response", "headers", "are", "always\n", "native", "str.\n", "These", "inner", "fixtures", "provide", "per", "test", "request", "output", "and", "log\n", "capture,", "for", "cleaner", "results", "reporting."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_volumes.py": ["False", "None", "SnapshotsSampleJsonTests", "VolumesSampleJsonTest", "_get_volume_id", "_stub_volume", "_stub_volume_create", "_stub_volume_delete", "_stub_volume_get", "_stub_volume_get_all", "api_sample_base", "attach_id", "bdm", "bdms", "classmethod", "context", "create_subs", "datetime", "description", "device_name", "displaydesc", "displayname", "expected_attrs", "fake_bdms_get_all_by_instance", "fake_block_device", "fake_compute_api_get", "fake_instance", "fakes", "id", "instance_id", "instance_uuid", "name", "objects", "response", "sample_dir", "search_opts", "self", "server_id", "size", "snapshot", "stub_self", "subs", "subs_req", "super", "test_servers", "use_slave", "vol_id", "volume", "volume_id", "For", "now,", "index", "and", "detail", "are", "the", "same.\n", "See", "the", "volumes", "api"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/ram_filter.py": ["BaseRamFilter", "False", "LOG", "NotImplementedError", "True", "ValueError", "_LW", "__name__", "aggregate_vals", "e", "filters", "float", "free_ram_mb", "host_state", "logging", "memory_mb_limit", "ram_allocation_ratio", "ratio", "requested_ram", "self", "spec_obj", "total_usable_ram_mb", "usable_ram", "used_ram_mb", "utils", "Only", "return", "hosts", "with", "sufficient", "available", "RAM.\nRam", "Filter", "with", "over", "subscription", "flag.", "Do", "not", "allow", "an", "instance", "to", "overcommit", "against", "itself,", "only", "against\n", "other", "instances.\n", "save", "oversubscription", "limit", "for", "compute", "node", "to", "test", "against:"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/028_build_requests_instance_mediumtext.py": ["MetaData", "Table", "True", "api_models", "build_requests", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/mount/test_loop.py": ["False", "LoopTestCase", "_fake_noop", "_fake_trycmd_losetup_fails", "_fake_trycmd_losetup_works", "fake_get_dev_fails", "fixtures", "imgmodel", "l", "loop", "self", "super", "tempdir", "test", "No", "error", "logged,", "device", "consumed\n", "Free\n", "No", "error", "logged,", "device", "consumed\n", "Free\n", "Always", "fail", "to", "get", "a", "device\n", "Fail", "to", "get", "a", "device\n", "This", "just", "checks", "that", "a", "free", "of", "something", "we", "don't", "have", "doesn't\n", "throw", "an", "exception"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_serialconsolehandler.py": ["False", "None", "SerialConsoleHandlerTestCase", "True", "constants", "enable_logging", "exception", "expected_args", "expected_calls", "expected_mapping", "expected_workers", "get_port_connections", "mock", "mock_acquire_port", "mock_client_connected", "mock_event", "mock_get_handler", "mock_get_log_paths", "mock_get_pipe_handler", "mock_get_port_mapping", "mock_input_queue", "mock_io_queue", "mock_output_queue", "mock_release_port", "mock_serial_console", "mock_serial_proxy", "mock_serial_proxy_class", "mock_setup_handlers", "mock_setup_pipe_handlers", "mock_setup_proxy", "mock_workers", "pathutils", "pipe_path", "pipe_type", "port", "port_connections", "ret_val", "ro_pipe_path", "rw_pipe_path", "self", "serial_console_enabled", "serial_port_mapping", "serialconsolehandler", "serialproxy", "super", "test_base", "worker"], "/Users/mehranhassani/repos/nova/nova/conf/vmware.py": ["ALL_VMWARE_OPTS", "False", "True", "cfg", "conf", "spbm_opts", "vmops_opts", "vmware_group", "vmware_utils_opts", "vmwareapi_opts", "vmwareapi_vif_opts"], "/Users/mehranhassani/repos/nova/nova/cmd/console.py": ["CONF", "cfg", "config", "gmr", "logging", "objects", "server", "service", "sys", "version", "Starter", "script", "for", "Nova", "Console", "Proxy."], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_build_request.py": ["BuildRequestListTestCase", "BuildRequestTestCase", "None", "True", "USES_DB_SELF", "ValueError", "args", "build_request", "context", "ctxt", "datetime", "db_req", "db_value", "deleted", "enumerate", "ex", "exception", "expected", "expected_req", "fake_build_request", "fake_info_cache", "fake_instance", "fake_secgroups", "fixtures", "getattr", "i", "instance", "instance1", "instance2", "instance_1", "instance_1024", "instance_2", "instance_512", "instance_filter", "instance_find", "instance_first", "instance_second", "instance_third", "jsonutils", "key", "kwargs", "len", "objects", "project_id", "range", "req", "req_first", "req_list", "req_obj", "req_objs", "req_second", "req_third", "reqs", "self", "six", "super", "test", "total", "updated_req", "uuidutils", "x", "NOTE:", "This", "means", "that", "we're", "using", "a", "database", "for", "this", "test", "suite\n", "despite", "inheriting", "from", "NoDBTestCase\n", "Can't", "compare", "list", "objects", "directly,", "just", "compare", "the", "single\n", "item", "they", "contain.\n", "This", "is", "more", "or", "less", "taken", "straight", "from", "bug", "1633734.\n", "This", "should", "fail", "because", "the", "build", "request", "in", "the", "database", "does", "not\n", "have", "instance_uuid", "set,", "and", "BuildRequest.instance_uuid", "is", "not\n", "nullable", "so", "trying", "to", "set", "build_request.instance_uuid", "=", "None", "is", "going\n", "to", "raise", "the", "ValueError.\n", "First", "let's", "create", "2", "of", "these", "busted", "build", "requests", "so", "we", "can", "test\n", "paging.\n", "nova-manage", "uses", "an", "admin", "contet\n", "Make", "sure", "we", "can", "get", "0", "back", "without", "deleting", "any.\n", "Delete", "only", "1.\n", "Delete", "50", "(default", "in", "nova-manage", "online_data_migrations).\n", "Do", "it", "again,", "nothing", "should", "come", "back.\n", "NOTE:", "This", "means", "that", "we're", "using", "a", "database", "for", "this", "test", "suite\n", "despite", "inheriting", "from", "NoDBTestCase\n", "Create", "instance", "objects", "this", "way", "so", "that", "there", "is", "no", "'id'", "set.\n", "The", "'id'", "will", "not", "be", "populated", "on", "a", "BuildRequest.instance", "so", "this\n", "checks", "that", "sorting", "by", "'id'", "uses", "the", "BuildRequest.id."], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute_xen.py": ["CONF", "ComputeXenTestCase", "False", "None", "True", "context", "ctxt", "db_instance", "do_test", "eventlet_utils", "fake_instance", "instance", "instance_list", "instance_obj", "manager", "mock", "mock_compute_get_num_instances", "mock_compute_sync_powerstate", "mock_instance_list_get_by_host", "mock_vm_utils_lookup", "nova", "objects", "power_state", "self", "stubs", "super", "vm_utils", "Tests", "for", "expectations", "of", "behaviour", "from", "the", "Xen", "driver.", "execute", "power", "syncing", "synchronously", "for", "testing:"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_aggregate_image_properties_isolation_filters.py": ["TestAggImagePropsIsolationFilter", "agg_mock", "aipi", "fakes", "host", "mock", "objects", "self", "set", "spec_obj", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_api.py": ["ApiTestCase", "FAKE_UUID", "FakeNWInfo", "False", "None", "TestUpdateInstanceCache", "True", "address", "api", "api_mock", "arg1", "arg2", "args", "base_api", "cache", "columns_to_join", "context", "ctxt", "db_mock", "dict", "exception", "expected", "expected_updated_instances", "fake_associate", "fake_flavor", "fake_get_multi_addresses", "fake_get_nw_info", "fake_info_cache", "fake_instance", "fake_instance_get_by_uuid", "fake_instance_info_cache_update", "fake_mig_inst_method", "fake_migrate_finish", "fake_migrate_start", "fake_migration", "fake_result", "fake_rpc_allocate", "fake_update_instance_cache_with_nw_info", "fakes", "fields", "fip", "fip_get", "flavor", "flavors", "floating", "floating_ips", "floatings", "floats", "func", "getattr", "host", "hydrate_mock", "info", "info_func", "instance", "instance_uuid", "is_multi_host", "itertools", "kwargs", "len", "macs", "method", "method_mock", "mock", "mock_alloc", "mock_associate", "mock_disassociate", "mock_get", "mock_get_all", "mock_get_by_address", "mock_get_by_floating", "mock_get_by_id", "mock_get_by_instance", "mock_lock", "mock_rpc_alloc", "mock_rpc_dealloc", "mock_save", "mock_update", "multi_host", "net_obj", "net_req_obj", "network", "network_id", "network_model", "new_instance", "nw_info", "nwinfo_mock", "object", "objects", "orig_instance_uuid", "pools", "project", "req_net", "requested_networks", "result", "save_mock", "self", "set", "str", "super", "test", "test_fixed_ip", "test_virtual_interface", "update_cells", "use_slave", "uuid", "uuids", "vif", "vifs", "vpn", "zip", "Tests", "for", "network", "API.\nTest", "post-association", "logic.", "If", "a", "macs", "argument", "is", "supplied", "to", "the", "'nova-network'", "API,", "it", "is", "just\n", "ignored.", "This", "test", "checks", "that", "the", "call", "down", "to", "the", "rpcapi", "layer\n", "doesn't", "pass", "macs", "down:", "nova-network", "doesn't", "support", "hypervisor\n", "mac", "address", "limits", "(today", "anyhow).\n", "This", "test", "verifies", "that", "no", "call", "to", "get_instance_nw_info()", "is", "made\n", "from", "the", "@refresh_cache", "decorator", "for", "the", "tested", "method.\n", "Tests", "that", "nothing", "fails", "if", "no", "networks", "are", "returned", "and", "auto\n", "allocation", "wasn't", "requested.\n", "Tests", "that", "we", "fail", "when", "no", "networks", "are", "allocated", "and", "auto-allocation\n", "was", "requested.\n", "assert", "that", "requested_networks", "is", "nulled", "out\n", "Tests", "that", "we", "pass", "requested_networks=None", "to", "the", "RPC", "API", "when\n", "we're", "auto-allocating."], "/Users/mehranhassani/repos/nova/nova/policies/server_diagnostics.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "server_diagnostics_policies"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/volumeops.py": ["Exception", "False", "LOG", "None", "True", "_LI", "_LW", "__name__", "bad_devices", "connection_data", "connection_info", "dev_number", "device", "device_number", "driver_type", "exc", "exception", "excutils", "hotplug", "instance_name", "is_vm_shutdown", "logging", "mountpoint", "object", "other_config", "running", "self", "session", "sr_label", "sr_params", "sr_ref", "sr_uuid", "strutils", "vbd_ref", "vbd_refs", "vdi_ref", "vdi_refs", "vdi_uuid", "vm_ref", "vm_utils", "volume_utils", "Management", "class", "for", "Volume-related", "tasks.\nAttach", "volume", "to", "VM", "instance.\nAttach", "volume", "to", "hypervisor,", "but", "not", "the", "VM.\nDetach", "volume", "storage", "to", "VM", "instance.\nDetach", "all", "cinder", "volumes.\nReturn", "VBD", "refs", "for", "all", "Nova/Cinder", "volumes.", "NOTE(sirp):", "Forgetting", "the", "SR", "will", "have", "the", "effect", "of\n", "cleaning", "up", "the", "VDI", "and", "VBD", "records,", "so", "no", "need", "to", "handle\n", "that", "explicitly.\n", "introduce", "SR", "because", "not", "already", "present\n", "connection_data", "can", "have", "credentials", "in", "it", "so", "make", "sure", "to", "scrub\n", "those", "before", "logging.\n", "NOTE(sirp):", "This", "will", "introduce", "the", "first", "VDI", "in", "the", "SR\n", "osvol", "is", "added", "to", "the", "vbd", "so", "we", "can", "spot", "which", "vbds", "are", "volumes\n", "NOTE(johngarbutt)", "can", "only", "call", "VBD.plug", "on", "a", "running", "vm\n", "NOTE(sirp):", "If", "we", "don't", "find", "the", "VBD", "then", "it", "must", "have", "been\n", "detached", "previously.\n", "find", "sr", "before", "we", "destroy", "the", "vbd\n", "Forget", "(i.e.", "disconnect)", "SR", "only", "if", "not", "in", "use\n", "TODO(sirp):", "bug1152401", "This", "relies", "on", "a", "120", "sec", "timeout\n", "within", "XenServer,", "update", "this", "to", "fail-fast", "when", "this", "is", "fixed\n", "upstream\n", "A", "helper", "method", "to", "detach", "volumes", "that", "are", "not", "associated", "with", "an\n", "instance\n", "Forget", "(i.e.", "disconnect)", "SR", "only", "if", "not", "in", "use"], "/Users/mehranhassani/repos/nova/nova/network/neutronv2/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/test_utils.py": ["False", "GetIfnameByPciAddressTestCase", "GetMacByPciAddressTestCase", "GetVfNumByPciAddressTestCase", "IOError", "IsPhysicalFunctionTestCase", "OSError", "PciDeviceMatchTestCase", "True", "address", "builtins", "exception", "f", "fixtures", "glob", "ifname", "mac", "mock", "mock_iglob", "mock_join", "mock_listdir", "mock_open", "mock_readlink", "open", "os", "physical_function", "self", "super", "test", "totalvf_path", "utils", "vf_num"], "/Users/mehranhassani/repos/nova/nova/policies/cells_scheduler.py": ["POLICY_ROOT", "cells_scheduler_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/client/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/263_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/utils.py": ["CHUNK_SIZE", "CommandNotFound", "Exception", "False", "ImportError", "LOG", "None", "OSError", "SubprocessException", "True", "XenAPIPlugin", "__name__", "_assert_vhd_not_hidden", "_handle_old_style_images", "_handle_serialization", "_link", "_rename", "_validate_sequenced_vhds", "_validate_vdi_chain", "_validate_vhd", "_vhd_util_check", "base", "callback", "check_cmd", "chunk", "close_fds", "cmd", "cmd_input", "cmdline", "compression_level", "contents", "cur_path", "details", "dev", "dict", "dst", "e", "env", "err", "errno", "extra", "file_num", "filename", "filenames", "fileobj", "files_to_move", "finish_subprocess", "first_line", "func", "funcs", "get_parent_path", "imported_vhds", "kwargs", "leaf_vhd_path", "leaf_vhd_uuid", "len", "line", "link_name", "logging", "make_subprocess", "modify_cmd", "new_path", "ok_exit_codes", "orig_path", "orig_vhd_path", "os", "out", "params", "parent_path", "part", "partition", "path", "pickle", "pid", "proc", "query_cmd", "repair_cmd", "ret", "returncode", "reversed", "run_command", "rv", "self", "seq_num", "session", "shutil", "signal", "source", "sr_path", "src", "staging_path", "stderr", "stdin", "stdout", "str", "subprocess", "tar_cmd", "tar_pid", "tar_proc", "tempfile", "try_kill_process", "universal_newlines", "uuid_stack", "value", "vdi_path", "vdi_uuid", "vdi_uuids", "vhd_path", "vhd_uuid", "wrapped", "wrapped_dict", "Various", "utilities", "used", "by", "XenServer", "plugins.\nSends", "the", "given", "process", "the", "SIGKILL", "signal.\nHard-link", "VHDs", "into", "staging", "area.", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "noqa\n", "noqa\n", "noqa\n", "Rename", "any", "format", "of", "name", "to", "0.vhd", "when", "there", "is", "only", "single", "one\n", "Ignore", "legacy", "swap", "embedded", "in", "the", "image,", "generated", "on-the-fly", "now\n", "Collect", "sequenced", "VHDs", "and", "assign", "UUIDs", "to", "them\n", "Rename", "(0,", "1", "..", "N).vhd", "->", "aaaa-bbbb-cccc-dddd.vhd\n", "Re-link", "VHDs,", "in", "reverse", "order,", "from", "base-copy", "->", "leaf\n", "Link", "to", "parent\n", "Sanity", "check", "the", "leaf", "VHD\n", "Move", "files", "into", "SR\n", "NOTE(tpownall):", "If", "we", "do", "not", "poll", "for", "the", "tar", "process", "exit\n", "code", "when", "tar", "has", "exited", "pre", "maturely", "there", "is", "the", "chance\n", "that", "tar", "will", "become", "a", "defunct", "zombie", "child", "under", "glance", "plugin\n", "and", "re", "parented", "under", "init", "forever", "waiting", "on", "the", "stdin", "pipe", "to\n", "close.", "Polling", "for", "the", "exit", "code", "allows", "us", "to", "break", "the", "pipe.\n", "no", "need", "to", "kill", "already", "dead", "process"], "/Users/mehranhassani/repos/nova/nova/tests/functional/wsgi/test_attach_interfaces.py": ["False", "InterfaceFullstack", "_flavor_ref_parameter", "_image_ref_parameter", "api_fixture", "api_major_version", "body", "create_request_body", "created_server", "created_server_id", "integrated_helpers", "nova_fixtures", "os_interface_url", "policy_fixture", "resp", "self", "server", "super", "uuids", "Create", "a", "server\n", "Test", "for", "API", "failure", "conditions\n", "bad", "body", "is", "400\n", "Check", "in", "the", "case", "that", "both", "net_id", "and", "port_id", "are", "specified.\n", "Check", "in", "the", "case", "that", "fixed_ips", "is", "specified,\n", "but", "net_id", "is", "not", "specifed."], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/core_filter.py": ["BaseCoreFilter", "False", "LOG", "NotImplementedError", "True", "ValueError", "_LW", "__name__", "aggregate_vals", "cpu_allocation_ratio", "e", "filters", "float", "free_vcpus", "host_state", "instance_vcpus", "logging", "ratio", "self", "spec_obj", "utils", "vcpus_total", "CoreFilter", "filters", "based", "on", "CPU", "core", "utilization.", "Fail", "safe\n", "Only", "provide", "a", "VCPU", "limit", "to", "compute", "if", "the", "virt", "driver", "is", "reporting\n", "an", "accurate", "count", "of", "installed", "VCPUs.", "(XenServer", "driver", "does", "not)\n", "Do", "not", "allow", "an", "instance", "to", "overcommit", "against", "itself,", "only\n", "against", "other", "instances."], "/Users/mehranhassani/repos/nova/nova/objects/cell_mapping.py": ["CELL0_UUID", "CellMapping", "True", "VERSION", "api_models", "base", "cell_mapping", "changes", "cls", "context", "db_api", "db_cell_mapping", "db_mapping", "db_mappings", "exception", "fields", "key", "result", "self", "setattr", "staticmethod", "updates", "uuid", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/objects/host_mapping.py": ["None", "True", "VERSION", "_apply_updates", "_cell_id_in_updates", "api_models", "attrname", "base", "cell_map", "cell_mapping", "cell_mapping_obj", "changes", "cls", "context", "db_api", "db_host_mapping", "db_mapping", "db_value", "exception", "fields", "host", "host_mapping", "joinedload", "key", "obj", "result", "self", "session", "setattr", "staticmethod", "updates", "NOTE:", "This", "is", "done", "because", "a", "later", "access", "will", "trigger", "a", "lazy", "load\n", "outside", "of", "the", "db", "session", "so", "it", "will", "fail.", "We", "don't", "lazy", "load\n", "cell_mapping", "on", "the", "object", "later", "because", "we", "never", "need", "a", "HostMapping\n", "without", "the", "CellMapping.\n", "Version", "1.0:", "Initial", "version\n", "NOTE(dheeraj):", "If", "cell_mapping", "is", "stashed", "in", "db", "object\n", "we", "load", "it", "here.", "Otherwise,", "lazy", "loading", "will", "happen\n", "when", ".cell_mapping", "is", "accessed", "later\n", "cell_mapping", "must", "be", "mapped", "to", "cell_id", "for", "create\n", "cell_mapping", "must", "be", "mapped", "to", "cell_id", "for", "updates"], "/Users/mehranhassani/repos/nova/nova/policies/user_data.py": ["POLICY_ROOT", "base", "policy", "user_data_policies"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/219_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_network_request.py": ["FAKE_UUID", "False", "None", "True", "_TestNetworkRequestObject", "is_neutron", "len", "mock", "net_req", "network_request", "object", "objects", "primitive", "request", "requests", "self", "str", "test_objects", "no", "objects\n", "single", "object", "with", "network", "uuid\n", "multiple", "objects\n", "single", "object,", "'auto'", "case\n", "no", "objects\n", "single", "object", "with", "network", "uuid\n", "multiple", "objects\n", "single", "object,", "'none'", "case"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/auth.py": ["CONF", "LOG", "Middleware", "None", "RequestContext", "__name__", "_sep", "application", "conf", "context", "ctx", "enginefacade", "logging", "object", "project_id", "req", "req_id", "request_id", "roles", "self", "token", "user_id", "webob", "Require", "a", "token", "if", "one", "isn't", "present.\nMake", "a", "request", "context", "from", "keystone", "headers.", "NOTE(cdent):", "Only", "to", "be", "used", "in", "tests", "where", "auth", "is", "being", "faked."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_nova_manage.py": ["ApiDbCommandsTestCase", "CONF", "CellCommandsTestCase", "CellV2CommandsTestCase", "DBCommandsTestCase", "Exception", "False", "FloatingIpCommandsTestCase", "KeyboardInterrupt", "NetworkCommandsTestCase", "NeutronV2NetworkCommandsTestCase", "None", "ProjectCommandsTestCase", "StringIO", "TestNovaManageMain", "True", "USES_DB_SELF", "ValueError", "_CommandSub", "_fmt", "_test", "address_to_hosts", "answer", "assert_loop", "batches", "body", "brokers", "cell_ctxt", "cell_dbs", "cell_mapping", "cell_mapping0", "cell_mapping1", "cell_mapping2", "cell_mapping_uuid", "cell_tp_url", "cell_transport_url", "cell_uuid", "cidr", "cm", "command", "command_cls", "compute_node", "compute_nodes", "conf", "context", "count", "ctxt", "database_connection", "db", "db_fakes", "db_sync_calls", "delete", "dict", "dis_host", "dis_project", "enumerate", "exception", "exp_values", "expected", "fake_create_networks", "fake_migration", "fake_network_delete_safe", "fake_network_get_all", "fake_network_get_by_cidr", "fake_network_get_by_uuid", "fake_network_update", "fake_target_cell_mock", "first_call", "fixtures", "from_cli", "from_conf", "head", "host", "host_mapping", "i", "im", "inst_mapping", "instance_uuids", "ip", "kwargs", "large_number", "len", "list", "m", "manage", "mappings", "marker", "marker_mapping", "migration", "migrations", "mock", "mock_cell_mapping_get_all", "mock_cell_mapping_get_by_uuid", "mock_conf", "mock_create", "mock_ctxt", "mock_db_archive", "mock_db_cell_create", "mock_db_sync", "mock_gen_uuid", "mock_get", "mock_get_by_uuid", "mock_get_context", "mock_mig_1", "mock_mig_2", "mock_parse_args", "mock_scan", "mock_target_cell", "network_id", "nodes", "nova_fixtures", "num", "obj", "objects", "online_migrations", "output", "print_format", "project", "r", "range", "result", "ret", "retval", "rm", "runs", "self", "sqla_migrate", "sqla_migration", "sqla_sync", "str", "super", "sys", "test", "test_network", "thosts", "total", "transport_url", "update_value", "uuid", "uuidsentinel", "uuidutils", "values", "verbose", "Test", "the", "_create_transport_hosts", "method", "when", "hostname", "is", "passed.\nTest", "the", "_create_transport_hosts", "method", "for", "single", "broker_hosts.\nTests", "the", "nova-manage:main()", "setup", "code.", "/32", "and", "/31\n", "/30\n", "/29\n", "/28\n", "/16\n", "NOTE(dripton):", "I", "don't", "test", "/13", "because", "it", "makes", "the", "test", "take", "3s.\n", "/12", "gives", "over", "a", "million", "IPs,", "which", "is", "ridiculous.\n", "These", "are", "all", "tests", "that", "assume", "nova-network", "and", "using", "the", "nova", "DB.\n", "Tests", "that", "we", "don't", "show", "any", "table", "output", "(not", "verbose).\n", "Tests", "that", "we", "get", "table", "output.\n", "Create", "some", "fake", "compute", "nodes", "and", "check", "if", "they", "get", "host", "mappings\n", "Verify", "the", "cell", "mapping\n", "Verify", "the", "host", "mappings\n", "Create", "a", "cell", "mapping", "and", "hosts", "and", "check", "that", "nothing", "new", "is", "created\n", "Create", "compute", "nodes", "that", "will", "map", "to", "the", "cell\n", "Create", "a", "cell", "mapping", "and", "partial", "hosts", "and", "check", "that\n", "missing", "HostMappings", "are", "created\n", "Create", "compute", "nodes", "that", "will", "map", "to", "the", "cell\n", "NOTE(danms):", "Create", "a", "second", "node", "on", "one", "compute", "to", "make", "sure\n", "we", "handle", "that", "case\n", "Only", "create", "2", "existing", "HostMappings", "out", "of", "3\n", "Verify", "the", "HostMapping", "for", "the", "last", "host", "was", "created\n", "Verify", "the", "output\n", "The", "expected", "CellMapping", "UUID", "for", "the", "last", "host", "should", "be", "the", "same\n", "Batch", "size", "is", "50", "in", "map_instances\n", "First", "three", "are", "mapped\n", "Last", "three", "are", "not\n", "Instances", "are", "mapped", "in", "the", "order", "created", "so", "we", "know", "the", "marker", "is\n", "based", "off", "the", "third", "instance.\n", "Check", "cell0", "from", "default\n", "Verify", "the", "cell", "mapping\n", "Verify", "the", "host", "mappings\n", "NOTE(danms):", "This", "will", "hit", "the", "first", "use", "of", "the", "say()", "wrapper\n", "and", "reasonably", "verify", "that", "path\n", "Check", "that", "the", "host", "mappings", "were", "created\n", "Create", "some", "compute", "nodes", "and", "matching", "host", "mappings\n", "Create", "in-memory", "databases", "for", "cell1", "and", "cell2", "to", "let", "target_cell\n", "run", "for", "real.", "We", "want", "one", "compute", "node", "in", "cell1's", "db", "and", "the", "other\n", "compute", "node", "in", "cell2's", "db.\n", "Create", "the", "first", "compute", "node", "in", "cell1's", "db\n", "Create", "the", "first", "compute", "node", "in", "cell2's", "db\n", "Check", "that", "the", "host", "mappings", "were", "created\n", "assert", "the", "traceback", "is", "dumped", "to", "stdout"], "/Users/mehranhassani/repos/nova/nova/policies/assisted_volume_snapshots.py": ["POLICY_ROOT", "assisted_volume_snapshots_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/image_metadata.py": ["ALIAS", "ImageMetadataController", "MAX_IMAGE_META_PROXY_API_VERSION", "None", "True", "_", "alias", "body", "common", "context", "dict", "e", "exc", "exception", "expl", "extensions", "id", "image", "image_id", "image_metadata", "key", "mapper", "meta", "metadata", "msg", "name", "nova", "parent", "req", "resources", "self", "validation", "value", "version", "wsgi", "wsgi_resource", "The", "image", "metadata", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "the", "list", "of", "metadata", "for", "a", "given", "instance.\nImage", "Metadata", "API.", "Also", "connect", "the", "non", "project_id", "route"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/vzstorage.py": ["CONF", "LOG", "LibvirtVZStorageVolumeDriver", "None", "SHARE_FORMAT_REGEX", "VzShare", "_", "__name__", "cfg", "cfg_opts_set", "cluster_name", "collections", "conf", "connection", "connection_info", "connector", "device_info", "disk_dev", "disk_info", "exception", "fs", "invalid_cfg_opts", "invalid_opts_set", "logging", "m", "mds_list", "mount_opts", "msg", "re", "self", "set", "super", "utils", "vz_share", "Class", "implements", "libvirt", "part", "of", "volume", "driver", "for", "VzStorage.\nReturns", "xml", "for", "libvirt.\nAttach", "the", "volume", "to", "instance_name.\nDetach", "the", "volume", "from", "instance_name.", "Check", "for", "duplicate", "options:\n", "-c", "-", "cluster", "name\n", "-l", "-", "log", "file,", "includes", "%(cluster_name)s,", "so", "it's", "handled", "as", "a\n", "separate", "config", "parameter\n", "-C", "-", "SSD", "cache", "file,", "the", "same", "thing", "with", "%(cluster_name)s\n", "-u,", "-g,", "-m", "-", "there", "are", "default", "values", "for", "these", "options,", "so\n", "they're", "separate", "config", "parameters\n", "Call", "the", "factory", "here", "so", "we", "can", "support\n", "more", "than", "x86", "architectures.\n", "pstorage-mount", "man", "page:\n", "https://static.openvz.org/vz-man/man1/pstorage-mount.1.gz.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_migration_context.py": ["None", "_TestMigrationContext", "ctxt", "db_context", "db_data", "exception", "expected_mig_context", "fake_db_context", "fake_instance_uuid", "fake_migration_context_obj", "jsonutils", "mig_context", "mock", "mock_get", "obj", "object", "objects", "self", "test_instance_numa_topology", "test_objects", "uuids"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/affinity_filter.py": ["LOG", "ServerGroupAffinityFilter", "ServerGroupAntiAffinityFilter", "True", "_GroupAffinityFilter", "_GroupAntiAffinityFilter", "__name__", "affinity_cidr", "affinity_host_addr", "affinity_net", "affinity_uuids", "filters", "group_hosts", "host_ip", "host_state", "logging", "netaddr", "overlap", "policies", "run_filter_once_per_request", "self", "spec_obj", "str", "super", "utils", "Schedule", "the", "instance", "on", "a", "different", "host", "from", "a", "set", "of", "instances.\nSchedule", "the", "instance", "on", "a", "host", "with", "a", "particular", "cidr", "The", "hosts", "the", "instances", "are", "running", "on", "doesn't", "change", "within", "a", "request\n", "With", "no", "different_host", "key\n", "The", "hosts", "the", "instances", "are", "running", "on", "doesn't", "change", "within", "a", "request\n", "With", "no", "same_host", "key\n", "The", "address", "of", "a", "host", "doesn't", "change", "within", "a", "request\n", "We", "don't", "have", "an", "affinity", "host", "address.\n", "Only", "invoke", "the", "filter", "if", "'anti-affinity'", "is", "configured\n", "NOTE(hanrong):", "Move", "operations", "like", "resize", "can", "check", "the", "same", "source\n", "compute", "node", "where", "the", "instance", "is.", "That", "case,", "AntiAffinityFilter\n", "must", "not", "return", "the", "source", "as", "a", "non-possible", "destination.\n", "No", "groups", "configured\n", "Only", "invoke", "the", "filter", "if", "'affinity'", "is", "configured\n", "No", "groups", "configured"], "/Users/mehranhassani/repos/nova/nova/compute/monitors/__init__.py": ["CONF", "False", "LOG", "NAMESPACES", "True", "_LW", "__name__", "cfg", "cfg_monitors", "enabled", "ept", "ept_parts", "ext", "logging", "namespace", "namespace_parts", "nova", "ns", "object", "plugin_mgr", "resource_tracker", "self", "Ensures", "that", "only", "one", "monitor", "is", "specified", "of", "any", "type.", "Dictionary", "keyed", "by", "the", "monitor", "type", "namespace.", "Value", "is", "the\n", "first", "loaded", "monitor", "of", "that", "namespace", "or", "False.\n", "The", "extension", "does", "not", "have", "a", "namespace", "attribute,", "unfortunately,\n", "but", "we", "can", "get", "the", "namespace", "by", "examining", "the", "first", "part", "of", "the\n", "entry_point_target", "attribute,", "which", "looks", "like", "this:\n", "'nova.compute.monitors.cpu.virt_driver:Monitor'\n", "NOTE(jaypipes):", "We", "used", "to", "only", "have", "CPU", "monitors,", "so\n", "CONF.compute_monitors", "could", "contain", "\"virt_driver\"", "without", "any", "monitor\n", "type", "namespace.", "So,", "to", "maintain", "backwards-compatibility", "with", "that\n", "older", "way", "of", "specifying", "monitors,", "we", "first", "loop", "through", "any", "values", "in\n", "CONF.compute_monitors", "and", "put", "any", "non-namespace'd", "values", "into", "the\n", "'cpu'", "namespace.\n", "NOTE(jaypipes):", "Append", "'nova.compute.monitors.'", "to", "any", "monitor", "value\n", "that", "doesn't", "have", "it", "to", "allow", "CONF.compute_monitors", "to", "use", "shortened\n", "namespaces", "(like", "'cpu.'", "instead", "of", "'nova.compute.monitors.cpu.')"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute.py": ["AggregateIdMatcher", "AttributeError", "BaseTestCase", "CONF", "CheckConfigDriveTestCase", "CheckRequestedImageTestCase", "ComputeAPIAggrCallsSchedulerTestCase", "ComputeAPIAggrTestCase", "ComputeAPIIpFilterTestCase", "ComputeAPITestCase", "ComputeAggrTestCase", "ComputeInactiveImageTestCase", "ComputeInjectedFilesTestCase", "ComputeRescheduleResizeOrReraiseTestCase", "ComputeReschedulingTestCase", "ComputeTestCase", "ComputeVolumeTestCase", "DisabledInstanceTypesTestCase", "EvacuateHostTestCase", "Exception", "FAKE_IMAGE_REF", "FakeComputeTaskAPI", "False", "InnerTestingException", "KeyError", "LOG", "NODENAME", "NODENAME2", "None", "NotImplementedError", "QUOTAS", "RuntimeError", "TestException", "True", "ValueError", "_", "__name__", "_context", "_create_service_entries", "_do_test", "_fake_deallocate_network", "_fake_elevated", "_fake_populate", "_get_an_exception", "_get_instance_nw_info_raise", "_get_instance_nw_info_raise_cache", "_inst", "_instance", "_instance_save0", "_instance_save1", "_instance_update", "_mig_save", "_mock_cell_map_get", "_noop", "_self", "_service_is_up", "_spawn", "_test", "_test_rebuild", "a", "action", "actions", "actual_state", "additional_swap", "admin", "admin_context", "admin_deleted_context", "admin_password", "agg", "aggr", "aggr1", "aggr2", "aggr3", "aggr4", "aggr_name", "aggr_no_az", "aggregate", "aggregate_list", "all_mappings", "allocate_for_inst_mock", "args", "attach_block_devices", "attach_status", "attachment_id", "attempts", "attr", "attr_list", "avail_zone", "availability_zones", "az", "b", "base64", "base_options", "bdm", "bdm_args", "bdm_obj", "bdm_ref", "bdms", "blank_bdm", "blank_no_size", "blank_volume1", "blank_volume2", "block_device", "block_device_info", "block_device_mapping", "block_device_obj", "build_inst_abort", "build_inst_fail", "build_instance_func", "c", "cached_connection_info", "call_info", "called", "cases", "cell", "cell1", "cell2", "cells_enabled", "chain", "cinder", "clean_shutdown", "clear_events", "clear_events_for_instance", "cls", "cn", "columns_to_join", "compute", "compute_api", "compute_manager", "compute_node_id", "compute_rpcapi", "compute_utils", "conductor_instance_update", "config_drive", "connection_info", "connector", "console", "context", "convert_blanks", "convert_ephemerals", "convert_images", "convert_snapshots", "convert_swap", "convert_volumes", "create_func", "created_at", "ctxt", "ctype", "cur_time", "d", "datetime", "db", "db_api", "db_call_list", "db_inst", "db_instance", "decoded_files", "default_device_names", "default_root_device", "delete_aggregate", "delete_func", "deleted_at", "deleting_state_error", "dest", "dest_compute", "dest_host", "device", "device_name", "diagnostics", "dict", "did_it_add_fault", "diff", "disk_info", "display_name", "do_test", "driver_add_to_aggregate", "driver_block_device", "driver_remove_from_aggregate", "dummy", "e", "econtext", "enumerate", "ephemeral", "ephemeral0", "ephemeral1", "ephemeral_bdm", "ephemeral_size", "ephemerals", "error", "evacuated_instance", "event", "event_instance", "eventlet_utils", "ex", "exc", "exc_info", "exc_str", "exception", "exp", "exp_instance", "exp_kwargs", "expected", "expected_attrs", "expected_bdms", "expected_block_device_info", "expected_call_info", "expected_diagnostic", "expected_host_bdms", "expected_ids", "expected_image_name", "expected_len", "expected_message", "expected_migration_status", "expected_no_metadata", "expected_notifications", "expected_nw_info", "expected_payload_meta_data", "expected_pci_addr", "expected_pci_device", "expected_result", "expected_state", "expected_task", "expected_task_state", "expected_tasks", "extra", "extra_instance_updates", "f", "fail_get", "fail_reboot", "fail_running", "failer", "fake", "fake_add_aggregate_host", "fake_allocate_for_instance", "fake_attach", "fake_attach_block_devices", "fake_attach_volume", "fake_bdm", "fake_bdms", "fake_begin_detaching", "fake_block_dev_info", "fake_block_device", "fake_change_instance_metadata", "fake_check_attach", "fake_check_availability_zone", "fake_check_detach", "fake_compute_node_delete", "fake_compute_nodes", "fake_confirm_migration_driver", "fake_confirm_resize", "fake_connect_info", "fake_console_output", "fake_console_type", "fake_context", "fake_db_fault_create", "fake_delete", "fake_delete_instance", "fake_delete_tokens", "fake_destroy", "fake_detach", "fake_driver_add_to_aggregate", "fake_driver_get_console", "fake_driver_inject_network", "fake_driver_power_off", "fake_driver_power_on", "fake_driver_remove_from_aggregate", "fake_driver_reset_network", "fake_drop_move_claim", "fake_extract_flavor", "fake_finish_revert_migration_driver", "fake_get", "fake_get_compute_info", "fake_get_compute_nodes_in_db", "fake_get_flavor_by_flavor_id", "fake_get_instance_nw_info", "fake_get_nw_info", "fake_get_resource_tracker", "fake_get_volume_connector", "fake_get_volume_encryption_metadata", "fake_host", "fake_host1", "fake_host2", "fake_image", "fake_images", "fake_init_conn", "fake_init_conn_with_data", "fake_instance", "fake_instance_get_all_by_filters", "fake_instance_get_all_by_host", "fake_instance_get_by_uuid", "fake_is_neutron", "fake_legacy_bdms", "fake_libvirt_driver_detach_volume_fails", "fake_libvirt_driver_instance_exists", "fake_lookup", "fake_mig", "fake_migrate_instance_finish", "fake_migration_get_unconfirmed_by_dest_compute", "fake_migration_save", "fake_migration_update", "fake_network", "fake_network_cache_model", "fake_network_info", "fake_not_found", "fake_not_implemented", "fake_notifier", "fake_nw_model", "fake_partial_deletion", "fake_power_state1", "fake_power_state2", "fake_power_state3", "fake_reboot", "fake_rebuild_instance", "fake_remove_aggregate_host", "fake_rescue", "fake_reserve_volume", "fake_resource_tracker", "fake_result", "fake_roll_detaching", "fake_rpc_attach_volume", "fake_rpc_detach_volume", "fake_rpc_method", "fake_rpc_rebuild", "fake_rpc_reserve_block_device_name", "fake_rt", "fake_server_actions", "fake_service_is_up", "fake_setup_networks_on_host", "fake_show", "fake_shutdown_instance", "fake_snapshot", "fake_soft_delete", "fake_spawn", "fake_spec", "fake_tail_length", "fake_taskapi", "fake_terminate_connection", "fake_unrescue", "fake_update", "fake_uuids", "fake_v2_bdms", "fake_validate_networks", "fake_volume", "fake_volume_check_attach", "fake_volume_get", "fake_zone", "fake_zone2", "fakecleanup", "fault", "fetch_instance_migration_status", "filter", "filter_properties", "filters", "fixtures", "flavor", "flavor_dict", "flavor_id", "flavor_type", "flavors", "force", "func", "get", "get_all_by_host", "get_by_instance_uuid", "get_compute_info", "get_group_mock", "get_instance_volume_block_device_info", "get_swap", "get_volume_connector", "getattr", "glance", "got", "got_host_bdms", "group", "group_with_instances", "groups_for_instance", "hardware", "host", "host_aggregate", "host_numa_topology", "host_to_remove", "host_volume_bdms", "hostname", "hosts", "i", "i_ref", "id", "image", "image_api", "image_api_get", "image_bdms", "image_id", "image_meta", "image_no_size", "image_not_found", "image_props", "image_ref", "image_ref_url", "image_uuid", "img_bdm", "info", "info1", "info2", "injected_files", "inst", "inst1", "inst2", "inst_call_list", "inst_obj", "inst_obj2", "inst_ref", "inst_type", "inst_uuid", "instance", "instance1", "instance2", "instance3", "instance4", "instance_gb", "instance_get_all_by_filters", "instance_map", "instance_mb", "instance_not_found", "instance_obj", "instance_ref", "instance_type", "instance_type_params", "instance_type_ref", "instance_uuid", "instance_uuids", "instances", "insts", "int", "ip", "ipv4_ip", "ipv4_subnet", "ipv6_ip", "ipv6_subnet", "is_actual_state", "isinstance", "jsonutils", "k", "key", "kw", "kwargs", "launch", "legacy_bdms", "legacy_image_bdms", "len", "lifecycle_event", "limit", "limits", "list", "live_migrate_instance", "logging", "m", "m_get", "macs", "manager", "map", "mapping", "mappings", "mappings_", "matchers", "meh", "memory_mb_used", "message", "messaging", "meta_aggregate", "meta_changes", "metadata", "method", "method_args", "mid", "mig_save", "migrate_data", "migrate_data_obj", "migrate_instance_start", "migration", "migration2", "migration_context", "migration_obj", "migrations", "migs", "min", "mock", "mock_add_agg", "mock_allocate", "mock_attach", "mock_attach_and_reserve", "mock_auth", "mock_authorize_console", "mock_az", "mock_bdm_saves", "mock_bdms", "mock_blk_save", "mock_block_dev", "mock_buildreq_get", "mock_check", "mock_check_av_zone", "mock_check_availability_zone", "mock_check_begin_detach", "mock_check_clean", "mock_check_local", "mock_cleanup", "mock_clear", "mock_commit", "mock_complete", "mock_console", "mock_console_output", "mock_context", "mock_context_elevated", "mock_create", "mock_deallocate", "mock_def", "mock_default_dev", "mock_default_name", "mock_delete", "mock_delete_inst", "mock_delete_old", "mock_destroy", "mock_detach", "mock_detach_volume", "mock_detect", "mock_dict", "mock_drop", "mock_drv_detach", "mock_ensure", "mock_event", "mock_exists", "mock_get", "mock_get_all", "mock_get_all_images", "mock_get_bdms", "mock_get_blk", "mock_get_by_host", "mock_get_by_id", "mock_get_by_inst", "mock_get_by_inst_uuid", "mock_get_by_instance", "mock_get_by_instance_uuid", "mock_get_counter", "mock_get_dev_name", "mock_get_disk", "mock_get_drv", "mock_get_filter", "mock_get_host", "mock_get_inst", "mock_get_instance_vol_bdinfo", "mock_get_mks_console", "mock_get_nw", "mock_get_orig", "mock_get_power", "mock_get_power_off_values", "mock_get_serial_console", "mock_get_usage", "mock_get_uuid", "mock_get_vol", "mock_getmks", "mock_image_get", "mock_image_meta", "mock_inst", "mock_inst_save", "mock_instance_update", "mock_internal_detach", "mock_is_inst", "mock_is_older", "mock_last", "mock_lmcf", "mock_local_cleanup", "mock_log", "mock_mac", "mock_mig", "mock_mig_save", "mock_migrate", "mock_migration", "mock_net_mig", "mock_notify", "mock_notify_action", "mock_nw_api", "mock_pci_free_device", "mock_poll", "mock_post", "mock_power", "mock_pre", "mock_prep", "mock_prep_block_dev", "mock_quota", "mock_rdp", "mock_refresh", "mock_remove", "mock_remove_agg", "mock_res", "mock_rescue", "mock_reserve_bdm", "mock_reserve_vol", "mock_rollback", "mock_rotate", "mock_save", "mock_set", "mock_setup", "mock_setup_instance_network_on_host", "mock_setup_networks_on_host", "mock_shutdown", "mock_snap", "mock_snapshot_get", "mock_spawn", "mock_spice", "mock_stats", "mock_sync", "mock_terminate_connection", "mock_terminate_vol_conn", "mock_time", "mock_to_primitive", "mock_unfilter", "mock_unreserve", "mock_update", "mock_virt_mig", "mock_volume", "mock_volume_connector", "mode", "msg", "msg1", "n", "name", "network", "network_api", "network_id", "network_info", "network_model", "neutron_exceptions", "never_get", "new_connection_data", "new_flavor", "new_flavor_name", "new_image_ref", "new_image_ref_url", "new_inst_topology", "new_instance", "new_instance_type_ref", "new_iqn", "new_metadata", "new_pci_devices", "new_power_state", "new_type", "new_type_id", "newdict", "node", "nodename", "noop1", "noop2", "noop3", "not_timed_out_time", "not_volume_bdm", "notify_call_list", "nova", "now", "num_instances", "numa_constraints_mock", "numa_topology", "nw_info", "nwinfo", "obj", "obj_fields", "object", "object_save", "objects", "old_flavor", "old_flavor_name", "old_inst_topology", "old_instance_type", "old_instances", "old_pci_devices", "old_time", "old_type", "old_vm_state", "on_shared_storage", "operation", "operator", "orig_connection_data", "orig_elevated", "orig_get_flavor_by_flavor_id", "orig_image_ref", "orig_inst_save", "orig_mig_save", "orig_notify", "orig_populate", "orig_sys_metadata", "orig_update", "other_aggr", "output", "oversub_limit_gb", "oversub_limit_mb", "p_state", "params", "password", "patch_claim", "patch_get_info", "patch_on_disk", "patch_rebuild", "patch_spawn", "payload", "port_id", "pos_arg_1", "pos_arg_2", "post_live_migration", "post_live_migration_at_destination", "post_live_migration_at_source", "power_on", "power_state", "pre_build_len", "pre_task_state", "prefix", "preped_bdm", "prepped_bdm", "ps_call_list", "quota", "raise_during_cleanup", "raise_migration_failure", "raised_exc", "range", "read_deleted", "reboot_call_info", "reboot_timeout", "reboot_type", "rebuild_instance", "record_action_start", "ref", "refs", "remove_old_vm_state", "req_dest", "req_ip", "request_spec", "requested_networks", "res", "res_id", "rescue_image_meta", "rescue_password", "reservations", "resize_confirm_window", "resize_instance", "resources", "result", "resv_id", "resvs", "ret", "retry", "root_bdm", "root_volume", "rpcapi", "rt", "scheduler_client", "scheduler_hint", "scheduler_method", "security_group_name", "security_groups", "self", "self2", "self_", "send_node", "service_is_up", "services", "session", "set", "setup_networks_on_host", "shelved_time", "shutdown_attempts", "shutdown_timeout", "six", "slow_get", "snapshot_id", "soft", "sort_dir", "sort_key", "source_compute", "srchost", "state", "state_dict", "states", "staticmethod", "status", "status_values", "store_cinfo", "str", "stupid", "super", "swap", "swap_bdm", "swap_size", "sys", "sys_meta", "sys_metadata", "system_meta", "task_pending", "task_started", "task_states", "terminate", "terminate_connection", "test", "test_agg_meta", "test_delete", "test_flavor", "test_fn", "test_instance_numa_topology", "test_migration", "test_unrescue", "test_utils", "testtools", "testtools_matchers", "throw_up", "time", "time_fixture", "timed_out_time", "timeutils", "to_poll", "total_disk_gb", "total_mem_mb", "traceback", "transformed_bdm", "tuple", "type", "type_id", "type_name", "unfilter_instance", "units", "unrescue", "unrescued_instances", "update_aggregates", "update_available_resource", "updated_at", "updated_at_1", "updated_at_2", "updated_at_3", "updated_ats", "updated_dbinstance1", "updated_dbinstance2", "updated_instance", "updated_topology", "updates", "use_slave", "user_exc", "utils", "utils_fixture", "uuid", "uuids", "uuidutils", "v", "val", "validate_nets_patch", "value", "values", "vif", "vm_power_state", "vm_state", "vm_states", "vol_bdm", "vol_id", "volume", "volume_api_get", "volume_backed_inst_1", "volume_backed_inst_2", "volume_bdm", "volume_driver_bdm", "volume_get", "volume_id", "volume_id_param", "volume_size", "volume_usage", "volume_usages", "volume_uuid", "warn_mock", "x", "y", "zip", "zone", "Tests", "for", "compute", "service.\nCreate", "a", "test", "instance", "type.\nAssert", "state", "of", "VM", "is", "equal", "to", "state", "passed", "as", "parameter.\nTest", "that", "the", "power", "state", "is", "NOSTATE", "after", "deleting", "an", "instance.\nMock", "up", "commit/rollback", "of", "quota", "reservations.\nContrived", "test", "to", "ensure", "finish_resize", "doesn't", "raise", "anything.\nTests", "re-scheduling", "logic", "for", "new", "build", "requests.\nConfirm", "evacuate", "scenario", "updates", "host", "and", "node.\nConfirm", "evacuate", "scenario", "where", "compute_node", "isn't", "found.\nConfirm", "evacuate", "scenario", "does", "not", "update", "host.\nConfirm", "evacuate", "scenario", "on", "shared", "storage.\nRebuild", "if", "instance", "exists", "raises", "an", "exception.", "NOTE(danms):", "DB", "models", "and", "Instance", "objects", "have", "different\n", "timezone", "expectations\n", "NOTE(danms):", "DB", "models", "don't", "have", "'fault'\n", "NOTE(yonlig.he)", "pci", "devices", "need", "lazy", "loading\n", "fake", "db", "does", "not", "support", "it", "yet.\n", "execute", "power", "syncing", "synchronously", "for", "testing:\n", "override", "tracker", "with", "a", "version", "that", "doesn't", "need", "the", "database:\n", "Just", "to", "make", "long", "lines", "short\n", "Test", "it", "with", "new-style", "BDMs\n", "Following", "methods", "will", "be", "called\n", "Note", "-", "time", "called", "two", "more", "times", "from", "Log\n", "A", "second", "call", "won't", "call", "the", "stubs", "again", "as", "the", "bandwidth\n", "poll", "is", "now", "disabled\n", "None", "of", "the", "mocks", "should", "be", "called.\n", "Following", "methods", "are", "called.\n", "All", "the", "mocks", "are", "called\n", "Test", "that", "detach", "volume", "update", "the", "volume", "usage", "cache", "table", "correctly\n", "Poll", "volume", "usage", "&", "then", "detach", "the", "volume.", "This", "will", "update", "the\n", "total", "fields", "in", "the", "volume", "usage", "cache.\n", "Check", "that", "a", "volume.usage", "and", "volume.attach", "notification", "was", "sent\n", "Check", "that", "volume.attach,", "2", "volume.usage,", "and", "volume.detach\n", "notifications", "were", "sent\n", "Check", "the", "database", "for", "the\n", "Make", "sure", "it", "passes", "at", "first\n", "Boot", "sequence\n", "number", "of", "local", "block_devices\n", "More", "ephemerals", "are", "OK", "as", "long", "as", "they", "are", "not", "over", "the", "size", "limit\n", "Ephemerals", "over", "the", "size", "limit\n", "Swap", "over", "the", "size", "limit\n", "More", "than", "one", "swap\n", "blank", "device", "without", "a", "specified", "size", "fails\n", "We", "test", "a", "list", "of", "invalid", "status", "values", "that", "should", "result\n", "in", "an", "InvalidVolume", "exception", "being", "raised.\n", "First", "two", "check", "that", "the", "status", "is", "'available'.\n", "Checks", "that", "the", "attach_status", "is", "'detached'.\n", "Tests", "that", "we", "don't", "try", "to", "set", "metadata/system_metadata", "on", "the\n", "instance", "object", "using", "fields", "that", "aren't", "in", "the", "db", "object.\n", "Make", "sure", "create", "associates", "a", "config", "drive.\n", "Make", "sure", "create", "associates", "a", "config", "drive.\n", "Default", "of", "memory", "limit=None", "is", "unlimited.\n", "Test", "passing", "of", "oversubscribed", "ram", "policy", "from", "the", "scheduler.\n", "get", "total", "memory", "as", "reported", "by", "virt", "driver:\n", "build", "an", "instance,", "specifying", "an", "amount", "of", "memory", "that", "exceeds\n", "total_mem_mb,", "but", "is", "less", "than", "the", "oversubscribed", "limit:\n", "get", "total", "memory", "as", "reported", "by", "virt", "driver:\n", "build", "an", "instance,", "specifying", "an", "amount", "of", "memory", "that", "exceeds\n", "both", "total_mem_mb", "and", "the", "oversubscribed", "limit:\n", "Test", "passing", "of", "oversubscribed", "cpu", "policy", "from", "the", "scheduler.\n", "get", "total", "memory", "as", "reported", "by", "virt", "driver:\n", "build", "an", "instance,", "specifying", "an", "amount", "of", "memory", "that", "exceeds\n", "total_mem_mb,", "but", "is", "less", "than", "the", "oversubscribed", "limit:\n", "create", "one", "more", "instance:\n", "delete", "the", "instance:\n", "now", "oversubscribe", "vcpus", "and", "fail:\n", "Test", "passing", "of", "oversubscribed", "disk", "policy", "from", "the", "scheduler.\n", "get", "total", "memory", "as", "reported", "by", "virt", "driver:\n", "build", "an", "instance,", "specifying", "an", "amount", "of", "disk", "that", "exceeds\n", "total_disk_gb,", "but", "is", "less", "than", "the", "oversubscribed", "limit:\n", "get", "total", "memory", "as", "reported", "by", "virt", "driver:\n", "build", "an", "instance,", "specifying", "an", "amount", "of", "disk", "that", "exceeds\n", "total_disk_gb,", "but", "is", "less", "than", "the", "oversubscribed", "limit:\n", "Create", "instance", "with", "no", "image", "provided.\n", "Make", "this", "work", "for", "both", "neutron", "and", "nova-network", "by", "stubbing", "out\n", "allocate_for_instance", "to", "return", "a", "fake", "network_info", "list", "of", "VIFs.\n", "mock", "out", "deallocate_for_instance", "since", "we", "don't", "need", "it", "now\n", "Make", "sure", "the", "access_ip_*", "updates", "happen", "in", "the", "same", "DB\n", "update", "as", "the", "set", "to", "ACTIVE.\n", "check", "the", "persistence", "of", "the", "ERROR(scheduling)", "state.\n", "check", "state", "is", "failed", "even", "after", "the", "periodic", "poll\n", "check", "state", "is", "failed", "even", "after", "the", "periodic", "poll\n", "check", "state", "is", "failed", "even", "after", "the", "periodic", "poll\n", "check", "state", "is", "failed", "even", "after", "the", "periodic", "poll\n", "Make", "sure", "that", "run_instance()", "will", "quickly", "ignore", "a", "deleted", "instance\n", "Make", "sure", "that", "run_instance()", "will", "quickly", "ignore", "a", "deleting", "instance\n", "Make", "sure", "that", "the", "instance", "can", "be", "terminated", "in", "ERROR", "state.\n", "check", "failed", "to", "schedule", "-->", "terminate\n", "Double", "check", "it's", "not", "there", "for", "admins,", "either.\n", "Make", "sure", "it", "is", "possible", "to", "run", "and", "terminate", "instance.\n", "This", "is", "as", "reported", "in", "LP", "bug", "1008875\n", "Make", "sure", "timestamps", "are", "set", "for", "launched", "and", "destroyed.\n", "Ensure", "instance", "can", "be", "stopped.\n", "Ensure", "instance", "can", "be", "started.\n", "Ensure", "shelved", "instance", "can", "be", "started.\n", "Adding", "shelved", "information", "to", "instance", "system", "metadata.\n", "Ensure", "instance", "can", "be", "rescued", "and", "unrescued.\n", "Ensure", "notifications", "on", "instance", "rescue.\n", "Ensure", "notifications", "on", "instance", "rescue.\n", "If", "the", "driver", "fails", "to", "rescue,", "instance", "state", "should", "got", "to", "ERROR\n", "and", "the", "exception", "should", "be", "converted", "to", "InstanceNotRescuable\n", "Ensure", "instance", "can", "be", "powered", "on.\n", "Ensure", "instance", "can", "be", "powered", "off.\n", "Ensure", "instance", "can", "be", "paused", "and", "unpaused.\n", "ensure", "instance", "can", "be", "suspended", "and", "resumed.\n", "Ensure", "vm_state", "is", "ERROR", "when", "suspend", "error", "occurs.\n", "Ensure", "expected", "exception", "is", "raised", "and", "the", "vm_state", "of", "instance\n", "restore", "to", "original", "value", "if", "suspend", "is", "not", "implemented", "by", "driver\n", "ensure", "rescued", "instance", "can", "be", "suspended", "and", "resumed.\n", "ensure", "instance", "can", "be", "suspended", "and", "resumed.\n", "ensure", "a", "suspended", "instance", "with", "no", "old_vm_state", "is", "resumed", "to", "the\n", "ACTIVE", "state\n", "Ensure", "vm_state", "is", "ERROR", "when", "resume", "error", "occurs.\n", "Ensure", "instance", "can", "be", "rebuilt.\n", "Make", "sure", "virt", "drivers", "can", "override", "default", "rebuild\n", "Make", "sure", "virt", "drivers", "can", "override", "default", "rebuild\n", "Have", "the", "fake", "driver", "call", "the", "function", "to", "detach", "block", "devices\n", "Verify", "volumes", "to", "be", "detached", "without", "destroying\n", "Ensure", "instance", "can", "be", "rebuilt", "when", "started", "with", "no", "image.\n", "Ensure", "instance", "can", "be", "rebuilt.\n", "Ensure", "instance", "can", "be", "rebuilt", "with", "injected", "files.\n", "This", "is", "a", "true", "unit", "test,", "so", "we", "don't", "need", "the", "network", "stubs.\n", "FIXME(comstud):", "I", "don't", "feel", "like", "the", "context", "needs", "to\n", "be", "elevated", "at", "all.", "Hopefully", "remove", "elevated", "from\n", "reboot_instance", "and", "remove", "the", "mock", "here", "in", "a", "future", "patch.\n", "econtext", "would", "just", "become", "self.context", "below", "then.\n", "Beginning", "of", "calls", "we", "expect.\n", "Annoying.", "driver.reboot", "is", "wrapped", "in", "a", "try/except,", "and\n", "doesn't", "re-raise.", "It", "eats", "exception", "generated", "by", "mock", "if\n", "this", "is", "called", "with", "the", "wrong", "args,", "so", "we", "have", "to", "hack\n", "around", "it.\n", "NOTE(sirp):", "Since", "`bad_volumes_callback`", "is", "a", "function", "defined\n", "within", "`reboot_instance`,", "we", "don't", "have", "access", "to", "its", "value", "and\n", "can't", "stub", "it", "out,", "thus", "we", "skip", "that", "comparison.\n", "Power", "state", "should", "be", "updated", "again\n", "Ensure", "we", "can", "inject", "network", "info.\n", "Ensure", "we", "can", "reset", "networking", "on", "an", "instance.\n", "Ensure", "instance", "can", "be", "snapshotted.\n", "Make", "sure", "we", "can", "get", "console", "output", "from", "instance.\n", "Make", "sure", "we", "can", "get", "console", "output", "from", "instance.\n", "Make", "sure", "we", "can", "get", "console", "output", "from", "instance.\n", "Make", "sure", "we", "can", "a", "vnc", "console", "for", "an", "instance.\n", "Try", "with", "the", "full", "instance\n", "Make", "sure", "we", "can", "a", "vnc", "console", "for", "an", "instance.\n", "Raise", "useful", "error", "if", "console", "type", "is", "an", "unrecognised", "string.\n", "Raise", "useful", "error", "is", "console", "type", "is", "None.\n", "Make", "sure", "we", "can", "a", "spice", "console", "for", "an", "instance.\n", "Try", "with", "the", "full", "instance\n", "Raise", "useful", "error", "if", "console", "type", "is", "an", "unrecognised", "string\n", "Raise", "useful", "error", "is", "console", "type", "is", "None\n", "Make", "sure", "we", "can", "a", "rdp", "console", "for", "an", "instance.\n", "Try", "with", "the", "full", "instance\n", "Raise", "useful", "error", "if", "console", "type", "is", "an", "unrecognised", "string\n", "Raise", "useful", "error", "is", "console", "type", "is", "None\n", "Make", "sure", "we", "can", "get", "diagnostics", "for", "an", "instance.\n", "Make", "sure", "we", "can", "get", "diagnostics", "for", "an", "instance.\n", "Ensure", "run", "instance", "generates", "appropriate", "usage", "notification.\n", "The", "last", "event", "is", "the", "one", "with", "the", "sugar", "in", "it.\n", "Volume's", "image", "metadata", "won't", "contain", "the", "image", "name\n", "Test", "that", "an", "error", "notif", "is", "sent", "if", "the", "build", "is", "aborted\n", "Test", "that", "error", "notif", "is", "sent", "if", "the", "build", "got", "rescheduled\n", "Test", "that", "error", "notif", "is", "sent", "if", "build", "fails", "hard\n", "Ensure", "terminate_instance", "generates", "correct", "usage", "notification.\n", "run_instance", "should", "ask", "the", "driver", "for", "node", "mac", "addresses", "and", "pass\n", "that", "to", "the", "network_api", "in", "use.\n", "Test", "that", "instance", "is", "set", "to", "error", "state", "when", "exception", "is", "raised.\n", "When", "a", "spawn", "fails", "the", "network", "must", "be", "deallocated.\n", "The", "API", "would", "have", "set", "task_state,", "so", "do", "that", "here", "to", "test\n", "that", "the", "state", "gets", "reverted", "on", "failure\n", "self.context.elevated()", "is", "called", "in", "tearDown()\n", "Fetch", "the", "instance's", "task_state", "and", "make", "sure", "it", "reverted", "to", "None.\n", "ensure", "that", "task_state", "is", "reverted", "after", "a", "failed", "operation.\n", "Termination", "should", "be", "successful,", "but", "quota", "reservations\n", "rolled", "back", "because", "the", "instance", "was", "in", "SOFT_DELETED", "state.\n", "Contrived", "test", "to", "ensure", "finish_resize", "doesn't", "raise", "anything", "and\n", "also", "tests", "resize", "from", "ACTIVE", "or", "STOPPED", "state", "which", "determines\n", "if", "the", "resized", "instance", "is", "powered", "on", "or", "not.\n", "NOTE(mriedem):", "make", "sure", "prep_resize", "set", "old_vm_state", "correctly\n", "First", "save", "to", "update", "old/current", "flavor", "and", "task", "state\n", "Ensure", "instance", "status", "updates", "is", "after", "the", "migration", "finish\n", "nova.conf", "sets", "the", "default", "flavor", "to", "m1.small", "and", "the", "test\n", "sets", "the", "default", "flavor", "to", "m1.tiny", "so", "they", "should", "be", "different\n", "which", "makes", "this", "a", "resize\n", "create", "instance\n", "create", "volume\n", "stub", "out", "volume", "attach\n", "stub", "out", "virt", "driver", "attach\n", "attach", "volume", "to", "instance\n", "assert", "volume", "attached", "correctly\n", "begin", "resize\n", "fake", "out", "detach", "for", "prep_resize", "(and", "later", "terminate)\n", "assert", "bdm", "is", "unchanged\n", "but", "connection", "was", "terminated\n", "stub", "out", "virt", "driver", "finish_migration\n", "new", "initialize", "connection\n", "assert", "volume", "attached", "correctly\n", "stub", "out", "detach\n", "clean", "up\n", "Make", "sure", "we", "don't", "leave", "the", "instance", "in", "RESIZE", "on", "error.\n", "Ensure", "notifications", "on", "instance", "migrate/resize.\n", "Ensure", "notifications", "on", "instance", "migrate/resize.\n", "Ensure", "notifications", "on", "instance", "migrate/resize.\n", "Ensure", "instance", "status", "set", "to", "Error", "on", "resize", "error.\n", "verify\n", "NOTE(comstud):", "error", "path", "doesn't", "use", "objects,", "so", "our", "object\n", "is", "not", "updated.", "Refresh", "and", "compare", "against", "the", "DB.\n", "Ensure", "instance", "status", "set", "to", "Running", "after", "rollback.\n", "NOTE(comstud):", "error", "path", "doesn't", "use", "objects,", "so", "our", "object\n", "is", "not", "updated.", "Refresh", "and", "compare", "against", "the", "DB.\n", "Ensure", "instance", "can", "be", "migrated/resized.\n", "verify", "'old_vm_state'", "was", "set", "on", "system_metadata\n", "Common", "test", "case", "method", "for", "confirm_resize\n", "Confirm", "the", "instance", "uses", "the", "new", "type", "in", "finish_resize\n", "Get", "initial", "memory", "usage\n", "Confirm", "the", "instance", "size", "before", "the", "resize", "starts\n", "Memory", "usage", "should", "have", "increased", "by", "the", "claim\n", "Memory", "usage", "should", "increase", "after", "the", "resize", "as", "well\n", "NOTE(mriedem):", "ensure", "prep_resize", "set", "old_vm_state", "in", "system_metadata\n", "Memory", "usage", "shouldn't", "had", "changed\n", "Prove", "that", "the", "instance", "size", "is", "now", "the", "new", "size\n", "Prove", "that", "the", "NUMA", "topology", "has", "also", "been", "updated", "to", "that", "of", "the", "new\n", "flavor", "-", "meaning", "None\n", "Finally,", "confirm", "the", "resize", "and", "verify", "the", "new", "flavor", "is", "applied\n", "Resources", "from", "the", "migration", "(based", "on", "initial", "flavor)", "should\n", "be", "freed", "now\n", "we", "have", "two", "hosts", "with", "the", "same", "NUMA", "topologies.\n", "now", "instance", "use", "two", "cpus", "from", "node_0", "(cpu1", "and", "cpu2)", "on", "current", "host\n", "instance", "will", "use", "two", "cpus", "from", "node_1", "(cpu3", "and", "cpu4)\n", "on", "*some", "other", "host*\n", "instance", "placed", "in", "node_0", "on", "current", "host.", "cpu1", "and", "cpu2", "from", "node_0\n", "are", "used\n", "as", "instance", "placed", "in", "node_0", "all", "cpus", "from", "node_1", "(cpu3", "and", "cpu4)\n", "are", "free", "(on", "current", "host)\n", "after", "confirming", "resize", "all", "cpus", "on", "currect", "host", "must", "be", "free\n", "Confirm", "the", "instance", "uses", "the", "old", "type", "in", "finish_revert_resize\n", "Get", "initial", "memory", "usage\n", "Memory", "usage", "should", "have", "increased", "by", "the", "claim\n", "Memory", "usage", "should", "increase", "after", "the", "resize", "as", "well\n", "NOTE(mriedem):", "ensure", "prep_resize", "set", "old_vm_state", "in", "system_metadata\n", "Memory", "usage", "shouldn't", "had", "changed\n", "Prove", "that", "the", "instance", "size", "is", "now", "the", "new", "size\n", "Prove", "that", "the", "NUMA", "topology", "has", "also", "been", "updated", "to", "that", "of", "the", "new\n", "flavor", "-", "meaning", "None\n", "Resources", "from", "the", "migration", "(based", "on", "initial", "flavor)", "should\n", "be", "freed", "now\n", "need", "to", "wipe", "out", "the", "old_vm_state", "from", "system_metadata\n", "before", "calling", "finish_revert_resize\n", "Have", "to", "reset", "for", "save()", "to", "work\n", "in", "this", "case", "we", "resize", "from", "STOPPED", "but", "end", "up", "with", "ACTIVE\n", "because", "the", "old_vm_state", "value", "is", "not", "present", "in\n", "finish_revert_resize\n", "NOTE(lbeliveau):", "Move", "unit", "test", "changes", "from", "b816e3", "to", "a", "separate\n", "test.", "It", "introduced", "a", "hacky", "way", "to", "force", "the", "migration", "dest_compute\n", "and", "makes", "it", "hard", "to", "keep", "_test_finish_revert_resize()", "generic\n", "and", "have", "the", "resources", "correctly", "tracked.\n", "NOTE(hanrong):", "Prove", "that", "we", "pass", "the", "right", "value", "to", "the\n", "\"self.network_api.migrate_instance_finish\".\n", "Ensure", "vm_state", "is", "ERROR", "when", "error", "occurs.\n", "NOTE(comstud):", "error", "path", "doesn't", "use", "objects,", "so", "our", "object\n", "is", "not", "updated.", "Refresh", "and", "compare", "against", "the", "DB.\n", "Confirm", "that", "no", "exception", "is", "raised", "if", "there", "is", "no", "fixed", "ip", "on\n", "pre_live_migration\n", "Confirm", "setup_compute_volume", "is", "called", "when", "volume", "is", "mounted.\n", "creating", "instance", "testdata\n", "cleanup\n", "Confirm", "exception", "when", "pre_live_migration", "fails.\n", "start", "test\n", "Confirm", "live_migration()", "works", "as", "expected", "correctly.\n", "creating", "instance", "testdata\n", "start", "test\n", "cleanup\n", "Create", "stubs\n", "No", "share", "storage", "live", "migration", "don't", "need", "to", "destroy", "at", "source\n", "server", "because", "instance", "has", "been", "migrated", "to", "destination,", "but", "a\n", "cleanup", "for", "block", "device", "and", "network", "are", "needed.\n", "creating", "testdata\n", "Confirm", "post_live_migration()", "works", "as", "expected", "correctly.\n", "creating", "testdata\n", "creating", "mocks\n", "creating", "testdata\n", "creating", "mocks\n", "creating", "instance", "testdata\n", "start", "test\n", "Detect", "when", "a", "vm", "is", "terminated", "behind", "the", "scenes.\n", "Force", "the", "compute", "manager", "to", "do", "its", "periodic", "poll\n", "Simulate", "an", "error", "and", "make", "sure", "cleanup", "proceeds", "with", "next", "instance.\n", "Update", "on", "every", "call", "for", "the", "test\n", "These", "won't", "be", "in", "our", "instance", "since", "they're", "not", "requested\n", "NOTE(comstud):", "Override", "the", "stub", "in", "setUp()\n", "Note", "that", "this", "exception", "gets", "caught", "in", "compute/manager\n", "and", "is", "ignored.", "However,", "the", "below", "increment", "of\n", "'get_nw_info'", "won't", "happen,", "and", "you'll", "get", "an", "assert\n", "failure", "checking", "it", "below.\n", "Make", "an", "instance", "appear", "to", "be", "still", "Building\n", "Make", "an", "instance", "appear", "to", "be", "Deleting\n", "'0',", "'1'", "should", "be", "skipped..\n", "Make", "an", "instance", "switch", "hosts\n", "Make", "an", "instance", "disappear\n", "Make", "an", "instance", "switch", "to", "be", "Deleting\n", "'4',", "'5',", "and", "'6'", "should", "be", "skipped..\n", "Should", "be", "no", "more", "left.\n", "This", "should", "cause", "a", "DB", "query", "now,", "so", "get", "a", "list", "of", "instances\n", "where", "none", "can", "be", "processed", "to", "make", "sure", "we", "handle", "that", "case\n", "cleanly.", "Use", "just", "'0'", "(Building)", "and", "'1'", "(Deleting)\n", "Should", "have", "called", "the", "list", "once", "more\n", "Stays", "the", "same", "because", "we", "remove", "invalid", "entries", "from", "the", "list\n", "Stays", "the", "same", "because", "we", "didn't", "find", "anything", "to", "process\n", "The", "expceted", "migration", "result", "will", "be", "None", "instead", "of", "error\n", "since", "_poll_unconfirmed_resizes", "will", "not", "change", "it\n", "when", "the", "instance", "vm", "state", "is", "RESIZED", "and", "task", "state\n", "is", "deleting,", "see", "bug", "1301696", "for", "more", "detail\n", "raise", "InstanceNotFound", "exception", "for", "non-existing", "instance\n", "represented", "by", "UUID:", "uuids.migration_instance_none\n", "raise", "exception", "for", "uuids.migration_instance_4", "to", "check\n", "migration", "status", "does", "not", "get", "set", "to", "'error'", "on", "confirm_resize\n", "failure.\n", "Tests", "that", "instances", "which", "failed", "to", "build", "within", "the", "configured\n", "instance_build_timeout", "value", "are", "set", "to", "error", "state.\n", "these", "are", "the", "ones", "that", "are", "expired\n", "not", "expired\n", "copy", "the", "contents", "of", "old_instances\n", "creating", "mocks\n", "run", "the", "code\n", "check", "our", "assertions\n", "make", "sure", "rt", "usage", "doesn't", "happen", "if", "the", "host", "or", "node", "is", "different\n", "instances", "in", "central", "db\n", "those", "are", "still", "related", "to", "this", "host\n", "those", "are", "already", "been", "evacuated", "to", "other", "host\n", "instances", "in", "central", "db\n", "those", "are", "still", "related", "to", "this", "host\n", "those", "are", "already", "been", "evacuated", "to", "other", "host\n", "instances", "in", "central", "db\n", "those", "are", "still", "related", "to", "this", "host\n", "those", "are", "already", "been", "evacuated", "to", "other", "host\n", "NOTE(cdent):", "At", "least", "in", "this", "test", "destroy()", "on", "the", "instance", "sets", "it\n", "state", "back", "to", "active,", "meaning", "the", "resource", "tracker", "won't\n", "update", "properly.\n", "Active\n", "Deleted", "not", "old", "enough\n", "Deleted", "old", "enough", "(only", "this", "one", "should", "be", "reclaimed)\n", "Restoring\n", "NOTE(hanlind):", "This", "specifically", "tests", "for", "a", "race", "condition\n", "where", "restoring", "a", "previously", "soft", "deleted", "instance", "sets\n", "deleted_at", "back", "to", "None,", "causing", "reclaim", "to", "think", "it", "can", "be\n", "deleted,", "see", "LP", "#1186243.\n", "Verify", "that", "reclaim", "continues", "on", "error.\n", "No", "error", "raised", "for", "non-existent", "instance", "because", "of", "inherent", "race\n", "between", "database", "updates", "and", "hypervisor", "events.", "See", "bug", "#1180501.\n", "ensure", "instance", "can", "be", "quiesced", "and", "unquiesced\n", "unquiesce", "should", "wait", "until", "volume", "snapshots", "are", "completed\n", "NOTE(mriedem):", "Everything", "in", "here", "related", "to", "the", "security", "group", "API\n", "is", "written", "for", "nova-network", "and", "using", "the", "database.", "Neutron-specific\n", "security", "group", "API", "tests", "are", "covered", "in\n", "nova.tests.unit.network.security_group.test_neutron_driver.\n", "Mock", "out", "build_instances", "and", "rebuild_instance", "since", "nothing", "in", "these\n", "tests", "should", "need", "those", "to", "actually", "run.", "We", "do", "this", "to", "avoid\n", "possible", "races", "with", "other", "tests", "that", "actually", "test", "those", "methods\n", "and", "mock", "things", "out", "within", "them,", "like", "conductor", "tests.\n", "Assume", "that", "we're", "always", "OK", "for", "network", "quota.\n", "Test", "an", "instance", "type", "with", "too", "little", "memory.\n", "Now", "increase", "the", "inst_type", "memory", "and", "make", "sure", "all", "is", "fine.\n", "Test", "an", "instance", "type", "with", "too", "little", "disk", "space.\n", "Now", "increase", "the", "inst_type", "disk", "space", "and", "make", "sure", "all", "is", "fine.\n", "Test", "an", "instance", "type", "with", "too", "little", "disk", "space.\n", "Reduce", "image", "to", "1", "GB", "limit", "and", "ensure", "it", "works\n", "Test", "an", "instance", "type", "with", "just", "enough", "ram", "and", "disk", "space.\n", "Test", "an", "instance", "type", "with", "no", "min_ram", "or", "min_disk.\n", "If", "we're", "given", "a", "deleted", "image", "by", "glance,", "we", "should", "not", "be", "able", "to\n", "build", "from", "it\n", "Verify", "that", "an", "instance", "cannot", "be", "created", "without", "a", "display_name.\n", "Make", "sure", "image", "properties", "are", "copied", "into", "system", "metadata.\n", "Make", "sure", "create", "associates", "security", "groups.\n", "For", "Neutron", "we", "don't", "store", "the", "security", "groups", "in", "the", "nova", "database.\n", "Test", "an", "instance", "type", "with", "too", "much", "user", "data.\n", "Test", "an", "instance", "type", "with", "malformed", "user", "data.\n", "Test", "an", "instance", "type", "with", "ok", "much", "user", "data.\n", "NOTE(mikal):", "a", "string", "of", "length", "48510", "encodes", "to", "65532", "characters", "of\n", "base64\n", "Set", "some", "image", "metadata", "that", "should", "get", "wiped", "out", "and", "reset\n", "as", "well", "as", "some", "other", "metadata", "that", "should", "be", "preserved.\n", "Make", "sure", "Compute", "API", "updates", "the", "image_ref", "before", "casting", "to\n", "compute", "manager.\n", "If", "we're", "given", "a", "deleted", "image", "by", "glance,", "we", "should", "not", "be", "able", "to\n", "rebuild", "from", "it\n", "Reduce", "image", "memory", "requirements", "and", "make", "sure", "it", "works\n", "Reduce", "image", "disk", "requirements", "and", "make", "sure", "it", "works\n", "Reduce", "image", "to", "1", "GB", "limit", "and", "ensure", "it", "works\n", "Ensure", "instance", "hostname", "is", "set", "during", "creation.\n", "Instance", "started", "without", "an", "image\n", "Instance", "started", "with", "a", "placeholder", "image", "(for", "metadata)\n", "Test", "get", "instance.\n", "Test", "get", "instance.\n", "Test", "searching", "instances", "by", "name", "(display_name).\n", "Test", "searching", "by", "multiple", "options", "at", "once.\n", "instance2\n", "ip", "ends", "up", "matching", "2nd", "octet", "here..", "so", "all", "3", "match", "ip\n", "but", "'name'", "only", "matches", "one\n", "ip", "ends", "up", "matching", "any", "ip", "with", "a", "'1'", "in", "the", "last", "octet..\n", "so", "instance", "1", "and", "3..", "but", "name", "should", "only", "match", "#1\n", "but", "'name'", "only", "matches", "one\n", "same", "as", "above", "but", "no", "match", "on", "name", "(name", "matches", "instance1\n", "but", "the", "ip", "query", "doesn't\n", "ip", "matches", "all", "3...", "ipv6", "matches", "#2+#3...name", "matches", "#3\n", "Test", "searching", "instances", "by", "image.\n", "Test", "passing", "a", "list", "as", "search", "arg\n", "Test", "searching", "instances", "by", "image.\n", "ensure", "unknown", "filter", "maps", "to", "an", "exception\n", "Test", "searching", "instances", "by", "state.\n", "Test", "passing", "a", "list", "as", "search", "arg\n", "Test", "searching", "instances", "by", "metadata.\n", "instance0\n", "instance1\n", "get", "all", "instances\n", "wrong", "key/value", "combination\n", "non-existing", "keys\n", "find", "existing", "instance\n", "multiple", "criteria", "as", "a", "dict\n", "multiple", "criteria", "as", "a", "list\n", "Test", "searching", "instances", "by", "system", "metadata.\n", "find", "existing", "instance\n", "We", "get", "an", "image", "BDM\n", "No", "image", "BDM", "created", "if", "image", "already", "defines", "a", "root", "BDM\n", "No", "image", "BDM", "created\n", "Volumes", "with", "multiple", "instances", "fails\n", "Volume", "backed", "so", "no", "image_ref", "in", "base_options\n", "v2", "bdms", "contains", "a", "root", "image", "to", "volume", "mapping\n", "image_meta", "contains", "a", "snapshot", "as", "the", "image\n", "is", "created", "by", "nova", "image-create", "from", "a", "volume", "backed", "server\n", "see", "bug", "1381598\n", "Image", "BDM", "overrides", "mappings\n", "Test", "the", "instance", "architecture.\n", "Test", "if", "the", "architecture", "is", "unknown.\n", "Test", "the", "instance_name", "template.\n", "not", "allowed..", "default", "is", "uuid\n", "Ensure", "volume", "can", "be", "detached", "from", "instance\n", "Make", "sure", "a", "VM", "cannot", "be", "rescued", "while", "volume", "is", "being", "attached\n", "Make", "sure", "we", "can", "a", "vnc", "console", "for", "an", "instance.\n", "Make", "sure", "we", "can", "a", "spice", "console", "for", "an", "instance.\n", "Make", "sure", "we", "can", "a", "rdp", "console", "for", "an", "instance.\n", "Make", "sure", "we", "can", "get", "a", "serial", "proxy", "url", "for", "an", "instance.\n", "Make", "sure", "an", "exception", "is", "raised", "when", "instance", "is", "not", "Active.\n", "Make", "sure", "an", "exception", "is", "raised", "when", "instance", "is", "not", "Active.\n", "Tests", "that", "when", "deallocate_port_for_instance", "fails", "we", "log", "the", "failure\n", "before", "exiting", "compute.detach_interface.\n", "Sometimes", "neutron", "errors", "slip", "through", "the", "neutronv2", "API", "so", "we", "want\n", "to", "make", "sure", "we", "catch", "those", "in", "the", "compute", "manager", "and", "not", "just\n", "NovaExceptions.\n", "Ensure", "volume", "can", "be", "detached", "from", "instance\n", "Set", "attach_status", "to", "'fake'", "as", "nothing", "is", "reading", "the", "value.\n", "Ensure", "exception", "is", "raised", "while", "detaching", "an", "un-attached", "volume\n", "Ensure", "exception", "is", "raised", "when", "volume's", "idea", "of", "attached\n", "instance", "doesn't", "match.\n", "Unused\n", "Ensure", "rollback", "during", "detach", "if", "libvirt", "goes", "down\n", "Ensure", "that", "a", "volume", "can", "be", "detached", "even", "when", "it", "is", "removed\n", "from", "an", "instance", "but", "remaining", "in", "bdm.", "See", "bug", "#1367964.\n", "Stub", "out", "fake_volume_get", "so", "cinder", "api", "does", "not", "raise", "exception\n", "and", "manager", "gets", "to", "call", "bdm.destroy()\n", "Make", "sure", "that", "volumes", "get", "detached", "during", "instance", "termination.\n", "Stub", "out", "and", "record", "whether", "it", "gets", "detached\n", "Kill", "the", "instance", "and", "check", "that", "it", "was", "detached\n", "NOTE(sbauza):", "Host", "can", "be", "set", "to", "None,", "we", "need", "to", "fake", "a", "correct\n", "destination", "if", "this", "is", "the", "case.\n", "Up", "to", "2", "match,", "based", "on", "the", "passed", "limit\n", "Limit", "is", "not", "supplied", "to", "the", "DB", "when", "using", "an", "IP", "filter\n", "No", "IP", "filter,", "verify", "that", "the", "limit", "is", "passed\n", "Ensure", "we", "can", "create", "an", "aggregate", "without", "an", "availability", "zone\n", "Ensure", "all", "conflict", "hosts", "can", "be", "returned\n", "Ensure", "metadata", "can", "be", "updated.\n", "Ensure", "metadata", "without", "availability", "zone", "can", "be\n", "updated,even", "the", "aggregate", "contains", "hosts", "belong\n", "to", "another", "availability", "zone\n", "Ensure", "availability", "zone", "can", "be", "updated,\n", "when", "the", "aggregate", "is", "the", "only", "one", "with\n", "availability", "zone\n", "Ensure", "aggregate's", "availability", "zone", "can't", "be", "updated,\n", "when", "aggregate", "has", "hosts", "in", "other", "availability", "zone\n", "Ensure", "aggregate's", "availability", "zone", "can't", "be", "updated,\n", "when", "aggregate", "has", "hosts", "in", "other", "availability", "zone\n", "Ensure", "metadata", "can", "be", "updated.\n", "Ensure", "metadata", "without", "availability", "zone", "can", "be\n", "updated,even", "the", "aggregate", "contains", "hosts", "belong\n", "to", "another", "availability", "zone\n", "Ensure", "availability", "zone", "can", "be", "updated,\n", "when", "the", "aggregate", "is", "the", "only", "one", "with\n", "availability", "zone\n", "Ensure", "that", "the", "update", "of", "the", "aggregate", "availability", "zone\n", "does", "not", "replace", "the", "aggregate", "existing", "metadata\n", "Ensure", "aggregate's", "availability", "zone", "can't", "be", "updated,\n", "when", "aggregate", "has", "hosts", "in", "other", "availability", "zone\n", "Ensure", "we", "can", "delete", "an", "aggregate.\n", "Ensure", "InvalidAggregateAction", "is", "raised", "when", "non", "empty", "aggregate.\n", "Ensure", "we", "can", "add", "a", "host", "to", "an", "aggregate.\n", "Ensure", "we", "can't", "add", "a", "host", "to", "different", "availability", "zone\n", "Ensure", "we", "can't", "add", "a", "host", "if", "already", "existing", "in", "an", "agg", "with", "AZ", "set\n", "to", "default\n", "Ensure", "we", "can", "add", "multiple", "hosts", "to", "an", "aggregate.\n", "Ensure", "ComputeHostNotFound", "is", "raised", "when", "adding", "invalid", "host.\n", "Ensure", "we", "can", "remove", "a", "host", "from", "an", "aggregate.\n", "Ensure", "ComputeHostNotFound", "is", "raised", "when", "removing", "invalid", "host.\n", "Assert", "that", "exception.FlavorNotFound", "is", "not", "raised\n", "no", "filter_properties", "will", "disable", "re-scheduling.\n", "no", "retry", "info", "will", "also", "disable", "re-scheduling.\n", "no", "request", "spec", "will", "also", "disable", "re-scheduling.\n", "If", "rescheduled,", "the", "original", "resize", "exception", "should", "be", "logged.\n", "Make", "sure", "we", "can't", "start", "an", "instance", "with", "a", "deleted", "image.\n", "Should", "be", "on", "destination", "host\n", "Should", "be", "on", "destination", "host\n", "Should", "be", "on", "destination", "host", "and", "node", "set", "to", "what", "was", "passed", "in\n", "Initialize", "the", "VM", "to", "stopped", "state\n", "Check", "the", "vm", "state", "is", "reset", "to", "stopped\n", "Should", "remain", "on", "original", "host\n", "Stub", "out", "and", "record", "whether", "it", "gets", "detached\n", "cleanup\n", "make", "sure", "volumes", "attach,", "detach", "are", "called\n", "'spawn'", "should", "be", "called", "with", "the", "image_meta", "from", "the", "image_ref\n", "NOTE(ndipanov):", "Make", "sure", "that", "we", "pass", "the", "topology", "from", "the", "context\n", "Test", "that", "running", "instances", "with", "injected_files", "decodes", "files", "correctly\n", "test", "an", "input", "of", "None", "for", "injected_files\n", "test", "an", "input", "of", "[]", "for", "injected_files\n", "test", "with", "valid", "b64", "encoded", "content.\n", "test", "with", "invalid", "b64", "encoded", "content\n", "NOTE(sirp):", "`TestCase`", "is", "far", "too", "heavyweight", "for", "this", "test,", "this", "should\n", "probably", "derive", "from", "a", "`test.FastTestCase`", "that", "omits", "DB", "and", "env\n", "handling\n", "We", "should", "allow", "a", "root", "volume", "which", "is", "larger", "than", "the", "flavor", "root\n", "disk.\n", "We", "should", "allow", "a", "root", "volume", "created", "from", "an", "image", "whose", "min_disk", "is\n", "larger", "than", "the", "flavor", "root", "disk.\n", "A", "bdm", "object", "volume", "smaller", "than", "the", "image's", "min_disk", "should", "not", "be\n", "allowed\n", "We", "should", "allow", "a", "root", "volume", "whose", "size", "is", "not", "given\n", "Test", "that", "we", "can", "succeed", "when", "passing", "bdms,", "and", "the", "root", "bdm", "isn't", "a\n", "volume\n", "We", "should", "do", "a", "size", "check", "against", "flavor", "if", "we", "were", "passed", "bdms", "but\n", "the", "root", "bdm", "isn't", "a", "volume\n", "We", "should", "do", "a", "min_disk", "check", "against", "flavor", "if", "we", "were", "passed", "bdms\n", "but", "the", "root", "bdm", "isn't", "a", "volume"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/imagebackend.py": ["CONF", "Exception", "False", "Flat", "IMAGE_API", "Image", "IndexError", "LOG", "Lvm", "None", "NotImplementedError", "OSError", "Ploop", "Qcow2", "Rbd", "RuntimeError", "SUPPORTS_CLONE", "True", "TypeError", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_dict_from_line", "_fsid", "_im", "_out", "_pool", "_snap", "abc", "also_destroy_volume", "args", "auth_enabled", "backend", "backing_file", "backing_parts", "backing_path", "base", "base64", "base_dir", "base_image_id", "base_size", "boot_order", "cache_mode", "can_fallocate", "connection", "context", "contextlib", "copy_qcow2_image", "copy_raw_image", "create_lvm_image", "create_ploop_image", "data", "dct", "device_type", "dict", "disk", "disk_bus", "disk_dev", "disk_info_file", "disk_name", "dmcrypt", "driver_format", "driver_name", "driver_type", "e", "encrypt_lvm_image", "err", "exception", "excutils", "extra_specs", "fd", "fetch_func", "fetch_func_sync", "filename", "fileutils", "format", "fsid", "functools", "generated", "generating", "getattr", "hosts", "hypervisor_version", "ignore_errors", "image", "image_format", "image_id", "image_id_or_uri", "image_meta", "image_path", "image_type", "images", "img_path", "imgmodel", "info", "instance", "int", "is_block_dev", "jsonutils", "k", "key", "keymgr", "kwargs", "legacy_backing_size", "legacy_base", "len", "libvirt_utils", "line", "local_file", "location", "locations", "logging", "lvm", "msg", "name", "nova", "object", "open", "os", "out_format", "parent_fsid", "parent_pool", "path", "ports", "prepare_template", "rbd_utils", "reason", "remote_name", "remove_func", "resize", "scope", "secret", "secretobj", "self", "servers", "setattr", "shutil", "six", "size", "snapshot_name", "source_type", "staticmethod", "str", "strutils", "super", "target", "test_path", "tmp_file", "tmp_path", "tune_items", "units", "use_cow", "utils", "value", "vconfig", "write_to_disk_info_file", "zip", "True", "if", "the", "backend", "puts", "images", "on", "a", "shared", "block", "storage.\nTrue", "if", "the", "backend", "stores", "images", "in", "files", "under", "instance", "path.\nGet", "an", "image's", "name", "of", "a", "base", "file.", "NOTE(dripton):", "We", "store", "lines", "of", "json", "(path,", "disk_format)", "in", "this\n", "file,", "for", "some", "image", "types,", "to", "prevent", "attacks", "based", "on", "changing", "the\n", "disk_format.\n", "NOTE(mikal):", "We", "need", "a", "lock", "directory", "which", "is", "shared", "along", "with\n", "instance", "files,", "to", "cover", "the", "scenario", "where", "multiple", "compute", "nodes\n", "are", "trying", "to", "create", "a", "base", "file", "at", "the", "same", "time\n", "NOTE(mdbooth):", "This", "method", "is", "called", "as", "a", "callback", "by", "the\n", "create_image()", "method", "of", "a", "specific", "backend.", "It", "assumes", "that\n", "target", "will", "be", "in", "the", "image", "cache,", "which", "is", "why", "it", "holds", "a\n", "lock,", "and", "does", "not", "overwrite", "an", "existing", "file.", "However,\n", "this", "is", "not", "true", "for", "all", "backends.", "Specifically", "Lvm", "writes\n", "directly", "to", "the", "target", "rather", "than", "to", "the", "image", "cache,\n", "and", "additionally", "it", "creates", "the", "target", "in", "advance.\n", "This", "guard", "is", "only", "relevant", "in", "the", "context", "of", "the", "lock", "if", "the\n", "target", "is", "in", "the", "image", "cache.", "If", "it", "isn't,", "we", "should\n", "call", "fetch_func.", "The", "lock", "we're", "holding", "is", "also", "unnecessary", "in\n", "that", "case,", "but", "it", "will", "not", "result", "in", "incorrect", "behaviour.\n", "create_image()", "only", "creates", "the", "base", "image", "if", "needed,", "so\n", "we", "cannot", "rely", "on", "it", "to", "exist", "here\n", "Note(pbrady):", "The", "size", "and", "min_disk", "parameters", "of", "a", "glance\n", "image", "are", "checked", "against", "the", "instance", "size", "before", "the", "image\n", "is", "even", "downloaded", "from", "glance,", "but", "currently", "min_disk", "is\n", "adjustable", "and", "doesn't", "currently", "account", "for", "virtual", "disk", "size,\n", "so", "we", "need", "this", "extra", "check", "here.\n", "NOTE(cfb):", "Having", "a", "flavor", "that", "sets", "the", "root", "size", "to", "0", "and", "having\n", "nova", "effectively", "ignore", "that", "size", "and", "use", "the", "size", "of", "the\n", "image", "is", "considered", "a", "feature", "at", "this", "time,", "not", "a", "bug.\n", "Use", "os.open", "to", "create", "it", "without", "group", "or", "world", "write", "permission.\n", "NOTE(mikal):", "this", "is", "a", "noop", "for", "now", "for", "all", "stores", "except", "RBD,", "but\n", "we", "should", "talk", "about", "if", "we", "want", "this", "functionality", "for", "everything.\n", "NOTE(dgenin):", "Kernel,", "ramdisk", "and", "disk.config", "are", "fetched", "using\n", "the", "Flat", "backend", "regardless", "of", "which", "backend", "is", "configured", "for\n", "ephemeral", "storage.", "Encryption", "for", "the", "Flat", "backend", "is", "not", "yet\n", "implemented", "so", "this", "loophole", "is", "necessary", "to", "allow", "other\n", "backends", "already", "supporting", "encryption", "to", "function.", "This", "can\n", "be", "removed", "once", "encryption", "for", "Flat", "is", "implemented.\n", "Generating", "image", "in", "place\n", "NOTE(mikal):", "Update", "the", "mtime", "of", "the", "base", "file", "so", "the", "image\n", "cache", "manager", "knows", "it", "is", "in", "use.\n", "TODO(pbrady):", "Consider", "copying", "the", "cow", "image", "here\n", "with", "preallocation=metadata", "set", "for", "performance", "reasons.\n", "This", "would", "be", "keyed", "on", "a", "'preallocate_images'", "setting.\n", "Download", "the", "unmodified", "base", "image", "unless", "we", "already", "have", "a", "copy.\n", "NOTE(ankit):", "Update", "the", "mtime", "of", "the", "base", "file", "so", "the", "image\n", "cache", "manager", "knows", "it", "is", "in", "use.\n", "Determine", "whether", "an", "existing", "qcow2", "disk", "uses", "a", "legacy", "backing", "by\n", "actually", "looking", "at", "the", "image", "itself", "and", "parsing", "the", "output", "of", "the\n", "backing", "file", "it", "expects", "to", "be", "using.\n", "Create", "the", "legacy", "backing", "file", "if", "necessary.\n", "TODO(pbrady):", "possibly", "deprecate", "libvirt.sparse_logical_volumes\n", "for", "the", "more", "general", "preallocate_images\n", "NOTE:", "by", "calling", "convert_image_unsafe", "here", "we're\n", "telling", "qemu-img", "convert", "to", "do", "format", "detection", "on", "the", "input,\n", "because", "we", "don't", "know", "what", "the", "format", "is.", "For", "example,\n", "we", "might", "have", "downloaded", "a", "qcow2", "image,", "or", "created", "an\n", "ephemeral", "filesystem", "locally,", "we", "just", "don't", "know", "here.", "Having\n", "audited", "this,", "all", "current", "sources", "have", "been", "sanity", "checked,\n", "either", "because", "they're", "locally", "generated,", "or", "because", "they", "have\n", "come", "from", "images.fetch_to_raw.", "However,", "this", "is", "major", "code", "smell.\n", "NOTE(dgenin):", "Key", "manager", "corresponding", "to", "the\n", "specific", "backend", "catches", "and", "reraises", "an\n", "an", "exception", "if", "key", "retrieval", "fails.\n", "Generate", "images", "with", "specified", "size", "right", "on", "volume\n", "NOTE(nic):", "Resizing", "the", "image", "is", "already", "handled", "in", "create_image(),\n", "and", "migrate/resize", "is", "not", "supported", "with", "LVM", "yet,", "so", "this", "is", "a", "no-op\n", "Force", "authentication", "locally\n", "prepare_template()", "may", "have", "cloned", "the", "image", "into", "a", "new", "rbd\n", "image", "already", "instead", "of", "downloading", "it", "locally\n", "The", "easy", "way", "--", "the", "image", "is", "an", "RBD", "clone,", "so", "use", "the", "parent\n", "images'", "storage", "pool\n", "The", "hard", "way", "--", "the", "image", "is", "itself", "a", "parent,", "so", "ask", "Glance\n", "where", "it", "came", "from\n", "Find", "the", "first", "location", "that", "is", "in", "the", "same", "RBD", "cluster\n", "NOTE(nic):", "Nova", "has", "zero", "comprehension", "of", "how", "Glance's", "image", "store\n", "is", "configured,", "but", "we", "can", "infer", "what", "storage", "pool", "Glance", "is", "using\n", "by", "looking", "at", "the", "parent", "image.", "If", "using", "authx,", "write", "access", "should\n", "be", "enabled", "on", "that", "pool", "for", "the", "Nova", "user\n", "Snapshot", "the", "disk", "and", "clone", "it", "into", "Glance's", "storage", "pool.", "librbd\n", "requires", "that", "snapshots", "be", "set", "to", "\"protected\"", "in", "order", "to", "clone", "them\n", "Flatten", "the", "image,", "which", "detaches", "it", "from", "the", "source", "snapshot\n", "all", "done", "with", "the", "source", "snapshot,", "clean", "it", "up\n", "Glance", "makes", "a", "protected", "snapshot", "called", "'snap'", "on", "uploaded\n", "images", "and", "hands", "it", "out,", "so", "we'll", "do", "that", "too.", "The", "name", "of\n", "the", "snapshot", "doesn't", "really", "matter,", "this", "just", "uses", "what", "the\n", "glance-store", "rbd", "backend", "sets", "(which", "is", "not", "configurable)."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_agent.py": ["False", "None", "_TestAgent", "agent", "agent_obj", "agents", "db", "exception", "fake_agent", "field", "getattr", "len", "mock", "mock_create", "mock_destroy", "mock_get", "mock_get_all", "mock_update", "obj", "object", "self", "staticmethod", "test", "test_objects", "value"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/imagecache.py": ["CONF", "Exception", "False", "ImageCache", "LOG", "None", "True", "_", "_LI", "__name__", "_image_synchronized_remove", "age_seconds", "all_files", "all_instances", "backing_files", "base_dir", "base_file", "base_vhd_dir", "base_vhd_path", "context", "copy_and_resize_vhd", "dict", "entry", "err_msg", "exception", "excutils", "extension", "fetch_image_if_not_existing", "file_name", "flavor_disk_size", "format_ext", "image", "image_id", "image_path", "imagecache", "images", "img", "instance", "is_vhd", "lock_name", "lock_path", "logging", "match", "max_age_seconds", "nova", "originals", "os", "path_parts", "pathutils", "re", "rescue_image_id", "rescue_image_info", "rescue_image_path", "rescue_image_size", "resize_re", "resized_vhd_path", "root_vhd_internal_size", "root_vhd_size", "root_vhd_size_gb", "running", "self", "super", "test_path", "unexplained_images", "units", "utils", "utilsfactory", "uuidutils", "vhd_path", "vhd_size", "Note:", "rescue", "images", "are", "not", "resized.\n", "Resize", "the", "base", "VHD", "image", "as", "it's", "not", "possible", "to", "resize", "a\n", "differencing", "VHD.", "This", "does", "not", "apply", "to", "VHDX", "images.\n", "change", "the", "timestamp", "on", "the", "image", "so", "as", "to", "reflect", "the", "last\n", "time", "it", "was", "used\n", "not", "vhd", "or", "vhdx,", "ignore.\n", "extension", "has", "a", "leading", "'.'.", "E.g.:", "'.vhdx'\n", "File", "is", "not", "an", "image.", "Ignore", "it.\n", "imagecache", "will", "not", "store", "images", "of", "any", "other", "formats."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/016_resource_providers.py": ["Column", "DateTime", "False", "Float", "Index", "Integer", "MetaData", "String", "Table", "True", "Unicode", "UniqueConstraint", "allocations", "inventories", "meta", "migrate_engine", "nameargs", "resource_provider_aggregates", "resource_providers", "table", "Database", "migrations", "for", "resource-providers."], "/Users/mehranhassani/repos/nova/nova/api/metadata/password.py": ["CHUNKS", "CHUNK_LENGTH", "MAX_SIZE", "None", "_", "bytes", "context", "convert_password", "ctxt", "exc", "i", "instance", "isinstance", "key", "len", "meta", "meta_data", "msg", "objects", "password", "range", "req", "result", "six", "sorted", "sys_meta", "utils", "NOTE(vish):", "The", "conflict", "will", "only", "happen", "once", "the", "metadata", "cache\n", "updates,", "but", "it", "isn't", "a", "huge", "issue", "if", "it", "can", "be", "set", "for\n", "a", "short", "window."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/test_api.py": ["Exception", "FakeMount", "False", "HASH_EXT4", "HASH_NTFS", "HASH_VFAT", "None", "True", "_fake_get_disk_size", "api", "device", "fake_import_fails", "fake_returns_nothing", "fake_returns_true", "fake_trycmd", "fixtures", "image", "imgfile", "imgmodel", "imgsize", "imgsize_mb", "mock", "mock_can_resize_image", "mock_execute", "mock_extendable", "mount", "mountdir", "mounter", "object", "partition", "path", "processutils", "self", "staticmethod", "str", "tempfile", "test", "units", "utils", "NOTE(mikal):", "Bug", "1094373", "saw", "a", "regression", "where", "we", "failed", "to\n", "treat", "a", "failure", "to", "mount", "as", "a", "failure", "to", "be", "able", "to", "resize", "the\n", "filesystem\n", "Force", "the", "use", "of", "localfs,", "which", "is", "what", "was", "used", "during", "the", "failure\n", "reported", "in", "the", "bug"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/security_groups.py": ["False", "copy", "parameter_types", "server_create", "server_create_v20", "NOTE(oomichi):", "allocate_for_instance()", "of", "neutronv2/api.py\n", "gets", "security_group", "names", "or", "UUIDs", "from", "this", "parameter.\n", "parameter_types.name", "allows", "both", "format."], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1558866.py": ["CONF", "False", "None", "TestServerGet", "api_client", "api_fixture", "datetime", "dict", "ex", "fake_image", "image", "image_service", "nova", "nova_fixtures", "policy_fixture", "self", "server", "super", "test", "timestamp", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n", "NOTE(mriedem):", "This", "image", "has", "an", "invalid", "architecture", "metadata", "value\n", "and", "is", "used", "for", "negative", "testing", "in", "the", "functional", "stack.\n1558866."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_driver.py": ["False", "None", "True", "connection_ip", "connector", "driver", "expected", "expected_calls", "fake", "fake_vmops_cleanup", "inst", "instance", "ip", "math", "mock", "mock_cleanup", "mock_ensure", "mock_get", "mock_invalid", "mock_set_bootable", "my_block_storage_ip", "my_ip", "obj_fields", "overhead", "refresh", "resources", "self", "stubs", "units", "xenapi", "xenapi_driver", "Unit", "tests", "for", "Driver", "operations.", "expected", "memory", "overhead", "per:\n", "https://wiki.openstack.org/wiki/XenServer/Overhead"], "/Users/mehranhassani/repos/nova/nova/__init__.py": ["os", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_hosts.py": ["None", "affinity", "classes", "expected", "fakes", "host", "host_state", "io_ops", "matchers", "metrics", "ram", "self", "test", "weights"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/324_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/conf/libvirt.py": ["ALL_OPTS", "False", "LIVE_MIGRATION_DOWNTIME_DELAY_MIN", "LIVE_MIGRATION_DOWNTIME_MIN", "LIVE_MIGRATION_DOWNTIME_STEPS_MIN", "None", "True", "cfg", "conf", "itertools", "libvirt_general_opts", "libvirt_group", "libvirt_imagebackend_opts", "libvirt_imagecache_opts", "libvirt_lvm_opts", "libvirt_remotefs_opts", "libvirt_utils_opts", "libvirt_vif_opts", "libvirt_volume_aoe_opts", "libvirt_volume_glusterfs_opts", "libvirt_volume_iscsi_opts", "libvirt_volume_iser_opts", "libvirt_volume_net_opts", "libvirt_volume_nfs_opts", "libvirt_volume_opts", "libvirt_volume_quobyte_opts", "libvirt_volume_scality_opts", "libvirt_volume_smbfs_opts", "libvirt_volume_vzstorage_opts", "list", "paths", "Copyright", "2016", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "Downtime", "period", "in", "milliseconds\n", "Step", "count\n", "Delay", "in", "seconds\n", "TODO(hieulq):", "change", "to", "URIOpt", "for", "validating", "schemas", "with", "next", "release\n", "of", "oslo_config.\n", "TODO(hieulq):", "Need", "to", "add", "min", "argument", "by", "moving", "from\n", "LIVE_MIGRATION_DOWNTIME_MIN", "constant.\n", "TODO(hieulq):", "Need", "to", "add", "min", "argument", "by", "moving", "from\n", "LIVE_MIGRATION_DOWNTIME_STEPS_MIN", "constant.\n", "TODO(hieulq):", "Need", "to", "add", "min", "argument", "by", "moving", "from\n", "LIVE_MIGRATION_DOWNTIME_DELAY_MIN", "constant.\nelementsPerf", ".\n", "default", "determined", "by", "librados\n", "TODO(sneti):", "This", "config", "option", "is", "also", "used", "for", "other", "protocols", "like\n", "fibrechannel,", "scaleio,", "disco.", "So", "this", "should", "be", "renamed", "to\n", "num_volume_scan_tries\n", "iser", "is", "also", "supported,", "but", "use", "LibvirtISERVolumeDriver\n", "instead"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/dummy_schema.py": ["False", "dummy", "dummy2", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/306_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/server_tags.py": ["ViewBuilder", "_collection_name", "common", "request", "self", "server_id", "server_location", "servers", "super", "tag_name"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_fixed_ip.py": ["False", "None", "NotImplementedError", "True", "_TestFixedIPObject", "args", "associate", "bulk", "create", "datetime", "db_fixed", "db_obj", "db_val", "dict", "disassociate", "exception", "fake_fixed_ip", "fake_instance", "field", "fip", "fixed_get", "fixed_ip", "fixed_ips", "fixedip", "fixedips", "get", "get_all", "info", "instance_get", "isinstance", "iso8601", "kwargs", "len", "mock", "mock_get", "netaddr", "network_get", "now", "now_tz", "obj", "obj_val", "object", "ovo_base", "primitive", "result", "self", "str", "test_network", "test_objects", "timeutils", "update", "utils", "uuids", "versions", "NOTE(danms):", "be", "pedantic", "about", "timezone", "stuff"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_iser.py": ["driver", "iser", "self", "test_volume", "Tests", "the", "libvirt", "iSER", "volume", "driver."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_exact_ram_filter.py": ["TestRamFilter", "exact_ram_filter", "fakes", "host", "host_attributes", "objects", "ram_mb", "self", "spec_obj", "super", "test"], "/Users/mehranhassani/repos/nova/nova/block_device.py": ["BlockDeviceDict", "CONF", "DEFAULT_ROOT_DEV_NAME", "False", "LOG", "None", "StopIteration", "True", "ValueError", "_", "_DEFAULT_MAPPINGS", "__name__", "_db_only_fields", "_dev", "_ephemeral", "_fields", "_nums", "_pref", "_required_fields", "api_dict", "bdm", "bdm_db_inherited_fields", "bdm_db_only_fields", "bdm_dict", "bdm_legacy_fields", "bdm_new_api_fields", "bdm_new_api_only_fields", "bdm_new_fields", "bdm_new_non_api_fields", "bdms", "blanks", "block_device_dict", "block_device_info", "block_device_list", "block_device_mapping", "block_device_mappings", "bool", "boot_index", "classmethod", "cls", "copy_from_template", "copy_over_fields", "create_image_bdm", "default_ephemeral_device", "default_swap_device", "destination_type", "dev", "device", "device_name", "device_uuid", "dict", "dict_fields", "do_not_default", "driver", "drop_fields", "ebs", "ebs_devices", "enumerate", "eph", "ephemeral", "ephemeral_name", "ephemerals", "exception", "exclude_root_mapping", "field", "fields", "filter", "fld", "guest_format", "i", "image_bdm", "image_ref", "image_uuid", "image_uuid_specified", "instance", "int", "is_ephemeral", "is_swap_or_ephemeral", "key", "kwargs", "legacy_bdm", "legacy_block_device", "legacy_block_device_mapping", "len", "letter", "list", "logging", "m", "mapping_dict", "mappings", "match", "mount_device", "nebs", "new_bdm", "new_bdms", "new_format_is_ephemeral", "new_format_is_swap", "next", "no_device", "no_root", "non_blank", "non_computable_fields", "nova", "num", "prepend_dev", "properties", "re", "root_device_name", "self", "set", "six", "size", "snapshot_dict", "snapshot_id", "sorted", "source_type", "str", "strip_dev", "strip_prefix", "strutils", "sum", "super", "swap", "template", "utils", "val", "validate_and_default_volume_size", "validate_device_name", "value", "virt_name", "virtual", "vol", "volume_backed", "x", "Represents", "a", "Block", "Device", "Mapping", "in", "Nova.\nBasic", "data", "format", "validations.\nCreate", "a", "basic", "volume", "snapshot", "BDM", "from", "a", "given", "template", "bdm.\nTransform", "a", "legacy", "list", "of", "block", "devices", "to", "the", "new", "data", "format.\nPrepend", "'/dev/'", "to", "'device'", "entry", "of", "swap/ephemeral", "virtual", "type.\nremove", "leading", "'/dev/'.\nMake", "sure", "there", "is", "a", "leading", "'/dev/'.\nremove", "both", "leading", "/dev/", "and", "xvd", "or", "sd", "or", "vd", "or", "hd.\nMatches", "device", "name", "and", "returns", "prefix,", "suffix.", "NOTE", "(ndipanov):", "Never", "default", "db", "fields\n", "Check", "that", "there", "are", "no", "bogus", "fields\n", "Check", "that", "all", "required", "fields", "are", "there\n", "NOTE", "(ndipanov):", "These", "fields", "cannot", "be", "computed\n", "from", "legacy", "bdm,", "so", "do", "not", "default", "them\n", "to", "avoid", "overwriting", "meaningful", "values", "in", "the", "db\n", "NOTE", "(ndipanov):", "Just", "keep", "the", "BDM", "for", "now,\n", "if", "this", "bdm", "is", "generated", "from", "--image", ",then\n", "source_type", "=", "image", "and", "destination_type", "=", "local", "is", "allowed\n", "NOTE", "(ndipanov):", "Always", "label", "as", "0,", "it", "is", "up", "to\n", "the", "calling", "routine", "to", "re-enumerate", "them\n", "NOTE(ndipanov):", "Image", "bdms", "with", "local", "destination\n", "have", "no", "meaning", "in", "the", "legacy", "format", "-", "raise\n", "Re-enumerate", "the", "ephemeral", "devices\n", "NOTE", "(ndipanov):", "We", "will", "not", "decide", "which", "device", "is", "root", "here", "-", "we", "assume\n", "that", "it", "will", "be", "supplied", "later.", "This", "is", "useful", "for", "having", "the", "root", "device\n", "as", "part", "of", "the", "image", "defined", "mappings", "that", "are", "already", "in", "the", "v2", "format.\n", "Try", "to", "assign", "boot_device\n", "NOTE", "(ndipanov):", "If", "there", "is", "no", "root_device,", "pick", "the", "first", "non\n", "blank", "one.\n", "NOTE(yamahata):", "see", "image_service.s3.s3create()\n", "NOTE(yamahata):", "register_image's", "command", "line", "can", "override\n", "<machine>.manifest.xml\n", "NOTE", "(ndipanov):", "Do", "not", "allow", "empty", "device", "names\n", "until", "assigning", "default", "values\n", "is", "supported", "by", "nova.compute\n", "NOTE:", "We", "can", "remove", "this", "validation", "code", "after", "removing\n", "Nova", "v2.0", "API", "code", "because", "v2.1", "API", "validates", "this", "case\n", "already", "at", "its", "REST", "API", "layer.\n", "NOTE(vish):", "delete", "numbers", "in", "case", "we", "have", "something", "like\n", "/dev/sda1\n", "NOTE(clayg):", "remove", "this", "when", "xenapi", "is", "setting", "default_root_device\n", "'ephemeralN',", "'swap'", "and", "ebs\n", "ebs", "volume", "case\n", "NOTE(yamahata):", "I'm", "not", "sure", "how", "ebs", "device", "should", "be", "numbered.\n", "Right", "now", "sort", "by", "device", "name", "for", "deterministic\n", "result.\n", "NOTE(claudiub):", "python2.7", "sort", "places", "None", "values", "first.\n", "this", "sort", "will", "maintain", "the", "same", "behaviour", "for", "both", "py27", "and", "py34."], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/storage/dmcrypt.py": ["False", "LOG", "True", "_LE", "__name__", "_dmcrypt_suffix", "base", "byte", "cipher", "cmd", "device", "dmdev", "e", "excutils", "key", "key_size", "logging", "map", "os", "path", "processutils", "str", "target", "utils", "Returns", "true", "if", "the", "path", "corresponds", "to", "an", "encrypted", "disk.\nFunction", "enumerates", "encrypted", "volumes.", "cryptsetup", "returns", "4", "when", "attempting", "to", "destroy", "a", "non-existent\n", "dm-crypt", "device.", "It", "indicates", "that", "the", "device", "is", "invalid,", "which\n", "means", "that", "the", "device", "is", "invalid", "(i.e.,", "it", "has", "already", "been\n", "destroyed)."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_common.py": ["None", "StringIO", "True", "action_args", "action_kwargs", "actions", "actual_args", "actual_fn", "actual_kwargs", "api", "bar_args", "categories", "cmd_common", "exception", "f", "f_args", "fixtures", "foo", "foo_args", "k", "method", "method_name", "method_names", "methods", "mock", "mock_CONF", "mock_LOG", "mock_db_IMPL", "mock_fn", "mock_method_of", "mock_print", "mock_validate_args", "object", "self", "test", "v", "Don't", "leak", "the", "actual", "print", "call"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cast_as_call.py": ["CastAsCall", "False", "args", "cctxt", "fixtures", "kwargs", "messaging", "obj", "orig_prepare", "prepare", "self", "staticmethod", "stubs", "super", "Casts", "with", "fanout=True", "would", "throw", "errors", "if", "its", "monkeypatched", "to\n", "the", "call", "method,", "so", "we", "must", "override", "fanout", "to", "False\n", "woo,", "recurse!"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_vmops.py": ["BootableTestCase", "DestroyTestCase", "False", "GetVdisForInstanceTestCase", "ImportError", "MigrateDiskAndPowerOffTestCase", "Mock", "None", "NotImplementedError", "True", "VMOpsTestBase", "VMOpsTestCase", "admin_password", "agent", "args", "attach_pci_dev", "backup_made", "bdi", "bdm", "bdms", "block_device_info", "block_device_info_param", "block_migration", "blocked", "booted_from_volume", "call1", "call2", "clean_shutdown_vm", "command_name", "connection_info", "context", "create_vbd", "ctxt", "data", "debug_mock", "dest", "destroy_vm", "device_id", "di_type", "dict", "disk_image_type", "disk_info", "disk_over_commit", "ephemeral_vdi", "ephemerals", "events", "exception", "expected", "expected_vdi_map", "fake", "fake_aggr_list", "fake_aggregate_obj", "fake_call", "fake_call_xenapi", "fake_connect", "fake_data", "fake_debug", "fake_dev", "fake_flavor", "fake_instance", "fake_read_from_xenstore", "fake_sr_rec", "fake_vm_rec", "fake_write_to_xenstore", "fake_xapi_call", "fields", "find_sr_by_uuid", "find_sr_ref", "first_boot", "flavor", "forget_sr", "g", "get_uuid_mock", "greenthread", "hard_shutdown_vm", "hostname", "image_meta", "image_properties", "import_root", "include_root_vdi", "injected_files", "instance", "instance_type", "kernel_file", "label", "last_call", "leaf", "len", "lookup", "lookup_returns", "m_vhd_expected", "method", "migrate_data", "migrate_data_ret", "migrate_down", "migrate_up", "migration", "mock", "mock_agent", "mock_apply_orig", "mock_apply_orig_vm_name_label", "mock_attach_bdm", "mock_call_xenapi", "mock_connect", "mock_create_vbd", "mock_create_vm", "mock_destroy", "mock_destroy_vdi", "mock_determine_vm_mode", "mock_ensure_host", "mock_find_vdi", "mock_forget", "mock_gen_vdi_map", "mock_generate", "mock_get_all_vdi_uuids", "mock_get_by_host", "mock_get_vdi_for_vm", "mock_get_vdi_for_vm_safely", "mock_get_vm_device_id", "mock_is_booted_from_volume", "mock_is_neutron", "mock_is_vm", "mock_lookup", "mock_migrate_vhd", "mock_pv_device_reported", "mock_pv_driver_version_reported", "mock_remove", "mock_resize", "mock_resize_disk", "mock_resize_ensure_vm_is_shutdown", "mock_restore", "mock_session", "mock_set_vm_name", "mock_shutdown", "mock_sizes", "mock_start", "mock_update_instance_progress", "mock_update_progress", "mock_write_fake_pv_version", "name", "name_label", "name_label_param", "network_info", "neutron_exception", "new_made", "new_vdi_ref", "new_vdi_uuid", "object", "objects", "old_vdi_ref", "parent", "path", "pci_manager", "post_snapshot_callback", "power_on", "power_state", "product_brand", "product_version", "prog_expected", "ramdisk_file", "rescue", "resize_instance", "result", "root_vdi", "self", "session", "shared", "side_effect", "sr_path", "sr_ref", "sr_uuid_map", "start_pause", "state", "step", "steps", "stubs", "super", "task_states", "test", "throw_exception", "try_auto_config", "userdevice", "utils", "uuid", "uuid5", "uuids", "vbd_refs", "vdis", "version", "vm", "vm_rec", "vm_ref", "vm_shutdown", "vm_utils", "vmops", "volume_utils", "volumeops", "xenapi_agent", "xenapi_fake", "xenapi_session", "xenstore_data", "xmlrpclib", "Tests", "get_vdis_for_instance", "utility", "method.", "dom_id=0", "used", "to", "trigger", "exception", "in", "fake", "XenAPI\n", "agent", "updates", "need", "to", "occur", "after", "networking", "is", "configured\n", "5/5:", "step", "to", "be", "executed", "by", "finish", "migration.\n", "5/5:", "step", "to", "be", "executed", "by", "finish", "migration.\n", "5/5:", "step", "to", "be", "executed", "by", "finish", "migration.\n", "sanity", "check", "bootlock", "is", "initially", "disabled:\n", "5/5:", "step", "to", "be", "executed", "by", "finish", "migration.\n", "setup", "fake", "data\n", "Tests", "that", "the", "parameters", "to", "the", "to_xml", "method", "are", "sanitized", "for\n", "passwords", "when", "logged.\n", "we", "don't", "care", "what", "the", "log", "message", "is,", "we", "just", "want", "to", "make", "sure\n", "our", "stub", "method", "is", "called", "which", "asserts", "the", "password", "is", "scrubbed"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_wsgi.py": ["AttributeError", "Controller", "ControllerExtended", "KeyError", "MicroversionedTest", "None", "UnicodeDecodeError", "ValidBodyTest", "a", "accepted", "actual", "api_version", "app", "as_dict", "body", "called", "compute_nodes", "content_type", "controller", "data", "deserializer", "dict", "env", "exception", "expected", "expected_body", "expected_header", "expected_json", "expected_unsupported_type_body", "extended", "extension1", "extension2", "extensions", "fakes", "fault", "foo", "func_list", "hasattr", "hdrs", "header_name", "i18n", "id", "input_dict", "instances", "invalid_version", "jsonutils", "matchers", "method", "mock", "mock_maxver", "msg", "obj", "object", "pants", "range", "req", "request", "resource", "resp", "resp_obj", "response", "result", "robj", "scenarios", "self", "serializer", "six", "super", "test", "testscenarios", "utils", "val", "value", "version", "versioned_method", "webob", "wsgi", "x", "Send", "invalid", "utf-8", "to", "JSONDeserializer.\n", "{\"name\":", "\"\\xe6\\xa6\\x82\\xe5\\xbf\\xb5\"", "}", "\n", "{\"name\":", "\"\\xf0\\x28\\x8c\\x28\"", "}", "Store", "2\n", "Store", "1\n", "Store", "2\n", "Store", "1\n", "asterisk", "should", "match", "first", "available", "if", "there\n", "are", "not", "any", "other", "available", "matches\n", "the", "default", "method", "is", "GET\n", "verify", "the", "method:", "POST\n", "verify", "without", "body\n", "the", "body", "is", "validated", "in", "the", "controller\n", "verify", "the", "method:", "PUT\n", "verify", "no", "content_type", "is", "contained", "in", "the", "request\n", "verify", "the", "method:", "DELETE\n", "ignore", "the", "body\n", "NOTE(alaski):", "This", "test", "is", "really", "to", "ensure", "that", "a", "str", "response\n", "doesn't", "error.", "Not", "having", "a", "request_id", "header", "is", "a", "side", "effect", "of\n", "our", "wsgi", "setup,", "ideally", "it", "would", "be", "there.\n", "A", "TypeError", "should", "be", "translated", "to", "a", "Fault/HTTP", "400.\n", "generate", "a", "TypeError\n", "All", "headers", "must", "be", "utf8"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/246_add_compute_node_id_fk.py": ["ForeignKeyConstraint", "MetaData", "Table", "True", "compute_nodes", "fkey", "meta", "migrate_engine", "pci_devices", "Add", "missing", "foreign", "key", "constraint", "on", "pci_devices.compute_node_id."], "/Users/mehranhassani/repos/nova/nova/console/websocketproxy.py": ["CONF", "Cookie", "Exception", "LOG", "None", "NovaProxyRequestHandlerBase", "True", "_", "_LW", "__name__", "access_url", "args", "connect_info", "connection_info", "consoleauth_rpcapi", "context", "cookie", "ctxt", "data", "detail", "e", "exception", "expected_origin_hostname", "expected_origin_hostnames", "expected_protos", "hcookie", "hcookie_part", "host", "hubs", "int", "kwargs", "len", "logging", "nova", "object", "origin", "origin_hostname", "origin_proto", "origin_scheme", "origin_url", "parse", "port", "query", "rpcapi", "self", "socket", "staticmethod", "str", "sys", "token", "tsock", "urlparse", "websockify", "Called", "after", "a", "new", "WebSocket", "connection", "has", "been", "established.", "NOTE(rpodolyaka):", "override", "the", "superclass", "implementation", "here", "and\n", "explicitly", "disable", "the", "reverse", "DNS", "lookup,", "which", "might", "fail", "on", "some\n", "deployments", "due", "to", "DNS", "configuration", "and", "break", "VNC", "access", "completely\n", "NOTE:", "For", "serial", "consoles", "the", "expected", "protocol", "could", "be", "ws", "or\n", "wss", "which", "correspond", "to", "http", "and", "https", "respectively", "in", "terms", "of\n", "security.\n", "Reopen", "the", "eventlet", "hub", "to", "make", "sure", "we", "don't", "share", "an", "epoll\n", "fd", "with", "parent", "and/or", "siblings,", "which", "would", "be", "bad\n", "The", "nova", "expected", "behavior", "is", "to", "have", "token\n", "passed", "to", "the", "method", "GET", "of", "the", "request\n", "From", "a", "bug", "in", "urlparse", "in", "Python", "<", "2.7.4", "we", "cannot", "support\n", "special", "schemes", "(cf:", "http://bugs.python.org/issue9374)\n", "NoVNC", "uses", "it's", "own", "convention", "that", "forward", "token\n", "from", "the", "request", "to", "a", "cookie", "header,", "we", "should", "check\n", "also", "for", "this", "behavior\n", "NOTE(stgleb):", "Do", "not", "print", "out", "cookie", "content\n", "for", "security", "reasons.\n", "Verify", "Origin\n", "missing", "origin", "header", "indicates", "non-browser", "client", "which", "is", "OK\n", "Connect", "to", "the", "target\n", "Handshake", "as", "necessary\n", "Start", "proxying"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_compute_filters.py": ["False", "True", "compute_filter", "fakes", "filt_cls", "host", "mock", "objects", "self", "service", "service_up_mock", "spec_obj", "test"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/255_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/__init__.py": ["BaseHostWeigher", "HostWeightHandler", "WeighedHost", "dict", "object_class", "self", "super", "weights", "x", "Base", "class", "for", "host", "weights.\nReturn", "a", "list", "of", "weight", "plugin", "classes", "found", "in", "this", "directory."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_core_filters.py": ["agg_mock", "core_filter", "fakes", "host", "mock", "objects", "self", "set", "spec_obj", "test", "False:", "fallback", "to", "default", "flag", "w/o", "aggregates\n", "True:", "use", "ratio", "from", "aggregates\n", "use", "the", "minimum", "ratio", "from", "aggregates"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/316_add_disk_ratio_for_compute_nodes.py": ["Column", "Float", "MetaData", "Table", "True", "cn", "meta", "migrate_engine", "shadow_cn"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_security_group_default_rules.py": ["AttrDict", "False", "None", "SecurityGroupDefaultRulesPolicyEnforcementV21", "TestSecurityGroupDefaultRulesDeprecation", "TestSecurityGroupDefaultRulesNeutronV21", "TestSecurityGroupDefaultRulesV21", "True", "arg", "attrs", "context", "controller_cls", "ctxt", "dict", "exc", "exception", "expected", "fakes", "func", "id", "k", "kwarg", "kwargs", "mock", "mock_sec_grp_rule", "nova", "req", "res_dict", "return_security_group_default_rule", "rule", "rule_name", "rules", "security_group_default_rule", "security_group_default_rule_db", "security_group_default_rule_destroy", "security_group_default_rule_template", "security_group_default_rules_v21", "security_group_rule", "self", "setattr", "sg", "sgr", "sgr_dict", "super", "test", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_versions.py": ["False", "True", "api_sample_base", "avr", "max_api_version", "response", "sample_dir", "scenarios", "self", "NOTE(gmann):", "Setting", "empty", "scenario", "for", "'version'", "API", "testing\n", "as", "those", "does", "not", "send", "request", "on", "particular", "endpoint", "and", "running\n", "its", "tests", "alone", "is", "enough."], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_migrate_server.py": ["False", "MigrateServerSamplesJsonTest", "None", "_self", "block_migration", "compute_node_get_all_by_host", "context", "dict", "disk_over_commit", "exception", "fake_computes", "fake_execute", "fake_get_compute", "fake_live_migrate", "host", "hostname", "instance", "microversion", "mock", "mock_cold_migrate", "objects", "req_subs", "request_spec", "response", "sample_dir", "scenarios", "scheduler_hint", "self", "service", "super", "test_servers", "versionutils", "Get", "api", "samples", "to", "migrate", "server", "request.\n", "Get", "api", "samples", "to", "server", "live", "migrate", "request.\n", "no", "changes", "for", "migrate-server\n", "no", "changes", "for", "migrate-server\n", "Get", "api", "samples", "to", "server", "live", "migrate", "request."], "/Users/mehranhassani/repos/nova/nova/network/noop_dns_driver.py": ["_address", "_domain", "_fqdomain", "_name", "_type", "dns_driver", "self", "No-op", "DNS", "manager.", "Does", "nothing."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/251_add_numa_topology_to_comput_nodes.py": ["Column", "MetaData", "Table", "Text", "True", "compute_nodes", "meta", "migrate_engine", "numa_topology", "shadow_compute_nodes", "shadow_numa_topology"], "/Users/mehranhassani/repos/nova/nova/volume/encryptors/__init__.py": ["Exception", "FORMAT_TO_FRONTEND_ENCRYPTOR_MAP", "False", "LEGACY_PROVIDER_CLASS_TO_FORMAT_MAP", "LOG", "LUKS", "None", "PLAIN", "_LE", "_LW", "__name__", "connection_info", "context", "e", "encryptor", "importutils", "kwargs", "location", "logging", "metadata", "msg", "provider", "strutils", "volume_api", "volume_id", "case", "insensitive\n", "TODO(lyarwood):", "Remove", "the", "following", "in", "16.0.0", "Pike", "and", "raise", "an\n", "ERROR", "if", "provider", "is", "not", "a", "key", "in", "SUPPORTED_ENCRYPTION_PROVIDERS.\n", "Until", "then", "continue", "to", "allow", "both", "the", "class", "name", "and", "path", "to", "be", "used."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/block_device_mapping.py": ["ALIAS", "ATTRIBUTE_NAME", "False", "LEGACY_ATTRIBUTE_NAME", "None", "_", "alias", "bdm", "bdm_dict", "block_device", "block_device_mapping", "body_deprecated_param", "create_kwargs", "e", "exc", "exception", "expl", "extensions", "image_href", "image_uuid_specified", "legacy_bdm", "name", "schema_block_device_mapping", "self", "server_dict", "version", "The", "block", "device", "mappings", "extension.\nBlock", "device", "mapping", "boot", "support.", "use", "nova.api.extensions.server.extensions", "entry", "point", "to", "modify\n", "server", "create", "kwargs\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1.\n", "Have", "to", "check", "whether", "--image", "is", "given,", "see", "bug", "1433609\n", "Unset", "the", "legacy_bdm", "flag", "if", "we", "got", "a", "block", "device", "mapping."], "/Users/mehranhassani/repos/nova/nova/cert/manager.py": ["CertManager", "args", "base64", "context", "crypto", "kwargs", "manager", "messaging", "project_id", "self", "super", "target", "text", "user_id", "Revoke", "all", "user", "certs.\nRevoke", "all", "project", "certs.\nRevoke", "certs", "for", "user", "in", "project.\nGenerate", "and", "sign", "a", "cert", "for", "user", "in", "project.\nGet", "root", "ca", "for", "a", "project.\nGet", "crl", "for", "a", "project.\nDecrypt", "base64", "encoded", "text", "using", "the", "projects", "private", "key."], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_config.py": ["False", "NetworkAPIConfigTest", "True", "driver", "netapi", "nova", "self", "sgapi", "super", "Test", "the", "transition", "from", "legacy", "to", "use_neutron", "config", "options."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_diagnostics.py": ["response", "sample_dir", "self", "test_servers", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_resource_tracker.py": ["AssertionError", "BaseTestCase", "CONF", "ComputeMonitorTestCase", "Exception", "FakeCPUMonitor", "False", "NOW_TS", "None", "TestInstanceClaim", "TestSetInstanceHostAndNode", "TestUpdateUsageFromInstance", "True", "ValueError", "_2MB", "_COMPUTE_NODE_FIXTURES", "_HOSTNAME", "_INSTANCE_FIXTURES", "_INSTANCE_NUMA_TOPOLOGIES", "_INSTANCE_TYPE_FIXTURES", "_INSTANCE_TYPE_OBJ_FIXTURES", "_MIGRATION_CONTEXT_FIXTURES", "_MIGRATION_FIXTURES", "_MIGRATION_INSTANCE_FIXTURES", "_NODENAME", "_NUMA_HOST_TOPOLOGIES", "_NUMA_LIMIT_TOPOLOGIES", "_NUMA_PAGE_TOPOLOGIES", "_VIRT_DRIVER_AVAIL_RESOURCES", "_abort", "_claim", "_ctx", "_doit", "_update_compute_node", "all_instances", "alloc_mock", "args", "attr", "attrs", "bad_limits", "cell", "cfg", "claim", "claims", "compute", "compute_node", "compute_update_usage", "context", "copy", "create_mig_mock", "create_mock", "ctx", "ctxt_mock", "datetime", "disk_used", "drop_migr_mock", "estimate_overhead", "exc", "exp_cell", "expected", "expected_compute", "expected_metrics", "expected_numa", "expected_resources", "expected_updated", "fake_get_node", "fake_pci_device", "flavor", "flavor1", "flavor2", "get_by_host_and_node_mock", "get_by_host_and_nodename_mock", "get_cn_mock", "get_in_progress_by_host_and_node_mock", "get_inst_mock", "get_mig_ctxt_mock", "get_mock", "getattr", "good_limits", "got", "got_cell", "host", "host_topology", "hostname", "inst", "inst_save_mock", "inst_uuid", "instance", "instance1", "instance2", "instance_pci_mock", "key", "kwargs", "len", "limits", "metric_object", "metrics", "mig", "mig1", "mig2", "mig_context_obj", "mig_context_obj1", "mig_context_obj2", "mig_list", "mig_save_mock", "mig_type", "migr_mock", "migr_obj", "migration", "migration1", "migration2", "migrations", "mock", "mock_LOG_warning", "mock_clear_numa", "mock_clone", "mock_get_instance", "mock_save", "mock_update_usage", "monitor", "monitor_base", "monitor_list", "new_flavor", "new_numa", "node", "nodename", "notifier_mock", "obj_base", "obj_fields", "objects", "old_flavor", "orphaned_usages", "overhead_zero", "payload", "pci_claim_mock", "pci_dev", "pci_dev_save_mock", "pci_device", "pci_devs", "pci_get_by_compute_node_mock", "pci_get_by_instance_mock", "pci_get_by_instance_uuid_mock", "pci_manager", "pci_mock", "pci_req_mock", "pci_requests", "pci_stats_mock", "pci_supports_mock", "pci_tracker_mock", "power_state", "prefix", "request", "res", "resizing_instance", "resource_tracker", "resources", "revert", "rpc_mock", "rt", "save_mock", "sched_client_mock", "self", "service_mock", "set", "set_cn_id", "setattr", "setup_rt", "sign", "super", "task_states", "test", "timeutils", "ts0", "ts1", "ts2", "units", "upd_mock", "update_mock", "updated_compute_node", "urs_mock", "uuids", "vals", "value", "vd", "virt_resources", "vm_states", "zip", "Used", "by", "the", "stats", "collector.\n", "Used", "by", "the", "stats", "collector.\n", "A", "migration", "that", "has", "only", "this", "compute", "node", "as", "the", "source", "host\n", "A", "migration", "that", "has", "only", "this", "compute", "node", "as", "the", "dest", "host\n", "A", "migration", "that", "has", "this", "compute", "node", "as", "both", "the", "source", "and", "dest", "host\n", "A", "migration", "that", "has", "this", "compute", "node", "as", "destination", "and", "is", "an", "evac\n", "source-only\n", "prevent", "RT", "trying", "to", "lazy-load", "this\n", "dest-only\n", "prevent", "RT", "trying", "to", "lazy-load", "this\n", "source-and-dest\n", "prevent", "RT", "trying", "to", "lazy-load", "this\n", "dest-only-evac\n", "prevent", "RT", "trying", "to", "lazy-load", "this\n", "Emulate", "that", "the", "driver", "does", "not", "adjust", "the", "memory\n", "of", "the", "instance...\n", "Make", "sure", "we", "don't", "change", "any", "global", "fixtures", "during", "tests\n", "We", "test", "RT._update", "separately,", "since", "the", "complexity\n", "of", "the", "update_available_resource()", "function", "is", "high", "enough", "as\n", "it", "is,", "we", "just", "want", "to", "focus", "here", "on", "testing", "the", "resources\n", "parameter", "that", "update_available_resource()", "eventually", "passes\n", "to", "_update().\n", "6GB", "avail", "-", "1", "GB", "reserved\n", "512MB", "avail", "-", "512MB", "reserved\n", "0MB", "used", "+", "512MB", "reserved\n", "0GB", "used", "+", "1", "GB", "reserved\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "Note", "that", "the", "usage", "numbers", "here", "correspond", "to", "only", "the", "first\n", "Instance", "object,", "because", "the", "second", "instance", "object", "fixture", "is", "in\n", "DELETED", "state", "and", "therefore", "we", "should", "not", "expect", "it", "to", "be", "accounted\n", "for", "in", "the", "auditing", "process.\n", "6", "-", "1", "used\n", "512", "-", "128", "used\n", "One", "active", "instance\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "Orphaned", "instances", "are", "those", "that", "the", "virt", "driver", "has", "on\n", "record", "as", "consuming", "resources", "on", "the", "compute", "node,", "but", "the\n", "Nova", "database", "has", "no", "record", "of", "the", "instance", "being", "active\n", "on", "the", "host.", "For", "some", "reason,", "the", "resource", "tracker", "only\n", "considers", "orphaned", "instance's", "memory", "usage", "in", "its", "calculations\n", "of", "free", "resources...\n", "Yes,", "the", "return", "result", "format", "of", "get_per_instance_usage\n", "is", "indeed", "this", "stupid", "and", "redundant.", "Also", "note", "that", "the\n", "libvirt", "driver", "just", "returns", "an", "empty", "dict", "always", "for", "this\n", "method", "and", "so", "who", "the", "heck", "knows", "whether", "this", "stuff\n", "actually", "works.\n", "512", "-", "64", "orphaned", "usage\n", "Yep,", "for", "some", "reason,", "orphaned", "instances", "are", "not", "counted\n", "as", "running", "VMs...\n", "We", "test", "the", "behavior", "of", "update_available_resource()", "when\n", "there", "is", "an", "active", "migration", "that", "involves", "this", "compute", "node\n", "as", "the", "source", "host", "not", "the", "destination", "host,", "and", "the", "resource\n", "tracker", "does", "not", "have", "any", "instances", "assigned", "to", "it.", "This", "is\n", "the", "case", "when", "a", "migration", "from", "this", "compute", "host", "to", "another\n", "has", "been", "completed,", "but", "the", "user", "has", "not", "confirmed", "the", "resize\n", "yet,", "so", "the", "resource", "tracker", "must", "continue", "to", "keep", "the", "resources\n", "for", "the", "original", "instance", "type", "available", "on", "the", "source", "compute\n", "node", "in", "case", "of", "a", "revert", "of", "the", "resize.\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "Migration.instance", "property", "is", "accessed", "in", "the", "migration\n", "processing", "code,", "and", "this", "property", "calls\n", "objects.Instance.get_by_uuid,", "so", "we", "have", "the", "migration", "return\n", "512", "total", "-", "128", "for", "possible", "revert", "of", "orig\n", "128", "possible", "revert", "amount\n", "We", "test", "the", "behavior", "of", "update_available_resource()", "when\n", "there", "is", "an", "active", "migration", "that", "involves", "this", "compute", "node\n", "as", "the", "destination", "host", "not", "the", "source", "host,", "and", "the", "resource\n", "tracker", "does", "not", "yet", "have", "any", "instances", "assigned", "to", "it.", "This", "is\n", "the", "case", "when", "a", "migration", "to", "this", "compute", "host", "from", "another", "host\n", "is", "in", "progress,", "but", "the", "user", "has", "not", "confirmed", "the", "resize\n", "yet,", "so", "the", "resource", "tracker", "must", "reserve", "the", "resources\n", "for", "the", "possibly-to-be-confirmed", "instance's", "instance", "type\n", "node", "in", "case", "of", "a", "confirm", "of", "the", "resize.\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "512", "total", "-", "256", "for", "possible", "confirm", "of", "new\n", "256", "possible", "confirmed", "amount\n", "We", "test", "the", "behavior", "of", "update_available_resource()", "when\n", "there", "is", "an", "active", "evacuation", "that", "involves", "this", "compute", "node\n", "as", "the", "destination", "host", "not", "the", "source", "host,", "and", "the", "resource\n", "tracker", "does", "not", "yet", "have", "any", "instances", "assigned", "to", "it.", "This", "is\n", "the", "case", "when", "a", "migration", "to", "this", "compute", "host", "from", "another", "host\n", "is", "in", "progress,", "but", "not", "finished", "yet.\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "512", "total", "-", "256", "for", "possible", "confirm", "of", "new\n", "256", "possible", "confirmed", "amount\n", "We", "test", "the", "behavior", "of", "update_available_resource()", "when\n", "there", "is", "an", "active", "migration", "that", "involves", "this", "compute", "node\n", "as", "the", "destination", "host", "AND", "the", "source", "host,", "and", "the", "resource\n", "tracker", "has", "a", "few", "instances", "assigned", "to", "it,", "including", "the\n", "instance", "that", "is", "resizing", "to", "this", "same", "compute", "node.", "The", "tracking\n", "of", "resource", "amounts", "takes", "into", "account", "both", "the", "old", "and", "new\n", "resize", "instance", "types", "as", "taking", "up", "space", "on", "the", "node.\n", "Setup", "virt", "resources", "to", "match", "used", "resources", "to", "number\n", "of", "defined", "instances", "on", "the", "hypervisor\n", "The", "resizing", "instance", "has", "already", "had", "its", "instance", "type\n", "changed", "to", "the", "*new*", "instance", "type", "(the", "bigger", "one,", "instance", "type", "2)\n", "6", "total", "-", "1G", "existing", "-", "5G", "new", "flav", "-", "1G", "old", "flav\n", "512", "total", "-", "128", "existing", "-", "256", "new", "flav", "-", "128", "old", "flav\n", "128", "exist", "+", "256", "new", "flav", "+", "128", "old", "flav\n", "1G", "existing,", "5G", "new", "flav", "+", "1", "old", "flav\n", "One", "migrating", "instance...\n", "The", "expected", "compute", "represents", "the", "initial", "values", "used\n", "when", "creating", "a", "compute", "node.\n", "NOTE(sbauza):", "ResourceTracker", "adds", "host", "field\n", "NOTE(sbauza):", "ResourceTracker", "adds", "CONF", "allocation", "ratios\n", "The", "PCI", "tracker", "needs", "the", "compute", "node's", "ID", "when", "starting", "up,", "so\n", "make", "sure", "that", "we", "set", "the", "ID", "value", "so", "we", "don't", "get", "a", "Cannot", "load\n", "'id'", "in", "base", "class", "error\n", "Has", "to", "be", "a", "number,", "not", "a", "mock\n", "This", "is", "the", "same", "set", "of", "resources", "as", "the", "fixture,", "deliberately.", "We\n", "are", "checking", "below", "to", "see", "that", "update_resource_stats()", "is", "not\n", "needlessly", "called", "when", "the", "resources", "don't", "actually", "change.\n", "The", "above", "call", "to", "_update()", "will", "populate", "the\n", "RT.old_resources", "collection", "with", "the", "resources.", "Here,", "we", "check", "that\n", "if", "we", "call", "_update()", "again", "with", "the", "same", "resources,", "that\n", "the", "scheduler", "client", "won't", "be", "called", "again", "to", "update", "those\n", "(unchanged)", "resources", "for", "the", "compute", "node\n", "Deliberately", "changing", "local_gb_used,", "vcpus_used,", "and", "memory_mb_used\n", "below", "to", "be", "different", "from", "the", "compute", "node", "fixture's", "base", "usages.\n", "We", "want", "to", "check", "that", "the", "code", "paths", "update", "the", "stored", "compute", "node\n", "usage", "records", "with", "what", "is", "supplied", "to", "_update().\n", "not", "using", "mock.sentinel.ctx", "because", "instance_claim", "calls", "#elevated\n", "Test", "that", "RT.update_usage()", "only", "changes", "the", "compute", "node\n", "resources", "if", "there", "has", "been", "a", "claim", "first.\n", "Test", "that", "RT.update_usage()", "removes", "the", "instance", "when", "update", "is\n", "called", "in", "a", "removed", "state\n", "Test", "that", "a", "claim", "involving", "PCI", "requests", "correctly", "claims\n", "PCI", "devices", "on", "the", "host", "and", "sends", "an", "updated", "pci_device_pools\n", "attribute", "of", "the", "ComputeNode", "object.\n", "TODO(jaypipes):", "Remove", "once", "the", "PCI", "tracker", "is", "always", "created\n", "upon", "the", "resource", "tracker", "being", "initialized...\n", "Raise", "an", "exception.", "Just", "make", "sure", "below", "that", "the", "abort()\n", "method", "of", "the", "claim", "object", "was", "called", "(and", "the", "resulting\n", "resources", "reset", "to", "the", "pre-claimed", "amounts)\n", "Assert", "that", "the", "resources", "claimed", "by", "the", "Claim()", "constructor\n", "are", "returned", "to", "the", "resource", "tracker", "due", "to", "the", "claim's", "abort()\n", "method", "being", "called", "when", "triggered", "by", "the", "exception", "raised", "above.\n", "Resize", "an", "existing", "instance", "from", "its", "current", "flavor", "(instance", "type\n", "1)", "to", "a", "new", "flavor", "(instance", "type", "2)", "and", "verify", "that", "the", "compute\n", "node's", "resources", "are", "appropriately", "updated", "to", "account", "for", "the", "new\n", "flavor's", "resources.", "In", "this", "scenario,", "we", "use", "an", "Instance", "that", "has", "not\n", "already", "had", "its", "\"current\"", "flavor", "set", "to", "the", "new", "flavor.\n", "This", "migration", "context", "is", "fine,", "it", "points", "to", "the", "first", "instance\n", "fixture", "and", "indicates", "a", "source-and-dest", "resize.\n", "not", "using", "mock.sentinel.ctx", "because", "resize_claim", "calls", "#elevated\n", "move_type", "is", "None", "for", "resize...\n", "Now", "abort", "the", "resize", "claim", "and", "check", "that", "the", "resources", "have", "been", "set\n", "back", "to", "their", "original", "values.\n", "not", "using", "mock.sentinel.ctx", "because", "resize_claim", "calls", "#elevated\n", "Init", "compute", "node\n", "Build", "instance\n", "This", "migration", "context", "is", "fine,", "it", "points", "to", "the", "first", "instance\n", "fixture", "and", "indicates", "a", "source-and-dest", "resize.\n", "Resize", "instance\n", "Confirm", "or", "revert", "resize\n", "Starting", "from", "an", "empty", "destination", "compute", "node,", "perform", "a", "resize\n", "operation", "for", "an", "instance", "containing", "SR-IOV", "PCI", "devices", "on", "the\n", "original", "host.\n", "TODO(jaypipes):", "Remove", "once", "the", "PCI", "tracker", "is", "always", "created\n", "upon", "the", "resource", "tracker", "being", "initialized...\n", "start", "with", "an", "empty", "dest", "compute", "node.", "No", "migrations,", "no", "instances\n", "A", "destination-only", "migration\n", "NOTE(jaypipes):", "This", "looks", "weird,", "so", "let", "me", "explain.", "The", "Instance", "PCI\n", "requests", "on", "a", "resize", "come", "from", "two", "places.", "The", "first", "is", "the", "PCI\n", "information", "from", "the", "new", "flavor.", "The", "second", "is", "for", "SR-IOV", "devices\n", "that", "are", "directly", "attached", "to", "the", "migrating", "instance.", "The\n", "pci_req_mock.return", "value", "here", "is", "for", "the", "flavor", "PCI", "device", "requests\n", "(which", "is", "nothing).", "This", "empty", "list", "will", "be", "merged", "with", "the", "Instance\n", "PCI", "requests", "defined", "directly", "above.\n", "not", "using", "mock.sentinel.ctx", "because", "resize_claim", "calls", "#elevated\n", "Validate", "that", "the", "pci.request.get_pci_request_from_flavor()", "return\n", "value", "was", "merged", "with", "the", "instance", "PCI", "requests", "from", "the", "Instance\n", "itself", "that", "represent", "the", "SR-IOV", "devices", "from", "the", "original", "host.\n", "Issue", "two", "resize", "claims", "against", "a", "destination", "host", "with", "no", "prior\n", "instances", "on", "it", "and", "validate", "that", "the", "accounting", "for", "resources", "is\n", "correct.\n", "Instance", "#1", "is", "resizing", "to", "instance", "type", "2", "which", "has", "2", "vCPUs,", "256MB\n", "RAM", "and", "5GB", "root", "disk.\n", "Instance", "#2", "is", "resizing", "to", "instance", "type", "1", "which", "has", "1", "vCPU,", "128MB\n", "RAM", "and", "1GB", "root", "disk.\n", "not", "using", "mock.sentinel.ctx", "because", "resize_claim", "calls", "#elevated\n", "Rebuild", "an", "instance,", "emulating", "an", "evacuate", "command", "issued", "against", "the\n", "original", "instance.", "The", "rebuild", "operation", "uses", "the", "resource", "tracker's\n", "_move_claim()", "method,", "but", "unlike", "with", "resize_claim(),", "rebuild_claim()\n", "passes", "in", "a", "pre-created", "Migration", "object", "from", "the", "destination", "compute\n", "manager.\n", "Starting", "state", "for", "the", "destination", "node", "of", "the", "rebuild", "claim", "is", "the\n", "normal", "compute", "node", "fixture", "containing", "a", "single", "active", "running", "VM\n", "having", "instance", "type", "#1.\n", "Now", "emulate", "the", "evacuate", "command", "by", "calling", "rebuild_claim()", "on", "the\n", "resource", "tracker", "as", "the", "compute", "manager", "does,", "supplying", "a", "Migration\n", "object", "that", "corresponds", "to", "the", "evacuation.\n", "not", "using", "mock.sentinel.ctx", "because", "resize_claim", "calls", "#elevated\n", "For", "same-node", "migrations,", "the", "RT's", "_get_instance_type()", "method", "is\n", "called", "if", "there", "is", "a", "migration", "that", "is", "trackable.", "Here,", "we", "want", "to\n", "ensure", "that", "this", "method", "isn't", "called", "for", "live-migration", "migrations.\n", "The", "wrapper", "function", "_update_usage_from_migrations()", "looks", "at", "the\n", "list", "of", "migration", "objects", "returned", "from\n", "MigrationList.get_in_progress_by_host_and_node()", "and", "ensures", "that\n", "only", "the", "most", "recent", "migration", "record", "for", "an", "instance", "is", "used", "in\n", "determining", "the", "usage", "records.", "Here", "we", "pass", "multiple", "migration\n", "objects", "for", "a", "single", "instance", "and", "ensure", "that", "we", "only", "call", "the\n", "_update_usage_from_migration()", "(note:", "not", "migration*s*...)", "once", "with\n", "the", "migration", "object", "with", "greatest", "updated_at", "value.", "We", "also", "pass\n", "some", "None", "values", "for", "various", "updated_at", "attributes", "to", "exercise", "some\n", "of", "the", "code", "paths", "in", "the", "filtering", "logic."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_urlmap.py": ["True", "UrlmapTest", "body", "fakes", "jsonutils", "nova", "req", "res", "self", "super", "test", "url", "Test", "URL", "path", "specifying", "v2", "returns", "v2", "content.\n", "Test", "Content-Type", "specifying", "v2", "returns", "v2", "content.\n", "Test", "Accept", "header", "specifying", "v2", "returns", "v2", "content.\n", "Test", "URL", "path", "specifying", "JSON", "returns", "JSON", "content.\n", "Test", "Accept", "header", "specifying", "JSON", "returns", "JSON", "content.\n", "Test", "URL", "path", "specifying", "v2.1", "returns", "v2.1", "content.\n", "Test", "Content-Type", "specifying", "v2.1", "returns", "v2", "content.\n", "Test", "Accept", "header", "specifying", "v2.1", "returns", "v2.1", "content.\n", "Test", "Accept", "header", "specifying", "JSON", "returns", "JSON", "content."], "/Users/mehranhassani/repos/nova/nova/api/metadata/vendordata.py": ["object", "self", "The", "base", "VendorData", "Drivers", "should", "inherit", "from.\nInit", "method", "should", "do", "all", "expensive", "operations."], "/Users/mehranhassani/repos/nova/nova/cmd/policy_check.py": ["CATEGORIES", "CONF", "Exception", "False", "None", "PolicyCommands", "_", "_ACCEPTABLE_TARGETS", "add_command_parsers", "admin_ctxt", "all_rules", "allowed_operations", "api_name", "category_opt", "cfg", "cli_opts", "cmd_common", "config", "context", "db", "ex", "exception", "fn", "fn_args", "fn_kwargs", "functools", "instance", "instance_id", "key", "new_target", "nova", "nova_context", "object", "os", "policies", "ret", "rule", "self", "sys", "t", "target", "value", "version", "Commands", "for", "policy", "rules.\nParse", "options", "and", "call", "the", "appropriate", "class/method.", "if", "the", "target", "is", "an", "instance_id,", "return", "an", "instance", "instead."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/test_auth.py": ["CONF", "None", "TestKeystoneMiddlewareRoles", "TestNovaKeystoneContextMiddleware", "TestPipeLineFactory", "app", "context", "fake_app", "fake_pipeline", "jsonutils", "mock", "mock_report_deprecated", "name", "nova", "obj", "object", "p", "pipeline", "req", "req_id", "request_id", "response", "role_check_app", "self", "super", "test", "webob", "Test", "with", "no", "role", "headers", "set."], "/Users/mehranhassani/repos/nova/nova/policies/extensions.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "extensions_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/server_groups.py": ["BASE_POLICY_NAME", "BASE_POLICY_RULE", "POLICY_ROOT", "base", "policy", "server_groups_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_aoe.py": ["True", "aoe", "connector", "exists", "libvirt_driver", "mock", "self", "test_volume"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/keypairs.py": ["_collection_name", "common", "keypairs", "request", "self"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_vim_util.py": ["VMwareVIMUtilTestCase", "cluster", "cluster_refs", "datastores", "expected_ds", "fake", "oc", "property", "result", "self", "super", "test", "vim_util", "Get", "the", "fake", "datastores", "directly", "from", "the", "cluster\n", "Get", "the", "fake", "datastores", "using", "inner", "objects", "utility", "method"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_baremetal_nodes.py": ["BareMetalNodesTestDeprecation", "BareMetalNodesTestV21", "FAKE_IRONIC_CLIENT", "None", "True", "b_nodes_v21", "context", "error", "exc", "exception", "expected_output", "fake_node", "fakes", "ironic_exc", "ironic_utils", "mock", "mock_get", "mock_list", "mock_list_ports", "mod", "node", "object", "port", "properties", "res_dict", "self", "six", "super", "test", "updates"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/designer.py": ["None", "bandwidth_items", "brname", "conf", "devname", "driver", "inst_type", "instanceid", "key", "len", "mac", "managerid", "mode", "model", "net_type", "path", "pci_slot", "pci_utils", "profileid", "queues", "scope", "setattr", "six", "tapname", "typeid", "typeidversion", "value", "vlan", "Populate", "a", "LibvirtConfigGuestHostdev", "instance", "with", "pci", "address", "data."], "/Users/mehranhassani/repos/nova/nova/compute/power_state.py": ["CRASHED", "NOSTATE", "PAUSED", "RUNNING", "SHUTDOWN", "STATE_MAP", "SUSPENDED", "fields", "state", "NOTE(maoy):", "These", "are", "*not*", "virDomainState", "values", "from", "libvirt.\n", "The", "hex", "value", "happens", "to", "match", "virDomainState", "for", "backward-compatibility\n", "reasons.\n", "the", "VM", "is", "powered", "off\n", "TODO(justinsb):", "Power", "state", "really", "needs", "to", "be", "a", "proper", "class,\n", "so", "that", "we're", "not", "locked", "into", "the", "libvirt", "status", "codes", "and", "can", "put", "mapping\n", "logic", "here", "rather", "than", "spread", "throughout", "the", "code"], "/Users/mehranhassani/repos/nova/nova/virt/ironic/patcher.py": ["CONF", "GenericDriverFields", "None", "capabilities", "capabilities_key", "capabilities_string", "extra_specs", "flavor", "image_meta", "instance", "jsonutils", "key", "node", "nova", "object", "patch", "preserve_ephemeral", "self", "six", "str", "val", "read", "the", "flavor", "and", "get", "the", "extra_specs", "value.\n", "scan", "through", "the", "extra_specs", "values", "and", "ignore", "the", "keys\n", "not", "starting", "with", "keyword", "'capabilities'.\n", "split", "the", "extra_spec", "key", "to", "remove", "the", "keyword\n", "'capabilities'", "and", "get", "the", "actual", "key."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/008_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_hosts.py": ["Controller", "FakeRequestWithNovaZone", "False", "GET", "HostTestCaseV21", "HostsPolicyEnforcementV21", "None", "NotImplementedError", "True", "_create_instance", "_create_instance_dict", "action", "bad_body", "bad_body2", "binary", "body", "column", "context", "context_maker", "ctxt", "db", "dest", "dic", "disabled", "enabled", "environ", "exc", "exception", "expected_value", "fake_hosts", "fakes", "host", "host_name", "hosts", "i_ref1", "i_ref2", "inst", "key", "kwargs", "len", "method", "mode", "object", "os_hosts_v21", "policy_ex", "power_state", "proj", "req", "resource", "result", "results", "rule_name", "s_ref", "self", "service", "set", "stub_host_power_action", "stub_service_get_all", "stub_service_get_all_notimpl", "stub_service_get_by_host_and_binary", "stub_set_host_enabled", "stub_set_host_maintenance", "super", "test", "testtools", "uuidsentinel", "val", "validation_ex", "vm_states", "webob", "Create", "a", "test", "instance.\nCreate", "a", "dictionary", "for", "a", "test", "instance.\nTest", "Case", "for", "hosts.\nVerify", "that", "the", "compute", "hosts", "are", "returned.\nCreate", "compute-manager(ComputeNode", "and", "Service", "record).\nNo", "instances", "are", "running", "on", "the", "given", "host.\nshow()", "works", "correctly", "as", "expected.", "The", "vm", "driver", "for", "this", "host", "doesn't", "support", "this", "feature\n", "The", "host", "does", "not", "exist\n", "The", "service", "is", "not", "available\n", "Simulate", "a", "failure\n", "Do", "the", "right", "thing\n", "We'll", "simulate", "success", "and", "failure", "by", "assuming\n", "that", "'host_c1'", "always", "succeeds,", "and", "'host_c2'\n", "always", "fails\n", "The", "vm", "driver", "for", "this", "host", "doesn't", "support", "this", "feature\n", "The", "host", "does", "not", "exist\n", "The", "service", "is", "not", "available\n", "Simulate", "a", "failure\n", "Do", "the", "right", "thing\n", "The", "host", "does", "not", "exist\n", "The", "service", "is", "not", "available\n", "Pretend", "we", "have", "fake_hosts.HOST_LIST", "in", "the", "DB\n", "Only", "hosts", "in", "our", "fake", "DB", "exist\n", "'host_c1'", "always", "succeeds,", "and", "'host_c2'\n", "'host_c1'", "always", "succeeds,", "and", "'host_c2'\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist.\n", "A", "host", "given", "as", "an", "argument", "does", "not", "exist."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_actions.py": ["CONF", "FAKE_UUID", "False", "INSTANCE_IDS", "KeyError", "None", "ServerActionsControllerTestV21", "True", "_fake_id", "_fake_resize", "action", "actions", "actual", "args", "args_map", "attr", "attributes", "bdm", "bdms", "body", "body_map", "call_no", "columns_to_join", "compute_api", "compute_api_args_map", "confirm_resize_mock", "context", "controller_function", "cr_mock", "data", "dict", "eval", "exception", "exceptions", "expected", "ext_info", "extension_info", "extra_metadata", "extra_properties", "fake", "fake_block_device", "fake_block_device_mapping_get_all_by_instance", "fake_confirm_resize", "fake_instance", "fake_reboot", "fake_rebuild", "fake_resize", "fake_revert_resize", "fake_save", "fakes", "flavor_id", "fld", "getattr", "glance", "image", "image_base_url", "image_href", "image_id", "image_meta", "image_meta_table", "image_ref", "image_service", "image_url", "image_uuid", "info", "inst", "inst_id", "instance", "instance_id", "instance_meta", "instance_update_and_get_original", "instance_uuid", "isinstance", "iter", "k", "key", "kwargs", "len", "location", "long_name", "map", "metadata", "method", "method_translations", "mock", "mock_rebuild", "mock_resize", "mox", "next", "next_exception", "nova", "num", "obj", "object", "objects", "orig_get", "password", "properties", "raised", "range", "rebuild", "request_too_large_error", "resize_mock", "response", "return_image_meta", "return_server", "return_server_not_found", "revert_mock", "revert_resize_mock", "robj", "self", "self2", "self_href", "server_not_found", "servers", "servers_v21", "snapshot", "str", "super", "system_metadata", "task_states", "test", "use_slave", "uuid", "uuids", "val", "validation_error", "value", "values", "vm_states", "volume", "volume_api", "webob", "wrap_get", "x", "zip", "Do", "these", "here", "instead", "of", "tearDown", "because", "this", "method", "is", "called\n", "more", "than", "once", "for", "the", "same", "test", "case\n", "proper", "local", "hrefs", "must", "start", "with", "'http://localhost/v2/'\n", "proper", "local", "hrefs", "must", "start", "with", "'http://localhost/v2/'\n", "run", "with", "enable_instance_password", "disabled", "to", "verify", "adminPass\n", "is", "missing", "from", "response.", "See", "lp", "bug", "921814\n", "run", "with", "enable_instance_password", "disabled", "to", "verify", "adminPass\n", "is", "missing", "from", "response.", "See", "lp", "bug", "921814\n", "Tests", "that", "PciRequestAliasNotDefined", "is", "translated", "to", "a", "400", "error."], "/Users/mehranhassani/repos/nova/nova/tests/unit/utils.py": ["CONF", "FAKE_NETWORK_BRIDGE", "FAKE_NETWORK_DHCP_IP4_ADDR", "FAKE_NETWORK_DNS_IP4_ADDR1", "FAKE_NETWORK_DNS_IP4_ADDR2", "FAKE_NETWORK_DNS_IP6_ADDR1", "FAKE_NETWORK_DNS_IP6_ADDR2", "FAKE_NETWORK_INTERFACE", "FAKE_NETWORK_IP4_ADDR1", "FAKE_NETWORK_IP4_ADDR2", "FAKE_NETWORK_IP4_CIDR", "FAKE_NETWORK_IP4_GATEWAY", "FAKE_NETWORK_IP6_ADDR1", "FAKE_NETWORK_IP6_ADDR2", "FAKE_NETWORK_IP6_ADDR3", "FAKE_NETWORK_IP6_CIDR", "FAKE_NETWORK_IP6_GATEWAY", "FAKE_NETWORK_UUID", "FAKE_NETWORK_VLAN", "FAKE_VIF_MAC", "FAKE_VIF_UUID", "False", "IOError", "None", "_compare_args", "_compare_kwargs", "_obj_called_with", "_out", "all", "args", "args1", "args2", "call", "cmp", "compare_obj_primitive", "context", "count", "current", "e", "err", "errno", "exception", "f", "flavor", "flavor_ref", "flavors", "get_test_admin_context", "get_test_flavor", "glance", "has_ipv6_support", "image_id", "image_ref", "image_service", "instance", "instance_ref", "int", "ipv6", "isinstance", "k", "kwargs", "kwargs1", "kwargs2", "list", "manager", "minidns", "network", "network_model", "nova", "obj", "obj_base", "objects", "open", "options", "pair", "platform", "range", "request", "s", "set", "socket", "subnet_4", "subnet_6", "subnets", "sys", "test_dns_managers", "test_flavor", "test_instance", "the_mock", "thing1", "thing2", "vif", "vif_type", "x", "zip", "check", "if", "there", "is", "at", "least", "one", "interface", "with", "ipv6"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/openstack/placement/test_report_client.py": ["CONF", "False", "NoAuthReportClient", "None", "SchedulerReportClientTests", "alloc_data", "conf", "deploy", "fields", "interceptor", "inventory_data", "inventory_url", "mock", "mock_auth", "mock_cn", "mock_endpoint", "mock_vbi", "objects", "report", "request_session", "requests", "res_class", "resp", "rp", "self", "session", "super", "test", "usage_data", "uuids", "vcpu_data", "A", "SchedulerReportClient", "that", "avoids", "keystone.\nSet", "up", "an", "intercepted", "placement", "API", "to", "test", "against.\nCheck", "things", "go", "as", "expected", "when", "doing", "the", "right", "things.", "Supply", "our", "own", "session", "so", "the", "wsgi-intercept", "can", "intercept\n", "the", "right", "thing.", "Another", "option", "would", "be", "to", "use", "the", "direct\n", "urllib3", "interceptor.\n", "TODO(cdent):", "Port", "required", "here", "to", "deal", "with", "a", "bug\n", "in", "wsgi-intercept:\n", "https://github.com/cdent/wsgi-intercept/issues/41\n", "TODO(cdent):", "We", "should", "probably", "also", "have", "a", "test", "that\n", "tests", "that", "when", "allocation", "or", "inventory", "errors", "happen,", "we\n", "are", "resilient.\n", "When", "we", "start", "out", "there", "are", "no", "resource", "providers.\n", "Now", "let's", "update", "status", "for", "our", "compute", "node.\n", "So", "now", "we", "have", "a", "resource", "provider\n", "TODO(cdent):", "change", "this", "to", "use", "the", "methods", "built", "in\n", "to", "the", "report", "client", "to", "retrieve", "inventory?\n", "Update", "allocations", "with", "our", "instance\n", "Check", "that", "allocations", "were", "made\n", "Check", "that", "usages", "are", "up", "to", "date\n", "Delete", "allocations", "with", "our", "instance\n", "No", "usage\n", "Trigger", "the", "reporting", "client", "deleting", "all", "inventory", "by", "setting\n", "the", "compute", "node's", "CPU,", "RAM", "and", "disk", "amounts", "to", "0.\n", "Check", "there's", "no", "more", "inventory", "records"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/user_data.py": ["ALIAS", "ATTRIBUTE_NAME", "alias", "body_deprecated_param", "create_kwargs", "extensions", "name", "schema_user_data", "self", "server_dict", "version", "Add", "user_data", "to", "the", "Create", "Server", "API.", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1."], "/Users/mehranhassani/repos/nova/nova/i18n.py": ["DOMAIN", "_", "_LC", "_LE", "_LI", "_LW", "_translators", "oslo_i18n", "user_locale", "value", "The", "primary", "translation", "function", "using", "the", "well-known", "name", "\"_\"\n", "Translators", "for", "log", "levels.\n\n", "The", "abbreviated", "names", "are", "meant", "to", "reflect", "the", "usual", "use", "of", "a", "short\n", "name", "like", "'_'.", "The", "\"L\"", "is", "for", "\"log\"", "and", "the", "other", "letter", "comes", "from\n", "the", "level."], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_server_group.py": ["AssertionError", "False", "None", "PROJECT_ID_ALT", "REQUIRES_LOCKING", "ServerGroupTestBase", "ServerGroupTestV21", "ServerGroupTestV215", "True", "_", "_enabled_filters", "_report_interval", "_service_down_time", "affinity", "all_projects_admin", "all_projects_non_admin", "anti_affinity", "api_fixture", "api_major_version", "api_openstack1", "bdms", "client", "compute3", "context", "created_group", "created_groups", "created_server", "ctxt", "ctxt_mgr", "db", "db_api", "evacuated_server", "ex", "existing_groups", "expected_status", "failed_server", "fake_network", "flavor", "found_server", "group", "group1", "group2", "group_details", "groups", "host", "host_name", "hosts", "integrated_helpers", "len", "members", "microversion", "migrated_server", "mock", "nova", "nova_fixtures", "openstack1_group", "openstack_group", "other_server", "policy_fixture", "post", "range", "rebuilt_server", "self", "server", "server1_old_host", "server_after_failed_evac", "servers", "soft_affinity", "soft_affinity_patcher", "soft_anti_affinity", "soft_anti_affinity_patcher", "str", "super", "test", "third_server", "time", "untouched_server", "An", "alternate", "project", "id\n", "Note(gibi):", "RamFilter", "is", "needed", "to", "ensure", "that\n", "test_boot_servers_with_affinity_no_valid_host", "behaves", "as", "expected\n", "Override", "servicegroup", "parameters", "to", "make", "the", "tests", "run", "faster\n", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n", "Wait", "for", "it", "to", "finish", "being", "created\n", "NOTE(gibi):", "start", "a", "second", "compute", "host", "to", "be", "able", "to", "test", "affinity\n", "This", "test", "requires", "APIs", "using", "two", "projects.\n", "Create", "an", "API", "using", "project", "'openstack1'.\n", "This", "is", "a", "non-admin", "API.\n\n", "NOTE(sdague):", "this", "is", "actually", "very", "much", "*not*", "how", "this\n", "fixture", "should", "be", "used.", "This", "actually", "spawns", "a", "whole\n", "additional", "API", "server.", "Should", "be", "addressed", "in", "the", "future.\n", "Create", "a", "server", "group", "in", "project", "'openstack'\n", "Project", "'openstack'", "is", "used", "by", "self.api\n", "Create", "a", "server", "group", "in", "project", "'openstack1'\n", "The", "admin", "should", "be", "able", "to", "get", "server", "groups", "in", "all", "projects.\n", "The", "non-admin", "should", "only", "be", "able", "to", "get", "server", "groups\n", "in", "his", "project.\n", "The", "all_projects", "parameter", "is", "ignored", "for", "non-admin", "clients.\n", "Tests", "that", "we", "check", "server", "group", "member", "quotas", "and", "cleanup", "created\n", "resources", "when", "we", "fail", "with", "OverQuota.\n", "make", "sure", "we", "start", "with", "0", "servers\n", "_boot_servers_to_group", "creates", "2", "instances", "in", "the", "group", "in", "order,", "not\n", "multiple", "servers", "in", "a", "single", "request.", "Since", "our", "quota", "is", "1,", "the", "first\n", "server", "create", "would", "pass,", "the", "second", "should", "fail,", "and", "we", "should", "be\n", "left", "with", "1", "server", "and", "it's", "1", "block", "device", "mapping.\n", "Using", "big", "enough", "flavor", "to", "use", "up", "the", "resources", "on", "the", "host\n", "The", "third", "server", "cannot", "be", "booted", "as", "there", "is", "not", "enough", "resource\n", "on", "the", "host", "where", "the", "first", "two", "server", "was", "booted\n", "We", "have", "2", "computes", "so", "the", "third", "server", "won't", "fit", "into", "the", "same", "group\n", "Start", "additional", "host", "to", "test", "migration", "with", "anti-affinity\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "Start", "additional", "host", "to", "test", "evacuation\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "assert", "that", "after", "a", "failed", "evac", "the", "server", "active", "on", "the", "same", "host\n", "as", "before\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "assert", "that", "after", "a", "failed", "evac", "the", "server", "active", "on", "the", "same", "host\n", "as", "before\n", "Load", "only", "anti-affinity", "filter", "so", "affinity", "will", "be", "missing\n", "Load", "only", "affinity", "filter", "so", "anti-affinity", "will", "be", "missing\n", "Load", "only", "soft-anti-affinity", "weigher", "so", "affinity", "will", "be", "missing\n", "Load", "only", "soft", "affinity", "filter", "so", "anti-affinity", "will", "be", "missing\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "Start", "additional", "host", "to", "test", "evacuation\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "assert", "that", "after", "a", "failed", "evac", "the", "server", "active", "on", "the", "same", "host\n", "as", "before\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "assert", "that", "after", "a", "failed", "evac", "the", "server", "active", "on", "the", "same", "host\n", "as", "before\n", "Using", "big", "enough", "flavor", "to", "use", "up", "the", "resources", "on", "the", "first", "host\n", "The", "third", "server", "cannot", "be", "booted", "on", "the", "first", "host", "as", "there\n", "is", "not", "enough", "resource", "there,", "but", "as", "opposed", "to", "the", "affinity", "policy\n", "it", "will", "be", "booted", "on", "the", "other", "host,", "which", "has", "enough", "resources.\n", "Need", "to", "wait", "service_down_time", "amount", "of", "seconds", "to", "ensure\n", "nova", "considers", "the", "host", "down\n", "Note(gibi):", "need", "to", "get", "the", "server", "again", "as", "the", "state", "of", "the", "instance\n", "goes", "to", "ACTIVE", "first", "then", "the", "host", "of", "the", "instance", "changes", "to", "the\n", "new", "host", "later"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance.py": ["False", "None", "True", "_TestInstanceListObject", "_TestInstanceObject", "_test", "actual_args", "actual_inst", "actual_inst_p", "actual_uuids", "admin_reset", "admin_state_reset", "attr", "attr_name", "attrs", "attrs_type", "base", "begin", "call_list", "called_arg", "cell_type", "cells_api_mock", "cells_rpcapi", "columns_to_join", "context", "ctxt", "datetime", "db", "db_delete", "db_exc", "db_extra", "db_faults", "db_flavor", "db_inst", "db_instance", "db_sg", "deleted_at", "dict", "done", "dt", "ec2_ids", "end", "enumerate", "error", "exception", "exp_col", "exp_cols", "exp_task_state", "exp_vm_state", "expected", "expected_attr", "expected_calls", "expected_exception", "expected_inst_p", "expected_json", "expected_objs", "expected_task_state", "expected_updates", "expected_uuids", "expected_vals", "expected_vm_state", "extras", "fake", "fake_devices_metadata", "fake_ec2_ids", "fake_fault", "fake_faults", "fake_flavor", "fake_info_cache", "fake_inst", "fake_inst2", "fake_instance", "fake_instance_get_active_by_window_joined", "fake_instances", "fake_insts", "fake_keypairlist", "fake_keypairs", "fake_load", "fake_mig_context", "fake_obj_numa_topology", "fake_pci_devices", "fake_requests", "fake_secgroup", "fake_secgroups", "fake_service", "fake_topology", "fake_update_from_api", "fake_uuid", "fake_vcpu_model", "fakes", "fault", "faulty", "field", "fields", "fields_with_save_methods", "flavors", "foreign_key", "get_call_list", "getattr", "got_numa_topo", "got_pci_requests", "group", "hasattr", "hit", "host", "i", "id", "igabgsg", "image_meta", "index", "info_cache", "inst", "inst1", "inst2", "inst3", "inst_copy", "inst_list", "inst_value", "instance", "instance_info_cache", "instances", "insts", "json_vcpu_model", "jsonified", "jsonutils", "key", "len", "limit", "list", "loaded_ctxt", "marker", "meta", "meta2", "mig_ctxt", "migration_context_value", "mock", "mock_compat", "mock_create", "mock_db_update", "mock_destroy", "mock_destroy_at_top", "mock_ec2", "mock_exp", "mock_extra_get", "mock_extra_update", "mock_fault_get", "mock_fdo", "mock_get", "mock_get_all", "mock_get_by_filters", "mock_get_by_filters_sort", "mock_instance_extra_update", "mock_is_set", "mock_load", "mock_notif_update", "mock_refresh", "mock_save_field", "mock_send", "mock_upd", "mock_upd_and_get", "mock_upd_cache", "mock_upd_secgrp", "mock_update", "mock_update_and_get", "mock_update_at_top", "mock_update_from_api", "mox", "name", "netaddr", "network_model", "new_ref", "newer_ref", "notifications", "numa_topology", "nwinfo1", "nwinfo1_json", "nwinfo2", "nwinfo2_json", "obj", "object", "objects", "old_ref", "pci_device", "pci_devices", "pci_req_obj", "pci_requests", "primitive", "project_id", "property", "range", "red_letter_date", "result_list", "save_kwargs", "secgroup", "secgroup_ids", "secgroups", "security_group", "self", "set", "setattr", "sgg", "sorted", "str", "tag", "task_states", "test", "test_instance_device_metadata", "test_instance_fault", "test_instance_info_cache", "test_instance_numa_topology", "test_instance_pci_requests", "test_mig_ctxt", "test_objects", "test_security_group", "test_vcpu_model", "timeutils", "update_extra", "updates", "utils", "uuid", "uuids", "vals", "value", "values", "vcpu_model", "vm_states", "which", "x", "zip", "Common", "code", "for", "testing", "save()", "for", "cells/non-cells.", "We", "should", "avoid", "trying", "to", "hit", "the", "database", "to", "reload", "the", "instance\n", "and", "just", "set", "the", "services", "attribute", "to", "an", "empty", "list.\n", "We", "should", "avoid", "trying", "to", "hit", "the", "database", "to", "reload", "the", "instance\n", "and", "just", "set", "the", "tags", "attribute", "to", "an", "empty", "list.\n", "Make", "sure", "we", "don't", "run", "load", "again\n", "isotime", "doesn't", "have", "microseconds", "and", "is", "always", "UTC\n", "NOTE(danms):", "Ignore", "flavor", "migrations", "for", "the", "moment\n", "Tests", "that", "simply", "changing", "the", "'display_name'", "on", "the", "instance\n", "will", "send", "a", "notification.\n", "NOTE(danms):", "Ignore", "flavor", "migrations", "for", "the", "moment\n", "NOTE(danms):", "This", "tests", "that", "we", "don't", "update", "the", "pci_devices\n", "field", "from", "the", "contents", "of", "the", "database.", "This", "is", "not", "because", "we\n", "don't", "necessarily", "want", "to,", "but", "because", "the", "way", "pci_devices", "is\n", "currently", "implemented", "it", "causes", "versioning", "issues.", "When", "that", "is\n", "resolved,", "this", "test", "should", "go", "away.\n", "NOTE(sdague):", "the", "json", "representation", "of", "nova", "object", "for\n", "NUMA", "isn't", "stable", "from", "a", "string", "comparison\n", "perspective.", "There", "are", "sets", "which", "get", "converted", "to", "lists,\n", "and", "based", "on", "platform", "differences", "may", "show", "up", "in", "different\n", "orders.", "So", "we", "can't", "have", "mock", "do", "the", "comparison.", "Instead\n", "manually", "compare", "the", "final", "parameter", "using", "our", "json", "equality\n", "operator", "which", "does", "the", "right", "thing", "here.\n", "This", "is", "re-mocked", "so", "that", "cell_name", "can", "be", "checked", "above.", "Since\n", "instance", "objects", "have", "no", "equality", "testing", "assert_called_once_with\n", "doesn't", "work.\n", "Compare", "primitives", "since", "we", "can't", "check", "instance", "object", "equality\n", "NOTE(danms):", "Make", "sure", "it's", "actually", "a", "bool\n", "NOTE(mikal):", "Make", "sure", "it's", "actually", "a", "bool\n", "NOTE(mikal):", "Make", "sure", "it's", "actually", "a", "bool\n", "inst.id", "is", "not", "set", "and", "can't", "be", "lazy", "loaded\n", "inst.id", "is", "not", "set", "and", "can't", "be", "lazy", "loaded\n", "Make", "sure", "clone", "shows", "no", "changes", "when", "no", "metadata", "is", "set\n", "Make", "sure", "clone", "shows", "no", "changes", "when", "metadata", "is", "set\n", "NOTE(danms):", "Do", "this", "here", "and", "not", "in", "the", "remote", "test", "because\n", "we're", "mocking", "out", "obj_attr_is_set()", "without", "the", "thing", "actually\n", "being", "set,", "which", "confuses", "the", "heck", "out", "of", "the", "serialization\n", "stuff.\n", "Prevent", "lazy-loading", "any", "fields,", "results", "in", "InstanceNotFound\n", "Single", "sort", "key/direction", "is", "set,", "call", "non-sorted", "DB", "function\n", "Multiple", "sort", "keys/directions", "are", "set,", "call", "sorted", "DB", "function\n", "NOTE(mriedem):", "Send", "in", "a", "timezone-naive", "datetime", "since", "the\n", "InstanceList.get_active_by_window_joined", "method", "should", "convert", "it\n", "to", "tz-aware", "for", "the", "DB", "API", "call,", "which", "we'll", "assert", "with", "our", "stub.\n", "make", "sure", "begin", "is", "tz-aware"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_quota_classes.py": ["ADMIN_API", "True", "api_sample_base", "response", "sample_dir", "self", "set_id", "subs", "Get", "api", "sample", "to", "show", "quota", "classes.\n", "Get", "api", "sample", "to", "update", "quota", "classes."], "/Users/mehranhassani/repos/nova/nova/cells/filters/image_properties.py": ["None", "cell", "cells", "filter_properties", "filtered_cells", "filters", "hypervisor_version_requires", "image_properties", "l", "list", "predicate", "request_spec", "self", "str", "version", "version_requires", "versionpredicate"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/cells.py": ["False", "copy", "create", "create_v20", "parameter_types", "sync_instances", "update", "update_v20", "NOTE:", "In", "unparse_transport_url(),", "a", "url", "consists", "of", "the\n", "following", "parameters:\n", "\"qpid://<username>:<password>@<rpc_host>:<rpc_port>/\"\n", "or\n", "\"rabbit://<username>:<password>@<rpc_host>:<rpc_port>/\"\n", "Then", "the", "url", "is", "stored", "into", "transport_url", "of", "cells", "table\n", "which", "is", "defined", "with", "String(255).\n", "Allow", "to", "specify", "any", "string", "for", "strong", "password."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_rpc.py": ["AssertionError", "None", "RPCResetFixture", "TestRPC", "TestRequestContextSerializer", "True", "_test", "cell1_client", "cell2_client", "cell3_client", "cell_client", "client", "client_id", "cm", "cm1", "cm2", "cm3", "conf", "context", "control_exchange", "copy", "create_transport", "ctxt", "datetime", "default_client", "deser_ent", "ends", "exception", "exmods", "expected", "expected_calls", "expected_driver_topic_kwargs", "expected_kwargs", "fixtures", "get_url", "host", "instance", "instance1", "instance2", "instance3", "jsonutils", "kwargs", "legacy_notifier", "len", "messaging", "mock", "mock_client", "mock_create", "mock_exmods", "mock_get", "mock_noti_trans", "mock_notif", "mock_prep", "mock_prim", "mock_req", "mock_rpcclient", "mock_ser", "mock_set", "mock_transport", "mock_url", "not_trans_cleanup", "notif_format", "notif_transport", "notifier", "objects", "router", "rpc", "self", "ser", "ser_ent", "serializer", "server", "super", "t0", "test", "testtools", "tgt", "time_fixture", "trans_cleanup", "transport", "url", "utils_fixture", "uuids", "Make", "a", "class", "that", "resets", "all", "of", "the", "global", "variables", "in", "nova.rpc\n", "We", "can't", "import", "nova.test.TestCase", "because", "that", "sets", "up", "an", "RPCFixture\n", "that", "pretty", "much", "nullifies", "all", "of", "this", "testing\n", "The", "expected", "call", "to", "get", "the", "legacy", "notifier", "will", "require", "no", "new\n", "kwargs,", "and", "we", "expect", "the", "new", "notifier", "will", "need", "the", "noop", "driver\n", "verify", "a", "client", "was", "created", "by", "ClientRouter\n", "verify", "cell", "client", "was", "returned\n", "reset", "and", "check", "that", "cached", "client", "is", "returned", "the", "second", "time\n", "verify", "a", "client", "was", "created", "by", "ClientRouter\n", "verify", "cell", "client", "was", "returned\n", "reset", "and", "check", "that", "cached", "client", "is", "returned", "the", "second", "time\n", "verify", "default", "client", "was", "returned\n", "verify", "default", "client", "was", "returned\n", "default", "client,", "cell1", "client,", "cell2", "client\n", "expire", "cell1", "client", "and", "cell2", "client\n", "add", "cell3", "client\n", "default", "client,", "cell3", "client\n", "expire", "cell3", "client\n", "access", "cell3", "client", "to", "refresh", "it\n", "default", "client", "and", "cell3", "client", "should", "be", "there"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/migrate_server.py": ["ALIAS", "False", "LOG", "MigrateServerController", "None", "True", "_", "_LE", "__name__", "alias", "api_version_request", "args", "async", "block_migration", "body", "common", "compute", "context", "controller", "disk_over_commit", "e", "ex", "exc", "exception", "excutils", "extension", "extensions", "force", "host", "id", "instance", "kwargs", "logging", "message", "migrate_server", "ms_policies", "name", "req", "self", "state_error", "strutils", "super", "validation", "version", "wsgi", "Permit", "admins", "to", "migrate", "a", "server", "to", "a", "new", "host.\nPermit", "admins", "to", "(live)", "migrate", "a", "server", "to", "a", "new", "host.\nEnable", "migrate", "and", "live-migrate", "server", "actions."], "/Users/mehranhassani/repos/nova/nova/cells/weights/ram_by_instance_type.py": ["CONF", "cell", "instance_type", "memory_needed", "nova", "ram_free", "request_spec", "self", "str", "units_by_mb", "weight_properties", "weights", "Weigh", "cells", "by", "instance_type", "requested."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/storage/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/vif.py": ["CONF", "HyperVBaseVIFDriver", "abc", "instance", "nova", "object", "self", "utilsfactory", "vif", "Neutron", "VIF", "driver.\nNova", "network", "VIF", "driver.", "Neutron", "takes", "care", "of", "plugging", "the", "port\n", "Neutron", "takes", "care", "of", "unplugging", "the", "port\n", "TODO(alepilotti)", "Not", "implemented"], "/Users/mehranhassani/repos/nova/setup.py": ["ImportError", "True", "setuptools", "THIS", "FILE", "IS", "MANAGED", "BY", "THE", "GLOBAL", "REQUIREMENTS", "REPO", "-", "DO", "NOT", "EDIT\n", "In", "python", "<", "2.7.4,", "a", "lazy", "loading", "of", "package", "`pbr`", "will", "break\n", "setuptools", "if", "some", "other", "modules", "registered", "functions", "in", "`atexit`.\n", "solution", "from:", "http://bugs.python.org/issue15881#msg170215\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_retry_filters.py": ["None", "TestRetryFilter", "fakes", "host", "objects", "retry", "retry_filter", "self", "spec_obj", "super", "test", "Test", "case", "where", "retry/re-scheduling", "is", "disabled.\n", "Node", "not", "previously", "tried.\n", "same", "host,", "different", "node\n", "different", "host", "and", "node\n", "Node", "was", "already", "tried."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_action.py": ["False", "NOW", "None", "True", "_TestInstanceActionEventObject", "_TestInstanceActionObject", "action", "context", "db", "dict", "enumerate", "event", "expected_packed_action_finish", "expected_packed_action_start", "expected_packed_values", "fake_action", "fake_actions", "fake_event", "fake_events", "fake_tb", "index", "instance_action", "mock", "mock_finish", "mock_format", "mock_get", "mock_pack", "mock_start", "mock_tb", "obj_list", "object", "self", "six", "str", "test", "test_class", "test_objects", "timeutils", "traceback", "utils_fixture", "uuids", "values", "Tests", "that", "exc_tb", "is", "serialized", "when", "it's", "not", "a", "string", "type.\n", "Tests", "that", "traceback.format_tb", "is", "not", "called", "when", "exc_tb", "is", "unicode.\n", "Tests", "that", "traceback.format_tb", "is", "not", "called", "when", "exc_tb", "is", "a", "str\n", "and", "want_result", "is", "False,", "so", "no", "event", "should", "come", "back."], "/Users/mehranhassani/repos/nova/nova/conf/availability_zone.py": ["availability_zone_opts", "cfg", "conf"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_host_mapping.py": ["HostMappingTestCase", "None", "True", "USES_DB_SELF", "args", "cell", "cell_map_obj", "cell_mapping", "context", "create_cell_mapping", "create_mapping", "create_mapping_obj", "ctxt", "db_cell", "db_hm", "db_hm_new", "db_mapping", "exception", "fixtures", "getattr", "hm", "host_mapping", "key", "kwargs", "mapping", "mapping_obj", "model_field", "obj", "sample_cell_mapping", "sample_mapping", "self", "super", "test", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/309_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/test_console.py": ["CONF", "ConsoleAPITestCase", "ConsoleTestCase", "_console_uuid", "_ctxt", "_fake_db_console_get", "_fake_db_console_get_all_by_instance", "_instance_uuid", "columns_to_join", "compute_rpcapi", "con", "cons1", "cons2", "console", "console_api", "console_id", "console_instances", "console_manager", "context", "db", "exception", "fake_instance", "inst", "instance", "mock", "mock_get", "mock_get_console_topic", "mock_get_instance_by_uuid", "mock_id", "mock_remove", "mock_rpc", "new_pool", "nova", "objects", "old_rpcapi", "pool", "pool2", "pool_info", "self", "super", "test", "Tests", "For", "Console", "proxy.\nTest", "case", "for", "console", "proxy", "manager.\nCreate", "a", "test", "instance.\nTest", "case", "for", "console", "API."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_configdrive2.py": ["CONF", "FakeInstanceMD", "False", "None", "True", "c", "cfg", "configdrive", "context", "fake_instance", "fd", "fileutils", "imagefile", "inst", "mock", "mock_required", "mox", "object", "os", "self", "tempfile", "test", "utils", "NOTE(mikal):", "we", "can't", "check", "for", "a", "VFAT", "output", "here", "because", "the\n", "filesystem", "creation", "stuff", "has", "been", "mocked", "out", "because", "it\n", "requires", "root", "permissions"], "/Users/mehranhassani/repos/nova/nova/conf/remote_debug.py": ["CLI_OPTS", "cfg", "conf", "debugger_group"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/firewall.py": ["Dom0IptablesFirewallDriver", "None", "args", "bytes", "cmd", "firewall", "isinstance", "json_ret", "jsonutils", "kwargs", "linux_net", "map", "process_input", "ret", "rule", "self", "str", "super", "version", "x", "xenapi_session", "Prepare", "arguments", "for", "plugin", "call\n", "Create", "IpTablesManager", "with", "executor", "through", "plugin\n", "No", "multiport", "needed", "for", "XS!"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_hash_ring.py": ["None", "True", "conductors", "delta", "equals_bar_or_baz", "exception", "fake_1_hosts", "fake_2_hosts", "hash_ring", "hashlib", "hosts", "int", "key", "len", "mapping", "matchers", "mock", "mock_md5", "new", "new_conductors", "new_mapping", "new_ring", "new_services", "node", "nodes", "num_nodes", "num_services", "old", "r1", "r2", "range", "redistribution_factor", "ring", "self", "services", "set", "str", "test", "x", "NOTE(deva):", "the", "mapping", "used", "in", "these", "tests", "is", "as", "follows:\n", "if", "hosts", "=", "[foo,", "bar]:\n", "fake", "->", "foo,", "bar\n", "if", "hosts", "=", "[foo,", "bar,", "baz]:\n", "fake", "->", "foo,", "bar,", "baz\n", "fake-again", "->", "bar,", "baz,", "foo\n", "2**PARTITION_EXPONENT", "calls", "to", "md5.update", "per", "host\n", "PARTITION_EXPONENT", "is", "currently", "always", "5,", "so", "32", "calls", "each", "here\n", "We", "should", "have", "one", "hosts", "for", "each", "thing\n", "And", "they", "must", "not", "be", "the", "same", "answers", "even", "on", "this", "simple", "data.\n", "Adding", "1", "service", "to", "a", "set", "of", "N", "should", "move", "1/(N+1)", "of", "all", "nodes\n", "Eg,", "for", "a", "cluster", "of", "10", "nodes,", "adding", "one", "should", "move", "1/11,", "or", "9%\n", "We", "allow", "for", "1/N", "to", "allow", "for", "rounding", "in", "tests.\n", "Removing", "1", "service", "from", "a", "set", "of", "N", "should", "move", "1/(N)", "of", "all", "nodes\n", "Eg,", "for", "a", "cluster", "of", "10", "nodes,", "removing", "one", "should", "move", "1/10,", "or", "10%\n", "We", "allow", "for", "1/(N-1)", "to", "allow", "for", "rounding", "in", "tests."], "/Users/mehranhassani/repos/nova/plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_base_flows.py": ["__name__", "bridge_addr", "bridge_name", "command", "len", "main", "novalib", "os", "ovs_ofctl", "phys_dev_name", "pnic_ofport", "rule", "script_name", "sys", "noqa\n", "always", "clear", "all", "flows", "first\n", "these", "flows", "are", "lower", "priority", "than", "all", "VM-specific", "flows.\n", "allow", "all", "traffic", "from", "the", "physical", "NIC,", "as", "it", "is", "trusted", "(i.e.,\n", "from", "a", "filtered", "vif,", "or", "from", "the", "physical", "infrastructure)\n", "Allow", "traffic", "from", "dom0", "if", "there", "is", "a", "management", "interface\n", "present", "(its", "IP", "address", "is", "on", "the", "bridge", "itself)\n", "default", "drop"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_aggregates.py": ["AGGREGATE", "AGGREGATE_LIST", "AggregateTestCaseV21", "Exception", "FORMATTED_AGGREGATE", "KeyError", "None", "True", "_make_agg_list", "_make_agg_obj", "_transform_aggregate_az", "_transform_aggregate_list_azs", "a", "actual", "add_host", "agg", "agg_dict", "agg_id", "agg_list", "agg_obj", "aggregate", "aggregates_v21", "api_version_request", "availability_zone", "avr_v240", "avr_v241", "az", "bad_request", "body", "compute_api", "context", "environ", "eval", "exc", "exception", "expected", "fake_mock_aggs", "fakes", "host", "id", "marshalled_agg", "matchers", "md", "metadata", "mock", "mock_aggs", "mock_create_agg", "mock_create_aggregate", "mock_update_agg", "mocked", "name", "obj_base", "object", "objects", "remove_host", "req", "result", "self", "set_metadata", "stub_add_host_to_aggregate", "stub_create_aggregate", "stub_delete_aggregate", "stub_get_aggregate", "stub_list_aggregates", "stub_remove_host_from_aggregate", "stub_update_aggregate", "super", "test", "test_metadata", "uuidsentinel", "values", "Tests", "for", "the", "aggregates", "admin", "api.\nTest", "Case", "for", "aggregates", "admin", "api.", "the", "Aggregate", "object", "looks", "for", "availability_zone", "within", "metadata,\n", "so", "if", "availability_zone", "is", "in", "the", "top-level", "dict,", "move", "it", "down", "into\n", "metadata.", "We", "also", "have", "to", "delete", "the", "key", "from", "the", "top-level", "dict", "because\n", "availability_zone", "is", "a", "read-only", "property", "on", "the", "Aggregate", "object\n", "at", "minimum,", "metadata", "is", "always", "set", "to", "{}", "in", "the", "api\n", "_marshall_aggregate()", "just", "basically", "turns", "the", "aggregate", "returned\n", "from", "the", "AggregateAPI", "into", "a", "dict,", "so", "this", "tests", "that", "transform.\n", "We", "would", "expect", "the", "dictionary", "that", "comes", "out", "is", "the", "same", "one\n", "that", "we", "pump", "into", "the", "aggregate", "object", "in", "the", "first", "place\n", "_marshall_aggregate()", "puts", "all", "fields", "and", "obj_extra_fields", "in", "the\n", "top-level", "dict,", "so", "we", "need", "to", "put", "availability_zone", "at", "the", "top", "also\n", "UUID", "isn't", "in", "microversion", "2.40", "and", "before"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_block_device.py": ["Exception", "False", "None", "TestDriverBlockDevice", "True", "_", "access_mode", "alias", "availability_zone", "bdm", "bdm_dict", "bdms", "blank_bdm_dict", "blank_driver_bdm", "blank_legacy_driver_bdm", "block_device", "block_device_mapping", "bool", "check_attach", "check_save", "cinder", "cls", "connection_info", "connector", "context", "converted", "db_bdm", "delete_fail", "delete_on_termination", "driver", "driver_attach", "driver_bdm", "driver_block_device", "driver_classes", "elevated_context", "enc_data", "encryptors", "ephemeral_bdm_dict", "ephemeral_driver_bdm", "ephemeral_legacy_driver_bdm", "exception", "expected", "expected_conn_info", "fail_check_attach", "fail_driver_attach", "fail_volume_attach", "fail_volume_image", "fail_volume_snapshot", "fake_block_device", "fake_instance", "fake_volume", "field_val", "fields", "fld", "getattr", "hasattr", "image", "image_bdm_dict", "image_driver_bdm", "image_legacy_driver_bdm", "instance", "instance_detail", "isinstance", "jsonutils", "k", "legacy_bdm", "legacy_ephemerals", "legacy_swap", "local_image", "matchers", "mock", "mock_exception", "name", "no_blank_volume", "no_size_bdm", "no_swap", "no_volume_image", "no_volume_snapshot", "objects", "other_name", "passthru", "range", "save_mock", "self", "set", "six", "size", "snapshot", "snapshot_bdm_dict", "snapshot_driver_bdm", "snapshot_legacy_driver_bdm", "super", "swap", "swap_bdm_dict", "swap_driver_bdm", "swap_legacy_driver_bdm", "test", "test_bdm", "test_blank", "test_eph", "test_ephemeral", "test_ephemerals", "test_image", "test_mock", "test_snapshot", "test_swap", "test_volume", "updates", "uuids", "v", "vol_attach", "vol_create", "vol_delete", "vol_get_snap", "volume", "volume_attach", "volume_bdm_dict", "volume_class", "volume_driver_bdm", "volume_legacy_driver_bdm", "wait_func", "create", "bdm", "objects", "for", "testing\n", "Test", "passthru", "attributes\n", "Make", "sure", "that", "all", "others", "raise", "_invalidType\n", "Test", "the", "save", "method\n", "We", "can't", "set", "fake", "values", "on", "enums,", "like", "device_type,\n", "so", "skip", "those.\n", "Test", "that", "nothing", "is", "set", "on", "the", "object", "if", "there", "are", "no", "actual", "changes\n", "Tests", "that", "the", "volume", "created", "from", "the", "snapshot", "has", "the", "same", "AZ", "as\n", "the", "instance.\n", "Make", "sure", "theses", "are", "not", "called\n", "Tests", "that", "the", "volume", "created", "from", "the", "image", "has", "the", "same", "AZ", "as", "the\n", "instance.\n", "Make", "sure", "theses", "are", "not", "called\n", "Tests", "that", "the", "blank", "volume", "created", "is", "in", "the", "same", "availability", "zone\n", "as", "the", "instance.\n", "Test", "that", "the", "ephemerals", "work", "as", "expected\n", "Tests", "that", "we", "get", "None", "back", "if", "cinder.cross_az_attach=True", "even", "if\n", "the", "instance", "has", "an", "AZ", "assigned.", "Note", "that", "since", "cross_az_attach\n", "defaults", "to", "True", "we", "don't", "need", "to", "set", "a", "flag", "explicitly", "for", "the", "test.\n", "Only", "DriverVolumeBlockDevice", "derived", "devices", "should", "refresh", "their\n", "connection_info", "during", "a", "refresh_conn_infos", "call.\n", "NOTE(lyarwood):", "Can't", "think", "of", "a", "better", "way", "of", "testing", "this", "as", "we\n", "can't", "assert_not_called", "if", "the", "method", "isn't", "in", "the", "spec."], "/Users/mehranhassani/repos/nova/nova/policies/scheduler_hints.py": ["POLICY_ROOT", "base", "policy", "scheduler_hints_policies"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/320_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_disco.py": ["None", "conf", "conn", "connector", "dcon", "disco", "disk_info", "libvirt_driver", "mock", "self", "test_volume"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/__init__.py": ["VMwareVCDriver", "driver", "NOTE(sdague)", "for", "nicer", "compute_driver", "specification"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/admin_password.py": ["ALIAS", "AdminPasswordController", "NotImplementedError", "_", "admin_password", "alias", "ap_policies", "args", "body", "common", "compute", "context", "controller", "e", "exc", "exception", "extension", "extensions", "id", "instance", "kwargs", "msg", "name", "password", "req", "self", "super", "validation", "version", "wsgi", "Admin", "password", "management", "support.", "TODO(eliqiao):", "Here", "should", "be", "204(No", "content)", "instead", "of", "202", "by", "v2.1+\n", "microversions", "because", "the", "password", "has", "been", "changed", "when", "returning\n", "a", "response."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/297_add_forced_down_for_services.py": ["Boolean", "Column", "False", "MetaData", "Table", "True", "meta", "migrate_engine", "services", "shadow_services"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_volumes.py": ["AssistedSnapshotCreateTestCaseV21", "AssistedSnapshotDeleteTestCaseV21", "BootFromVolumeTest", "CONF", "CommonBadRequestTestCase", "FAKE_UUID", "FAKE_UUID_A", "FAKE_UUID_B", "FAKE_UUID_C", "FAKE_UUID_NOTEXIST", "False", "IMAGE_UUID", "None", "TestAssistedVolumeSnapshotsPolicyEnforcementV21", "TestVolumeAttachPolicyEnforcementV21", "TestVolumesAPIDeprecation", "True", "VolumeApiTestV21", "VolumeAttachTestsV21", "_fake_compute_api_create", "api_exc", "arg", "assisted_snaps", "assisted_snaps_v21", "attachments", "bad_request", "base", "body", "cinder", "cinder_exc", "classmethod", "cls", "common", "compute_api", "context", "controller_cls", "controller_method", "create_info", "datetime", "db_list", "delete_info", "description", "device", "dict", "encodeutils", "entity_name", "exc", "exception", "expected_attrs", "expected_status", "fake_attach_volume", "fake_attach_volume_to_locked_server", "fake_bdm_list_get_by_instance_uuid", "fake_block_device", "fake_compute_volume_snapshot_create", "fake_compute_volume_snapshot_delete", "fake_detach_volume", "fake_detach_volume_from_locked_server", "fake_func", "fake_get_instance", "fake_get_volume", "fake_instance", "fake_swap_volume", "fake_swap_volume_for_locked_server", "fake_volume_create", "fakes", "flavors", "func", "id", "image_href", "inst", "inst_type", "instance", "instance_id", "instance_type", "instance_uuid", "isinstance", "item_cls", "jsonutils", "kwarg", "kwargs", "len", "mock", "mock_attach", "mock_create", "mock_delete", "mock_detach", "mock_get", "mock_get_instance", "mock_isroot", "mock_mr", "mock_update", "name", "new_volume", "new_volume_id", "nova", "object", "objects", "old_volume", "old_volume_id", "params", "property", "req", "res", "resource", "resp", "resp_dict", "result", "resv_id", "rule_name", "rules", "self", "server", "size", "snapshot", "snapshot_id", "status_int", "super", "test", "url_prefix", "urllib", "uuid", "validation_error", "vm_states", "vol", "volume", "volume_id", "volumes_v21", "webob", "Tests", "that", "cinder", "exceptions", "are", "correctly", "translated", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object."], "/Users/mehranhassani/repos/nova/nova/tests/unit/keymgr/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_preserve_ephemeral_rebuild.py": ["False", "None", "True", "admin_password", "compute_api", "context", "fake", "fake_rebuild", "files_to_inject", "image", "image_href", "instance", "kwargs", "old_rebuild", "resp_tpl", "response", "sample_dir", "self", "self_", "str", "subs", "test_servers", "uuid", "value"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_imagecache.py": ["CONF", "False", "ImageCacheManagerTestCase", "None", "True", "act", "active", "age", "all_instances", "base_dir", "base_file", "base_file1", "base_file2", "base_file3", "base_file_list", "base_filename", "cStringIO", "cache_name", "compute", "compute_manager", "context", "contextlib", "ctxt", "disk_path", "ent", "exists", "expect_set", "expected", "expected_cache_name", "expected_exist", "expected_remove", "fake_get_disk", "fake_instance", "fake_instances", "filters", "fingerprint", "fn", "fname", "formatters", "found", "fq_path", "get_disk_backing_file", "getattr", "getmtime", "handler", "hashed", "hashed_1", "hashed_21", "hashed_22", "hashed_42", "i", "image_cache_manager", "image_id", "imagecache", "images", "img", "info", "info_fname", "instance", "instances", "intercept_log_messages", "inuse_images", "is_valid_info_file", "isfile", "len", "libvirt_utils", "list", "listdir", "listing", "lock", "lock_dir", "lock_file", "lock_name", "lock_path", "lockdir", "lockname", "lockutils", "logging", "mock", "mock_bdms", "mock_exist", "mock_exists", "mock_get_age", "mock_getmtime", "mock_instance_list", "mock_lock", "mock_mtime", "mock_remove", "mock_synchronized", "mock_time", "mylog", "nova", "objects", "open", "orig_exists", "orig_getmtime", "orig_isfile", "orig_listdir", "orig_remove", "os", "p", "path", "processutils", "range", "rem", "remove", "removefile", "res", "sanitized", "self", "set", "sorted", "stream", "super", "test", "time", "tmpdir", "unexpected", "utils", "uuids", "x", "Make", "a", "base", "file", "for", "testing.", "Ensure", "a", "known", "input", "to", "this", "function", "produces", "a", "known", "output.\n", "This", "test", "assures", "us", "that,", "used", "in", "the", "expected", "manner,", "the", "function\n", "doesn't", "raise", "an", "exception", "in", "either", "python2", "or", "python3.", "It", "also\n", "serves", "as", "a", "canary", "to", "warn", "if", "any", "change", "in", "underlying", "libraries\n", "would", "produce", "output", "incompatible", "with", "current", "usage.\n", "Take", "a", "known", "image_id", "and", "the", "pre-calculated", "hexdigest", "of", "its", "sha1\n", "TODO(mdbooth):", "Info", "files", "are", "no", "longer", "created", "by", "Newton,\n", "but", "we", "must", "test", "that", "we", "continue", "to", "handle", "them", "correctly", "as\n", "they", "may", "still", "be", "around", "from", "before", "the", "upgrade,", "and", "they", "may\n", "be", "created", "by", "pre-Newton", "computes", "if", "we're", "on", "shared", "storage.\n", "Once", "we", "can", "be", "sure", "that", "all", "computes", "are", "running", "at", "least\n", "Newton", "(i.e.", "in", "Ocata),", "we", "can", "be", "sure", "that", "nothing", "is\n", "creating", "info", "files", "any", "more,", "and", "we", "can", "delete", "the", "tests", "for\n", "them.\n", "We're", "only", "checking", "for", "deletion,", "so", "contents", "are", "irrelevant\n", "Files", "are", "initially", "too", "new", "to", "delete\n", "Old", "files", "get", "cleaned", "up", "though\n", "TODO(mdbooth):", "Remove", "test", "for", "deletion", "of", "info", "file", "in", "Ocata\n", "(see", "comment", "in", "_make_base_file)\n", "Files", "are", "initially", "too", "new", "to", "delete\n", "This", "file", "should", "stay", "longer", "than", "a", "resized", "image\n", "Originals", "don't", "stay", "forever", "though\n", "TODO(mdbooth):", "Remove", "test", "for", "deletion", "of", "info", "file", "in", "Ocata\n", "(see", "comment", "in", "_make_base_file)\n", "This", "test", "is", "solely", "to", "execute", "the", "\"does", "not", "exist\"", "code", "path.", "We\n", "don't", "expect", "the", "method", "being", "tested", "to", "do", "anything", "in", "this", "case.\n", "This", "will", "raise", "an", "OSError", "because", "of", "file", "permissions\n", "Fake", "base", "directory", "existence\n", "The", "python", "coverage", "tool", "got", "angry", "with", "my", "overly", "broad", "mocks\n", "Fake", "up", "some", "instances", "in", "the", "instances", "directory\n", "The", "python", "coverage", "tool", "got", "angry", "with", "my", "overly", "broad", "mocks\n", "Fake", "isfile", "for", "these", "faked", "images", "in", "_base\n", "The", "python", "coverage", "tool", "got", "angry", "with", "my", "overly", "broad", "mocks\n", "Fake", "the", "database", "call", "which", "lists", "running", "instances\n", "Fake", "the", "utils", "call", "which", "finds", "the", "backing", "image\n", "Fake", "getmtime", "as", "well\n", "Make", "sure", "we", "don't", "accidentally", "remove", "a", "real", "file\n", "Don't", "try", "to", "remove", "fake", "files\n", "And", "finally", "we", "can", "make", "the", "call", "we're", "actually", "testing...\n", "The", "argument", "here", "should", "be", "a", "context,", "but", "it", "is", "mocked", "out\n", "Verify"], "/Users/mehranhassani/repos/nova/nova/crypto.py": ["CONF", "Exception", "IOError", "LOG", "None", "OSError", "True", "TypeError", "ValueError", "_", "_LE", "__file__", "__name__", "_create_x509_openssl_config", "_ensure_project_folder", "_err", "_project_cert_subject", "_sign_csr", "_user_cert_subject", "a", "admin", "b", "backends", "base64", "binascii", "bits", "ca_dir", "ca_file_path", "ca_folder", "ca_path", "cafile", "cert", "certificate", "conffile", "content", "context", "crl_file_path", "crl_path", "crlfile", "crt_fn", "crtfile", "csr", "csr_text", "csrfile", "data", "db", "digest", "ex", "exc", "exception", "exceptions", "excutils", "f", "file", "file_name", "fileutils", "fingerprint", "fname", "generate_fingerprint", "generate_x509_cert", "generate_x509_fingerprint", "geninter_sh_path", "genrootca_sh_path", "hashes", "inbound", "isinstance", "key", "key_fn", "key_path", "keyfile", "keyout", "logging", "md5hash", "nova", "open", "os", "out", "outbound", "padding", "paramiko", "pem_key", "priv_key", "private_key", "private_key_file", "processutils", "project_folder", "project_id", "pub_bytes", "pub_data", "pub_key", "public_key", "raw_fp", "revoke_cert", "serial", "serialization", "sign_csr", "signed_csr", "six", "ssh_public_key", "str", "subject", "text", "tmpdir", "upn", "user_id", "utils", "x509", "zip", "Ensure", "the", "CA", "filesystem", "exists.\nGet", "crl", "file", "for", "project.\nRevoke", "a", "cert", "by", "file", "name.\nRevoke", "all", "user", "certs.\nRevoke", "all", "project", "certs.\nRevoke", "certs", "for", "user", "in", "project.\nHelper", "to", "generate", "user", "cert", "subject.\nHelper", "to", "generate", "user", "cert", "subject.\nGenerate", "and", "sign", "a", "cert", "for", "user", "in", "project.\nGenerate", "a", "cert", "for", "passwordless", "auth", "for", "user", "in", "project.", "Test", "that", "the", "given", "public_key", "string", "is", "a", "proper", "ssh", "key.", "The\n", "returned", "object", "is", "unused", "since", "pyca/cryptography", "does", "not", "have", "a\n", "fingerprint", "method.\n", "NOTE(vish):", "potential", "race", "condition", "here\n", "NOTE(vish):", "This", "is", "somewhat", "useless", "because", "we", "can", "just", "shut", "down\n", "the", "vpn.\n", "NOTE(vish):", "The", "2048", "is", "to", "maintain", "compatibility", "with", "the", "old", "script.\n", "We", "are", "using", "\"project-vpn\"", "as", "the", "user_id", "for", "the", "cert\n", "even", "though", "that", "user", "may", "not", "really", "exist.", "Ultimately\n", "this", "will", "be", "changed", "to", "be", "launched", "by", "a", "real", "user.", "At\n", "that", "point", "we", "will", "can", "delete", "this", "helper", "method.\n", "Change", "working", "dir", "to", "CA"], "/Users/mehranhassani/repos/nova/nova/conf/cells.py": ["ALL_CELLS_OPTS", "False", "True", "cell_manager_opts", "cell_messaging_opts", "cell_rpc_driver_opts", "cell_scheduler_opts", "cell_state_manager_opts", "cells_group", "cells_opts", "cfg", "conf", "mute_weigher_opts", "ram_weigher_opts", "weigher_opts", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "max", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavors.py": ["ATOMNS", "Controller", "DisabledFlavorsWithRealDBTestV21", "False", "FlavorsTestV21", "NS", "None", "ParseIsPublicTestV21", "True", "_fake", "_prefix", "_rspv", "api_flavorids", "common", "context", "db_flavorids", "disabled_flavorid", "exception", "expected", "expected_flavors", "f", "fake_get_limit_and_marker", "fake_request", "fakes", "flavor", "flavor_id", "flavor_list", "flavors", "flavors_v21", "href_parts", "i", "is_public", "limit", "marker", "matchers", "max_limit", "min", "mock", "mock_get", "objects", "params", "read_deleted", "req", "request", "response", "response_links", "response_list", "return_flavor_not_found", "self", "set", "str", "super", "test", "url", "urlparse", "webob", "Tests", "that", "disabled", "flavors", "should", "not", "be", "shown", "nor", "listed.", "NOTE(oomichi):", "On", "v2.1", "API,", "some", "extensions", "of", "v2.0", "are", "merged\n", "as", "core", "features", "and", "we", "can", "get", "the", "following", "parameters", "as", "the\n", "default.\n", "Flavor", "lists", "may", "be", "filtered", "by", "minRam.\n", "Ensure", "you", "cannot", "list", "flavors", "with", "invalid", "minRam", "param.\n", "Flavor", "lists", "may", "be", "filtered", "by", "minDisk.\n", "Ensure", "you", "cannot", "list", "flavors", "with", "invalid", "minDisk", "param.\n", "Add", "a", "new", "disabled", "type", "to", "the", "list", "of", "flavors"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/image/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/policies/console_output.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "console_output_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/servicegroup/drivers/db.py": ["CONF", "Exception", "False", "LOG", "None", "RuntimeError", "True", "_", "_LE", "_LI", "_LW", "__name__", "abs", "api", "base", "elapsed", "getattr", "group", "is_up", "isinstance", "last_heartbeat", "logging", "member", "messaging", "nova", "report_interval", "self", "service", "service_ref", "six", "str", "timeutils", "Update", "the", "state", "of", "this", "service", "in", "the", "datastore.", "NOTE(russellb)", "If", "this", "service_ref", "came", "in", "over", "rpc", "via\n", "conductor,", "then", "the", "timestamp", "will", "be", "a", "string", "and", "needs", "to", "be\n", "converted", "back", "to", "a", "datetime.\n", "Objects", "have", "proper", "UTC", "timezones,", "but", "the", "timeutils", "comparison\n", "below", "does", "not", "(and", "will", "fail)\n", "Timestamps", "in", "DB", "are", "UTC.\n", "TODO(termie):", "make", "this", "pattern", "be", "more", "elegant.\n", "NOTE(johngarbutt)", "during", "upgrade", "we", "will", "see", "messaging", "timeouts\n", "as", "nova-conductor", "is", "restarted,", "so", "only", "log", "this", "error", "once.\n", "NOTE(rpodolyaka):", "we'd", "like", "to", "avoid", "catching", "of", "all", "possible\n", "exceptions", "here,", "but", "otherwise", "it", "would", "become", "possible", "for\n", "the", "state", "reporting", "thread", "to", "stop", "abruptly,", "and", "thus", "leave\n", "the", "service", "unusable", "until", "it's", "restarted.\n", "trigger", "the", "recovery", "log", "message,", "if", "this", "error", "goes", "away"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_imagecache.py": ["CONF", "None", "NotImplementedError", "True", "all_instances", "bdms", "block_device", "block_device_obj", "cache_manager", "context", "ctxt", "fake_instance", "image_cache_manager", "imagecache", "instance", "instances", "len", "mock", "mock_bdms_by_uuid", "nova", "objects", "running", "self", "set", "swap_bdm_128", "swap_bdm_128_list", "swap_bdm_256", "swap_bdm_256_list", "test", "uuids", "vm_states", "The", "argument", "here", "should", "be", "a", "context,", "but", "it's", "mocked", "out"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/security_group/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_status.py": ["CONF", "Exception", "FAKE_IP_POOL_INVENTORY", "FAKE_VCPU_INVENTORY", "StringIO", "TestNovaStatusMain", "TestPlacementCheck", "TestUpgradeCheckBasic", "TestUpgradeCheckCellsV2", "TestUpgradeCheckResourceProviders", "True", "USES_DB_SELF", "auth", "category_name", "cm", "cn", "context", "ctxt", "error_details", "expected", "expected_return_value", "fake_checks", "fields", "fixtures", "get", "getattr", "i", "inventory", "keystone", "ks_exc", "mock", "mock_CONF", "mock_fn", "mock_fn_args", "mock_fn_kwargs", "mock_get_action_fn", "mock_parse_args", "mock_print_bash", "mock_version_string", "nova", "nova_fixtures", "objects", "output", "range", "res", "result", "return_value", "rp", "rp_uuid", "self", "status", "str", "super", "test", "uuid", "uuids", "uuidutils", "x", "Tests", "for", "the", "basic", "nova-status", "command", "infrastructure.\nTests", "for", "the", "nova-status", "upgrade", "cells", "v2", "specific", "check.\nWe'll", "create", "two", "cell", "mappings", "but", "not", "have", "cell0", "mapped", "yet.\nTests", "a", "successful", "cells", "v2", "upgrade", "check.\nTests", "for", "the", "nova-status", "upgrade", "check", "on", "resource", "providers.\nHelper", "method", "to", "create", "a", "resource", "provider", "with", "inventory", "NOTE(mriedem):", "We", "only", "use", "objects", "as", "a", "convenience", "to", "populate", "the", "database\n", "in", "the", "tests,", "we", "don't", "use", "them", "in", "the", "actual", "CLI.\n", "assert", "the", "traceback", "is", "in", "the", "output\n", "make", "the", "error", "details", "over", "60", "characters", "so", "we", "test", "the", "wrapping\n", "We'll", "setup", "the", "API", "DB", "fixture", "ourselves", "and", "slowly", "build", "up", "the\n", "contents", "until", "the", "check", "passes.\n", "create", "the", "cell0", "and", "first", "cell", "mappings\n", "create", "the", "host", "mapping", "indirectly", "-", "host", "mappings", "existing", "implies\n", "there", "is", "a", "compute", "node", "so", "that's", "not", "checked.\n", "This", "is", "what", "the", "ResourceTracker", "sets", "up", "in", "the", "nova-compute", "service.\n", "This", "is", "the", "kind", "of", "thing", "that", "Neutron", "will", "setup", "externally", "for", "routed\n", "networks.\n", "We'll", "setup", "the", "database", "ourselves", "because", "we", "need", "to", "use", "cells", "fixtures\n", "for", "multiple", "cell", "mappings.\n", "We", "always", "need", "the", "API", "DB", "to", "be", "setup.\n", "We", "don't", "have", "a", "cell", "mapping,", "just", "the", "regular", "old", "main", "database\n", "because", "let's", "assume", "they", "haven't", "run", "simple_cell_setup", "yet.\n", "this", "is", "assumed", "to", "be", "base", "install", "so", "it's", "OK", "but", "with", "details\n", "this", "will", "setup", "two", "cell", "mappings,", "one", "for", "cell0", "and", "a", "single", "cell1\n", "there", "are", "no", "compute", "nodes", "in", "the", "cell1", "database", "so", "we", "have", "0\n", "resource", "providers", "and", "0", "compute", "nodes,", "so", "it's", "assumed", "to", "be", "a", "fresh\n", "install", "and", "not", "a", "failure.\n", "this", "is", "assumed", "to", "be", "base", "install", "so", "it's", "OK", "but", "with", "details\n", "create", "a", "compute", "node", "which", "will", "be", "in", "cell1", "by", "default\n", "create", "a", "compute", "node", "which", "will", "be", "in", "cell1", "by", "default\n", "create", "a", "single", "resource", "provider", "that", "represents", "an", "external", "shared\n", "IP", "allocation", "pool", "-", "this", "tests", "our", "filtering", "when", "counting", "resource\n", "providers\n", "setup", "the", "cell0", "and", "cell1", "mappings\n", "create", "two", "compute", "nodes", "(by", "default", "in", "cell1)\n", "create", "a", "single", "resource", "provider", "with", "some", "VCPU", "inventory\n", "setup", "the", "cell0", "and", "cell1", "mappings\n", "create", "a", "single", "compute", "node\n", "create", "a", "single", "resource", "provider", "with", "some", "VCPU", "inventory\n", "create", "an", "externally", "shared", "IP", "allocation", "pool", "resource", "provider"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/009_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_floating_ips.py": ["CONF", "FloatingIpsTest", "api_sample_base", "context", "interface", "nova", "pool", "response", "sample_dir", "self", "super", "NOTE(sdague):", "the", "first", "floating", "ip", "will", "always", "have", "1", "as", "an", "id,\n", "but", "it", "would", "be", "better", "if", "we", "could", "get", "this", "from", "the", "create"], "/Users/mehranhassani/repos/nova/nova/policies/flavor_rxtx.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "flavor_rxtx_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_floating_ips.py": ["ExtendedFloatingIpTestV21", "FAKE_UUID", "False", "FloatingIPActionPolicyEnforcementV21", "FloatingIPPolicyEnforcementV21", "FloatingIpTestNeutronV21", "FloatingIpTestV21", "FloatingIpsDeprecationTest", "None", "TEST_INST", "True", "WRONG_INST", "_", "actual", "actual_fl", "address", "affect_auto_assigned", "all_ips", "allocate_mock", "any", "arg", "args", "associate_mock", "body", "call", "called_floaters", "compute", "compute_api_get", "compute_utils", "context", "db", "delete", "dict", "dict_", "dis_and_del", "disoc_fip", "ex", "exc", "exception", "expect_ex", "expected", "expected_attrs", "expected_fl", "expected_result", "extensions", "f", "fake1", "fake2", "fake_allocate", "fake_associate_floating_ip", "fake_disassociate_floating_ip", "fake_get", "fake_get_floating_ip", "fake_get_floating_ip_addr_auto_assigned", "fake_get_instance_by_floating_ip_addr", "fake_instance_get", "fake_network", "fake_network_api_associate", "fakes", "fip", "fip1", "fip2", "fip_val", "fips_v21", "fixed_address", "fixed_id", "fixed_ip", "fixed_ips_mock", "floater", "floaters", "floating", "floating_address", "floating_ip", "floating_ip_2", "floating_ip_address", "floating_ips", "floating_obj", "func", "get_floating_ip", "get_instance_by_floating_ip_addr", "get_nw_info_for_instance", "id", "instance", "instance_id", "ip", "ip_list", "isinstance", "kwarg", "kwargs", "list", "mock", "mock_trans", "network", "network_api_disassociate", "network_api_get_floating_ip", "network_api_get_floating_ip_by_address", "network_api_get_floating_ips_by_project", "network_api_release", "obj_base", "objects", "rel_fip", "req", "res", "res_dict", "response", "result", "rsp", "rule", "rule_name", "self", "six", "status_int", "stub_nw_info", "super", "test", "tuple", "uuid", "uuids", "validation_error", "view", "webob", "wrong_uuid", "Create", "a", "floating", "IP", "object.\nCreate", "a", "floating", "IP", "object.", "Only", "disassociate_and_release_floating_ip", "is\n", "called", "if", "using", "neutron\n", "NOTE(vish):", "network_get", "uses", "the", "id", "not", "the", "address\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "these", "are", "a", "few", "bad", "param", "tests"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/openstack/placement/fixtures.py": ["APIFixture", "AllocationFixture", "CONF", "False", "None", "allocation", "conf", "config", "context", "deploy", "fixture", "fixtures", "inventory", "objects", "os", "rp", "rp_name", "rp_uuid", "self", "super", "uuidutils", "Setup", "the", "required", "backend", "fixtures", "for", "a", "basic", "placement", "service.\nAn", "APIFixture", "that", "has", "some", "pre-made", "Allocations.", "Set", "up", "stderr", "and", "stdout", "captures", "by", "directly", "driving", "the\n", "existing", "nova", "fixtures", "that", "do", "that.", "This", "captures", "the\n", "output", "that", "happens", "outside", "individual", "tests", "(for\n", "example", "database", "migrations).\n", "Be", "explicit", "about", "all", "three", "database", "connections", "to", "avoid\n", "potential", "conflicts", "with", "config", "on", "disk.\n", "NOTE(cdent):", "api", "and", "main", "database", "are", "not", "used", "but", "we", "still", "need\n", "to", "manage", "them", "to", "make", "the", "fixtures", "work", "correctly", "and", "not", "cause\n", "conflicts", "with", "other", "tests", "in", "the", "same", "process.\n", "Stealing", "from", "the", "super"], "/Users/mehranhassani/repos/nova/nova/api/ec2/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/monkey_patch_example/example_b.py": ["arg1", "arg2", "object", "self", "Example", "Module", "B", "for", "testing", "utils.monkey_patch()."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_floating_ip_pools.py": ["api_sample_base", "context", "fake_get_floating_ip_pools", "pool_list", "response", "sample_dir", "self", "subs"], "/Users/mehranhassani/repos/nova/nova/tests/uuidsentinel.py": ["UUIDSentinels", "ValueError", "__name__", "name", "object", "self", "sys", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/272_add_keypair_type.py": ["migrate_engine", "NOTE(mikal):", "this", "migration", "number", "exists", "like", "this", "because", "change\n", "I506dd1c8d0f0a877fdfc1a4ed11a8830d9600b98", "needs", "to", "revert", "the", "hyper-v\n", "keypair", "change,", "but", "we", "promise", "that", "we", "will", "never", "remove", "a", "schema", "migration\n", "version.", "Instead,", "we", "replace", "this", "migration", "with", "a", "noop.\n\n", "It", "is", "hypothetically", "possible", "that", "a", "hyper-v", "continuous", "deployer", "exists", "who\n", "will", "have", "a", "poor", "experience", "because", "of", "this", "code", "revert,", "if", "that", "deployer\n", "is", "you,", "please", "contact", "the", "nova", "team", "at", "openstack-dev@lists.openstack.org\n", "and", "we", "will", "walk", "you", "through", "the", "manual", "fix", "required", "for", "this", "problem."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_affinity_filters.py": ["None", "TestDifferentHostFilter", "TestSameHostFilter", "TestSimpleCIDRAffinityFilter", "affinity_filter", "affinity_ip", "dict", "fake_uuid", "fakes", "filt_cls", "host", "host_state", "inst1", "mock", "mock_instance", "objects", "policy", "self", "spec_obj", "super", "test", "uuids"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/num_instances_filter.py": ["CONF", "LOG", "NumInstancesFilter", "ValueError", "_LW", "__name__", "aggregate_vals", "e", "filters", "host_state", "int", "logging", "max_instances", "max_instances_per_host", "nova", "num_instances", "passes", "self", "spec_obj", "utils", "value", "Filter", "out", "hosts", "with", "too", "many", "instances.", "TODO(sfinucan):", "Remove", "this", "warning", "when", "the", "named", "config", "options\n", "gains", "a", "'min'", "parameter."], "/Users/mehranhassani/repos/nova/nova/objects/migration_context.py": ["None", "True", "VERSION", "base", "classmethod", "cls", "context", "db", "db_extra", "db_obj", "exception", "fields", "instance_uuid", "jsonutils", "primitive", "target_version", "versionutils", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "old/new", "pci_devices", "and", "pci_requests"], "/Users/mehranhassani/repos/nova/nova/virt/image/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/010_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/ironic/client_wrapper.py": ["CONF", "IRONIC_API_VERSION", "IRONIC_GROUP", "LOG", "None", "True", "_", "__name__", "args", "attempt", "attr", "attribute", "auth_plugin", "cli", "client", "exception", "getattr", "hasattr", "importutils", "ironic", "ironic_url", "ks_loading", "kwargs", "logging", "max_retries", "method", "msg", "nova", "obj", "object", "range", "retry_interval", "retry_on_conflict", "self", "sess", "Ironic", "client", "wrapper", "class", "that", "encapsulates", "authentication", "logic.\nTell", "the", "wrapper", "to", "invalidate", "the", "cached", "ironic-client.\nLoad", "an", "auth", "plugin", "from", "CONF", "options.", "The", "API", "version", "required", "by", "the", "Ironic", "driver\n", "NOTE(deva):", "work", "around", "a", "lack", "of", "symbols", "in", "the", "current", "version.\n", "If", "an", "auth", "plugin", "name", "is", "defined", "in", "`auth_type`", "option", "of", "[ironic]\n", "group,", "register", "its", "options", "and", "load", "it.\n", "If", "we've", "already", "constructed", "a", "valid,", "authed", "client,", "just", "return\n", "that.\n", "Retries", "for", "Conflict", "exception\n", "NOTE(clenimar):", "by", "default,", "the", "endpoint", "is", "taken", "from", "the", "service\n", "catalog.", "Use", "`api_endpoint`", "if", "you", "want", "to", "override", "it.\n", "Cache", "the", "client", "so", "we", "don't", "have", "to", "reconstruct", "and\n", "reauthenticate", "it", "every", "time", "we", "need", "it.\n", "NOTE(dtantsur):", "allow", "for", "authentication", "retry,", "other", "retries", "are\n", "handled", "by", "ironicclient", "starting", "with", "0.8.0\n", "In", "this", "case,", "the", "authorization", "token", "of", "the", "cached\n", "ironic-client", "probably", "expired.", "So", "invalidate", "the", "cached\n", "client", "and", "the", "next", "try", "will", "start", "with", "a", "fresh", "one.\n", "This", "code", "should", "be", "unreachable", "actually"], "/Users/mehranhassani/repos/nova/nova/console/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/ips.py": ["ALIAS", "IPsController", "_", "_view_builder_class", "alias", "common", "context", "exc", "extensions", "id", "instance", "ips_policies", "kwargs", "msg", "name", "networks", "nova", "parent", "req", "resources", "self", "server_id", "super", "version", "views_addresses", "wsgi", "The", "servers", "addresses", "API", "controller", "for", "the", "OpenStack", "API.\nServer", "addresses.", "Note(gmann):", "here", "using", "V2", "view", "builder", "instead", "of", "V3", "to", "have", "V2.1\n", "server", "ips", "response", "same", "as", "V2", "which", "does", "not", "include", "\"OS-EXT-IPS:type\"\n", "&", "\"OS-EXT-IPS-MAC:mac_addr\".", "If", "needed", "those", "can", "be", "added", "with\n", "microversion", "by", "using", "V2.1", "view", "builder."], "/Users/mehranhassani/repos/nova/nova/policies/networks.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "networks_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/fixed_ips.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "fixed_ips_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/policies/cells.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "cells_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_external_events.py": ["ADMIN_API", "ServerExternalEventsSamplesJsonTest", "True", "response", "sample_dir", "self", "subs", "super", "test_servers"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/wsgi.py": ["CONFIG_FILE", "None", "True", "__name__", "_get_config_file", "conf", "conffile", "config", "deploy", "dirname", "env", "extra_log_level_defaults", "logging", "os", "py_logging", "setup_logging", "Any", "dependent", "libraries", "that", "have", "unhelp", "debug", "levels", "should", "be\n", "pinned", "to", "a", "higher", "default.\n", "initialize", "the", "config", "system\n", "initialize", "the", "logging", "system\n", "dump", "conf", "if", "we're", "at", "debug\n", "build", "and", "return", "our", "WSGI", "app"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_rpcapi.py": ["CONF", "DefaultArg", "False", "NetworkRpcAPITestCase", "None", "True", "address", "call_mock", "can_send_mock", "cast_mock", "cctxt_mock", "cfg", "collections", "context", "csv_mock", "ctxt", "dev", "exception", "expected_fanout", "expected_kwargs", "expected_retval", "expected_version", "fake_instance", "fake_network", "getattr", "host", "instance", "isinstance", "k", "kwargs", "mac", "method", "mock", "network", "network_dict", "network_rpcapi", "objects_base", "prepare_kwargs", "prepare_mock", "retval", "rpc_method", "rpc_mock", "rpcapi", "self", "super", "targeted_by_instance", "targeted_methods", "teardown", "test", "v", "version_check", "vif_address", "Used", "to", "specify", "the", "default", "value", "expected", "if", "no", "real", "value", "is", "passed\n", "Fix", "up", "for", "migrate_instance_*", "calls.\n", "assert", "our", "mocks", "were", "called", "as", "expected\n", "Tests", "that", "the", "mac", "kwarg", "is", "not", "passed", "when", "we", "can't", "send", "version\n", "1.14", "to", "the", "network", "manager.\n", "assert", "our", "mocks", "were", "called", "as", "expected", "232\n", "Tests", "that", "the", "network", "object", "is", "converted", "to", "a", "primitive", "if", "it\n", "can't", "send", "version", "1.15.\n", "assert", "our", "mocks", "were", "called", "as", "expected"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/279_fix_unique_constraint_for_compute_node.py": ["MetaData", "Table", "True", "UniqueConstraint", "compute_nodes", "meta", "migrate_engine", "ukey", "Drop", "the", "old", "UniqueConstraint\n", "Add", "new", "UniqueConstraint"], "/Users/mehranhassani/repos/nova/nova/cmd/cells.py": ["CONF", "config", "gmr", "logging", "nova", "objects", "server", "service", "sys", "utils", "version", "Starter", "script", "for", "Nova", "Cells", "Service."], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/test_type.py": ["None", "c", "ctype", "hasattr", "self", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_migrate_server.py": ["False", "MigrateServerPolicyEnforcementV21", "MigrateServerTestsV21", "MigrateServerTestsV225", "MigrateServerTestsV230", "MigrateServerTestsV234", "None", "True", "_api_version", "_fake_controller", "admin_only_action_common", "api_version_request", "args_map", "async", "body", "body_args", "body_map", "check_response", "controller_name", "disk_over_commit", "ex", "exc", "exc_info", "exception", "exception_arg", "expected_exc", "expected_result", "fake_exc", "fakes", "force", "getattr", "instance", "kwargs", "litteral_force", "live_migrate_method", "method_translations", "migrate_server", "migrate_server_v21", "param", "rule_name", "self", "six", "super", "test", "uuid", "uuidutils", "validation_error", "webob", "We", "don't", "have", "disk_over_commit", "in", "v2.25\n", "NOTE(tdurakov):", "for", "REST", "API", "version", "2.34", "and", "above,", "tests", "below", "are", "not\n", "valid,", "as", "they", "are", "made", "in", "background."], "/Users/mehranhassani/repos/nova/nova/tests/unit/notifications/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_console_auth_tokens.py": ["ADMIN_API", "True", "data", "jsonutils", "re", "response", "sample_dir", "self", "subs", "test_servers", "token", "url", "uuid"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/343_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/compute/stats.py": ["False", "None", "Stats", "ValueError", "_", "_get", "current_workload", "dict", "instance", "is_removed", "isinstance", "k", "key", "num_backups", "num_builds", "num_migrations", "num_rebuilds", "num_rescues", "num_resizes", "num_snapshots", "num_unshelves", "old_state", "os_type", "project_id", "property", "self", "state", "state_type", "stats", "super", "task_state", "task_states", "uuid", "vm_state", "vm_states", "x", "Handler", "for", "updates", "to", "compute", "node", "workload", "stats.\nApply", "stats", "provided", "as", "a", "dict", "or", "a", "json", "encoded", "string.\nCalculate", "an", "I/O", "based", "load", "by", "counting", "I/O", "heavy", "operations.\nUpdate", "stats", "after", "an", "instance", "is", "changed.\nSave", "the", "useful", "bits", "of", "instance", "state", "for", "tracking", "purposes.", "Track", "instance", "states", "for", "compute", "node", "workload", "calculations:\n", "First,", "remove", "stats", "from", "the", "previous", "instance\n", "state:\n", "new", "instance\n", "Now", "update", "stats", "from", "the", "new", "instance", "state:\n", "save", "updated", "I/O", "workload", "in", "stats:"], "/Users/mehranhassani/repos/nova/nova/tests/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/type_filter.py": ["True", "aggregate_vals", "filters", "host_state", "instance_type", "instance_type_id", "other_types_on_host", "run_filter_once_per_request", "self", "spec_obj", "utils", "val", "x", "Aggregate", "data", "does", "not", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/test_websocketproxy.py": ["False", "None", "NovaProxyRequestHandlerBaseTestCase", "True", "check_token", "client_address", "exception", "getfqdn", "handler", "header", "mock", "mock_sys", "request_mock", "self", "server_mock", "super", "test", "tsock", "websocketproxy", "Tests", "for", "nova", "websocketproxy.", "no", "reverse", "dns", "look", "up\n", "plain", "address"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_request_spec.py": ["None", "True", "_TestRequestSpecObject", "_test_create_args", "_test_save_args", "base", "cells", "changes", "context", "ctxt", "destroy_in_db", "dict", "exception", "expected", "f", "fake_computes_obj", "fake_dict", "fake_flavor", "fake_image_dict", "fake_instance", "fake_numa_limits", "fake_pci_requests", "fake_request_spec", "fake_spec", "fakes", "field", "filt_props", "filter_properties", "flavor", "flavor_dict", "from_dict", "get_by_uuid", "getattr", "hints_dict", "image", "image_meta", "image_to_primitive", "instance", "instance_fields", "instance_group", "instance_uuid", "jsonutils", "len", "limits_dict", "mock", "mock_limits", "mock_pgi", "mock_reset", "obj_to_primitive", "object", "objects", "ovo_base", "pci_from_spec", "primitive", "req_obj", "request_spec", "retry_dict", "self", "self2", "serialized_obj", "set", "sgl", "skip", "spec", "spec_dict", "spec_obj", "spec_to_legacy_instance", "test_objects", "uuids", "uuidutils", "versions", "Just", "isolating", "the", "test", "for", "the", "from_dict()", "method\n", "Just", "isolating", "the", "test", "for", "the", "from_dict()", "method\n", "just", "add", "a", "dumb", "check", "to", "have", "a", "full", "coverage\n", "We", "seriously", "don't", "care", "about", "the", "return", "values,", "we", "just", "want", "to", "make\n", "sure", "that", "all", "the", "fields", "are", "set\n", "Make", "sure", "that", "all", "fields", "are", "set", "using", "that", "helper", "method\n", "just", "making", "sure", "that", "the", "context", "is", "set", "by", "the", "method\n", "Make", "sure", "that", "all", "fields", "are", "set", "using", "that", "helper", "method\n", "just", "making", "sure", "that", "the", "context", "is", "set", "by", "the", "method\n", "This", "test", "makes", "sure", "that", "we", "don't", "overwrite", "instance", "group", "passed\n", "to", "from_components\n", "This", "test", "makes", "sure", "that", "we", "populate", "instance", "group", "if", "not\n", "present\n", "This", "test", "makes", "sure", "that", "we", "populate", "instance", "group", "if", "not\n", "present\n", "instance", "properties\n", "primitive", "fields\n", "object", "fields\n", "DB", "creation", "would", "have", "set", "an", "id\n", "DB", "creation", "would", "have", "set", "an", "id\n", "Making", "sure", "the", "fake", "object", "has", "forced", "hosts", "and", "nodes"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/342_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/compute/monitors/cpu/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/fakes.py": ["None", "args", "devspec", "f", "fake_pci_whitelist", "functools", "kwargs", "mock", "patcher", "self", "whitelist", "wrapper"], "/Users/mehranhassani/repos/nova/nova/objects/network.py": ["CONF", "False", "None", "True", "VERSION", "ValueError", "_", "associate", "changes", "cidr", "cls", "context", "db", "db_network", "db_networks", "db_value", "exception", "field", "fields", "force", "host", "int", "isinstance", "key", "netaddr", "netmask", "network", "network_id", "network_uuid", "network_uuids", "nova", "obj_base", "objects", "prefix", "primitive", "project", "project_id", "project_only", "self", "set_host", "staticmethod", "str", "target_version", "updates", "value", "versionutils", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "in_use_on_host()\n", "Version", "1.2:", "Added", "mtu,", "dhcp_server,", "enable_dhcp,", "share_address\n", "NOTE(danms):", "For", "some", "reason,", "historical", "code", "stores", "the\n", "IPv6", "netmask", "as", "just", "the", "CIDR", "mask", "length,", "so", "convert", "that\n", "back", "here", "before", "saving", "for", "now.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "get_by_project()\n", "Version", "1.2:", "Network", "<=", "version", "1.2"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_middleware.py": ["TestCORSMiddleware", "True", "_mock_getattr", "api_sample_base", "cfg", "instance", "key", "response", "self", "super", "Here", "we", "monkeypatch", "GroupAttr.__getattr__,", "necessary", "because", "the\n", "paste.ini", "method", "of", "initializing", "this", "middleware", "creates", "its", "own\n", "ConfigOpts", "instance,", "bypassing", "the", "regular", "config", "fixture.\n", "Mocking", "also", "does", "not", "work,", "as", "accessing", "an", "attribute", "on", "a", "mock\n", "object", "will", "return", "a", "MagicMock", "instance,", "which", "will", "fail\n", "configuration", "type", "checks.\n", "Initialize", "the", "application", "after", "all", "the", "config", "overrides", "are", "in\n", "place.\n", "Reset", "the", "configuration", "overrides."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_api_validation.py": ["APIValidationTestCase", "AdditionalPropertiesDisableTestCase", "AdditionalPropertiesEnableTestCase", "BooleanTestCase", "CellNameLeadingTrailingSpacesTestCase", "CellNameTestCase", "CidrFormatTestCase", "DatetimeTestCase", "Exception", "FakeQueryParametersController", "FakeRequest", "False", "HostnameIPaddressTestCase", "HostnameTestCase", "IntegerRangeTestCase", "IntegerTestCase", "Ipv4TestCase", "Ipv6TestCase", "MicroversionsSchemaTestCase", "NameTestCase", "NameWithLeadingTrailingSpacesTestCase", "None", "NoneTypeTestCase", "PatternPropertiesTestCase", "QueryParamsSchemaTestCase", "RequiredDisableTestCase", "RequiredEnableTestCase", "StringLengthTestCase", "StringTestCase", "TcpUdpPortTestCase", "True", "UriTestCase", "UuidTestCase", "ValueError", "_get_all_chars", "api_version", "api_version_request", "base_detail", "body", "cellre", "check", "checks", "copy", "detail", "enum_boolean", "environ", "error", "ex", "exc", "exception", "expected_detail", "fakes", "fixtures", "format_checker", "i", "invalid_uri", "item", "jsonschema_exc", "legacy_v2", "list", "method", "object", "parameter_types", "post", "query_schema", "r", "range", "re", "req", "res", "schema", "schema_none", "schema_v20_str", "schema_v21_int", "self", "set", "should_fail", "six", "super", "sys", "test", "validation", "validators", "value", "this", "is", "much", "easier", "to", "think", "about", "if", "we", "only", "use", "the", "ascii\n", "subset", "because", "it's", "a", "printable", "range", "we", "can", "think\n", "about.", "The", "algorithm", "works", "for", "all", "ranges.\n", "if", "we", "allow", "whitespace", "the", "range", "starts", "earlier\n", "excluding", "a", "character", "will", "give", "us", "2", "ranges\n", "inverting", "which", "gives", "us", "all", "the", "initial", "unprintable", "characters.\n", "excluding", "characters", "that", "create", "a", "singleton.", "Naively", "this", "would", "be:\n", "'", "-@B-BD-~'", "which", "seems", "to", "work,", "but", "'", "-@BD-~'", "is", "more", "natural.\n", "ws=True", "means", "the", "positive", "regex", "has", "printable", "whitespaces,\n", "so", "the", "inverse", "will", "not.", "The", "inverse", "will", "include", "things", "we\n", "exclude.\n", "parameter", "'foo'", "expect", "a", "UUID\n", "The", "JSON-schema", "matches", "to", "the", "API", "version", "2.3", "and", "above.", "Request\n", "with", "version", "2.1", "to", "ensure", "there", "isn't", "no", "strip", "out", "for", "additional\n", "parameters", "when", "schema", "didn't", "match", "the", "request", "version.\n", "Note(jrosenboom):", "This", "is", "referencing", "an", "internal", "python", "error\n", "string,", "which", "is", "no", "stable", "interface.", "We", "need", "a", "patch", "in", "the\n", "jsonschema", "library", "in", "order", "to", "fix", "this", "properly.\n", "trailing", "unicode", "space\n", "non-printable", "unicode\n", "four-byte", "unicode,", "if", "supported", "by", "this", "python", "build\n", "non-printable", "unicode\n", "four-byte", "unicode,", "if", "supported", "by", "this", "python", "build\n", "trailing", "unicode", "space\n", "non-printable", "unicode\n", "four-byte", "unicode,", "if", "supported", "by", "this", "python", "build\n", "leading", "unicode", "space\n", "unicode", "space\n", "non-printable", "unicode\n", "four-byte", "unicode,", "if", "supported", "by", "this", "python", "build\n#'\n", "'aGVsbG8gd29ybGQ='", "is", "the", "base64", "code", "of", "'hello", "world'"], "/Users/mehranhassani/repos/nova/nova/cmd/spicehtml5proxy.py": ["CONF", "baseproxy", "config", "nova", "spice", "sys"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_utils.py": ["AttributeError", "False", "None", "True", "_list", "call_info", "cell", "cell_path", "cells_utils", "class_name", "context", "dict", "exception", "expected_calls", "fake_compute", "fake_context", "fake_instance", "fake_service", "filters", "getattr", "i", "inspect", "instance_get_all_by_filters", "instances", "instances0", "instances1", "item", "len", "limit", "marker", "marker0", "marker1", "mock", "mock_get_by_filters", "mock_get_by_id", "mock_shuffle", "obj", "obj_proxy", "objects", "path", "primitive", "project_id", "proxy", "random", "random_shuffle", "range", "result", "result_cell", "result_item", "self", "serializer", "shuffle", "sort_dir", "sort_key", "staticmethod", "test", "together", "updated_since", "x", "Test", "case", "for", "Cells", "utility", "methods.", "Pretend", "we", "return", "a", "full", "list", "the", "first", "time", "otherwise", "we", "loop\n", "infinitely\n", "Test", "normal", "usage\n", "Test", "with", "no", "cell\n", "Recreating", "the", "primitive", "by", "hand", "to", "isolate", "the", "test", "for", "only\n", "the", "deserializing", "method"], "/Users/mehranhassani/repos/nova/nova/network/dns_driver.py": ["NotImplementedError", "_address", "_domain", "_fqdomain", "_name", "_type", "object", "self", "Defines", "the", "DNS", "manager", "interface.", "Does", "nothing."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_io_ops_filters.py": ["agg_mock", "fakes", "host", "io_ops_filter", "mock", "objects", "self", "set", "spec_obj", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/ironic/test_patcher.py": ["CONF", "False", "IronicDriverFieldsTestCase", "True", "cfg", "expected", "fake_instance", "instance", "ironic_utils", "node", "nova_context", "objects", "observed", "operator", "patch", "patcher", "patcher_obj", "preserve", "self", "sorted", "str", "super", "test", "Generic", "expected", "patches"], "/Users/mehranhassani/repos/nova/nova/tests/unit/consoleauth/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/303_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/services.py": ["ALIAS", "False", "KeyError", "None", "ServiceController", "True", "_", "_services", "action", "actions", "active", "additional_fields", "ag", "aggrs", "alias", "alive", "api_services", "api_version_request", "binary", "body", "compute", "context", "exc", "exception", "explanation", "extensions", "field", "forced_down", "host", "id", "msg", "name", "params_to_update", "payload", "reason", "req", "resources", "ret_value", "s", "self", "service", "service_detail", "servicegroup", "services", "services_policies", "state", "status", "svc", "utils", "validation", "version", "webob", "wsgi", "Enable", "scheduling", "for", "a", "service.\nDisable", "scheduling", "for", "a", "service", "with", "optional", "log.\nDisable", "scheduling", "for", "a", "service", "with", "a", "log.\nEnable/Disable", "scheduling", "for", "a", "service.\nSet", "or", "unset", "forced_down", "flag", "for", "the", "service\nDo", "the", "actual", "PUT/update\nCalculate", "action", "dictionary", "dependent", "on", "provided", "fields\nDeletes", "the", "specified", "service.\nPerform", "service", "update\nServices", "support.", "remove", "the", "service", "from", "all", "the", "aggregates", "in", "which", "it's", "included"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/servers.py": ["ALIAS", "CONF", "DEVICE_TAGGING_MIN_COMPUTE_VERSION", "EXTENSION_CREATE_NAMESPACE", "False", "KeyError", "LOG", "None", "ServersController", "TAG_SEARCH_FILTERS", "True", "TypeError", "UnicodeDecodeError", "ValueError", "_", "_LW", "__name__", "_check_load_extension", "_view_builder_class", "alias", "all_tenants", "allowed_search_options", "api_version_request", "attr_map", "attrs", "availability_zone", "bdm", "bdms", "blacklist", "block_device_mapping", "body", "br_uuid", "check_load_extension", "collection_actions", "common", "compute", "compute_utils", "context", "create_kwargs", "create_schema", "ctxt", "data", "description", "e", "elevated", "entity", "err", "error", "exc", "exception", "expected_attrs", "expl", "ext", "extensions", "flavor_id", "flavor_ref", "flavors", "glance", "handler", "hasattr", "helpers", "host", "id", "image", "image_href", "image_id", "image_name", "image_ref", "image_uuid", "inst_type", "instance", "instance_attribute", "instance_id", "instance_list", "instance_uuid", "instances", "is_detail", "isinstance", "key", "kwargs", "l", "len", "limit", "link", "list", "logging", "marker", "member_actions", "messaging", "metadata", "min_compute_version", "msg", "name", "net_id", "network", "network_uuids", "networks", "node", "nova", "nova_context", "objects", "opt", "opt_list", "parse_az", "parsed", "password", "re", "reboot_type", "rebuild_dict", "rebuild_kwargs", "rebuild_schema", "remove_invalid_options", "req", "req_body", "req_nets", "request", "request_attribute", "requested_networks", "required_function", "resize_dict", "resources", "resp", "response", "resv_id", "return_reservation_id", "robj", "schema", "schema_server_create", "schema_server_create_v20", "schema_server_create_v219", "schema_server_create_v232", "schema_server_create_v237", "schema_server_rebuild", "schema_server_rebuild_v20", "schema_server_rebuild_v219", "schema_server_resize", "schema_server_update", "schema_server_update_v20", "schema_server_update_v219", "schema_servers", "search_options", "search_opts", "self", "server", "server_dict", "server_policies", "servers", "should_load_extension", "six", "sort_dirs", "sort_keys", "state_error", "states", "staticmethod", "statuses", "stevedore", "str", "strutils", "super", "supports_device_tagging", "tag_filter", "target", "task_state", "timeutils", "unknown_options", "update_dict", "utils", "uuidutils", "validation", "version", "view", "views_servers", "vm_state", "webob", "whitelist", "wsgi", "The", "Server", "API", "base", "controller", "class", "for", "the", "OpenStack", "API.\nReturns", "a", "list", "of", "server", "names", "and", "ids", "for", "a", "given", "user.\nReturns", "a", "list", "of", "server", "details", "for", "a", "given", "user.\nReturns", "a", "list", "of", "servers,", "based", "on", "any", "search", "options", "specified.\nCreate", "a", "list", "of", "requested", "networks", "from", "the", "networks", "attribute.\nReturns", "server", "details", "by", "server", "id.\nCreates", "a", "new", "server", "for", "a", "given", "user.\nUpdate", "server", "then", "pass", "on", "to", "version-specific", "controller.\nBegin", "the", "resize", "process", "with", "given", "instance/flavor.\nDestroys", "a", "server.\nResizes", "a", "given", "instance", "to", "the", "flavor", "size", "requested.\nRebuild", "an", "instance", "with", "the", "given", "attributes.\nSnapshot", "a", "server", "instance.\nDetermine", "the", "admin", "password", "for", "a", "server", "on", "creation.\nReturn", "server", "search", "options", "allowed", "by", "non-admin.\nStart", "an", "instance.\nStop", "an", "instance.\nTrigger", "crash", "dump", "in", "an", "instance\nRemove", "search", "options", "that", "are", "not", "valid", "for", "non-admin", "API/context.\nServers.", "Just", "in", "case...\n", "Convenience", "return\n", "Check", "whitelist", "is", "either", "empty", "or", "if", "not", "then", "the", "extension\n", "is", "in", "the", "whitelist\n", "if", "there", "is", "no", "whitelist,", "we", "accept", "everything,\n", "so", "we", "only", "care", "about", "the", "blacklist.\n", "Filter", "out", "for", "the", "existence", "of", "the", "required\n", "function", "here", "rather", "than", "on", "every", "request.", "We\n", "don't", "have", "a", "new", "abstract", "base", "class", "to", "reduce\n", "duplication", "in", "the", "extensions", "as", "they", "may", "want\n", "to", "implement", "multiple", "server", "(and", "other)", "entry\n", "points", "if", "hasattr(ext.obj,", "'server_create'):\n", "Look", "for", "implementation", "of", "extension", "point", "of", "server", "creation\n", "Look", "for", "API", "schema", "of", "server", "create", "extension\n", "Verify", "search", "by", "'status'", "contains", "a", "valid", "status.\n", "Convert", "it", "to", "filter", "by", "vm_state", "or", "task_state", "for", "compute_api.\n", "For", "non-admin", "user,", "vm_state", "and", "task_state", "are", "filtered", "through\n", "remove_invalid_options", "function,", "based", "on", "value", "of", "status", "field.\n", "Set", "value", "to", "vm_state", "and", "task_state", "to", "make", "search", "simple.\n", "When", "we", "search", "by", "vm", "state,", "task", "state", "will", "return", "'default'.\n", "So", "we", "don't", "need", "task_state", "search_opt.\n", "By", "default,", "compute's", "get_all()", "will", "return", "deleted", "instances.\n", "If", "an", "admin", "hasn't", "specified", "a", "'deleted'", "search", "option,", "we", "need\n", "to", "filter", "out", "deleted", "instances", "by", "setting", "the", "filter", "ourselves.\n", "...", "Unless", "'changes-since'", "is", "specified,", "because", "'changes-since'\n", "should", "return", "recently", "deleted", "instances", "according", "to", "the", "API", "spec.\n", "No", "'changes-since',", "so", "we", "only", "want", "non-deleted", "servers\n", "Convert", "deleted", "filter", "value", "to", "a", "valid", "boolean.\n", "Return", "non-deleted", "servers", "if", "an", "invalid", "value\n", "is", "passed", "with", "deleted", "filter.\n", "Verify", "the", "value", "of", "the", "'name'", "option", "is", "a", "correct", "regex.\n", "If", "tenant_id", "is", "passed", "as", "a", "search", "parameter", "this", "should\n", "imply", "that", "all_tenants", "is", "also", "enabled", "unless", "explicitly\n", "disabled.", "Note", "that", "the", "tenant_id", "parameter", "is", "filtered", "out\n", "by", "remove_invalid_options", "above", "unless", "the", "requestor", "is", "an\n", "admin.\n", "TODO(gmann):", "'all_tenants'", "flag", "should", "not", "be", "required", "while\n", "searching", "with", "'tenant_id'.", "Ref", "bug#", "1185290\n", "+microversions", "to", "achieve", "above", "mentioned", "behavior", "by\n", "uncommenting", "below", "code.\n", "if", "'tenant_id'", "in", "search_opts", "and", "'all_tenants'", "not", "in", "search_opts:\n", "We", "do", "not", "need", "to", "add", "the", "all_tenants", "flag", "if", "the", "tenant\n", "id", "associated", "with", "the", "token", "is", "the", "tenant", "id\n", "specified.", "This", "is", "done", "so", "a", "request", "that", "does", "not", "need\n", "the", "all_tenants", "flag", "does", "not", "fail", "because", "of", "lack", "of\n", "policy", "permission", "for", "compute:get_all_tenants", "when", "it\n", "doesn't", "actually", "need", "it.\n", "if", "context.project_id", "!=", "search_opts.get('tenant_id'):\n", "search_opts['all_tenants']", "=", "1\n", "use", "the", "boolean", "from", "here", "on", "out", "so", "remove", "the", "entry", "from", "search_opts\n", "if", "it's", "present\n", "merge", "our", "expected", "attrs", "with", "what", "the", "view", "builder", "needs", "for\n", "showing", "details\n", "NOTE(mriedem):", "Neutron", "would", "allow", "a", "network", "id", "with", "a", "br-", "prefix\n", "back", "in", "Folsom", "so", "continue", "to", "honor", "that.\n", "TODO(mriedem):", "Need", "to", "figure", "out", "if", "this", "is", "still", "a", "valid", "case.\n", "duplicate", "networks", "are", "allowed", "only", "for", "neutron", "v2.0\n", "Check", "the", "minimum", "nova-compute", "service", "version", "since", "Mitaka\n", "computes", "can't", "handle", "network", "IDs", "that", "aren't", "UUIDs.\n", "TODO(mriedem):", "Remove", "this", "check", "in", "Ocata.\n", "NOTE(mriedem):", "If", "the", "minimum", "compute", "version", "is", "not", "new", "enough\n", "for", "supporting", "auto-allocation,", "change", "the", "network", "request", "to\n", "None", "so", "it", "works", "the", "same", "as", "it", "did", "in", "Mitaka", "when", "you", "don't\n", "request", "anything.\n", "Starting", "in", "the", "2.37", "microversion,", "requested_networks", "is", "either", "a\n", "list", "or", "a", "string", "enum", "with", "value", "'auto'", "or", "'none'.", "The", "auto/none\n", "values", "are", "verified", "via", "jsonschema", "so", "we", "don't", "check", "them", "again", "here.\n", "Check", "the", "minimum", "nova-compute", "service", "version", "for", "supporting\n", "these", "special", "values.\n", "fixed", "IP", "address", "is", "optional\n", "if", "the", "fixed", "IP", "address", "is", "not", "provided", "then\n", "it", "will", "use", "one", "of", "the", "available", "IP", "address", "from", "the", "network\n", "port", "parameter", "is", "only", "for", "neutron", "v2.0\n", "This", "is", "allowed", "to", "be", "None\n", "No", "default", "description\n", "Arguments", "to", "be", "passed", "to", "instance", "create", "function\n", "Query", "extensions", "which", "want", "to", "manipulate", "the", "keyword\n", "arguments.\n", "NOTE(cyeoh):", "This", "is", "the", "hook", "that", "extensions", "use\n", "to", "replace", "the", "extension", "specific", "code", "below.\n", "When", "the", "extensions", "are", "ported", "this", "will", "also", "result\n", "in", "some", "convenience", "function", "from", "this", "class", "being\n", "moved", "to", "the", "extension\n", "TODO(Shao", "He,", "Feng)", "move", "this", "policy", "check", "to", "os-availability-zone\n", "extension", "after", "refactor", "it.\n", "TODO(Shao", "He,", "Feng)", "move", "this", "policy", "check", "to", "os-block-device-mapping\n", "extension", "after", "refactor", "it.\n", "NOTE(cyeoh):", "Although", "an", "extension", "can", "set\n", "return_reservation_id", "in", "order", "to", "request", "that", "a", "reservation\n", "id", "be", "returned", "to", "the", "client", "instead", "of", "the", "newly", "created\n", "instance", "information", "we", "do", "not", "want", "to", "pass", "this", "parameter\n", "to", "the", "compute", "create", "call", "which", "always", "returns", "both.", "We", "use\n", "this", "flag", "after", "the", "instance", "create", "call", "to", "determine", "what\n", "to", "return", "to", "the", "client\n", "If", "the", "caller", "wanted", "a", "reservation_id,", "return", "it\n", "NOTE(gmann):", "Parameter", "'req_body'", "is", "placed", "to", "handle", "scheduler_hint\n", "extension", "for", "V2.1.", "No", "other", "extension", "supposed", "to", "use", "this", "as\n", "it", "will", "be", "removed", "soon.\n", "NOTE(oomichi):", "The", "request", "parameter", "position", "of", "scheduler-hint\n", "extension", "is", "different", "from", "the", "other", "extensions,", "so", "here", "handles\n", "the", "difference.\n", "Note(yufang521247):", "instance", "which", "has", "never", "been", "active\n", "is", "not", "allowed", "to", "be", "soft_deleted.", "Thus", "we", "have", "to", "call\n", "delete()", "to", "clean", "up", "the", "instance.\n", "This", "is", "allowed", "to", "be", "None", "(remove", "description)\n", "NOTE(gmann):", "Returns", "204", "for", "backwards", "compatibility", "but", "should", "be", "202\n", "for", "representing", "async", "API", "as", "this", "API", "just", "accepts", "the", "request", "and\n", "request", "hypervisor", "driver", "to", "complete", "the", "same", "in", "async", "mode.\n", "Add", "on", "the", "admin_password", "attribute", "since", "the", "view", "doesn't", "do", "it\n", "unless", "instance", "passwords", "are", "disabled\n", "Starting", "from", "microversion", "2.39", "we", "don't", "check", "quotas", "on", "createImage\n", "build", "location", "of", "newly-created", "image", "entity\n", "Only", "remove", "parameters", "for", "sorting", "and", "pagination\n", "Otherwise,", "strip", "out", "all", "unknown", "options"], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_neutronv2.py": ["BailOutEarly", "CONF", "Exception", "False", "MyComparator", "NEUTRON_CLIENT_EXCEPTION", "NeutronNotFound", "NeutronOverQuota", "None", "NotImplementedError", "PciDevice", "PortNotFound", "TestAllocateForInstance", "TestNeutronClient", "TestNeutronClientForAdminScenarios", "TestNeutronv2AutoAllocateNetwork", "TestNeutronv2Base", "TestNeutronv2ExtraDhcpOpts", "TestNeutronv2NeutronHostnameDNS", "TestNeutronv2WithMock", "True", "V2Token", "_fake_list_ports", "_new_vif", "actual_obj", "address", "admin_auth", "admin_client", "admin_context", "admin_ctx", "api", "args", "associated", "auth_url", "auto_allocate_mock", "available_macs", "bind_host_id", "binding_port_req_body", "binding_profile", "binding_vnic_type", "body", "by_address", "can_alloc", "cfg", "check_external_net_attach_mock", "cl", "client", "client1", "client_exc", "collections", "config_fixture", "constants", "context", "context_client", "copy", "count", "create_mock", "create_port_mock", "created_port_ids", "ctx", "current_neutron_port", "current_neutron_port_map", "current_neutron_ports", "data", "delete_ports", "device_id", "devspec", "dhcp_options", "dhcp_opts", "dic", "dict", "do_test", "enumerate", "error", "error_msg", "ex", "exc", "exception", "exceptions", "expect_raise", "expected", "expected_attrs", "expected_bind_host", "expected_call_list", "expected_exc", "expected_exception_message", "expected_exception_msg", "expected_fixed", "expected_floating", "expected_instance", "expected_nova_exc", "expected_pool", "expected_port", "expected_port_req_body", "expected_results", "expected_value", "extra_details", "extras", "fake_get_instance_nw_info", "fake_info_cache", "fake_inst", "fake_instance", "fake_ip", "fake_ips", "fake_nets", "fake_network", "fake_port", "fake_port_id", "fake_ports", "fake_result", "fake_show_network", "fake_subnet", "fake_subnets", "fip", "fip_data", "fip_id", "fips", "fixed_address", "fixed_ip_address", "fixed_ips", "flavor", "flavors", "float_data", "float_id", "floating_ip", "floating_ip_address", "floating_ip_id", "floatingips", "func", "func_name", "get_client", "get_client_calls", "get_client_mock", "get_mock", "get_nw_info", "get_pci_device_devspec_mock", "get_ports", "getattr", "getclient", "has_dns_extension", "has_ext", "has_extra_dhcp_opts", "has_pci_request_id", "has_port_binding_mock", "has_portbinding", "host_id", "i", "id_suffix", "ids", "idx", "iface", "iface_index", "ifaces", "iid", "index", "info_cache", "instance", "instance2", "instance_networks", "instance_port_ids", "instance_uuid", "instances", "ip", "ip_addr", "isinstance", "jsonutils", "key", "ks_loading", "kwargs", "l", "len", "lhs", "lhs_value", "list", "list_networks_mock", "list_port_mock_params", "list_port_mock_return", "list_port_values", "list_ports_mock", "m", "macs", "max_count", "migrate_profile", "migration", "mock", "mock_admin", "mock_avail_nets", "mock_baseapi", "mock_cena", "mock_check_external_network_attach", "mock_clean_sg", "mock_client", "mock_comp_utils", "mock_create", "mock_create_port", "mock_create_ports", "mock_ctx", "mock_del_ports", "mock_delete", "mock_delete_ports", "mock_delete_vifs", "mock_deletep", "mock_exeu", "mock_ext", "mock_ext_vals", "mock_filter_macs", "mock_gather_port_ids_and_networks", "mock_get", "mock_get_available_networks", "mock_get_client", "mock_get_instance_nw_info", "mock_get_instance_pci_devs", "mock_get_mac_by_pci_address", "mock_get_pci_device_devspec", "mock_get_port_vnic_info", "mock_get_preexisting_port_ids", "mock_get_vif_by_uuid", "mock_getclient", "mock_giwn", "mock_gni", "mock_gppids", "mock_has_ext", "mock_has_pbe", "mock_has_port_binding", "mock_has_port_binding_extension", "mock_inst", "mock_list", "mock_list_networks", "mock_load_from_conf", "mock_lock", "mock_log", "mock_nc", "mock_netinfo", "mock_neutron", "mock_ntrn", "mock_nw_info_build_network", "mock_nw_info_get_ips", "mock_nw_info_get_subnets", "mock_parse_whitelist", "mock_populate", "mock_populate_ext_values", "mock_populate_neutron_extension_values", "mock_preexisting", "mock_process_security_groups", "mock_refresh", "mock_refresh_extensions", "mock_sg", "mock_show", "mock_show_port", "mock_unbind", "mock_unbind_ports", "mock_update", "mock_update_port", "mock_update_port_dns_name", "mock_update_ports", "mock_validate_nets", "mock_validate_port_ids", "mock_validate_ports", "mock_validate_requested_port_ids", "mock_vif", "mock_vif_create", "mock_vif_destroy", "mocked_comp_utils", "model", "mox", "mox_list_params", "my_context", "mydev", "n", "net", "net1", "net2", "net_id", "net_ids", "net_idx", "net_info_cache", "net_obj", "net_objs", "net_req", "net_req_obj", "netaddr", "nets", "nets1", "nets2", "nets_in_requested_net_order", "network", "network_cache", "network_id", "network_info", "network_list", "network_model", "network_uuid", "networks", "neutron", "neutron_client", "neutron_client_exc", "neutronapi", "new_fixed_address", "new_mac", "new_networks", "new_pci_devices", "new_port", "new_port_ids", "non_shared_nets", "notfound", "ntrn", "number", "nw_inf", "nw_info", "nw_infos", "nw_infs", "nw_req", "nwinfo", "obj", "objects", "objvalue", "old_pci_devices", "onets", "ordered_nets", "ordered_networks", "ordered_ports", "original_networks", "original_port_ids", "oslo_opts", "oslo_policy", "p", "pci_dev", "pci_manager", "pci_mapping", "pci_objs", "pci_req_id", "pci_requests", "pci_utils", "pci_whitelist", "pf", "phynet_name", "policy", "pool_dict", "pool_id", "pool_name", "pools", "populate_ext_values_mock", "populate_mac_addr_mock", "port", "port1", "port2", "port_a", "port_b", "port_client", "port_data", "port_data2", "port_dict", "port_id", "port_ids", "port_profile", "port_req_body", "port_req_body_create", "port_req_body_dns", "port_response", "port_uuid", "portbinding", "ports", "ports_in_requested_net_order", "preexisting_port_ids", "profile", "project_id", "prv_nets", "pub_nets", "range", "refresh", "req", "req_ids", "req_mock", "req_net_ids", "req_utils", "request", "request_id", "requested", "requested_networks", "requested_port", "requested_ports", "requests_and_created_ports", "requests_mock", "res_port", "res_port_dns", "result", "results", "ret_data", "rets", "return_value", "reversed", "rhs", "rhs_value", "rules", "search_ids", "search_opts", "secgroups", "security_groups", "self", "set", "set_fixed_ip", "set_pool_name", "set_port", "setattr", "shared_nets", "show_port", "show_port_mock", "show_quota_mock", "six", "str", "subnet_data", "subnet_data1", "subnets", "super", "tenant_id", "test", "test_net", "test_port", "timeutils", "token_resp", "token_vals", "token_value", "tokens", "tuple", "update_port", "update_port_calls", "update_port_dsn_name_mock", "update_port_mock", "update_port_res", "use_id", "uuid", "uuids", "validate", "value", "vf", "vif", "vif_type", "vifs_really_created", "vnic_type", "white_list", "whitelist", "x", "zone", "verify", "the", "exception", "thrown", "when", "there", "are", "no", "networks", "defined.\nOnly", "one", "network", "is", "available,", "it's", "external", "and", "shared.\nUsed", "to", "test", "Neutron", "V2", "API", "with", "mock.\nMakes", "sure", "we", "rollback", "ports", "and", "VIFs", "if", "we", "fail", "updating", "ports\nTests", "auto-allocation", "scenarios", "NOTE:", "Neutron", "client", "raises", "Exception", "which", "is", "discouraged", "by", "HACKING.\n", "We", "set", "this", "variable", "here", "and", "use", "it", "for", "assertions", "below", "to", "avoid\n", "the", "hacking", "checks", "until", "we", "can", "make", "neutron", "client", "throw", "a", "custom\n", "exception", "class", "instead.\n", "A", "network", "request", "with", "external", "networks\n", "A", "network", "request", "with", "a", "duplicate\n", "A", "network", "request", "with", "a", "combo\n", "A", "network", "request", "with", "only", "external", "network\n", "An", "empty", "network\n", "A", "network", "that", "is", "both", "shared", "and", "external\n", "A", "network", "with", "non-blank", "dns_domain", "to", "test", "_update_port_dns_name\n", "no", "fixed", "ip\n", "Net", "idx", "is", "1-based", "for", "compatibility", "with", "existing", "unit", "tests\n", "Network", "lookup", "for", "available", "network_id\n", "if", "net_id", "did", "not", "pass", "validate_networks()", "and", "not", "available\n", "here", "then", "skip", "it", "safely", "not", "continuing", "with", "a", "None", "Network\n", "since", "_populate_neutron_extension_values()", "will", "call\n", "_has_port_binding_extension()\n", "search", "all", "req_net_ids", "as", "in", "api.py\n", "Check", "network", "is", "available,", "skip", "if", "not\n", "Test", "to", "get", "one", "port", "in", "one", "network", "and", "subnet.\n", "Test", "to", "get", "one", "port", "in", "each", "of", "two", "networks", "and", "subnets.\n", "This", "tests", "that", "adding", "an", "interface", "to", "an", "instance", "does", "not\n", "remove", "the", "first", "instance", "from", "the", "instance.\n", "This", "tests", "that", "when", "a", "port", "is", "removed", "in", "neutron", "it\n", "is", "also", "removed", "from", "the", "nova.\n", "Tests", "that", "only", "ports", "in", "the", "network_cache", "are", "updated\n", "and", "ports", "returned", "from", "neutron", "that", "match", "the", "same\n", "instance_id/device_id", "are", "ignored.\n", "set", "device_id", "on", "the", "ports", "to", "be", "the", "same.\n", "Tests", "that", "ports", "returned", "from", "neutron", "that", "match", "the", "same\n", "instance_id/device_id", "are", "ignored", "when", "the", "instance", "info", "cache", "is\n", "empty.\n", "set", "device_id", "on", "the", "ports", "to", "be", "the", "same.\n", "keep", "a", "copy", "of", "the", "original", "ports/networks", "to", "pass", "to\n", "get_instance_nw_info()", "as", "the", "code", "below", "changes", "them.\n", "ensure", "that", "nic", "ordering", "is", "preserved\n", "Test", "get", "instance_nw_info", "for", "a", "port", "without", "subnet.\n", "Note:", "Don't", "want", "the", "default", "get_client", "from", "setUp()\n", "Note:", "Don't", "want", "the", "default", "get_client", "from", "setUp()\n", "Allocate", "one", "port", "in", "one", "network", "env.\n", "Allocate", "one", "port", "in", "two", "networks", "env.\n", "The", "macs", "kwarg", "should", "be", "accepted", "as", "None.\n", "The", "macs", "kwarg", "should", "be", "accepted,", "as", "a", "set,", "the\n", "_allocate_for_instance", "helper", "checks", "that", "the", "mac", "is", "used", "to", "create", "a\n", "port.\n", "NOTE(johngarbutt)", "we", "override", "the", "provided", "mac", "with", "a", "new", "one\n", "Make", "sure", "allocate_for_instance", "works", "when", "only", "a", "portid", "is", "provided\n", "using", "a", "hypervisor", "MAC", "via", "a", "pre-created", "port", "will", "stop", "it", "being\n", "used", "to", "dynamically", "create", "a", "port", "on", "a", "network.", "We", "put", "the", "network\n", "first", "in", "requested_networks", "so", "that", "if", "the", "code", "were", "to", "not", "pre-check\n", "requested", "ports,", "it", "would", "incorrectly", "assign", "the", "mac", "and", "not", "fail.\n", "If", "not", "enough", "MAC", "addresses", "are", "available", "to", "allocate", "to", "networks,", "an\n", "error", "should", "be", "raised.\n", "We", "could", "pass", "in", "macs=set(),", "but", "that", "wouldn't", "tell", "us", "that\n", "allocate_for_instance", "tracks", "used", "macs", "properly,", "so", "we", "pass", "in", "one\n", "mac,", "and", "ask", "for", "two", "networks.\n", "If", "two", "MACs", "are", "available", "and", "two", "networks", "requested,", "two", "new", "ports\n", "get", "made", "and", "no", "exceptions", "raised.\n", "NOTE(danms)", "nets3[2]", "is", "chosen", "above", "as", "one", "that", "won't", "validate,\n", "so", "we", "never", "actually", "run", "create()", "on", "the", "VIF.\n", "specify", "only", "first", "and", "last", "network\n", "net_id=4", "does", "not", "specify", "subnet", "and", "does", "not", "set", "the", "option\n", "port_security_disabled", "to", "True,", "so", "Neutron", "will", "not", "been\n", "able", "to", "associate", "the", "default", "security", "group", "to", "the", "port\n", "requested", "to", "be", "created.", "We", "expect", "an", "exception", "to", "be\n", "raised.\n", "specify", "only", "first", "and", "last", "network\n", "Make", "sure", "we", "get", "an", "empty", "list", "and", "then", "bail", "out", "of", "the", "rest\n", "of", "the", "function\n", "Make", "sure", "that", "allocate_for_instance", "only", "returns", "ports", "that", "it\n", "allocated", "during", "_that_", "run.\n", "If", "a", "port", "is", "already", "in", "use,", "an", "exception", "should", "be", "raised.\n", "If", "a", "port", "is", "not", "found,", "an", "exception", "should", "be", "raised.\n", "no", "networks", "in", "the", "tenant\n", "external", "network", "is", "shared\n", "network", "found", "in", "the", "tenant\n", "external", "network", "is", "shared\n", "TODO(mriedem):", "Remove", "this", "conversion", "when", "all", "neutronv2", "APIs", "are\n", "converted", "to", "handling", "instance", "objects.\n", "NOTE(danms):", "Temporary", "and", "transitional\n", "Test", "to", "deallocate", "in", "one", "port", "env.\n", "Test", "to", "deallocate", "in", "one", "port", "env.\n", "Test", "to", "deallocate", "in", "one", "port", "env.\n", "Test", "to", "deallocate", "in", "two", "ports", "env.\n", "TODO(mriedem):", "Remove", "this", "conversion", "when", "all", "neutronv2", "APIs", "are\n", "converted", "to", "handling", "instance", "objects.\n", "Test", "to", "deallocate", "the", "first", "and", "only", "port\n", "Test", "to", "deallocate", "the", "first", "port", "of", "two\n", "Verify", "that", "no", "duplicateNetworks", "exception", "is", "thrown", "when", "duplicate\n", "network", "ids", "are", "passed", "to", "validate_networks.\n", "specify", "a", "duplicate", "network", "to", "allocate", "to", "instance\n", "specify", "first", "port", "and", "last", "port", "that", "are", "in", "same", "network\n", "specify", "a", "combo", "net_idx=7", ":", "net2,", "port", "in", "net1,", "net2,", "port", "in", "net1\n", "Verify", "that", "the", "correct", "exception", "is", "thrown", "when", "a", "non", "existent\n", "port", "is", "passed", "to", "validate_networks.\n", "Verify", "that", "the", "correct", "exception", "is", "thrown", "when", "a", "non", "existent\n", "port", "is", "passed", "to", "validate_networks.\n", "Verify", "that", "duplicateNetworks", "exception", "is", "not", "thrown", "when", "ports\n", "on", "same", "duplicate", "network", "are", "passed", "to", "validate_networks.\n", "Test", "validation", "for", "a", "request", "for", "one", "instance", "needing\n", "two", "ports,", "where", "the", "quota", "is", "2", "and", "2", "ports", "are", "in", "use\n", "=>", "instances", "which", "can", "be", "created", "=", "0\n", "Test", "validation", "for", "a", "request", "for", "one", "instance", "needing\n", "one", "port", "allocated", "via", "nova", "with", "another", "port", "being", "passed", "in.\n", "Test", "that", "show", "quota", "is", "not", "called", "if", "no", "networks", "are\n", "passed", "in", "and", "only", "ports.\n", "Test", "validation", "for", "a", "request", "for", "two", "instance", "needing\n", "two", "ports", "each,", "where", "the", "quota", "is", "5", "and", "2", "ports", "are", "in", "use\n", "=>", "instances", "which", "can", "be", "created", "=", "1\n", "Test", "validation", "for", "a", "request", "for", "two", "instance", "needing\n", "two", "ports", "each,", "where", "the", "quota", "is", "-1", "(unlimited)\n", "=>", "instances", "which", "can", "be", "created", "=", "1\n", "specify", "only", "first", "and", "last", "network\n", "admin_state_up=True", "and", "status='ACTIVE'", "thus", "vif.active=True\n", "admin_state_up=False", "and", "status='DOWN'", "thus", "vif.active=True\n", "admin_state_up=True", "and", "status='DOWN'", "thus", "vif.active=False\n", "admin_state_up=True", "and", "status='ACTIVE'", "thus", "vif.active=True\n", "admin_state_up=True", "and", "status='ACTIVE'", "thus", "vif.active=True\n", "admin_state_up=True", "and", "status='ACTIVE'", "thus", "vif.active=True\n", "This", "port", "has", "no", "binding:vnic_type", "to", "verify", "default", "is", "assumed\n", "No", "binding:vnic_type\n", "This", "does", "not", "match", "the", "networks", "we", "provide", "below,\n", "so", "it", "should", "be", "ignored", "(and", "is", "here", "to", "verify", "that)\n", "An", "empty", "instance", "info", "network", "cache", "should", "not", "be", "populated", "from\n", "ports", "found", "in", "Neutron.\n", "admin_state_up=True", "and", "status='ACTIVE'", "thus", "vif.active=True\n", "no", "fixed", "ip\n", "no", "fixed", "ip\n1)", "and", "a", "list", "of\n2).\n1\"", "&", "\"duplicate", "#2\")\n", "Test", "validation", "for", "a", "request", "for", "a", "network", "with", "a\n", "fixed", "ip", "that", "is", "not", "already", "in", "use", "because", "no", "fixed", "ips", "in", "use\n", "Test", "validation", "for", "a", "request", "for", "a", "network", "with", "a\n", "fixed", "ip", "that", "is", "not", "already", "in", "use", "because", "not", "used", "on", "this", "net", "id\n", "Test", "validation", "for", "a", "request", "for", "a", "network", "with", "a\n", "fixed", "ip", "that", "is", "already", "in", "use\n", "Verify", "that", "the", "correct", "exception", "is", "thrown", "when", "quota", "exceed\n", "setup", "fake", "data\n", "setup", "mocks\n", "run", "the", "code\n", "assert", "the", "calls\n", "make", "sure", "that", "we", "didn't", "try", "to", "reload", "nw", "info\n", "We", "pass", "in", "a", "port", "profile", "which", "has", "a", "migration", "attribute", "and", "also\n", "a", "second", "port", "profile", "attribute", "'fake_profile'", "this", "can", "be\n", "an", "sriov", "port", "profile", "attribute", "or", "a", "pci_slot", "attribute,", "but", "for\n", "now", "we", "are", "just", "using", "a", "fake", "one", "to", "show", "that", "the", "code", "does", "not\n", "remove", "the", "portbinding_profile", "it", "there", "is", "one.\n", "Assert", "that", "update_port", "was", "called", "on", "the", "port", "with", "a\n", "different", "host", "and", "also", "the", "migration", "profile", "from", "the", "port", "is\n", "removed", "since", "it", "does", "not", "match", "with", "the", "current", "host.\n", "We", "test", "two", "ports,", "one", "with", "the", "same", "host", "as", "the", "host", "passed", "in", "and\n", "one", "where", "binding:host_id", "isn't", "set,", "so", "we", "update", "that", "port.\n", "Assert", "that", "update_port", "was", "only", "called", "on", "the", "port", "without", "a", "host.\n", "Validate", "that", "non-direct", "port", "aren't", "updated", "(fake-port-2).\n", "Assert", "that", "update_port", "is", "called", "with", "the", "binding:profile\n", "corresponding", "to", "the", "PCI", "device", "specified.\n", "Assert", "exception", "is", "raised", "if", "the", "mapping", "is", "wrong.\n", "We", "test", "with", "an", "instance", "host", "and", "destination_host", "where", "the\n", "port", "will", "be", "moving.\n", "Pass", "a", "port", "with", "an", "migration", "porfile", "attribute.\n", "Pass", "a", "port", "without", "any", "migration", "porfile", "attribute.\n", "Tests", "that", "None", "entries", "in", "the", "ports", "list", "are", "filtered", "out.\n", "FIXME(danms):", "Remove", "this", "test", "along", "with", "the", "code", "path", "it", "tests\n", "when", "bug", "1513879", "is", "fixed.\n", "neutronclient", "doesn't", "raise", "NotFound", "in", "this", "scenario,", "it", "raises", "a\n", "NeutronClientException", "with", "status_code=404\n", "called", "twice,", "fails", "on", "the", "2nd", "call", "and", "triggers", "the", "cleanup\n", "we", "have", "two", "requests,", "one", "with", "a", "preexisting", "port", "and", "one", "where", "nova\n", "created", "the", "port", "(on", "the", "same", "network)\n", "None", "means", "Nova", "didn't", "create", "this", "port\n", "assert", "the", "calls\n", "we", "only", "got", "to", "create", "one", "vif", "since", "the", "2nd", "_update_port", "call", "fails\n", "we", "only", "destroy", "one", "vif", "since", "we", "only", "created", "one\n", "we", "unbind", "the", "pre-existing", "port\n", "we", "delete", "the", "created", "port\n", "Test", "with", "networks", "not", "None", "and", "port_ids", "is", "None\n", "Test", "with", "networks", "is", "None", "and", "port_ids", "not", "None\n", "TODO(johngarbutt)", "we", "need", "to", "replace", "the", "old", "mox", "coverage\n", "with", "new", "tests", "that", "can", "build", "on", "this", "very", "poor", "test\n", "TODO(johngarbutt)", "need", "to", "build", "on", "this", "test", "so", "we", "can", "replace\n", "all", "the", "mox", "based", "tests\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "create\n", "request", "in", "allocate_for_instance\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "update\n", "request", "in", "allocate_for_instance\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "update\n", "request", "in", "allocate_for_instance.", "The", "port's", "dns_name", "was", "preset", "by\n", "the", "user", "with", "a", "value", "equal", "to", "the", "instance's", "hostname\n", "If", "a", "pre-existing", "port", "has", "dns_name", "set,", "an", "exception", "should", "be\n", "raised", "if", "dns_name", "is", "not", "equal", "to", "the", "instance's", "hostname\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "create\n", "request", "in", "allocate_for_instance\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "update\n", "request", "in", "allocate_for_instance\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "update\n", "request", "in", "_update_port_dns_name.", "This", "should", "happen", "only", "when", "the\n", "port", "binding", "extension", "is", "enabled", "and", "the", "port's", "network", "has", "a\n", "non-blank", "dns_domain", "attribute\n", "The", "port's", "dns_name", "attribute", "should", "be", "set", "by", "the", "port", "update\n", "request", "in", "_update_port_dns_name.", "This", "should", "happen", "only", "when", "the\n", "port", "binding", "extension", "is", "enabled", "and", "the", "port's", "network", "has", "a\n", "non-blank", "dns_domain", "attribute\n", "NOTE(morganfainberg):", "The", "real", "configuration", "fixture", "here", "is", "used\n", "instead", "o", "the", "already", "existing", "fixtures", "to", "ensure", "that", "the", "new\n", "config", "options", "are", "automatically", "deregistered", "at", "the", "end", "of", "the\n", "test", "run.", "Without", "the", "use", "of", "this", "fixture,", "the", "config", "options\n", "from", "the", "plugin(s)", "would", "persist", "for", "all", "subsequent", "tests", "from", "when\n", "these", "are", "run", "(due", "to", "glonal", "conf", "object)", "and", "not", "be", "fully\n", "representative", "of", "a", "\"clean\"", "slate", "at", "the", "start", "of", "a", "test.\n", "clean", "global\n", "Note", "that", "the", "context", "does", "not", "contain", "a", "token", "but", "is\n", "an", "admin", "context", "which", "will", "force", "an", "elevation", "to", "admin\n", "credentials.\n", "Note", "that", "the", "context", "is", "not", "elevated,", "but", "the", "True", "is", "passed", "in\n", "which", "will", "force", "an", "elevation", "to", "admin", "credentials", "even", "though\n", "the", "context", "has", "an", "auth_token.\n", "Nova", "API", "provides", "the", "'default'\n", "Nova", "API", "provides", "the", "'default'\n", "Tests", "that", "the", "extension", "is", "not", "available", "but", "we", "refresh", "the", "list.\n", "refresh", "is", "called", "because", "the", "extensions", "dict", "is", "empty\n", "Tests", "that", "the", "extension", "is", "not", "available", "and", "don't", "refresh", "the", "list.\n", "Tests", "the", "happy", "path", "with", "refresh.\n", "Tests", "when", "the", "auto-allocated-topology", "extension", "is", "not", "available.\n", "Tests", "that", "the", "dry-run", "validation", "with", "neutron", "fails", "(not", "ready).\n", "Tests", "the", "happy", "path.\n", "Tests", "no", "requested_networks", "and", "no", "available", "networks.\n", "Tests", "empty", "requested_networks", "and", "no", "available", "networks.\n", "Test", "for", "when", "there", "are", "no", "available", "networks", "and", "we're", "requested\n", "to", "auto-allocate", "the", "network", "but", "auto-allocation", "is", "not", "available.\n", "Test", "for", "when", "there", "are", "no", "available", "networks", "and", "we're", "requested\n", "to", "auto-allocate", "the", "network", "and", "auto-allocation", "is", "available.\n", "Tests", "that", "_validate_requested_port_ids", "doesn't", "really", "do", "anything\n", "if", "there", "is", "an", "auto-allocate", "network", "request.\n", "Tests", "that", "we", "handle", "a", "409", "from", "Neutron", "when", "auto-allocating", "topology\n", "Tests", "that", "we", "handle", "a", "404", "from", "Neutron", "when", "auto-allocating", "topology\n", "Tests", "the", "happy", "path.\n", "Tests", "the", "happy", "path.\n", "mock", "neutron.list_networks", "which", "is", "called", "from\n", "_get_available_networks", "when", "net_ids", "is", "empty,", "which", "it", "will", "be\n", "because", "_validate_requested_port_ids", "will", "return", "an", "empty", "list", "since\n", "we", "requested", "'auto'", "allocation.\n", "assert", "the", "network", "and", "port", "are", "what", "was", "used", "in", "the", "test\n", "return", "a", "fake", "vif\n", "assert", "that", "we", "filtered", "available", "networks", "on", "admin_state_up=True\n", "assert", "the", "calls", "to", "create", "the", "port", "are", "using", "the", "network", "that\n", "was", "auto-allocated\n", "request.address", "(fixed", "IP)\n", "security_group_ids", "-", "we", "didn't", "request", "any"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_guest.py": ["AttributeError", "False", "GuestBlockTestCase", "GuestTestCase", "JobInfoTestCase", "None", "True", "cfg", "conf", "context", "dev_path", "devs", "disk", "encodeutils", "exception", "fake_device", "fake_exc", "fakelibvirt", "gblock", "get_config", "host", "info", "int", "is_complete", "len", "libvirt_guest", "list", "long", "mock", "mock_define", "mock_detach", "mock_execute", "mock_get_interfaces", "mock_info", "mock_safe_decode", "mock_stats", "power", "repr", "retry_detach", "self", "super", "sys", "test", "time_mock", "utils", "vconfig", "vcpus", "xml", "Force", "multiple", "retries", "of", "detach\n", "Ensure", "we've", "only", "done", "the", "initial", "detach", "call\n", "Some", "time", "later,", "we", "can", "do", "the", "wait/retry", "to", "ensure", "detach", "succeeds\n", "Should", "have", "two", "retries", "before", "we", "pretend", "device", "is", "detached\n", "Continue", "to", "return", "some", "value", "for", "the", "disk", "config\n", "Ensure", "we've", "only", "done", "the", "initial", "detach", "call\n", "Some", "time", "later,", "we", "can", "do", "the", "wait/retry", "to", "ensure", "detach\n", "Should", "hit", "max", "#", "of", "retries\n", "Some", "time", "later,", "we", "can", "do", "the", "wait/retry", "to", "ensure", "detach\n", "Only", "currently", "parse", "<disk>,", "<hostdev>", "and", "<interface>", "elements\n", "hence", "we're", "not", "counting", "the", "controller/memballoon"], "/Users/mehranhassani/repos/nova/nova/image/api.py": ["False", "None", "True", "_context", "context", "data", "dest_path", "glance", "id_or_uri", "image_id", "image_info", "include_locations", "kwargs", "object", "purge_props", "self", "session", "show_deleted", "TODO(jaypipes):", "Refactor", "glance.get_remote_image_service", "and\n", "glance.get_default_image_service", "into", "a", "single\n", "method", "that", "takes", "a", "context", "and", "actually", "respects\n", "it,", "returning", "a", "real", "session", "object", "that", "keeps\n", "the", "context", "alive...\n", "TODO(jaypipes):", "Deprecate", "and", "remove", "this", "method", "entirely", "when", "we\n", "move", "to", "a", "system", "that", "simply", "returns", "a", "file", "handle\n", "to", "a", "bytestream", "iterator", "and", "allows", "the", "caller", "to\n", "handle", "streaming/copying/zero-copy", "as", "they", "see", "fit."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/used_limits.py": ["ALIAS", "False", "KeyError", "MIN_WITHOUT_PROXY_API_SUPPORT_VERSION", "QUOTAS", "True", "UsedLimitsController", "ValueError", "alias", "api_version_request", "context", "controller", "display_name", "extensions", "int", "key", "limits_ext", "name", "project_id", "quota", "quota_map", "quotas", "req", "reserved", "resp_obj", "self", "staticmethod", "target", "tenant_id", "ul_policies", "used_limits", "version", "wsgi", "Provide", "data", "on", "limited", "resources", "that", "are", "being", "used."], "/Users/mehranhassani/repos/nova/nova/console/serial.py": ["ALLOCATED_PORTS", "CONF", "LOG", "SERIAL_LOCK", "_LW", "__name__", "_get_port_range", "_verify_port", "config_range", "default_port_range", "e", "exception", "host", "int", "logging", "map", "nova", "port", "s", "set", "six", "socket", "start", "stop", "utils", "Serial", "consoles", "module.\nRelease", "TCP", "port", "to", "be", "used", "next", "time.", "in-memory", "set", "of", "already", "allocated", "ports\n", "TODO(sahid):", "Add", "a", "method", "to", "initialize", "ALLOCATED_PORTS", "with", "the\n", "already", "binded", "TPC", "port(s).", "(cf", "from", "danpb:", "list", "all", "running", "guests", "and\n", "query", "the", "XML", "in", "libvirt", "driver", "to", "find", "out", "the", "TCP", "port(s)", "it", "uses)."], "/Users/mehranhassani/repos/nova/nova/conf/servicegroup.py": ["SERVICEGROUP_OPTS", "cfg", "conf"], "/Users/mehranhassani/repos/nova/tools/xenserver/vdi_chain_cleanup.py": ["Exception", "ExecutionFailed", "KeyError", "None", "__name__", "__repr__", "__str__", "action", "bad_leaf", "bad_leaves", "bad_vhd", "bad_vhd_path", "child", "cmd", "descendents", "execute", "fname", "glob", "len", "main", "max_stream_length", "new_path", "ok_exit_codes", "os", "proc", "returncode", "root", "self", "sr_path", "stderr", "stdout", "subprocess", "sys", "usage", "vhd", "walk_vhds", "Copyright", "2012", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");\n", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.\n", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,\n", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.\n", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and\n", "limitations", "under", "the", "License."], "/Users/mehranhassani/repos/nova/nova/policies/servers_migrations.py": ["POLICY_ROOT", "base", "policy", "servers_migrations_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/legacy_v2/extensions/foxinsocks.py": ["FoxInSocksController", "FoxInSocksFlavorBandsControllerExtension", "FoxInSocksFlavorGooseControllerExtension", "FoxInSocksServerControllerExtension", "alias", "body", "collection", "controller", "ext", "ext_mgr", "extension_list", "extension_set", "extensions", "id", "klass", "name", "namespace", "object", "req", "resource", "resources", "resp_obj", "self", "updated", "webob", "wsgi", "The", "Fox", "In", "Socks", "Extension.", "NOTE:", "This", "only", "handles", "JSON", "responses.\n", "You", "can", "use", "content", "type", "header", "to", "test", "for", "XML.\n", "NOTE:", "This", "only", "handles", "JSON", "responses.\n", "You", "can", "use", "content", "type", "header", "to", "test", "for", "XML."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_shelve.py": ["CONF", "ShelveJsonTest", "action", "nova", "response", "sample_dir", "self", "super", "template", "test_servers", "uuid", "Don't", "offload", "instance,", "so", "we", "can", "test", "the", "offload", "call."], "/Users/mehranhassani/repos/nova/nova/scheduler/client/query.py": ["aggregate", "aggregates", "context", "host_name", "instance_info", "instance_uuid", "instance_uuids", "object", "scheduler_rpcapi", "self", "spec_obj", "Client", "class", "for", "querying", "to", "the", "scheduler."], "/Users/mehranhassani/repos/nova/nova/policies/__init__.py": ["admin_actions", "admin_password", "agents", "aggregates", "assisted_volume_snapshots", "attach_interfaces", "availability_zone", "baremetal_nodes", "base", "block_device_mapping", "block_device_mapping_v1", "cells", "cells_scheduler", "certificates", "cloudpipe", "config_drive", "console_auth_tokens", "console_output", "consoles", "create_backup", "deferred_delete", "evacuate", "extended_availability_zone", "extended_server_attributes", "extended_status", "extended_volumes", "extension_info", "extensions", "fixed_ips", "flavor_access", "flavor_extra_specs", "flavor_manage", "flavor_rxtx", "flavors", "floating_ip_dns", "floating_ip_pools", "floating_ips", "floating_ips_bulk", "fping", "hide_server_addresses", "hosts", "hypervisors", "image_metadata", "image_size", "images", "instance_actions", "instance_usage_audit_log", "ips", "itertools", "keypairs", "limits", "lock_server", "migrate_server", "migrations", "multinic", "multiple_create", "networks", "networks_associate", "pause_server", "pci", "quota_class_sets", "quota_sets", "remote_consoles", "rescue", "scheduler_hints", "security_group_default_rules", "security_groups", "server_diagnostics", "server_external_events", "server_groups", "server_metadata", "server_password", "server_tags", "server_usage", "servers", "servers_migrations", "services", "shelve", "simple_tenant_usage", "suspend_server", "tenant_networks", "used_limits", "user_data", "versions", "virtual_interfaces", "volumes", "volumes_attachments"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_pathutils.py": ["Exception", "False", "None", "PathUtilsTestCase", "True", "WindowsError", "actual_age", "args", "builtins", "configdrive_name", "configdrive_path", "constants", "exception", "expected_instance_dir", "expected_path", "expected_src_tmp_path", "ext", "fake_dest_dir", "fake_dir_name", "fake_image_name", "fake_instance_dir", "fake_instances_dir_share", "fake_local_logs", "fake_path_join", "fake_remote", "fake_remote_logs", "fake_src_dir", "fake_windows_error", "format_ext", "instances_dir", "mock", "mock_check_dirs_shared_storage", "mock_exists", "mock_get_base_vhd_dir", "mock_get_instances_dir", "mock_getmtime", "mock_named_tempfile", "mock_time", "mock_tmpfile", "os", "path", "pathutils", "res", "rescue", "self", "shared_storage", "super", "test_base", "time", "winerror", "Unit", "tests", "for", "the", "Hyper-V", "PathUtils", "class.", "The", "Hyper-V", "driver", "allows", "using", "a", "pre-configured", "share", "exporting\n", "the", "instances", "dir.", "The", "same", "share", "name", "should", "be", "used", "across", "nodes."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_quota.py": ["CONF", "DbQuotaDriverTestCase", "FakeContext", "FakeDriver", "FakeUsage", "False", "KeyError", "None", "NoopQuotaDriverTestCase", "QuotaEngineUsageRefreshTestCase", "QuotaIntegrationTestCase", "QuotaSqlAlchemyBase", "REQUIRES_LOCKING", "True", "_existing_quota_sync_func_dict", "actual", "address", "api", "args", "assertInstancesReserved", "by_class", "by_project", "by_user", "calls", "compute", "content", "context", "cores", "created_at", "ctx", "ctxt", "datetime", "db", "dbdrv", "defaults", "delta", "delta_change", "deltas", "dict", "driver", "e", "elevated", "enginefacade", "enumerate", "exc_traceback", "exc_type", "exc_value", "exception", "exemplar", "expected", "expected_kwargs", "expire", "expire_delta", "fake_count", "fake_get_project_quotas", "fake_get_project_user_quota_usages", "fake_process_quotas_in_get_user_quotas", "fake_qcgabn", "fake_qcgd", "fake_qgabp", "fake_qgabpau", "fake_qugabp", "fake_qugabpau", "fake_quota_get", "fake_quota_get_all", "fake_quota_get_all_by_project", "fake_quota_get_all_by_project_and_user", "fake_quota_reserve", "fake_quota_usage_create", "fake_quota_usage_update", "fake_reservation_create", "fake_validate_networks", "files", "flavors", "getattr", "i", "image_uuid", "in_use", "inst", "inst_type", "instance", "instance_uuid", "instance_uuids", "k", "key", "keys", "kwargs", "len", "limit", "make_instances_sync", "make_sync", "max", "max_age", "metadata", "method_name", "mock", "nova", "num_instances", "object", "option", "path", "project_id", "project_quotas", "quota", "quota_class", "quota_obj", "quota_usage_ref", "quota_value", "quotas", "r", "range", "record_created", "remains", "requested_networks", "res", "res_name", "reservation_ref", "reservations", "reservations_list", "reserved", "resource", "resources", "restore_sync_functions", "result", "result1", "result2", "result3", "resv", "resv_obj", "self", "session", "set", "sqa_api", "sqa_models", "super", "sync", "test", "timeutils", "until_refresh", "updated_at", "updates", "usage", "usage_dict", "usage_id", "usage_id_change", "usages", "user_id", "user_quotas", "uuid", "v", "value", "values", "Create", "a", "test", "instance.", "we", "aren't", "testing", "network", "quota", "in", "these", "tests", "when", "creating", "a", "server\n", "so", "just", "mock", "that", "out", "and", "assume", "network", "(port)", "quota", "is", "OK\n", "m1.large\n", "Setting", "cores", "quota", "to", "unlimited:\n", "This", "test", "is", "specifically", "relying", "on", "nova-network.\n", "Apparently", "needed", "by", "the", "RPC", "tests...\n", "This", "test", "is", "specifically", "relying", "on", "nova-network.\n", "Apparently", "needed", "by", "the", "RPC", "tests...\n", "auto", "allocated", "addresses", "should", "not", "be", "counted\n", "no", "QuotaError\n", "no", "QuotaError\n", "no", "QuotaError\n", "We", "know", "this", "flag", "exists,", "so", "use", "it...\n", "Use", "our", "pre-defined", "resources\n", "Stub", "out", "quota_class_get_default\n", "Stub", "out", "quota_class_get_all_by_name\n", "Make", "sure", "we", "had", "some", "calls\n", "Extract", "the", "elevated", "context", "that", "was", "used", "and", "do", "some\n", "sanity", "checks\n", "Now", "check", "that", "all", "the", "expected", "calls", "were", "made\n", "nova.db.sqlalchemy.api.quota_reserve", "is", "so", "complex", "it", "needs", "its\n", "own", "test", "case,", "and", "since", "it's", "a", "quota", "manipulator,", "this", "is", "the\n", "best", "place", "to", "put", "it...\n", "Requesting", "8", "cores,", "quota_cores", "set", "to", "unlimited:\n", "Requesting", "10*1024", "ram,", "quota_ram", "set", "to", "unlimited:\n", "The", "usages_list", "are", "the", "expected", "usages", "(in_use)", "values", "after\n", "the", "test", "has", "run.\n", "The", "pattern", "is", "that", "the", "test", "will", "initialize", "the", "actual", "in_use\n", "to", "3", "for", "all", "the", "resources,", "then", "the", "refresh", "will", "sync\n", "the", "actual", "in_use", "to", "2", "for", "the", "resources", "whose", "names", "are", "in", "the", "keys\n", "list", "and", "are", "scoped", "to", "project", "or", "user.\n", "The", "usages", "are", "indexed", "as", "follows:\n", "Index", "Resource", "name", "Scope\n", "0", "instances", "user\n", "1", "cores", "user\n", "2", "ram", "user\n", "3", "fixed_ips", "project\n", "4", "server_groups", "user\n", "5", "security_groups", "user\n", "6", "floating_ips", "project\n", "None", "of", "the", "usage", "refresh", "tests", "should", "add", "a", "reservation.\n", "The", "actual", "sync", "function", "for", "instances,", "ram,", "and", "cores,", "is\n", "_sync_instances,", "so", "override", "the", "function", "here.\n", "Usage", "doesn't", "exist", "yet,", "initialize\n", "the", "in_use", "to", "0.\n", "Simulate", "as", "if", "the", "actual", "usage\n", "is", "one", "less", "than", "the", "recorded", "usage.\n", "Let", "the", "parameters", "determine", "the", "project_id", "and", "user_id,\n", "not", "the", "context.\n", "Compare", "the", "expected", "usages", "with", "the", "actual", "usages.\n", "Expect", "fixed_ips", "not", "to", "change", "since", "it", "is", "project", "scoped.\n", "Expect", "floating_ips", "not", "to", "change", "since", "it", "is", "project", "scoped.\n", "No", "usages", "were", "created.\n", "Let", "the", "context", "determine", "the", "project_id", "and", "user_id\n", "Compare", "the", "expected", "usages", "with", "the", "actual", "usages.\n", "Expect", "fixed_ips", "not", "to", "change", "since", "it", "is", "project", "scoped.\n", "Expect", "security_groups", "not", "to", "change", "since", "it", "is", "not", "in", "keys", "list.\n", "Expect", "fixed_ips", "not", "to", "change", "since", "it", "is", "project", "scoped.\n", "No", "usages", "were", "created.\n", "Create", "per-user", "ram", "usage\n", "Compare", "the", "expected", "usages", "with", "the", "created", "usages.\n", "Expect", "instances", "to", "be", "created", "and", "initialized", "to", "0\n", "Expect", "cores", "to", "be", "created", "and", "initialized", "to", "0\n", "Expect", "ram", "to", "be", "created", "and", "initialized", "to", "0\n", "Let", "the", "parameter", "determine", "the", "project_id,", "not", "the", "context.\n", "Compare", "the", "expected", "usages", "with", "the", "actual", "usages.\n", "Expect", "instances", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "cores", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "ram", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "server_groups", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "security_groups", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Let", "the", "parameter", "determine", "the", "project_id,", "not", "the", "context.\n", "Compare", "the", "expected", "usages", "with", "the", "actual", "usages.\n", "Expect", "instances", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "cores", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "ram", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "fixed_ips", "not", "to", "change", "since", "it", "is", "not", "in", "the", "keys", "list.\n", "Expect", "server_groups", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Expect", "security_groups", "not", "to", "change", "since", "it", "is", "user", "scoped.\n", "Create", "per-project", "floating_ips", "usage\n", "Compare", "the", "expected", "usages", "with", "the", "created", "usages.\n", "Expect", "floating_ips", "to", "be", "created", "and", "initialized", "to", "0\n", "fixed_ips", "is", "a", "valid", "syncable", "project", "key,\n", "but", "not", "a", "valid", "user", "key\n", "security_group_rules", "is", "a", "valid", "user", "key,", "but", "not", "syncable\n", "ram", "is", "a", "valid", "syncable", "user", "key,", "but", "not", "a", "valid", "project", "key\n", "injected_files", "is", "a", "valid", "project", "key,", "but", "not", "syncable\n", "Use", "our", "pre-defined", "resources"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/util.py": ["IndexError", "KeyError", "None", "ValueError", "_", "best_match", "body", "content_type", "data", "decorated_function", "decorator", "environ", "error_dict", "exc", "f", "functools", "instance", "int", "json_error_formatter", "jsonschema", "jsonutils", "microversion", "name", "nova", "prefix", "req", "request_id", "resource_class", "resource_provider", "resource_provider_url", "schema", "status", "status_code", "title", "type_string", "types", "url", "uuidutils", "webob", "Utility", "methods", "for", "placement", "API.\nExtract", "JSON", "from", "a", "body", "and", "validate", "with", "the", "provided", "schema.\nDecorator", "to", "require", "a", "content", "type", "in", "a", "handler.", "NOTE(cdent):", "avoid", "cyclical", "import", "conflict", "between", "util", "and\n", "microversion\n", "NOTE(cdent):", "This", "registers", "a", "FormatChecker", "on", "the", "jsonschema\n", "module.", "Do", "not", "delete", "this", "code!", "Although", "it", "appears", "that", "nothing\n", "is", "using", "the", "decorated", "method", "it", "is", "being", "used", "in", "JSON", "schema\n", "validations", "to", "check", "uuid", "formatted", "strings.\n", "Clear", "out", "the", "html", "that", "webob", "sneaks", "in.\n", "Get", "status", "code", "out", "of", "status", "message.", "webob's", "error", "formatter\n", "only", "passes", "entire", "status", "string.\n", "If", "the", "request", "id", "middleware", "has", "had", "a", "chance", "to", "add", "an", "id,\n", "put", "it", "in", "the", "error", "response.\n", "When", "there", "is", "a", "no", "microversion", "in", "the", "environment", "and", "a", "406,\n", "microversion", "parsing", "failed", "so", "we", "need", "to", "include", "microversion\n", "min", "and", "max", "information", "in", "the", "error", "response.\n", "webob's", "unset", "content_type", "is", "the", "empty", "string", "so\n", "set", "it", "the", "error", "message", "content", "to", "'None'", "to", "make\n", "a", "useful", "message", "in", "that", "case.\n", "NOTE(cdent):", "For", "the", "time", "being", "we", "don't", "need", "to", "urldecode\n", "the", "value", "as", "the", "entire", "placement", "API", "has", "paths", "that", "accept", "no\n", "encoded", "values."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/pause_server.py": ["ALIAS", "NotImplementedError", "PauseServerController", "alias", "args", "body", "common", "compute", "controller", "ctxt", "e", "exc", "exception", "extension", "extensions", "id", "kwargs", "name", "ps_policies", "req", "self", "server", "state_error", "super", "version", "wsgi", "Permit", "Admins", "to", "pause", "the", "server.\nPermit", "Admins", "to", "unpause", "the", "server.\nEnable", "pause/unpause", "server", "actions."], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_compute_cells.py": ["CONF", "CellsComputeAPITestCase", "CellsConductorAPIRPCRedirect", "CellsShelveComputeAPITestCase", "False", "None", "ORIG_COMPUTE_API", "True", "_bdms", "_cells", "_check", "_check_auto_disk_config", "_check_bdm", "_checks_for_create_and_rebuild", "_extract", "_fake_cast_to_cells", "_fake_validate_cell", "_get_image", "_get_spec", "_mock_delete_everywhere", "_mock_lookup", "_mock_lookup_inst", "_mock_lookup_instance", "_provision", "_record", "_record_action_start", "_req_spec_get_by_inst_uuid", "_reserve", "_save", "_spec_get_by_uuid", "_test", "_upsize", "_validate", "actionerror", "add_cell_name", "admin_pass", "api", "args", "bdm_get_by_instance_uuid", "bdms", "block_device", "call", "cast", "cells_mgr", "cells_rpcapi", "client", "compute_api", "compute_cells_api", "compute_utils", "context", "copy", "db", "delete_type", "deploy_stubs", "dest_host", "dict", "exception", "fake_instance", "files_to_inject", "filters", "flavor", "flavors", "fn", "force", "functools", "get_flavor", "getattr", "image", "image_href", "inspect", "inst", "instance", "instance_save", "instance_type", "instance_with_cell", "kwargs", "len", "manager", "method", "method_name", "migrations", "mock", "mock_compute_delete", "mock_delete", "mock_delete_everywhere", "mock_delete_while_booting", "mock_evacuate", "mock_inst_del", "mock_inst_delete_everywhere", "mock_local_delete", "mock_lookup", "mock_lookup_instance", "mock_msg", "mock_refresh", "mox", "name", "notfound", "nova", "objects", "orig_system_metadata", "original_instance", "quota", "response", "saved_quotas", "self", "set", "stub_call_to_cells", "stub_cast_to_cells", "stubs", "super", "task_api", "task_states", "test", "test_compute", "test_flavor", "test_shelve", "tests", "timeutils", "uuids", "value", "version", "vm_states", "wire", "Restore", "this", "in", "'child", "cell", "DB'\n", "Use", "NoopQuotaDriver", "in", "child", "cells.\n", "Restore", "this", "in", "'child", "cell", "DB'\n", "Use", "NoopQuotaDriver", "in", "child", "cells.\n", "If", "the", "instance.destroy()", "is", "reached", "during", "_local_delete,\n", "it", "will", "raise", "ObjectActionError", "if", "the", "instance", "has", "already\n", "been", "deleted", "by", "a", "instance_destroy_at_top,", "and", "instance.refresh()\n", "will", "raise", "InstanceNotFound\n", "If", "anything", "in", "_local_delete", "accesses", "the", "instance", "causing", "a", "db\n", "lookup", "before", "instance.destroy()", "is", "reached,", "if", "the", "instance", "has\n", "already", "been", "deleted", "by", "a", "instance_destroy_at_top,\n", "InstanceNotFound", "will", "be", "raised\n", "This", "checks", "the", "case", "where", "initially", "an", "instance", "has", "no", "cell_name,\n", "and", "therefore", "no", "host,", "set", "but", "instance.destroy", "fails", "because\n", "there", "is", "now", "a", "host.\n", "This", "checks", "the", "case", "where", "initially", "an", "instance", "has", "no", "cell_name,\n", "and", "therefore", "no", "host,", "set", "but", "instance.destroy", "fails", "because\n", "there", "is", "now", "a", "host.", "And", "then", "the", "instance", "can't", "be", "looked", "up.\n", "TODO(belliott)", "Cells", "could", "benefit", "from", "better", "testing", "to", "ensure", "API\n", "and", "manager", "signatures", "stay", "up", "to", "date\n", "wire", "the", "rpc", "cast", "directly", "to", "the", "manager", "method", "to", "make", "sure\n", "the", "signature", "matches\n", "one", "targeted", "message", "should", "have", "been", "created\n", "Ensure", "instance", "can", "be", "unshelved", "on", "cell", "environment.\n", "The", "super", "class", "tests", "nova-shelve.\n", "Subsequent", "tests", "in", "class", "are", "verifying", "the", "hooking.", "We", "don't", "check\n", "args", "since", "this", "is", "verified", "in", "compute", "test", "code."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_remote_consoles.py": ["ConsolesSampleJsonTests", "ConsolesV26SampleJsonTests", "ConsolesV28SampleJsonTests", "None", "True", "body", "microversion", "response", "sample_dir", "scenarios", "self", "subs", "super", "test_servers", "uuid", "@%/;$()~_?\\+-=\\\\\\.&](#!)?)*)\"}\n@%/;$()~_?\\+-=\\\\\\.&](#!)?)*)\"}\n@%/;$()~_?\\+-=\\\\\\.&](#!)?)*)\"}\n@%/;$()~_?\\+-=\\\\\\.&](#!)?)*)\"}\n", "NOTE(gmann):", "microversion", "tests", "do", "not", "need", "to", "run", "for", "v2", "API\n", "so", "defining", "scenarios", "only", "for", "v2.6", "which", "will", "run", "the", "original", "tests\n", "by", "appending", "'(v2_6)'", "in", "test_id.\n@%/;$()~_?\\+-=\\\\\\.&](#!)?)*\"\n@%/;$()~_?\\+-=\\\\\\.&](#!)?)*\""], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_os_vif_util.py": ["False", "None", "OSVIFUtilTestCase", "True", "actual", "driver", "exception", "expect", "info", "inst", "ips", "model", "network", "objects", "os_vif_util", "osv_obj", "osv_objects", "port_filter", "routes", "self", "subnets", "super", "test", "vif", "Remove", "when", "all", "os-vif", "objects", "include", "the\n", "ComparableVersionedObject", "mix-in"], "/Users/mehranhassani/repos/nova/nova/cells/weights/weight_offset.py": ["CONF", "cell", "nova", "self", "weight_properties", "weights", "Returns", "whatever", "was", "in", "the", "DB", "for", "weight_offset."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_idmapshift.py": ["BaseTestCase", "ConfirmDirTestCase", "FakeStat", "False", "StringIO", "SystemExit", "True", "actual_target", "argparse", "args", "confirm_path_calls", "confirm_path_side_effect", "dict", "files", "fixtures", "gid", "gid_ranges", "idmapshift", "join_side_effect", "kwargs", "lchown_calls", "len", "lstat", "memo", "mock", "mock_confirm_dir", "mock_confirm_dir_call", "mock_confirm_path", "mock_join", "mock_join_calls", "mock_lchown", "mock_lstat", "mock_parser", "mock_parser_class", "mock_print", "mock_print_call", "mock_shift_dir", "mock_shift_dir_call", "mock_shift_path", "mock_walk", "object", "path", "result", "root", "self", "shift_path_calls", "stats", "super", "sys_exit", "test", "uid", "uid_maps", "uid_ranges", "x", "Below", "range\n", "Match\n", "Beyond", "range"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/274_update_instances_project_id_index.py": ["Index", "LOG", "MetaData", "Table", "True", "_LI", "__name__", "c", "index", "instances", "logging", "meta", "migrate_engine", "Change", "instances", "(project_id)", "index", "to", "cover", "(project_id,", "deleted).", "Indexes", "can't", "be", "changed,", "we", "need", "to", "create", "the", "new", "one", "and", "delete\n", "the", "old", "one"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_images.py": ["ATOMNS", "IMAGE_FIXTURES", "ImagesControllerDeprecationTest", "ImagesControllerTestV21", "NOW_API_FORMAT", "NS", "None", "_delete_mocked", "_get_all_mocked", "_get_mocked", "actual_image", "actual_url", "bookmark_base", "controller_method", "copy", "delete_method", "delete_mocked", "exception", "expected", "expected_code", "expected_image", "fake_req", "fakes", "filters", "generated_url", "get_all_mocked", "get_mocked", "glance", "href_parts", "http_request", "image_125", "image_126", "image_127", "image_128", "image_129", "image_130", "image_131", "image_controller_class", "image_fixtures", "images_v21", "images_view", "matchers", "mock", "params", "request", "response", "response_links", "response_list", "self", "super", "test", "url_base", "urlparse", "view", "webob", "Run", "before", "each", "test.", "If", "you", "try", "to", "delete", "a", "deleted", "image,", "you", "get", "back", "403", "Forbidden."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/flavors_extraspecs.py": ["False", "copy", "create", "metadata", "parameter_types", "update", "NOTE(oomichi):", "The", "metadata", "of", "flavor_extraspecs", "should", "accept", "numbers\n", "as", "its", "values."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/280_add_nullable_false_to_keypairs_name.py": ["False", "MetaData", "Table", "True", "UniqueConstraint", "key_pairs", "meta", "migrate_engine", "Function", "enforces", "non-null", "value", "for", "keypairs", "name", "field.", "Note:", "Since", "we", "are", "altering", "name", "field,", "this", "constraint", "on", "name", "needs", "to\n", "first", "be", "dropped", "before", "we", "can", "alter", "name.", "We", "then", "re-create", "the", "same\n", "constraint.", "It", "was", "first", "added", "in", "216_havana.py", "so", "no", "need", "to", "remove\n", "constraint", "on", "downgrade."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavor_access.py": ["ACCESS_LIST", "FakeRequest", "FakeResponse", "False", "FlavorAccessController", "FlavorAccessPolicyEnforcementV21", "FlavorAccessTestV21", "FlavorActionController", "INSTANCE_TYPES", "None", "True", "_has_flavor_access", "_prefix", "access", "add_access", "api_version", "api_version_request", "body", "bool", "context", "d1", "d2", "datetime", "environ", "exc", "exception", "expected", "fake_get_all_flavors_sorted_list", "fake_get_flavor_access_by_flavor_id", "fake_get_flavor_by_flavor_id", "fake_get_flavor_projects_from_db", "fakes", "filters", "flavor_access_v21", "flavor_id", "flavorid", "flavors_api", "generate_flavor", "inactive", "ispublic", "item", "k", "len", "limit", "marker", "mock", "mock_api_get", "mock_get", "obj", "object", "projectid", "read_deleted", "remove_access", "req", "res", "resp", "result", "rule_name", "self", "six", "sort_dir", "sort_key", "sorted", "str", "stub_add_flavor_access", "stub_remove_flavor_access", "super", "test", "url", "v", "validation_ex", "zip", "Simulate", "no", "API", "flavors", "right", "now\n", "result", "already", "sorted", "by", "flavor_id\n", "query", "os-flavor-access", "on", "public", "flavor", "should", "return", "404"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_rpcapi.py": ["CONF", "ComputeRpcAPITestCase", "False", "None", "True", "_test", "base_version", "call", "callargs", "callret", "calltype", "can_send", "can_send_mock", "cast_and_call", "cast_mock", "cctxt_mock", "compute_rpcapi", "context", "csv_mock", "ctxt", "default_client", "exception", "expected_args", "expected_kwargs", "expected_version", "fake_block_device", "fake_flavor", "fake_instance", "getattr", "host", "inargs", "inst", "instance", "instance_attr", "jsonutils", "kwargs", "list", "method", "migrate_data_obj", "migration", "migration_obj", "mock", "mock_cctx", "mock_ch", "mock_client", "mock_det", "mock_fld", "mock_get_min", "mock_host_mapping", "mock_inst_mapping", "nova", "obj", "objects_block_dev", "orig_prepare", "prepare_mock", "prepare_target", "result", "retval", "rpc", "rpc_method", "rpc_mock", "rpcapi", "self", "super", "test", "v", "version", "FIXME(melwitt):", "Temporary", "while", "things", "have", "no", "mappings\n", "This", "test", "wants", "to", "run", "the", "real", "prepare", "function,", "so", "must", "use\n", "a", "real", "client", "object\n", "assert", "our", "mocks", "were", "called", "as", "expected\n", "Get", "the", "target", "of", "the", "prepare", "call:", "prepare(server=<target>,", "...)\n", "If", "_compute_host(None,", "instance)", "was", "called,", "then", "by_instance\n", "should", "have", "been", "called", "with", "the", "instance.", "Otherwise", "by_host\n", "should", "have", "been", "called", "with", "the", "same", "host", "as", "the", "prepare", "target."], "/Users/mehranhassani/repos/nova/nova/compute/utils.py": ["AttributeError", "CONF", "EventReporter", "Exception", "False", "LOG", "None", "True", "TypeError", "ValueError", "_LW", "__name__", "_get_fault_and_priority_from_exc", "_get_fault_details", "_get_instance_ips", "_get_unused_letter", "_quota_delta", "action", "addr", "address", "addresses", "aggregate", "aggregate_identifier", "aggregate_notification", "aggregate_payload", "all_letters", "args", "audit_end", "audit_start", "bdm", "bdms", "binary", "block_device", "block_device_lists", "bw", "code", "compare", "context", "curr_refreshed", "current_period", "current_power_state", "decorated_function", "default", "deltas", "details", "dev", "dev_list", "device", "device_name_list", "device_path", "dict", "doubles", "driver", "error_code", "event_name", "event_suffix", "exc_info", "exc_tb", "exc_type", "exc_val", "exception", "exception_to_dict", "extra_info", "extra_usage_info", "family", "fault", "fault_dict", "fault_message", "fault_obj", "fault_payload", "fields", "first", "flavor", "function", "functools", "get_next_device_name", "get_nw_info_for_instance", "get_root_bdm", "hasattr", "helper", "host", "host_identifier", "host_payload", "iface_data", "ignore_missing_network_data", "image_meta", "inspect", "instance", "instance_notification", "instance_ref", "instance_uuid", "instance_uuids", "interface", "ip", "ips", "isinstance", "itertools", "key", "keyed_args", "kwargs", "last_refreshed_time", "letter", "letters", "list", "log", "mappings", "max", "message", "method", "netifaces", "network_info", "network_model", "new_flavor", "new_volume_id", "notification", "notification_base", "notification_exception", "notifications", "notifier", "notify_about_instance_usage", "nova", "null_safe_str", "object", "objects", "old_flavor", "old_volume_id", "payload", "phase", "power_state", "prefix", "priority", "project_id", "property", "quotas", "reboot_type", "req_letter", "req_prefix", "resize_quota_delta", "resource", "root_bdm", "root_device_name", "rpc", "s", "safe_utils", "second", "self", "sense", "set", "sg_payload", "six", "soft_types", "str", "string", "system_metadata", "task_state", "task_states", "tb", "tot_refreshed", "traceback", "type", "u_message", "usage_info", "used_letters", "user_id", "utils", "uuid", "value", "vif", "vol_usage", "wrapped_func", "x", "Compute-related", "Utilities", "and", "helpers.\nConverts", "exceptions", "to", "a", "dict", "for", "use", "in", "notifications.\nAdds", "the", "specified", "fault", "to", "the", "database.\nGenerate", "missing", "device", "names", "for", "an", "instance.\nChecks", "if", "the", "current", "instance", "state", "requires", "a", "HARD", "reboot.\nContext", "manager", "to", "report", "instance", "action", "events.", "TODO(johngarbutt)", "move", "to", "nova/exception.py", "to", "share", "with", "wrap_exception\n", "get", "the", "message", "from", "the", "exception", "that", "was", "thrown\n", "if", "that", "does", "not", "exist,", "use", "the", "name", "of", "the", "exception", "class", "itself\n", "These", "exception", "handlers", "are", "broad", "so", "we", "don't", "fail", "to", "log", "the", "fault\n", "just", "because", "there", "is", "an", "unexpected", "error", "retrieving", "the", "message\n", "NOTE(dripton)", "The", "message", "field", "in", "the", "database", "is", "limited", "to", "255", "chars.\n", "MySQL", "silently", "truncates", "overly", "long", "messages,", "but", "PostgreSQL", "throws", "an\n", "error", "if", "we", "don't", "truncate", "it.\n", "NOTE(vish):", "remove", "this", "when", "xenapi", "is", "setting", "default_root_device\n", "NOTE(vish):", "remove", "this", "when", "xenapi", "is", "properly", "setting\n", "default_ephemeral_device", "and", "default_swap_device\n", "in", "case", "we", "hit", "a", "very", "old", "instance", "without", "root", "bdm,", "we", "_assume_", "that\n", "instance", "is", "backed", "by", "a", "volume,", "if", "and", "only", "if", "image_ref", "is", "not", "set\n", "NOTE(vish):", "prepend", "`", "so", "all", "shorter", "sequences", "sort", "first\n", "add", "image", "metadata", "to", "the", "notification:\n", "NOTE(johngarbutt)", "mirrors", "the", "format", "in", "wrap_exception\n", "curr_refreshed", "must", "be", "set\n", "If", "we", "have", "an", "ipv6", "address", "remove", "the\n", "%ether_interface", "at", "the", "end\n", "Delete", "system_metadata", "for", "a", "shelved", "instance"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_attach_interfaces.py": ["AttachInterfacesSampleJsonTest", "None", "True", "context", "exception", "fake_attach_interface", "fake_detach_interface", "fake_list_ports", "fake_network_cache_model", "fake_show_port", "instance", "instance_uuid", "kwargs", "network_api", "network_id", "port", "port_data", "port_id", "ports", "requested_ip", "response", "sample_dir", "self", "show_port", "subs", "super", "test_servers", "uuid", "vanilla_regexes", "vif"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_password.py": ["ALIAS", "None", "ServerPasswordController", "alias", "common", "compute", "context", "dict", "extensions", "instance", "meta", "name", "passw", "password", "req", "resources", "self", "server_id", "sp_policies", "version", "wsgi", "The", "server", "password", "extension.\nThe", "Server", "Password", "API", "controller", "for", "the", "OpenStack", "API.\nServer", "password", "support."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/mount/test_api.py": ["AUTOMAP_PARTITION", "False", "KeyError", "MAP_PARTITION", "None", "ORIG_DEVICE", "PARTITION", "True", "api", "block", "data", "device", "exists", "exists_effect", "filename", "filenames", "image", "imgmodel", "inst", "isinstance", "len", "list", "loop", "mock", "mount", "mount_dir", "nbd", "partition", "self", "test", "trailing", "trycmd", "v", "x", "don't", "care", "about", "args"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_hacking.py": ["None", "True", "__get_msg", "actual_errors", "bad", "checker", "checks", "code", "debug", "e", "errors", "expect", "expected_errors", "filename", "fun", "func", "len", "level", "levels", "lines", "list", "log", "logs", "method", "mock", "msg", "ok", "pep8", "self", "should_match", "should_not_match", "test", "textwrap", "tuple", "vim:", "et", "tabstop=4", "shiftwidth=4", "softtabstop=4\",\n", "vim:", "et", "tabstop=4", "shiftwidth=4", "softtabstop=4\",\n", "vim:", "et", "tabstop=4", "shiftwidth=4", "softtabstop=4\",\n", "vim:", "et", "tabstop=4", "shiftwidth=4", "softtabstop=4\",\n", "Shouldn't", "fail", "with", "comparisons\n", "Shouldn't", "fail", "since", "not", "in", "nova/tests/\n", "noqa\"", "%", "log\n", "We", "are", "patching", "pep8", "so", "that", "only", "the", "check", "under", "test", "is", "actually\n", "installed.\n", "NOTE(sdague):", "the", "standard", "reporter", "has", "printing", "to", "stdout\n", "as", "a", "normal", "part", "of", "check_all,", "which", "bleeds", "through", "to", "the\n", "test", "output", "stream", "in", "an", "unhelpful", "way.", "This", "blocks", "that", "printing.\n", "option", "at", "the", "right", "place", "in", "the", "tree\n", "option", "at", "the", "wrong", "place", "in", "the", "tree\n", "option", "at", "a", "location", "which", "is", "marked", "as", "an", "exception\n", "TODO(macsz)", "remove", "testing", "exceptions", "as", "they", "are", "removed", "from\n", "check_config_option_in_central_place\n", "Artificial", "break", "to", "stop", "pep8", "detecting", "the", "test", "!\n", "registration", "in", "the", "proper", "place\n", "option", "at", "a", "location", "which", "is", "not", "in", "scope", "right", "now\n", "Simulate", "a", "different", "enforce", "method", "defined", "in", "Nova\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/objects/numa.py": ["False", "NUMACell", "NUMAPagesTopology", "NUMATopology", "NUMATopologyLimits", "None", "True", "VERSION", "all_things_equal", "base", "cell", "cell_dict", "cell_id", "cells", "classmethod", "cls", "context", "cpu_ratio", "cpu_usage", "cpus", "cpuset", "data_dict", "db_obj", "exception", "fields", "float", "getattr", "hardware", "host_topology", "jsonutils", "len", "list", "memory", "memory_usage", "name", "obj_a", "obj_b", "obj_topology", "other", "pages", "pagesize", "pin_siblings", "primitive", "property", "ram_ratio", "self", "set", "set_a", "set_b", "sib", "sibling_set", "super", "target_version", "versionutils", "Returns", "the", "number", "of", "avail", "pages.\nReturns", "the", "avail", "memory", "size", "in", "KiB.\nDefined", "so", "that", "boolean", "testing", "works", "the", "same", "as", "for", "lists.", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "pinned_cpus", "and", "siblings", "fields\n", "Version", "1.2:", "Added", "mempages", "field\n", "NOTE(snikitin):", "Empty", "siblings", "list", "means", "that", "HyperThreading", "is\n", "disabled", "on", "the", "NUMA", "cell", "and", "we", "must", "pin", "CPUs", "like", "normal", "CPUs.\n", "NOTE(snikitin):", "Empty", "siblings", "list", "means", "that", "HyperThreading", "is\n", "disabled", "on", "the", "NUMA", "cell", "and", "we", "must", "unpin", "CPUs", "like", "normal", "CPUs.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Adds", "reserved", "field\n", "In", "case", "where", "an", "old", "compute", "node", "is", "sharing", "resource", "to\n", "an", "updated", "node", "we", "must", "ensure", "that", "this", "property", "is", "defined.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Update", "NUMACell", "to", "1.1\n", "Version", "1.2:", "Update", "NUMACell", "to", "1.2\n", "NOTE(sahid):", "This", "compatibility", "code", "needs", "to", "stay", "until", "we", "can\n", "guarantee", "that", "there", "are", "no", "cases", "of", "the", "old", "format", "stored", "in\n", "the", "database", "(or", "forever,", "if", "we", "can", "never", "guarantee", "that).\n", "TODO(sahid):", "needs", "to", "be", "removed.\n", "Version", "1.0:", "Initial", "version\n", "NOTE(sahid):", "This", "compatibility", "code", "needs", "to", "stay", "until", "we", "can\n", "guarantee", "that", "all", "compute", "nodes", "are", "using", "RPC", "API", "=>", "3.40."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_utils.py": ["AuditPeriodTest", "CONF", "False", "LastBytesTestCase", "MonkeyPatchDefaultTestCase", "MonkeyPatchTestCase", "None", "SpawnNTestCase", "SpawnTestCase", "True", "TypeError", "VPNPingTestCase", "_fake_spawn", "actual_tags", "adict", "arg", "args", "bar", "base_str", "base_unicode", "baz", "begin", "byte_message", "c", "cfg", "cmd", "common_context", "conf_path", "content", "contents", "context", "context_fixture", "ctxt", "ctxt_passed", "daemon", "data", "datetime", "dec", "dec_2", "decorator_module", "decorator_name", "defaultname", "dict", "encodeutils", "end", "err", "eventlet", "exampleA", "exampleB", "example_a", "example_b", "exception", "expected", "expected_args", "expected_err", "expected_tags", "f", "fake", "fake_contents", "fake_execute", "fdata", "filename", "filts", "flavor", "flo", "foo", "fresh", "func", "getattr", "getmtime", "hashlib", "hostname", "i1", "i11", "i12", "i2", "i21", "i22", "image", "image_meta", "importlib", "inner_f", "key", "kwarg1", "kwargs", "len", "logging", "m", "metadata", "mock", "mock_client", "mock_conf", "mock_daemon_helper", "mock_execute", "mock_info", "mock_log", "mock_method", "mock_proc_helper", "mock_socket", "module", "msg", "netaddr", "nova", "obj", "obj1", "obj2", "obj_base", "os", "out", "package_a", "package_b", "password", "pkt_id", "processutils", "properties", "rc", "remaining", "res", "res_list", "result", "ret_a", "ret_b", "return_value", "rl", "self", "side_effect", "six", "socket", "socket_obj", "some_value", "sort_key", "sorted", "struct", "super", "sys_key", "sys_meta", "tempfile", "test", "test_objects", "test_utils", "tester", "truncated_msg", "type", "units", "utils", "utils_fixture", "value", "volume", "Unit", "tests", "for", "utils.vpn_ping().\nServer", "doesn't", "reply", "within", "timeout.\nTest", "a", "short/invalid", "server", "reply.\nServer", "sends", "an", "unknown", "packet", "ID.\nUnit", "test", "for", "utils.monkey_patch().\nUnit", "test", "for", "default", "monkey_patch_modules", "value.\nTest", "the", "last_bytes()", "utility", "method.", "error", "case\n@&$!(@*--#&91)(__=+--test-host.example!!.com-0+\"\n", "we", "trim", "to", "63", "and", "then", "trim", "the", "trailing", "dash\n", "We", "expect", "that", "if", "cached", "file", "does", "not", "exist", "no", "Exception", "raised.\n", "monkey_patch_modules", "is", "defined", "to", "be\n", "<module_to_patch>:<decorator_to_patch_with>\n", "Here", "we", "check", "that", "both", "parts", "of", "the", "default", "values", "are\n", "valid\n", "Check", "we", "can", "import", "the", "module", "to", "be", "patched\n", "check", "the", "decorator", "is", "valid\n", "a", "fairly", "random", "time", "to", "test", "with\n", "StringIO", "doesn't", "raise", "IOError", "if", "you", "see", "past", "the", "start", "of", "the", "file.\n", "verify", "correct", "default", "behavior\n", "Call", "to", "ensure", "nothing", "errors\n", "Call", "to", "ensure", "nothing", "errors\n", "Verify", "that", "we", "inherit", "all", "the", "needed", "keys\n", "Verify", "that", "everything", "else", "is", "ignored\n", "Verify", "that", "we", "inherit", "all", "the", "image", "properties\n", "Verify", "that", "we", "inherit", "all", "the", "image", "properties\n", "Verify", "that", "the", "min_disk", "property", "is", "taken", "from\n", "flavor's", "root_gb", "when", "using", "vhd", "disk", "format\n", "Verify", "that", "the", "empty", "properties", "have", "not", "been", "inherited\n", "Verify", "that", "we", "inherit", "all", "the", "needed", "keys\n", "Verify", "that", "we", "inherit", "the", "rest", "of", "metadata", "as", "properties\n", "Verify", "that", "the", "empty", "properties", "have", "not", "been", "inherited\n", "volume's", "properties", "should", "not", "be", "touched\n", "Create", "some", "tags\n", "One", "overlapping", "pair,", "and", "one", "different", "key", "value", "pair\n", "i1", ":", "foo=bar,", "bax=wibble\n", "i2", ":", "foo=bar,", "baz=quux\n", "resources\n", "Resources", "list\n", "tags\n", "No", "filter\n", "Key", "search\n", "Both", "should", "have", "tags", "with", "key", "'foo'", "and", "value", "'bar'\n", "Both", "should", "have", "tags", "with", "key", "'foo'\n", "Only", "i2", "should", "have", "tags", "with", "key", "'baz'", "and", "value", "'quux'\n", "Only", "i2", "should", "have", "tags", "with", "value", "'quux'\n", "Empty", "list", "should", "be", "returned", "when", "no", "tags", "match\n", "Multiple", "values\n", "Only", "i2", "should", "have", "tags", "with", "key", "'baz'", "and", "values", "in", "the", "set\n", "['quux',", "'wibble']\n", "But", "when", "specified", "as", "two", "different", "filters,", "no", "tags", "should", "be\n", "returned.", "This", "is", "because,", "the", "filter", "will", "mean", "\"return", "tags", "which\n", "have", "(key=baz", "AND", "value=quux)", "AND", "(key=baz", "AND", "value=wibble)\n", "Test", "for", "regex\n", "Make", "sure", "bug", "#1365887", "is", "fixed\n", "Generate", "Chinese", "byte", "string", "whose", "length", "is", "300.", "This", "Chinese", "UTF-8\n", "character", "occupies", "3", "bytes.", "After", "truncating,", "the", "byte", "string", "length\n", "should", "be", "255.\n", "Generate", "Russian", "byte", "string", "whose", "length", "is", "300.", "This", "Russian", "UTF-8\n", "character", "occupies", "2", "bytes.", "After", "truncating,", "the", "byte", "string", "length\n", "should", "be", "254.\n", "call", "the", "method", "to", "ensure", "no", "error", "is", "raised\n", "call", "the", "method", "to", "ensure", "no", "error", "is", "raised\n", "call", "the", "method", "to", "ensure", "no", "error", "is", "raised\n", "check", "that", "type", "of", "returned", "value", "doesn't", "changed\n", "Called", "at", "all\n", "Called", "once", "(not", "true)\n", "Not", "called", "with", "obj.foo=2\n", "Called", "with", "obj.foo.3\n", "Called", "once", "with", "obj.foo.3"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_cloudpipe.py": ["CONF", "CloudpipePolicyEnforcementV21", "CloudpipeTestV21", "None", "True", "addr", "arg", "body", "cloudpipe", "cloudpipe_v21", "compute_api_get_all", "compute_api_get_all_empty", "compute_utils", "context", "exc", "exception", "fake_get_nw_info_for_instance", "fake_network", "fake_vpn_instance", "fakes", "func", "instance", "kwarg", "launch_vpn_instance", "matchers", "network_api_get", "network_id", "nova", "objects", "port", "project_id", "req", "res_dict", "response", "rule", "rule_name", "search_opts", "self", "session_id", "str", "super", "test", "timeout", "timeutils", "url", "utils", "utils_vpn_ping", "uuid", "uuid_lib", "uuids"], "/Users/mehranhassani/repos/nova/tools/xenserver/vm_vdi_cleaner.py": ["ALLOWED_COMMANDS", "CONF", "Exception", "KeyError", "None", "True", "XenAPI", "__name__", "_add_vdi_and_parents_to_connected", "_find_all_vdis_and_system_vdis", "_find_vdis_connected_to_vm", "_get_applicable_vm_recs", "_is_null_ref", "_system_owned", "all_vdi_uuids", "args", "call_xenapi", "cfg", "clean_orphaned_instances", "clean_orphaned_vdis", "cleaner_opts", "cleanup_instance", "cli_opt", "command", "config", "connected_vdi_uuids", "context", "ctxt", "cur_vdi_rec", "cur_vdi_ref", "cur_vdi_uuid", "db", "doctest", "e", "exc", "exception", "find_orphaned_instances", "find_orphaned_vdi_uuids", "indent", "indent_level", "instance", "is_active_and_deleting", "is_zombie_vm", "list_orphaned_instances", "list_orphaned_vdis", "main", "method", "msg", "name_label", "nova", "obj", "obj_type", "orphaned_instance", "orphaned_instances", "orphaned_vdi_uuids", "os", "parent_vdi_uuid", "possible_topdir", "print_xen_object", "ref", "set", "spaces_per_indent", "sys", "timeutils", "uuid", "vbd_rec", "vbd_ref", "vbd_refs", "vbd_vdi_ref", "vdi_and_parent_uuids", "vdi_name", "vdi_rec", "vdi_ref", "vdi_uuid", "vdi_uuids", "virtapi", "vm_rec", "vm_ref", "xenapi", "xenapi_driver", "vm_vdi_cleaner.py", "-", "List", "or", "clean", "orphaned", "VDIs/instances", "on", "XenServer.\nMake", "a", "call", "to", "xapi.\nFind", "and", "return", "a", "list", "of", "orphaned", "instances.\nDelete", "orphaned", "instances.\nFind", "VDIs", "which", "are", "connected", "to", "VBDs", "which", "are", "connected", "to", "VMs.\nCollects", "all", "VDIs", "and", "adds", "system", "VDIs", "to", "the", "connected", "set.\nWalk", "VM", "->", "VBD", "->", "VDI", "change", "and", "accumulate", "connected", "VDIs.\nList", "orphaned", "VDIs.\nClean", "orphaned", "VDIs.\nList", "orphaned", "instances.\nClean", "orphaned", "instances.\nMain", "loop.", "Copyright", "2011", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");\n", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.\n", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,\n", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.\n", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and\n", "limitations", "under", "the", "License.\n", "NOTE(jk0):", "Err", "on", "the", "side", "of", "caution", "here.", "If", "we", "don't", "know\n", "anything", "about", "the", "particular", "instance,", "ignore", "it.\n", "NOTE(jk0):", "This", "would", "be", "triggered", "if", "a", "VM", "was", "deleted", "but", "the\n", "actual", "deletion", "process", "failed", "somewhere", "along", "the", "line.\n", "NOTE(jk0):", "A", "zombie", "VM", "is", "an", "instance", "that", "is", "not", "active", "and", "hasn't\n", "been", "updated", "in", "over", "the", "specified", "period.\n", "NOTE(sirp):", "VDI's", "can", "have", "themselves", "as", "a", "parent?!\n", "System", "owned", "and", "non-managed", "VDIs", "should", "be", "considered", "'connected'\n", "for", "our", "purposes.\n", "NOTE(blamar)", "This", "tool", "does", "not", "require", "DB", "access,", "so", "passing", "in", "the\n", "'abstract'", "VirtAPI", "class", "is", "acceptable"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/fakes.py": ["CONF", "Exception", "FAKE_PROJECT_ID", "FAKE_USER_ID", "FAKE_UUID", "FAKE_UUIDS", "FLAVORS", "Fake", "FakeAuthDatabase", "FakeRequestContext", "FakeSecurityGroupAPI", "FakeToken", "False", "HTTPRequest", "KeyError", "None", "NotImplementedError", "QUOTAS", "TestRouter", "TestRouterV21", "True", "TypeError", "_ip", "_return_server", "_return_server_obj", "_return_servers", "_return_servers_objs", "access_ipv4", "access_ipv6", "allowed", "api_auth", "api_v21", "api_version", "args", "auto_disk_config", "availability_zone", "backup_type", "base", "classmethod", "cleaned", "cls", "columns_to_join", "compute", "compute_api", "config_drive", "context", "controller", "create_info", "create_info_cache", "ctxt", "data", "datetime", "db_attr", "db_inst", "db_insts", "defaults", "delete_info", "deltas", "description", "detailed", "dict", "display_description", "display_name", "ephemeral_gb", "exc", "existing_translations", "expected", "expected_attrs", "extra_properties", "fake_auth_context", "fake_block_device", "fake_get_all", "fake_get_by_flavor_id", "fake_instance_get_all_by_filters", "fake_network", "fake_reserve", "fake_token", "filter_attr", "filters", "flavor", "flavor_id", "flavorinfo", "flavors", "found_marker", "func", "get_fake_uuid", "get_my_ip", "getattr", "have_key_pair", "host", "i", "id", "id_count", "image_ref", "inactive", "include_fake_metadata", "info_cache", "init_only", "inner_app_v21", "inst", "inst_type", "instance", "instance_type", "instance_uuid", "instance_uuids", "instances_security_group_bindings", "int", "ip", "isinstance", "item", "jsonutils", "k", "kernel_id", "key", "key_data", "key_name", "key_pair", "kwargs", "launch_index", "launched_at", "len", "limit", "locked_by", "mapper", "marker", "marker_found", "max_count", "memory_mb", "metadata", "models", "name", "networks", "no_key_pair", "node", "nova", "num_networks", "num_servers", "nw_cache", "object", "objects", "one_key_pair", "openstack_api", "os_wsgi", "out", "output", "param", "power_state", "private", "progress", "project_id", "props", "pub0", "pub1", "publics", "quota", "quotas", "ramdisk_id", "range", "read_deleted", "reject_min", "req", "requested", "requested_networks", "res", "reservation_id", "resource", "result", "root_device_name", "root_gb", "rotation", "routes", "search_opts", "security_group_base", "security_groups", "self", "server", "server_name", "servers", "servers_list", "services", "setattr", "six", "size", "snapshot", "snapshot_id", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "sorted", "staticmethod", "str", "stub_instance", "stub_instance_obj", "stub_snapshot", "stub_volume", "stubs", "super", "sys_meta", "system_metadata", "task_state", "terminated_at", "test", "test_keypair", "testcase", "timeutils", "token", "token_hash", "token_id", "urlmap", "usages", "use_admin_context", "use_slave", "user_data", "user_id", "utils", "uuid", "uuidutils", "v", "v2_compatible", "vcpus", "version", "versions", "vm_state", "vm_states", "vol", "volume", "volume_id", "webob", "wsgi", "x", "emulate", "glance", "rejecting", "image", "names", "which", "are", "too", "long\n", "This", "method", "shouldn't", "be", "called", "unless", "using", "neutron.\n", "ReservationID", "isn't", "sent", "back,", "hack", "it", "in", "there.\n", "This", "ensures", "services", "there", "if", "one", "wanted", "so\n", "add", "two", "BDMs", "per", "instance"], "/Users/mehranhassani/repos/nova/nova/volume/encryptors/cryptsetup.py": ["CryptsetupEncryptor", "False", "LOG", "None", "True", "_LI", "_LW", "__name__", "array", "base", "binascii", "cipher", "cmd", "connection_info", "context", "data", "dev_name", "e", "encoded_key", "exception", "hex", "key", "key_size", "kwargs", "logging", "old_dev_name", "os", "passphrase", "processutils", "self", "super", "utils", "volume_id", "wwn", "x", "Convert", "raw", "key", "to", "string.\nCloses", "the", "device", "(effectively", "removes", "the", "dm-crypt", "mapping).\nRemoves", "the", "dm-crypt", "mapping", "for", "the", "device.", "Fail", "if", "no", "device_path", "was", "set", "when", "connecting", "the", "volume,", "e.g.", "in\n", "the", "case", "of", "libvirt", "network", "volume", "drivers.\n", "the", "device's", "path", "as", "given", "to", "libvirt", "--", "e.g.,", "/dev/disk/by-path/...\n", "a", "unique", "name", "for", "the", "volume", "--", "e.g.,", "the", "iSCSI", "participant", "name\n", "NOTE(tsekiyama):", "In", "older", "version", "of", "nova,", "dev_name", "was", "the", "same\n", "as", "the", "symlink", "name.", "Now", "it", "has", "'crypt-'", "prefix", "to", "avoid", "conflict\n", "with", "multipath", "device", "symlink.", "To", "enable", "rolling", "update,", "we", "use", "the\n", "old", "name", "when", "the", "encrypted", "volume", "already", "exists.\n", "FibreChannel", "device", "could", "be", "named", "'/dev/mapper/<WWN>'.\n", "the", "device's", "actual", "path", "on", "the", "compute", "host", "--", "e.g.,", "/dev/sd_\n", "If", "/dev/mapper/<dev_name>", "is", "a", "non-crypt", "block", "device", "(such", "as", "a\n", "normal", "disk", "or", "multipath", "device),", "exit_code", "will", "be", "1.", "In", "the\n", "case,", "we", "will", "omit", "the", "warning", "message.\n", "NOTE(joel-coffman):", "cryptsetup", "will", "strip", "trailing", "newlines", "from\n", "input", "specified", "on", "stdin", "unless", "--key-file=-", "is", "specified.\n", "NOTE(lyarwood):", "This", "replicates", "the", "methods", "used", "prior", "to", "Newton", "to\n", "first", "encode", "the", "passphrase", "as", "a", "list", "of", "unsigned", "int's", "before\n", "decoding", "back", "into", "a", "string.", "This", "method", "strips", "any", "leading", "0's\n", "of", "the", "resulting", "hex", "digit", "pairs,", "resulting", "in", "a", "different\n", "passphrase", "being", "returned.\n", "NOTE(lyarwood):", "Workaround", "bug#1633518", "by", "attempting", "to", "use\n", "a", "mangled", "passphrase", "to", "open", "the", "device..\n", "modify", "the", "original", "symbolic", "link", "to", "refer", "to", "the", "decrypted", "device\n", "cryptsetup", "returns", "4", "when", "attempting", "to", "destroy", "a", "non-active\n", "dm-crypt", "device.", "We", "are", "going", "to", "ignore", "this", "error", "code", "to", "make\n", "nova", "deleting", "that", "instance", "successfully."], "/Users/mehranhassani/repos/nova/nova/vnc/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/283_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/270_flavor_data_in_extra.py": ["BASE_TABLE_NAME", "Column", "MetaData", "NEW_COLUMN_NAME", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_request_spec.py": ["None", "RequestSpecInstanceMigrationTestCase", "RequestSpecTestCase", "True", "USES_DB_SELF", "_delete_request_spec", "_flavor_ref_parameter", "_image_ref_parameter", "api_major_version", "api_models", "args", "context", "db", "db_spec", "deleted_instances", "done", "exception", "fake_network", "fake_request_spec", "fixtures", "i", "instance", "instance_uuid", "integrated_helpers", "len", "match", "obj_base", "objects", "old", "old_az", "range", "request", "request_spec", "self", "server", "spec", "super", "test", "total", "uuid", "Deletes", "a", "RequestSpec", "by", "the", "instance_uuid.", "Create", "all", "instances", "that", "would", "set", "a", "RequestSpec", "object\n", "Make", "sure", "that", "we", "have", "all", "the", "needed", "instances\n", "Fake", "the", "legacy", "behaviour", "by", "removing", "the", "RequestSpec", "for", "some", "old.\n", "Just", "add", "a", "deleted", "instance", "to", "make", "sure", "we", "don't", "create\n", "a", "RequestSpec", "object", "for", "it.\n", "Make", "sure", "we", "have", "the", "deleted", "instance", "only", "soft-deleted", "in", "DB\n", "Run", "again", "the", "migration", "call", "for", "making", "sure", "that", "we", "don't", "check\n", "again", "the", "same", "instances\n", "Make", "sure", "we", "ran", "over", "all", "the", "instances\n", "Make", "sure", "all", "instances", "have", "now", "a", "related", "RequestSpec\n", "Make", "sure", "no", "migrations", "can", "be", "found"], "/Users/mehranhassani/repos/nova/nova/policies/admin_password.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "admin_password_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/compute/monitors/cpu/virt_driver.py": ["CONF", "KeyError", "LOG", "Monitor", "NotImplementedError", "TypeError", "_LE", "__name__", "base", "cputime", "exception", "float", "int", "logging", "metric_list", "metric_object", "name", "nova", "objects", "perc", "prev_used", "resource_tracker", "self", "stats", "super", "timeutils", "used", "CPU", "monitor", "that", "uses", "the", "virt", "driver's", "get_host_cpu_stats()", "call.", "Extract", "node's", "CPU", "statistics.\n", "The", "compute", "driver", "API", "returns", "the", "absolute", "values", "for", "CPU", "times.\n", "We", "compute", "the", "utilization", "percentages", "for", "each", "specific", "CPU", "time\n", "after", "calculating", "the", "delta", "between", "the", "current", "reading", "and", "the\n", "previous", "reading.\n", "NOTE(jwcroppe):", "Convert", "all", "the", "`perc`", "values", "to", "their", "integer", "forms\n", "since", "pre-conversion", "their", "values", "are", "within", "the", "range", "[0,", "1]", "and", "the\n", "objects.MonitorMetric.value", "field", "requires", "an", "integer.\n", "Compute", "the", "current", "system-wide", "CPU", "utilization", "as", "a", "percentage."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/006_build_request.py": ["Boolean", "Column", "DateTime", "Enum", "False", "ForeignKeyConstraint", "Index", "InetSmall", "Integer", "MetaData", "String", "Table", "Text", "True", "UniqueConstraint", "build_requests", "dialects", "meta", "migrate_engine", "request_specs"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/metrics_filter.py": ["CONF", "False", "LOG", "MetricsFilter", "True", "__name__", "filters", "float", "host_state", "logging", "m", "metrics_on_host", "nova", "opts", "self", "set", "spec_obj", "super", "unavail", "utils", "x"], "/Users/mehranhassani/repos/nova/nova/tests/functional/wsgi/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/test_exception_notification.py": ["api_client", "fake_notifier", "len", "notification_sample_base", "post", "self", "recreating", "the", "aggregate", "raises", "exception"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_instance_types_extra_specs.py": ["InstanceTypeExtraSpecsTestCase", "context", "dict", "fields", "flavor", "flavors", "name2specs", "net_attrs", "objects", "self", "super", "test", "Remove", "the", "instance", "type", "from", "the", "database"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/__init__.py": [], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/agent.py": ["DEFAULT_TIMEOUT", "False", "ImportError", "NotImplementedError", "PluginError", "RebootDetectedError", "StandardError", "TimeoutError", "True", "XenAPIPlugin", "_", "__name__", "_get_agent_features", "_wait_for_agent", "agent_features", "agent_update", "arg_dict", "b64_file", "b64_path", "base64", "commands", "dct", "dom_id_is_present", "e", "enc_pass", "exists_args", "inject_file", "int", "json", "key_init", "md5sum", "new_b64", "password", "pluginlib_nova", "pub", "raw_file", "raw_path", "reboot_detected", "request_id", "resetnetwork", "resp", "response", "ret", "self", "start", "time", "timeout", "tmp_id", "url", "version", "xenstore", "Get", "version", "of", "agent.\nReturn", "an", "array", "of", "features", "that", "an", "agent", "supports.", "Copyright", "(c)", "2011", "Citrix", "Systems,", "Inc.\n", "Copyright", "2011", "OpenStack", "Foundation\n", "Copyright", "2011", "United", "States", "Government", "as", "represented", "by", "the\n", "Administrator", "of", "the", "National", "Aeronautics", "and", "Space", "Administration.\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "TODO(sfinucan):", "Remove", "the", "symlinks", "in", "this", "folder", "once", "Ocata", "is", "released\n\n", "XenAPI", "plugin", "for", "reading/writing", "information", "to", "xenstore\n\n", "noqa\n", "noqa\n", "WARNING:", "Some", "older", "Windows", "agents", "will", "crash", "if", "the", "public", "key", "isn't\n", "a", "string\n", "noqa\n", "noqa\n", "noqa\n", "New", "version", "of", "the", "agent.", "Agent", "should", "receive", "a", "'value'\n", "key", "whose", "value", "is", "a", "dictionary", "containing", "'b64_path'", "and\n", "'b64_file'.", "See", "old", "version", "below.\n", "Old", "agent", "requires", "file", "path", "and", "file", "contents", "to", "be\n", "combined", "into", "one", "base64", "value.\n", "Either", "the", "methods", "don't", "exist", "in", "the", "agent,", "or", "they\n", "have", "been", "disabled.\n", "noqa\n", "noqa\n", "noqa\n", "Note:", "the", "response", "for", "None", "with", "be", "a", "string", "that", "includes\n", "double", "quotes.\n", "The", "agent", "responded\n", "NOTE(johngarbutt)", "If", "we", "can't", "find", "this", "domid,", "then\n", "the", "VM", "has", "rebooted,", "so", "we", "must", "trigger", "domid", "refresh.\n", "Check", "after", "the", "sleep", "to", "give", "xenstore", "time", "to", "update\n", "after", "the", "VM", "reboot.\n", "No", "response", "within", "the", "timeout", "period;", "bail", "out\n", "First,", "delete", "the", "request", "record"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/flavors_extraspecs.py": ["ALIAS", "FlavorExtraSpecsController", "KeyError", "_", "alias", "body", "common", "context", "dict", "e", "error", "exception", "expl", "extensions", "extra_specs", "fes_policies", "flavor", "flavor_id", "flavors_extraspecs", "float", "id", "isinstance", "key", "msg", "name", "req", "self", "six", "specs", "utils", "validation", "value", "version", "webob", "wsgi", "The", "flavor", "extra", "specs", "API", "controller", "for", "the", "OpenStack", "API.\nReturns", "the", "list", "of", "extra", "specs", "for", "a", "given", "flavor.\nReturn", "a", "single", "extra", "spec", "item.\nDeletes", "an", "existing", "extra", "spec.\nFlavors", "extra", "specs", "support.", "NOTE(gmann):", "Max", "length", "for", "numeric", "value", "is", "being", "checked\n", "explicitly", "as", "json", "schema", "cannot", "have", "max", "length", "check", "for", "numeric", "value\n", "NOTE(gmann):", "Here", "should", "be", "201", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "flavor", "extra", "specs", "has", "been", "created\n", "completely", "when", "returning", "a", "response.\n", "NOTE(gmann):", "Here", "should", "be", "204(No", "Content)", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "flavor", "extra", "specs", "has", "been", "deleted\n", "completely", "when", "returning", "a", "response."], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/image/glance.py": ["CONF", "LOG", "None", "__name__", "auto_disk_config", "cb", "compression_level", "compute_utils", "context", "exc", "exc_info", "exception", "fn", "functools", "glance", "glance_api_servers", "image_id", "instance", "kwargs", "logging", "next", "nova", "object", "params", "pick_glance", "props", "retry_cb", "self", "server", "session", "six", "sys", "utils", "vdi_uuids", "vdis", "vm_utils", "NOTE(sdague):", "is", "the", "return", "significant", "here", "at", "all?"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/block_device_mapping_v1.py": ["ALIAS", "ATTRIBUTE_NAME", "ATTRIBUTE_NAME_V2", "True", "_", "alias", "bdm", "block_device_mapping", "block_device_mapping_v2", "body_deprecated_param", "create_kwargs", "exc", "expl", "extensions", "name", "schema_block_device_mapping", "self", "server_dict", "strutils", "version", "The", "legacy", "block", "device", "mappings", "extension.\nBlock", "device", "mapping", "boot", "support.", "use", "nova.api.extensions.server.extensions", "entry", "point", "to", "modify\n", "server", "create", "kwargs\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1.\n", "Sets", "the", "legacy_bdm", "flag", "if", "we", "got", "a", "legacy", "block", "device", "mapping."], "/Users/mehranhassani/repos/nova/nova/policies/server_tags.py": ["POLICY_ROOT", "base", "policy", "server_tags_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/vfs/test_guestfs.py": ["Exception", "False", "None", "True", "VirtDiskVFSGuestFSTest", "drives", "exception", "fakeguestfs", "fixtures", "forcetcg", "handle", "image", "imgmodel", "len", "m", "mock", "mock_access", "mock_inspect_os", "mock_uname", "self", "setup_os", "super", "test", "vfs", "vfsimpl", "call", "setup", "to", "init", "the", "handle", "so", "we", "can", "stub", "it\n", "call", "setup", "to", "init", "the", "handle", "so", "we", "can", "stub", "it\n", "NOTE(andreaf)", "Setting", "ownership", "relies", "on", "/etc/passwd", "and/or\n", "/etc/group", "being", "available", "in", "the", "image,", "which", "is", "not", "always", "the\n", "case", "-", "e.g.", "CirrOS", "image", "before", "boot.\n", "In", "ubuntu", "os", "will", "default", "host", "kernel", "as", "600", "permission"], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/tasks/test_base.py": ["Exception", "FakeTask", "False", "TaskBaseTestCase", "True", "base", "context", "fail", "fake_rollback", "instance", "mock", "self", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/functional/__init__.py": ["False", "eventlet"], "/Users/mehranhassani/repos/nova/plugins/xenserver/networking/etc/xensource/scripts/ovs_configure_vif_flows.py": ["OVS_OFCTL", "OvsFlow", "__name__", "apply_ovs_ipv4_flows", "apply_ovs_ipv6_flows", "bridge", "command", "data", "dict", "dom_id", "ip4", "ip6", "json", "len", "line", "link_local", "mac", "mac_eui64", "macs", "main", "net_type", "netaddr", "novalib", "object", "ofport", "os", "ovs", "params", "phys_dev", "phys_ofport", "rule", "self", "str", "sys", "this_vif", "vif", "vif_index", "vif_name", "vif_ofport", "vif_raw", "xsls", "xsread", "This", "is", "written", "to", "Python", "2.4,", "since", "that", "is", "what", "is", "available", "on", "XenServer\n", "noqa\n", "I", "haven't", "found", "a", "way", "to", "clear", "only", "IPv4", "or", "IPv6", "rules.\n", "When", "ARP", "traffic", "arrives", "from", "a", "vif,", "push", "it", "to", "virtual", "port\n", "9999", "for", "further", "processing\n", "When", "IP", "traffic", "arrives", "from", "a", "vif,", "push", "it", "to", "virtual", "port", "9999\n", "for", "further", "processing\n", "Drop", "IP", "bcast/mcast\n", "Pass", "ARP", "requests", "coming", "from", "any", "VMs", "on", "the", "local", "HV", "(port\n", "9999)", "or", "coming", "from", "external", "sources", "(PHYS_PORT)", "to", "the", "VM", "and\n", "physical", "NIC.", "We", "output", "this", "to", "the", "physical", "NIC", "as", "well,", "since\n", "with", "instances", "of", "shared", "ip", "groups,", "the", "active", "host", "for", "the\n", "destination", "IP", "might", "be", "elsewhere...\n", "Pass", "ARP", "traffic", "originating", "from", "external", "sources", "the", "VM", "with\n", "the", "matching", "IP", "address\n", "Pass", "ARP", "traffic", "from", "one", "VM", "(src", "mac", "already", "validated)", "to\n", "another", "VM", "on", "the", "same", "HV\n", "Pass", "ARP", "replies", "coming", "from", "the", "external", "environment", "to", "the\n", "target", "VM\n", "ALL", "IP", "traffic:", "Pass", "IP", "data", "coming", "from", "any", "VMs", "on", "the", "local", "HV\n", "(port", "9999)", "or", "coming", "from", "external", "sources", "(PHYS_PORT)", "to", "the\n", "VM", "and", "physical", "NIC.", "We", "output", "this", "to", "the", "physical", "NIC", "as\n", "well,", "since", "with", "instances", "of", "shared", "ip", "groups,", "the", "active", "host\n", "for", "the", "destination", "IP", "might", "be", "elsewhere...\n", "Pass", "IP", "traffic", "from", "the", "external", "environment", "to", "the", "VM\n", "Send", "any", "local", "traffic", "to", "the", "physical", "NIC's", "OVS", "port", "for\n", "physical", "network", "learning\n", "allow", "valid", "IPv6", "ND", "outbound", "(are", "both", "global", "and", "local", "IPs", "needed?)\n", "Neighbor", "Solicitation\n", "Neighbor", "Advertisement\n", "drop", "all", "other", "neighbor", "discovery", "(req", "b/c", "we", "permit", "all", "icmp6", "below)\n", "do", "not", "allow", "sending", "specific", "ICMPv6", "types\n", "Router", "Advertisement\n", "Redirect", "Gateway\n", "Mobile", "Prefix", "Solicitation\n", "Mobile", "Prefix", "Advertisement\n", "Multicast", "Router", "Advertisement\n", "Multicast", "Router", "Solicitation\n", "Multicast", "Router", "Termination\n", "allow", "valid", "IPv6", "outbound,", "by", "type\n", "all", "else", "will", "be", "dropped", "..."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_flavors.py": ["InstanceTypeFilteringTest", "MAX_LEN", "None", "_context", "_instance_type", "_instance_type_p", "actual", "context", "create_args", "create_kwargs", "ctxt", "data", "db", "default", "default_instance_type", "dict", "enumerate", "example", "example_prefix", "exception", "expected", "expected_extra_specs", "f", "fetched", "filters", "flavor", "flavor1", "flavor2", "flavor3", "flavorid", "flavors", "i", "inst_names", "inst_types", "instance", "instance_type", "instance_type_p", "key", "len", "list", "metadata", "new_list", "obj_base", "objects", "original_list", "over_rxtx_factor", "prefix", "props", "result", "self", "super", "sysmeta", "test", "value", "Test", "cases", "for", "flavor", "code.\nTest", "cases", "for", "the", "filter", "option", "available", "for", "instance_type_get_all.", "ensures", "error", "raised", "on", "bad", "default", "flavor.\n", "Ensure", "get", "by", "name", "returns", "default", "flavor", "with", "no", "name.\n", "Ensure", "get", "by", "name", "returns", "default", "flavor", "with", "bad", "name.\n", "Ensure", "get", "by", "flavor", "raises", "error", "with", "wrong", "flavorid.\n", "Exclude", "tiny", "instance", "which", "is", "512", "MB.\n", "Exclude", "everything", "but", "large", "and", "xlarge", "which", "have", ">=", "80", "GB.\n", "Exclude", "everything", "but", "large", "and", "xlarge", "which", "have", ">=", "80", "GB.\n", "Names", "can", "contain", "alphanumeric", "and", "[_.-", "]\n", "And", "they", "are", "not", "limited", "to", "ascii", "characters\n", "E.g.:", "m1.huge", "in", "simplified", "Chinese\n", "Names", "can", "contain", "all", "printable", "characters\n", "Ensure", "instance", "types", "raises", "InvalidInput", "for", "invalid", "characters.\n", "Names", "cannot", "contain", "printable", "characters\n',", "64,", "1,", "120)\n", "Flavor", "name", "with", "255", "characters", "or", "less", "is", "valid.\n", "Flavor", "name", "which", "is", "more", "than", "255", "characters", "will", "cause", "error.\n", "Flavor", "name", "which", "is", "empty", "should", "cause", "an", "error\n", "Ensure", "Flavor", "ID", "can", "only", "contain", "[a-zA-Z0-9_.-", "]\n$#@$@#$^%')\n", "Flavor", "ID", "which", "is", "more", "than", "255", "characters", "will", "cause", "error.\n", "We", "do", "*", "10", "since", "this", "is", "an", "approximation", "and", "we", "need", "to", "make", "sure\n", "the", "difference", "is", "noticeble.\n", "Ensure", "instance", "types", "can", "be", "created.\n", "Create", "new", "type", "and", "make", "sure", "values", "stick\n", "Ensure", "new", "type", "shows", "up", "in", "list\n", "Ensure", "new", "type", "shows", "up", "in", "list\n", "Deleted", "instance", "should", "not", "be", "in", "list", "anymore\n", "Ensures", "that", "name", "duplicates", "raise", "FlavorExists\n", "Ensures", "that", "flavorid", "duplicates", "raise", "FlavorExists"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/usages.py": ["None", "_collection_name", "coll_name", "common", "request", "self", "server_usages", "tenant_id"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_cell_mapping.py": ["None", "_TestCellMappingListObject", "_TestCellMappingObject", "cell_mapping", "create_in_db", "db_mapping", "destroy_in_db", "exception", "get_all_from_db", "get_db_mapping", "mapping_obj", "mock", "object", "objects", "save_in_db", "self", "test_objects", "updates", "uuid", "uuid_from_db", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/image/__init__.py": ["nova", "Needed", "to", "prevent", "circular", "import..."], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_manager.py": ["AllocateTestCase", "CONF", "CommonNetworkTestCase", "FAKEUUID", "False", "FlatDHCPNetworkTestCase", "FlatNetworkTestCase", "FloatingIPTestCase", "HOST", "InstanceDNSTestCase", "LOG", "LdapDNSTestCase", "NetworkManagerNoDBTestCase", "None", "REQUIRES_LOCKING", "RPCAllocateTestCase", "TestFloatingIPManager", "TestRPCFixedManager", "True", "ValueError", "VlanNetworkTestCase", "_TestDomainObject", "__name__", "_context", "_execute", "_fake_add_floating_ip", "_fake_catchall", "_fix_addr", "_network_get", "_vif_get", "_vif_id", "_vifs", "_x", "_y", "address", "address1", "addresses", "allocate_fixed_ip", "args", "assigned_macs", "attrs", "available_macs", "az", "binary_name", "bottom_reserved", "called", "cfg", "check", "cidr", "cidrs", "context", "context1", "context2", "context_admin", "crash_test_dummy_vif", "ctx", "ctxt", "current_lines", "db", "db_exc", "db_fixed1", "db_fixed2", "deallocate", "delfixed", "dev", "dict", "disassociate", "dns", "dns_class", "dnsdomain_get", "do_test", "domain", "domain1", "domain2", "domains", "driver", "elevated", "entries", "entryname", "enumerate", "error_msg", "exc", "exception", "exp_cidr", "exp_cidrs", "expected_addresses", "expected_arg", "expected_exception", "expected_lines", "extra_reserved", "fake", "fake1", "fake2", "fake3", "fake4", "fake4_network", "fake5", "fake5_network", "fake6", "fake7", "fake8", "fake9", "fake_add_floating_ip", "fake_allocate", "fake_allocate_address", "fake_apply", "fake_bind", "fake_clean_conntrack", "fake_context", "fake_domains", "fake_floating_ip_get_by_address", "fake_gen_mac", "fake_get_instance_nw_info", "fake_inst", "fake_instance", "fake_is_stale_floating_ip_address", "fake_ldap", "fake_nat", "fake_network", "fake_network_get", "fake_networks", "fake_refresh", "fake_remove_floating_ip", "fake_trig", "fake_vif_save", "fakes", "fip", "fix_addr", "fixed", "fixed_addr", "fixed_cidr", "fixed_get", "fixed_get_by_id", "fixed_ip", "fixed_ip_get", "fixed_ip_id", "fixed_ips", "fixed_update", "fixtures", "flavor", "float1", "float2", "float_addr", "float_ip", "floating_addr", "floating_get", "floating_get_by_host", "floating_ip", "floating_ip_fields", "floating_ip_get_pools", "floating_ips", "floating_update", "get", "get_all", "get_by_address", "get_by_id", "get_by_uuid", "get_network", "getattr", "i", "importutils", "in_use", "index", "inst", "inst_get", "instance", "instance_domain", "instance_get", "instance_manager", "instance_params", "instance_ref", "instance_uuid", "interface", "ip", "ip6", "iptable_apply", "ipv6", "k", "kwargs", "len", "line", "linux_net", "logging", "mac", "macs", "make_ip", "manager", "matchers", "messaging", "method", "mock", "mock_add", "mock_associate", "mock_commit", "mock_dev_exists", "mock_disassociate", "mock_dns_manager", "mock_fip_get_by_addr", "mock_fip_save", "mock_fixedip", "mock_fixedip_associate", "mock_fixedip_disassociate", "mock_fixedip_save", "mock_get", "mock_get_uuid", "mock_get_vif", "mock_ignored", "mock_instance_get", "mock_quota_reserve", "mock_release_dhcp", "mock_reserve", "mock_setup", "mock_setup_network", "mock_teardown_network_on_host", "mock_trigger", "mock_trigger_secgroup_refresh", "mock_update_dns", "mock_validate", "mock_validate_zone", "mock_vif_get", "mock_vif_get_by_addr", "mock_vif_get_by_id", "models", "mox", "n", "name1", "name2", "names", "nat_called", "net", "net_get", "net_manager", "net_model", "net_release_dhcp", "net_v4", "net_v6", "netaddr", "nets", "netutils", "network", "network_get", "network_id", "network_manager", "network_obj", "network_rpcapi", "network_uuid", "networks", "new_instance", "new_lines", "new_network", "new_network_obj", "nid", "nw_info", "object", "objects", "objs", "old_instance", "output", "processutils", "project_id", "public_interface", "quota", "release_dhcp", "reqnets", "requested_networks", "res", "reserve", "returned_cidrs", "rollback", "rval", "self", "service_get", "session", "set", "six", "stdout", "str", "super", "teardown_network_on_host", "test", "test_fixed_ip", "test_floating_ip", "test_network", "test_service", "test_utils", "testtools", "top_reserved", "usages", "util_method", "utils", "uuid", "uuids", "v", "values", "vif", "vif_address", "vif_dict", "vif_error", "vif_get", "vif_obj", "vifs", "x", "zone", "zone1", "zone2", "Test", "FlatDHCPManager", "NAT", "rules", "for", "fixed_range.\nTest", "VlanManager", "NAT", "rules", "for", "fixed_range.\nDummy", "manager", "that", "implements", "RPCAllocateFixedIP.\nTests", "nova.network.manager.RPCAllocateFixedIP.\nDummy", "manager", "that", "implements", "FloatingIP.\nTests", "nova.network.manager.FloatingIP.\nTests", "nova.network.manager", "instance", "DNS.\nTests", "nova.network.ldapdns.LdapDNS.\nTests", "nova.network.manager.NetworkManager", "without", "a", "database.", "gateway", "defaults", "to", "beginning", "of", "allowed_start\n", "vpn_server", "doesn't", "conflict", "with", "dhcp_start\n", "dhcp_start", "doesn't", "conflict", "with", "dhcp_server\n", "NOTE(vish):", "10", "from", "the", "beginning,", "10", "from", "the", "end,", "and\n", "1", "for", "the", "gateway,", "1", "for", "the", "dhcp", "server,\n", "1", "for", "the", "vpn", "server\n", "Allocate", "a", "fixed", "ip", "from", "a", "network", "and", "assign", "it", "to", "an", "instance.\n", "Network", "is", "given", "by", "network", "id.\n", "Assert", "that", "we", "fetched", "the", "network", "by", "id,", "not", "uuid\n", "Assert", "that", "we", "called", "allocate_fixed_ip", "for", "the", "given", "network", "and\n", "instance.", "We", "should", "not", "have", "requested", "a", "specific", "address", "from", "the\n", "network.\n", "Allocate", "a", "fixed", "ip", "from", "a", "network", "and", "assign", "it", "to", "an", "instance.\n", "Network", "is", "given", "by", "network", "uuid.\n", "Assert", "that", "we", "fetched", "the", "network", "by", "uuid,", "not", "id,", "and", "with", "elevated\n", "context\n", "Assert", "that", "we", "called", "allocate_fixed_ip", "for", "the", "given", "network", "and\n", "instance.", "We", "should", "not", "have", "requested", "a", "specific", "address", "from", "the\n", "network.\n", "Test", "DNS", "entries", "are", "created", "when", "allocating", "a", "fixed", "IP.\n", "Allocate", "a", "fixed", "IP", "to", "an", "instance.", "Ensure", "that", "dns", "entries", "have", "been\n", "created", "for", "the", "instance's", "name", "and", "uuid.\n", "Create", "a", "minimal", "instance", "object\n", "We", "don't", "specify", "a", "specific", "address,", "so", "we", "should", "get", "a", "FixedIP\n", "automatically", "allocated", "from", "the", "pool.", "Fix", "its", "value", "here.\n", "Assert", "that", "we", "have", "a", "correct", "entry", "by", "instance", "display", "name\n", "Assert", "that", "we", "have", "a", "correct", "entry", "by", "instance", "uuid\n", "This", "will", "fail", "right", "after", "the", "reserve", "call", "when", "it", "tries\n", "to", "look", "up", "the", "fake", "instance", "we", "created", "above\n", "Tests", "that", "we", "don't", "try", "to", "do", "anything", "with", "fixed", "IPs", "if\n", "_add_virtual_interface", "fails.\n", "mock", "out", "quotas", "because", "we", "don't", "care", "in", "this", "test\n", "Tests", "that", "we", "don't", "try", "to", "do", "anything", "with", "fixed", "IPs", "if\n", "_add_virtual_interface", "fails.\n", "VLAN", "100", "is", "already", "used", "and", "we", "force", "the", "network", "to", "be", "created\n", "in", "that", "vlan", "(vlan=100).\n", "VLAN", "100", "and", "101", "are", "used,", "so", "this", "network", "shoud", "be", "created", "in", "102\n", "VLAN", "100", "and", "101", "are", "used,", "so", "these", "networks", "shoud", "be", "created", "in", "102\n", "and", "103\n", "VLAN", "100", "and", "101", "are", "used,", "but", "vlan_start=99.\n", "vlan", "parameter", "could", "not", "be", "greater", "than", "4094\n", "vlan", "parameter", "could", "not", "be", "less", "than", "1\n", "vlan", "must", "be", "an", "integer\n", "raises", "because", "floating_ip", "project_id", "is", "None\n", "raises", "because", "floating_ip", "project_id", "is", "not", "equal", "to", "ctxt", "project_id\n", "does", "not", "raise", "(floating", "ip", "is", "owned", "by", "ctxt", "project)\n", "does", "not", "raise", "(ctxt", "is", "admin)\n", "does", "not", "raise", "(ctxt", "is", "admin)\n", "this", "time", "should", "raise", "because", "floating", "ip", "is", "associated", "to", "fixed_ip\n", "this", "time", "should", "not", "raise\n", "floating", "ip", "that's", "already", "associated\n", "floating", "ip", "that", "isn't", "associated\n", "fixed", "ip", "with", "remote", "host\n", "fixed", "ip", "with", "local", "host\n", "raises", "because", "interface", "doesn't", "exist\n", "raises", "because", "floating_ip", "is", "already", "associated", "to", "a", "fixed_ip\n", "doesn't", "raise", "because", "we", "exit", "early", "if", "the", "address", "is", "the", "same\n", "raises", "because", "we", "call", "disassociate", "which", "is", "mocked\n", "does", "not", "raise", "and", "makes", "call", "remotely\n", "does", "not", "raise", "and", "makes", "call", "locally\n", "Tried", "to", "verify", "order", "with", "documented", "mox", "record/verify\n", "functionality,", "but", "it", "doesn't", "seem", "to", "work", "since", "I", "can't", "make", "it\n", "fail.", "I'm", "using", "stubs", "and", "a", "flag", "for", "now,", "but", "if", "this", "mox", "feature\n", "can", "be", "made", "to", "work,", "it", "would", "be", "a", "better", "way", "to", "test", "this.\n\n", "self.mox.StubOutWithMock(self.network.driver,\n", "'ensure_floating_forward')\n", "self.mox.StubOutWithMock(self.network.driver,", "'bind_floating_ip')\n\n", "self.network.driver.ensure_floating_forward(mox.IgnoreArg(),\n", "mox.IgnoreArg(),\n", "mox.IgnoreArg(),\n", "mox.IgnoreArg())\n", "self.network.driver.bind_floating_ip(mox.IgnoreArg(),\n", "mox.IgnoreArg())\n", "self.mox.ReplayAll()\n", "floating", "ip", "that", "isn't", "associated\n", "floating", "ip", "that", "is", "associated\n", "fixed", "ip", "with", "remote", "host\n", "fixed", "ip", "with", "local", "host\n", "raises", "because", "floating_ip", "is", "not", "associated", "to", "a", "fixed_ip\n", "does", "not", "raise", "and", "makes", "call", "remotely\n", "does", "not", "raise", "and", "makes", "call", "locally\n", "raises", "because", "auto_assigned", "floating", "IP", "cannot", "be", "disassociated\n", "Associate", "the", "IP", "with", "non-admin", "user", "context\n", "Deallocate", "address", "from", "other", "project\n", "Now", "Associates", "the", "address", "to", "the", "actual", "project\n", "Now", "try", "dis-associating", "from", "other", "project\n", "Clean", "up", "the", "ip", "addresses\n", "Verify", "doesn't", "deallocate", "deleted", "fixed_ip", "from", "deleted", "network.\n", "Verify", "IP", "is", "not", "deallocated", "if", "the", "security", "group", "refresh", "fails.\n", "CidrConflict:", "requested", "cidr", "(192.168.2.0/24)", "conflicts", "with\n", "existing", "smaller", "cidr\n", "CidrConflict:", "Not", "enough", "subnets", "avail", "to", "satisfy", "requested", "num_\n", "networks", "-", "some", "subnets", "in", "requested", "range", "already\n", "in", "use\n", "ValueError:", "network_size", "*", "num_networks", "exceeds", "cidr", "size\n", "CidrConflict:", "cidr", "already", "in", "use\n", "ValueError:", "Not", "enough", "subnets", "avail", "to", "satisfy", "requested\n", "num_networks\n", "CidrConflict:", "requested", "cidr", "(192.168.0.0/24)", "conflicts\n", "with", "existing", "supernet\n", "Greedy", "get", "eveything\n", "Doesn't", "exist\n", "Get", "instance", "1\n", "Get", "instance", "2\n", "Get", "instance", "0", "and", "1\n", "Get", "instance", "1", "and", "2\n", "Greedy", "get", "eveything\n", "Doesn't", "exist\n", "Get", "instance", "1\n", "Get", "instance", "2\n", "Get", "instance", "0", "and", "1\n", "Get", "instance", "1", "and", "2\n", "No", "regex", "for", "you!\n", "Doesn't", "exist\n", "Get", "instance", "1\n", "Get", "instance", "2\n", "Stub", "out", "calls", "we", "don't", "want", "to", "really", "run,", "mock", "the", "db\n", "Get", "the", "iptables", "rules", "that", "got", "created\n", "Compare", "the", "expected", "rules", "against", "the", "actual", "ones\n", "Add", "an", "additional", "network", "and", "ensure", "the", "rules", "get", "configured\n", "Get", "the", "new", "iptables", "rules", "that", "got", "created", "from", "adding", "a", "new", "network\n", "Add", "the", "new", "expected", "rules", "to", "the", "old", "ones\n", "Compare", "the", "expected", "rules", "(with", "new", "network)", "against", "the", "actual", "ones\n", "Set", "the", "network", "manager\n", "Test", "new", "behavior:\n", "CONF.fixed_range", "is", "not", "set,", "defaults", "to", "None\n", "Determine", "networks", "to", "NAT", "based", "on", "lookup\n", "Set", "the", "network", "manager\n", "Test", "new", "behavior:\n", "CONF.fixed_range", "is", "not", "set,", "defaults", "to", "None\n", "Determine", "networks", "to", "NAT", "based", "on", "lookup\n", "set", "all", "networks", "to", "other", "projects\n", "set", "the", "first", "network", "to", "our", "project\n", "Run", "it", "twice", "to", "make", "it", "fault", "if", "it", "does", "not", "handle\n", "instances", "without", "fixed", "networks\n", "If", "this", "fails", "in", "either,", "it", "does", "not", "handle", "having", "no", "addresses\n", "Verify", "that", "deleting", "the", "domain", "deleted", "the", "associated", "entry\n", "Make", "sure", "MAC", "collisions", "are", "retried.\n", "Create", "a", "VIF", "with", "aa:aa:aa:aa:aa:aa\n", "Hand", "out", "a", "collision", "first,", "then", "a", "legit", "MAC\n", "SQLite", "doesn't", "seem", "to", "honor", "the", "uniqueness", "constraint", "on", "the\n", "address", "column,", "so", "fake", "the", "collision-avoidance", "here\n", "NOTE(russellb)", "The", "VirtualInterface", "object", "requires", "an", "ID", "to", "be\n", "set,", "and", "we", "expect", "it", "to", "get", "set", "automatically", "when", "we", "do", "the\n", "save.\n", "Attempt", "to", "add", "another", "and", "make", "sure", "that", "both", "MACs", "are", "consumed\n", "by", "the", "retry", "loop\n", "Ensure", "that", "FloatingIpNotFoundForAddress", "is", "wrapped.\n", "Ensure", "that", "FloatingIpNotFoundForAddress", "is", "wrapped.\n", "Ensure", "that", "FloatingIpNotFoundForAddress", "is", "wrapped.\n", "Ensure", "that", "FloatingIpNotFoundForAddress", "is", "wrapped.\n", "Tests", "that", "the", "method", "is", "a", "no-op", "when", "the", "fixed", "IP", "is", "not", "associated\n", "to", "an", "instance.\n", "Tests", "that", "the", "fixed", "IP", "is", "not", "disassociated", "if", "it's", "allocated.\n", "Tests", "that", "the", "fixed", "IP", "is", "disassociated", "when", "the", "mac", "passed", "to\n", "release_fixed_ip", "matches", "the", "VIF", "which", "has", "the", "same", "instance_uuid\n", "as", "the", "instance", "associated", "to", "the", "FixedIP", "object.", "Also", "tests\n", "that", "the", "fixed", "IP", "is", "marked", "as", "not", "leased", "in", "the", "database", "if", "it", "was\n", "currently", "leased.\n", "Tests", "that", "the", "fixed", "IP", "is", "disassociated", "when", "the", "fixed", "IP", "is", "marked\n", "as", "deallocated", "and", "there", "is", "no", "VIF", "found", "in", "the", "database", "for", "the", "mac\n", "passed", "in.\n", "Tests", "that", "the", "fixed", "IP", "is", "disassociated", "when", "the", "fixed", "IP", "is\n", "deallocated", "and", "there", "is", "no", "mac", "address", "passed", "in", "(like", "before\n", "the", "network", "rpc", "api", "version", "bump", "to", "pass", "it", "in).\n", "Tests", "that", "the", "fixed", "IP", "is", "not", "disassociated", "when", "the", "VIF", "for", "the", "mac\n", "passed", "to", "release_fixed_ip", "does", "not", "have", "an", "instance_uuid", "that\n", "matches", "fixed_ip.instance_uuid.\n", "Tests", "that", "we", "explicitly", "call", "FixedIP.disassociate", "when", "the", "fixed", "IP\n", "is", "not", "leased", "and", "has", "an", "associated", "instance", "(race", "with", "dnsmasq)."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/suspend_server.py": ["ALIAS", "SuspendServerController", "alias", "args", "body", "common", "compute", "context", "controller", "e", "exc", "exception", "extension", "extensions", "id", "kwargs", "name", "req", "self", "server", "ss_policies", "state_error", "super", "version", "wsgi", "Permit", "admins", "to", "suspend", "the", "server.\nPermit", "admins", "to", "resume", "the", "server", "from", "suspend.\nEnable", "suspend/resume", "server", "actions."], "/Users/mehranhassani/repos/nova/nova/policies/extended_availability_zone.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "extended_availability_zone_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/222_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/cells/driver.py": ["NotImplementedError", "cell_state", "message", "msg_runner", "object", "self", "Start", "any", "messaging", "servers", "the", "driver", "may", "need.\nStop", "accepting", "messages.\nSend", "a", "message", "to", "a", "cell."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_weights.py": ["FakeCellState", "MuteWeigherTestClass", "None", "_WeigherTestClass", "_get_fake_cells", "args", "cell", "cell1", "cell2", "cell3", "cell4", "cell_name", "cells", "class_names", "cls", "datetime", "expected_cells", "i", "instance_type", "len", "ram_free", "ram_size", "range", "resulting_cells", "self", "state", "str", "super", "test", "timeutils", "units", "utils_fixture", "weighed_cell", "weighed_cells", "weigher_classes", "weigher_cls_name", "weighers", "weight_properties", "weights", "Makes", "sure", "the", "proper", "weighers", "are", "in", "the", "directory.\nBase", "class", "for", "testing", "individual", "weigher", "plugins.\nTest", "that", "cells", "with", "more", "ram", "available", "return", "a", "higher", "weight.\nTest", "that", "cells", "with", "less", "ram", "available", "return", "a", "higher", "weight.\nTest", "the", "RAMWeigher", "class.", "Check", "at", "least", "a", "couple", "that", "we", "expect", "are", "there\n", "Simulate", "building", "a", "new", "512MB", "instance.\n", "Simulate", "building", "a", "new", "1024MB", "instance.\n", "Simulate", "building", "a", "new", "2048MB", "instance.\n", "Simulate", "building", "a", "new", "512MB", "instance.\n", "Simulate", "building", "a", "new", "1024MB", "instance.\n", "Simulate", "building", "a", "new", "2048MB", "instance.\n", "make", "2", "of", "them", "mute:"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/245_add_mtu_and_dhcp_server.py": ["Boolean", "Column", "False", "Integer", "MetaData", "Table", "True", "dhcp_server", "enable_dhcp", "hasattr", "meta", "migrate_engine", "mtu", "networks", "shadow_networks", "share_address", "types", "Function", "adds", "network", "mtu,", "dhcp_server,", "and", "share_dhcp", "fields.", "NOTE(vish):", "ignore", "duplicate", "runs", "of", "upgrade", "so", "this", "can\n", "be", "backported"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/fake_resource_tracker.py": ["context", "resource_tracker", "self", "Version", "without", "a", "DB", "requirement."], "/Users/mehranhassani/repos/nova/nova/policies/virtual_interfaces.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "virtual_interfaces_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/encryptors/test_luks.py": ["False", "None", "True", "binascii", "bytes", "connection_info", "encryptor", "error_msg", "fake_key", "fake_key_mangled", "key", "len", "luks", "mock", "mock_execute", "mock_log", "processutils", "self", "symmetric_key", "test_cryptsetup", "unmangled_encoded_key", "unmangled_raw_key", "uuid", "warning", "logged\n", "luksOpen\n", "isLuks\n", "luksFormat\n", "luksOpen\n", "ln\n", "luksOpen\n", "isLuks\n", "Confirm", "that", "a", "mangled", "passphrase", "is", "provided", "as", "per", "bug#1633518\n", "luksOpen\n", "luksOpen\n", "luksClose\n", "luksAddKey\n", "luksOpen\n", "luksClose\n", "luksRemoveKey\n", "luksOpen\n", "ln"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/325_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/api-guide/source/conf.py": ["True", "bug_tag", "copyright", "exclude_patterns", "extensions", "git_cmd", "gitsha", "giturl", "html_context", "html_last_updated_fmt", "html_static_path", "html_theme", "html_theme_path", "html_use_index", "htmlhelp_basename", "latex_documents", "latex_elements", "locale_dirs", "man_pages", "master_doc", "openstackdocstheme", "pdf_documents", "project", "pwd", "pygments_style", "release", "source_suffix", "subprocess", "templates_path", "texinfo_documents", "version", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");\n", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.\n", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,\n", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or\n", "implied.\n", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and\n", "limitations", "under", "the", "License.\n\n", "Compute", "API", "documentation", "build", "configuration", "file\n\n", "All", "configuration", "values", "have", "a", "default;", "values", "that", "are", "commented", "out\n", "serve", "to", "show", "the", "default.\n", "import", "sys\n", "If", "extensions", "(or", "modules", "to", "document", "with", "autodoc)", "are", "in", "another", "directory,\n", "add", "these", "directories", "to", "sys.path", "here.", "If", "the", "directory", "is", "relative", "to", "the\n", "documentation", "root,", "use", "os.path.abspath", "to", "make", "it", "absolute,", "like", "shown", "here.\n", "sys.path.insert(0,", "os.path.abspath('.'))\n", "--", "General", "configuration", "------------------------------------------------\n", "If", "your", "documentation", "needs", "a", "minimal", "Sphinx", "version,", "state", "it", "here.\n", "needs_sphinx", "=", "'1.0'\n", "Add", "any", "Sphinx", "extension", "module", "names", "here,", "as", "strings.", "They", "can", "be\n", "extensions", "coming", "with", "Sphinx", "(named", "'sphinx.ext.*')", "or", "your", "custom\n", "ones.\n", "Add", "any", "paths", "that", "contain", "templates", "here,", "relative", "to", "this", "directory.\n", "The", "suffix", "of", "source", "filenames.\n", "The", "encoding", "of", "source", "files.\n", "source_encoding", "=", "'utf-8-sig'\n", "The", "master", "toctree", "document.\n", "General", "information", "about", "the", "project.\n", "The", "version", "info", "for", "the", "project", "you're", "documenting,", "acts", "as", "replacement", "for\n", "|version|", "and", "|release|,", "also", "used", "in", "various", "other", "places", "throughout", "the\n", "built", "documents.\n\n", "The", "short", "X.Y", "version.\n", "The", "full", "version,", "including", "alpha/beta/rc", "tags.\n", "The", "language", "for", "content", "autogenerated", "by", "Sphinx.", "Refer", "to", "documentation\n", "for", "a", "list", "of", "supported", "languages.\n", "language", "=", "None\n", "There", "are", "two", "options", "for", "replacing", "|today|:", "either,", "you", "set", "today", "to", "some\n", "non-false", "value,", "then", "it", "is", "used:\n", "today", "=", "''\n", "Else,", "today_fmt", "is", "used", "as", "the", "format", "for", "a", "strftime", "call.\n", "today_fmt", "=", "'%B", "%d,", "%Y'\n", "A", "few", "variables", "have", "to", "be", "set", "for", "the", "log-a-bug", "feature.\n", "giturl:", "The", "location", "of", "conf.py", "on", "Git.", "Must", "be", "set", "manually.\n", "gitsha:", "The", "SHA", "checksum", "of", "the", "bug", "description.", "Extracted", "from", "git", "log.\n", "bug_tag:", "Tag", "for", "categorizing", "the", "bug.", "Must", "be", "set", "manually.\n", "bug_project:", "Launchpad", "project", "to", "file", "bugs", "against.\n", "These", "variables", "are", "passed", "to", "the", "logabug", "code", "via", "html_context.\n", "source", "tree\n", "html_context", "allows", "us", "to", "pass", "arbitrary", "values", "into", "the", "html", "template\n", "List", "of", "patterns,", "relative", "to", "source", "directory,", "that", "match", "files", "and\n", "directories", "to", "ignore", "when", "looking", "for", "source", "files.\n", "The", "reST", "default", "role", "(used", "for", "this", "markup:", "`text`)", "to", "use", "for", "all\n", "documents.\n", "default_role", "=", "None\n", "If", "true,", "'()'", "will", "be", "appended", "to", ":func:", "etc.", "cross-reference", "text.\n", "add_function_parentheses", "=", "True\n", "If", "true,", "the", "current", "module", "name", "will", "be", "prepended", "to", "all", "description\n", "unit", "titles", "(such", "as", "..", "function::).\n", "add_module_names", "=", "True\n", "If", "true,", "sectionauthor", "and", "moduleauthor", "directives", "will", "be", "shown", "in", "the\n", "output.", "They", "are", "ignored", "by", "default.\n", "show_authors", "=", "False\n", "The", "name", "of", "the", "Pygments", "(syntax", "highlighting)", "style", "to", "use.\n", "A", "list", "of", "ignored", "prefixes", "for", "module", "index", "sorting.\n", "modindex_common_prefix", "=", "[]\n", "If", "true,", "keep", "warnings", "as", "\"system", "message\"", "paragraphs", "in", "the", "built", "documents.\n", "keep_warnings", "=", "False\n", "--", "Options", "for", "HTML", "output", "----------------------------------------------\n", "The", "theme", "to", "use", "for", "HTML", "and", "HTML", "Help", "pages.", "See", "the", "documentation", "for\n", "a", "list", "of", "builtin", "themes.\n", "Theme", "options", "are", "theme-specific", "and", "customize", "the", "look", "and", "feel", "of", "a", "theme\n", "further.", "For", "a", "list", "of", "options", "available", "for", "each", "theme,", "see", "the\n", "documentation.\n", "html_theme_options", "=", "{}\n", "Add", "any", "paths", "that", "contain", "custom", "themes", "here,", "relative", "to", "this", "directory.\n", "The", "name", "for", "this", "set", "of", "Sphinx", "documents.", "If", "None,", "it", "defaults", "to\n", "\"<project>", "v<release>", "documentation\".\n", "html_title", "=", "None\n", "A", "shorter", "title", "for", "the", "navigation", "bar.", "Default", "is", "the", "same", "as", "html_title.\n", "html_short_title", "=", "None\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top\n", "of", "the", "sidebar.\n", "html_logo", "=", "None\n", "The", "name", "of", "an", "image", "file", "(within", "the", "static", "path)", "to", "use", "as", "favicon", "of", "the\n", "docs.", "This", "file", "should", "be", "a", "Windows", "icon", "file", "(.ico)", "being", "16x16", "or", "32x32\n", "pixels", "large.\n", "html_favicon", "=", "None\n", "Add", "any", "paths", "that", "contain", "custom", "static", "files", "(such", "as", "style", "sheets)", "here,\n", "relative", "to", "this", "directory.", "They", "are", "copied", "after", "the", "builtin", "static", "files,\n", "so", "a", "file", "named", "\"default.css\"", "will", "overwrite", "the", "builtin", "\"default.css\".\n", "Add", "any", "extra", "paths", "that", "contain", "custom", "files", "(such", "as", "robots.txt", "or\n", ".htaccess)", "here,", "relative", "to", "this", "directory.", "These", "files", "are", "copied\n", "directly", "to", "the", "root", "of", "the", "documentation.\n", "html_extra_path", "=", "[]\n", "If", "not", "'',", "a", "'Last", "updated", "on:'", "timestamp", "is", "inserted", "at", "every", "page", "bottom,\n", "using", "the", "given", "strftime", "format.\n", "If", "true,", "SmartyPants", "will", "be", "used", "to", "convert", "quotes", "and", "dashes", "to\n", "typographically", "correct", "entities.\n", "html_use_smartypants", "=", "True\n", "Custom", "sidebar", "templates,", "maps", "document", "names", "to", "template", "names.\n", "html_sidebars", "=", "{}\n", "Additional", "templates", "that", "should", "be", "rendered", "to", "pages,", "maps", "page", "names", "to\n", "template", "names.\n", "html_additional_pages", "=", "{}\n", "If", "false,", "no", "module", "index", "is", "generated.\n", "html_domain_indices", "=", "True\n", "If", "false,", "no", "index", "is", "generated.\n", "If", "true,", "the", "index", "is", "split", "into", "individual", "pages", "for", "each", "letter.\n", "html_split_index", "=", "False\n", "If", "true,", "links", "to", "the", "reST", "sources", "are", "added", "to", "the", "pages.\n", "html_show_sourcelink", "=", "True\n", "If", "true,", "\"Created", "using", "Sphinx\"", "is", "shown", "in", "the", "HTML", "footer.", "Default", "is", "True.\n", "html_show_sphinx", "=", "True\n", "If", "true,", "\"(C)", "Copyright", "...\"", "is", "shown", "in", "the", "HTML", "footer.", "Default", "is", "True.\n", "html_show_copyright", "=", "True\n", "If", "true,", "an", "OpenSearch", "description", "file", "will", "be", "output,", "and", "all", "pages", "will\n", "contain", "a", "<link>", "tag", "referring", "to", "it.", "The", "value", "of", "this", "option", "must", "be", "the\n", "base", "URL", "from", "which", "the", "finished", "HTML", "is", "served.\n", "html_use_opensearch", "=", "''\n", "This", "is", "the", "file", "name", "suffix", "for", "HTML", "files", "(e.g.", "\".xhtml\").\n", "html_file_suffix", "=", "None\n", "Output", "file", "base", "name", "for", "HTML", "help", "builder.\n", "--", "Options", "for", "LaTeX", "output", "---------------------------------------------\n", "The", "paper", "size", "('letterpaper'", "or", "'a4paper').\n", "'papersize':", "'letterpaper',\n", "The", "font", "size", "('10pt',", "'11pt'", "or", "'12pt').\n", "'pointsize':", "'10pt',\n", "Additional", "stuff", "for", "the", "LaTeX", "preamble.\n", "'preamble':", "'',\n", "Grouping", "the", "document", "tree", "into", "LaTeX", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,\n", "author,", "documentclass", "[howto,", "manual,", "or", "own", "class]).\n", "The", "name", "of", "an", "image", "file", "(relative", "to", "this", "directory)", "to", "place", "at", "the", "top", "of\n", "the", "title", "page.\n", "latex_logo", "=", "None\n", "For", "\"manual\"", "documents,", "if", "this", "is", "true,", "then", "toplevel", "headings", "are", "parts,\n", "not", "chapters.\n", "latex_use_parts", "=", "False\n", "If", "true,", "show", "page", "references", "after", "internal", "links.\n", "latex_show_pagerefs", "=", "False\n", "If", "true,", "show", "URL", "addresses", "after", "external", "links.\n", "latex_show_urls", "=", "False\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\n", "latex_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\n", "latex_domain_indices", "=", "True\n", "--", "Options", "for", "manual", "page", "output", "---------------------------------------\n", "One", "entry", "per", "manual", "page.", "List", "of", "tuples\n", "(source", "start", "file,", "name,", "description,", "authors,", "manual", "section).\n", "If", "true,", "show", "URL", "addresses", "after", "external", "links.\n", "man_show_urls", "=", "False\n", "--", "Options", "for", "Texinfo", "output", "-------------------------------------------\n", "Grouping", "the", "document", "tree", "into", "Texinfo", "files.", "List", "of", "tuples\n", "(source", "start", "file,", "target", "name,", "title,", "author,\n", "dir", "menu", "entry,", "description,", "category)\n", "Documents", "to", "append", "as", "an", "appendix", "to", "all", "manuals.\n", "texinfo_appendices", "=", "[]\n", "If", "false,", "no", "module", "index", "is", "generated.\n", "texinfo_domain_indices", "=", "True\n", "How", "to", "display", "URL", "addresses:", "'footnote',", "'no',", "or", "'inline'.\n", "texinfo_show_urls", "=", "'footnote'\n", "If", "true,", "do", "not", "generate", "a", "@detailmenu", "in", "the", "\"Top\"", "node's", "menu.\n", "texinfo_no_detailmenu", "=", "False\n", "--", "Options", "for", "Internationalization", "output", "------------------------------\n", "--", "Options", "for", "PDF", "output", "--------------------------------------------------"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/228_add_metrics_in_compute_nodes.py": ["Column", "MetaData", "Table", "Text", "True", "compute_nodes", "meta", "metrics", "migrate_engine", "shadow_compute_nodes", "shadow_metrics", "Add", "a", "new", "column", "metrics", "to", "save", "metrics", "info", "for", "compute", "nodes"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/217_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/301_add_cpu_and_ram_ratios_for_compute_nodes.py": ["Column", "Float", "MetaData", "Table", "True", "cn", "meta", "migrate_engine", "shadow_cn"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/plugin_test.py": ["None", "PluginTestBase", "True", "__file__", "attribute", "current_path", "file_name", "imp", "mock", "mock_one", "name", "os", "patcher", "path", "plugin_path", "rel_path", "return_val", "self", "session", "super", "sys", "target", "test", "both", "XenAPI", "and", "XenAPIPlugin", "may", "not", "exist\n", "in", "unit", "test", "environment.\n", "utility", "function", "to", "mock", "object's", "attribute\n", "XAPI", "plugins", "run", "in", "a", "py24", "environment", "and", "may", "be", "not", "compatible", "with\n", "py34's", "syntax.", "In", "order", "to", "prevent", "unit", "test", "scanning", "the", "source", "file\n", "under", "py34", "environment,", "the", "plugins", "will", "be", "imported", "with", "this\n", "function", "at", "run", "time.\n", "add", "plugin", "path", "into", "search", "path.\n", "be", "sure", "not", "to", "create", "c", "files", "next", "to", "the", "plugins"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/259_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/pci/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/numa_topology_filter.py": ["False", "LOG", "True", "_", "__name__", "_fmt", "any", "cell", "cpu_policy", "cpu_ratio", "cpu_thread_policy", "extra_specs", "fields", "filters", "hardware", "has_hyperthreading", "host_state", "host_topology", "image_props", "instance_topology", "limits", "logging", "objects", "pci_requests", "ram_ratio", "requested_topology", "self", "spec_obj", "Filter", "on", "requested", "NUMA", "topology.", "NOTE(stephenfin):", "There", "can", "be", "conflicts", "between", "the", "policy\n", "specified", "by", "the", "image", "and", "that", "specified", "by", "the", "instance,", "but", "this\n", "is", "not", "the", "place", "to", "resolve", "these.", "We", "do", "this", "during", "scheduling.\n", "the", "presence", "of", "siblings", "in", "at", "least", "one", "cell", "indicates\n", "hyperthreading", "(HT)"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_external_events.py": ["KeyError", "MISSING_UUID", "None", "ServerExternalEventsTestV21", "True", "api_method", "body", "classmethod", "cls", "code", "context", "dict", "event", "exception", "expected_attrs_set", "expected_events", "expected_uuids", "fake_get_by_uuid", "fake_instance_uuids", "fake_instances", "fakes", "full_expected_attrs_set", "inst", "instance_obj", "invalid_error", "kwargs", "mock", "objects", "response", "result", "self", "server_external_events", "server_external_events_v21", "set", "sorted", "super", "test", "uuid", "webob", "the", "instance", "without", "host", "should", "not", "be", "passed", "to", "the", "compute", "layer"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_scality.py": ["False", "LibvirtScalityVolumeDriverTestCase", "TEST_CONN_INFO", "TEST_VOLDIR", "TEST_VOLNAME", "TEST_VOLPATH", "True", "_access_wrapper", "conf", "device_path", "expected_calls", "flags", "m_is_mounted", "mock", "mock_execute", "mock_open", "mock_urlopen", "nova", "os", "path", "proc_mount", "scality", "self", "super", "test_volume", "tree"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_console_auth_token.py": ["None", "fake_instance_uuid", "fake_token", "fake_token_dict", "fake_token_hash", "utils", "uuidsentinel"], "/Users/mehranhassani/repos/nova/nova/objects/instance.py": ["AttributeError", "CONF", "False", "INSTANCE_DEFAULT_FIELDS", "INSTANCE_OPTIONAL_ATTRS", "Instance", "KeyError", "LOG", "MAX_TAG_COUNT", "None", "True", "TypeError", "VERSION", "_INSTANCE_EXTRA_FIELDS", "_INSTANCE_OPTIONAL_JOINED_FIELDS", "_INSTANCE_OPTIONAL_NON_COLUMN_FIELDS", "_LE", "_LW", "_MIGRATION_CONTEXT_ATTRS", "_NO_DATA_SENTINEL", "__name__", "_expected_cols", "_handle_cell_update_from_api", "_make_instance_list", "_migrate_instance_keypairs", "_notify", "admin_state_reset", "any", "args", "attr", "attr_name", "attr_value", "attrname", "base", "base_name", "begin", "cell_type", "cells_api", "cells_opts", "cells_rpcapi", "cells_update_from_api", "cells_utils", "cfg", "changes", "classmethod", "cls", "cn_changed", "columns_to_join", "complex_cols", "constraint", "context", "contextlib", "count", "count_all", "count_hit", "ctxt", "current", "current_values", "db", "db_api", "db_context", "db_dev_meta", "db_exc", "db_extra", "db_extras", "db_flavor", "db_inst", "db_inst_list", "db_instances", "db_keypairs", "db_requests", "db_secgroup", "db_topology", "db_vcpu_model", "delattr", "device_metadata", "dict", "end", "exception", "exp", "expected_attrs", "expected_cols", "expected_task_state", "expected_vm_state", "extra", "fault", "faults", "faults_by_uuid", "field", "fields", "filters", "flavor", "flavor_info", "get_fault", "getattr", "hasattr", "have_extra", "host", "info", "inst", "inst_attr_name", "inst_cls", "inst_faults", "inst_id", "inst_list", "inst_obj", "inst_ref", "instance", "instance_uuids", "isinstance", "joinedload", "jsonutils", "key", "key_name", "keypairs", "kwargs", "len", "limit", "list", "logging", "marker", "md_was_changed", "models", "namespace", "new", "new_ref", "nobj", "node", "notifications", "numa_topology", "obj", "obj_extra_fields", "object", "objects", "objver", "old", "old_ref", "pci_devices", "pci_requests", "prefix", "primitive", "project_id", "property", "reboot_window", "recursive", "sec_groups", "secgroup", "security_group", "security_group_id", "security_group_ids", "security_groups", "self", "services", "set", "setattr", "simple_cols", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "sorted", "stale_instance", "staticmethod", "super", "tags", "target_version", "task_states", "timeutils", "type_id", "updates", "use_slave", "utils", "uuid", "uuids", "value", "vcpu_model", "versionutils", "vm_states", "x", "Create", "a", "copy", "of", "this", "instance", "object.\nLoad", "instance", "flavor", "information", "from", "instance_extra.\nUndo", "skip_cell_sync()'s", "cell_name", "modification", "if", "applied\nReturns", "all", "instances", "on", "all", "nodes.", "List", "of", "fields", "that", "can", "be", "joined", "in", "DB", "layer.\n", "These", "are", "fields", "that", "are", "optional", "but", "don't", "translate", "to", "db", "columns\n", "These", "are", "fields", "that", "are", "optional", "and", "in", "instance_extra\n", "These", "are", "fields", "that", "applied/drooped", "by", "migration_context\n", "These", "are", "fields", "that", "can", "be", "specified", "as", "expected_attrs\n", "These", "are", "fields", "that", "most", "query", "calls", "load", "by", "default\n", "Maximum", "count", "of", "tags", "to", "one", "instance\n", "NOTE(pumaranikar):", "expected_cols", "list", "can", "contain", "duplicates", "since\n", "caller", "appends", "column", "attributes", "to", "expected_attr", "without", "checking", "if\n", "it", "is", "already", "present", "in", "the", "list", "or", "not.", "Hence,", "we", "remove", "duplicates\n", "here,", "if", "any.", "The", "resultant", "list", "is", "sorted", "based", "on", "list", "index", "to\n", "maintain", "the", "insertion", "order.\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "2.0:", "Initial", "version\n", "Version", "2.1:", "Added", "services\n", "Version", "2.2:", "Added", "keypairs\n", "Version", "2.3:", "Added", "device_metadata\n", "NOTE(jdillaman):", "locked", "deprecated", "in", "favor", "of", "locked_by,\n", "to", "be", "removed", "in", "Icehouse\n", "Since", "the", "base", "object", "only", "does", "a", "deep", "copy", "of", "the", "defined", "fields,\n", "need", "to", "make", "sure", "to", "also", "copy", "the", "additional", "tracking", "metadata\n", "attributes", "so", "they", "don't", "show", "as", "changed", "and", "cause", "the", "metadata\n", "to", "always", "be", "updated", "even", "when", "stale", "information.\n", "Support", "templates", "like", "\"uuid-%(uuid)s\",", "etc.\n", "NOTE(russellb):", "Don't", "use", "self.iteritems()", "here,", "as", "it", "will\n", "result", "in", "infinite", "recursion", "on", "the", "name", "property.\n", "NOTE(danms):", "prevent", "recursion\n", "NOTE(danms):", "Don't", "trigger", "lazy-loads\n", "This", "indicates", "self.id", "was", "not", "set", "and", "could", "not", "be", "lazy", "loaded.\n", "What", "this", "means", "is", "the", "instance", "has", "not", "been", "persisted", "to", "a", "db\n", "yet,", "which", "should", "indicate", "it", "has", "not", "been", "scheduled", "yet.", "In", "this\n", "situation", "it", "will", "have", "a", "blank", "name.\n", "If", "the", "vm/task", "states", "don't", "indicate", "that", "it's", "being", "booted\n", "then", "we", "have", "a", "bug", "here.", "Log", "an", "error", "and", "attempt", "to", "return\n", "the", "uuid", "which", "is", "what", "an", "error", "above", "would", "return.\n", "Most", "of", "the", "field", "names", "match", "right", "now,", "so", "be", "quick\n", "NOTE(danms):", "We", "can", "be", "called", "with", "a", "dict", "instead", "of", "a\n", "SQLAlchemy", "object,", "so", "we", "have", "to", "be", "careful", "here\n", "TODO(danms):", "If", "this", "ever", "happens", "on", "a", "backlevel", "instance\n", "passed", "to", "us", "by", "a", "backlevel", "service,", "things", "will", "break\n", "TODO(danms):", "If", "we", "are", "updating", "these", "on", "a", "backlevel", "instance,\n", "we'll", "end", "up", "sending", "back", "new", "versions", "of", "these", "objects", "(see\n", "above", "note", "for", "new", "info_caches\n", "NOTE(danms):", "We", "know", "because", "of", "the", "check", "above", "that", "deleted\n", "is", "either", "unset", "or", "false.", "Since", "we", "need", "to", "avoid", "passing", "False\n", "down", "to", "the", "DB", "layer", "(which", "uses", "an", "integer),", "we", "can", "always\n", "default", "it", "to", "zero", "here.\n", "NOTE(danms):", "The", "EC2", "ids", "are", "created", "on", "their", "first", "load.", "In", "order\n", "to", "avoid", "them", "being", "missing", "and", "having", "to", "be", "loaded", "later,", "we\n", "load", "them", "once", "here", "on", "create", "now", "that", "the", "instance", "record", "is\n", "created.\n", "NOTE(danms):", "If", "our", "host", "is", "not", "set,", "avoid", "a", "race\n", "NOTE(danms):", "I", "don't", "think", "we", "need", "to", "worry", "about", "this,", "do", "we?\n", "TODO(danms):", "Unfortunately,", "extra.pci_requests", "is", "not", "a", "serialized\n", "PciRequests", "object", "(!),", "so", "we", "have", "to", "handle", "it", "specially", "here.\n", "That", "should", "definitely", "be", "fixed!\n", "NOTE(yjiang5):", "All", "devices", "held", "by", "PCI", "tracker,", "only", "PCI", "tracker\n", "permitted", "to", "update", "the", "DB.", "all", "change", "to", "devices", "from", "here", "will\n", "be", "dropped.\n", "NOTE(hanlind):", "Read-only", "so", "no", "need", "to", "save", "this.\n", "NOTE(danms):", "Read-only", "so", "no", "need", "to", "save", "this.\n", "Store", "this", "on", "the", "class", "because", "_cell_name_blocks_sync", "is", "useless\n", "after", "the", "db", "update", "call", "below.\n", "NOTE(comstud):", "We", "need", "to", "stash", "a", "copy", "of", "ourselves\n", "before", "any", "updates", "are", "applied.", "When", "we", "call", "the", "save\n", "methods", "on", "nested", "objects,", "we", "will", "lose", "any", "changes", "to\n", "them.", "But", "we", "need", "to", "make", "sure", "child", "cells", "can", "tell\n", "what", "is", "changed.\n\n", "We", "also", "need", "to", "nuke", "any", "updates", "to", "vm_state", "and", "task_state\n", "unless", "admin_state_reset", "is", "True.", "compute", "cells", "are\n", "authoritative", "for", "their", "view", "of", "vm_state", "and", "task_state.\n", "NOTE(danms):", "For", "object", "fields,", "we", "construct", "and", "call", "a\n", "helper", "method", "like", "self._save_$attrname()\n", "NOTE(melwitt):", "This", "will", "happen", "if", "we", "instance.save()\n", "before", "an", "instance.create()", "and", "FK", "constraint", "fails.\n", "In", "practice,", "this", "occurs", "in", "cells", "during", "a", "delete", "of\n", "an", "unscheduled", "instance.", "Otherwise,", "it", "could", "happen\n", "as", "a", "result", "of", "bug.\n", "Cleaned", "needs", "to", "be", "turned", "back", "into", "an", "int", "here\n", "NOTE(danms):", "We", "don't", "refresh", "pci_devices", "on", "save", "right", "now\n", "NOTE(alaski):", "We", "need", "to", "pull", "system_metadata", "for", "the\n", "notification.send_update()", "below.", "If", "we", "don't", "there's", "a", "KeyError\n", "when", "it", "tries", "to", "extract", "the", "flavor.\n", "NOTE(danms):", "If", "we", "have", "sysmeta,", "we", "need", "flavor", "since", "the", "caller\n", "might", "be", "expecting", "flavor", "information", "as", "a", "result\n", "NOTE(danms):", "We", "have", "to", "be", "super", "careful", "here", "not", "to", "trigger\n", "any", "lazy-loads", "that", "will", "unmigrate", "or", "unbackport", "something.", "So,\n", "make", "a", "copy", "of", "the", "instance", "for", "notifications", "first.\n", "NOTE(alaski):", "If", "cell", "synchronization", "is", "blocked", "it", "means", "we", "have\n", "already", "run", "this", "block", "of", "code", "in", "either", "the", "parent", "or", "child", "of", "this\n", "cell.", "Therefore", "this", "notification", "has", "already", "been", "sent.\n", "noqa:", "F811\n", "NOTE(danms):", "We", "orphan", "the", "instance", "copy", "so", "we", "do", "not", "unexpectedly\n", "trigger", "a", "lazy-load", "(which", "would", "mean", "we", "failed", "to", "calculate", "the\n", "expected_attrs", "properly)\n", "NOTE(danms):", "Never", "allow", "us", "to", "recursively-load\n", "NOTE(danms):", "Orphan", "the", "instance", "to", "make", "sure", "we", "don't", "lazy-load\n", "anything", "below\n", "NOTE(danms):", "The", "query", "above", "may", "have", "migrated", "the", "flavor", "from\n", "system_metadata.", "Since", "we", "have", "it", "anyway,", "go", "ahead", "and", "refresh\n", "our", "system_metadata", "from", "it", "so", "that", "a", "save", "will", "be", "accurate.\n", "NOTE(danms):", "We", "need", "to", "load", "from", "the", "old", "location", "by", "name\n", "if", "we", "don't", "have", "them", "in", "extra.", "Only", "do", "this", "from", "the", "main\n", "database", "as", "instances", "were", "created", "with", "keypairs", "in", "extra\n", "before", "keypairs", "were", "moved", "to", "the", "api", "database.\n", "NOTE(danms):", "If", "we", "loaded", "from", "legacy,", "we", "leave", "the", "keypairs\n", "attribute", "dirty", "in", "hopes", "someone", "else", "will", "save", "it", "for", "us\n", "NOTE(danms):", "We", "handle", "some", "fields", "differently", "here", "so", "that", "we\n", "can", "be", "more", "efficient\n", "NOTE(danms):", "Let", "keypairs", "control", "its", "own", "destiny", "for\n", "resetting", "changes.\n", "NOTE(mriedem):", "The", "join", "in", "the", "data", "model", "for", "instances.services\n", "filters", "on", "instances.deleted", "==", "0,", "so", "if", "the", "instance", "is", "deleted\n", "don't", "attempt", "to", "even", "load", "services", "since", "we'll", "fail.\n", "NOTE(mriedem):", "Same", "story", "as", "services,", "the", "DB", "API", "query\n", "in", "instance_tag_get_by_instance_uuid", "will", "fail", "if", "the\n", "instance", "has", "been", "deleted", "so", "just", "return", "an", "empty", "tag", "list.\n", "FIXME(comstud):", "This", "should", "be", "optimized", "to", "only", "load", "the", "attr.\n", "NOTE(danms):", "This", "only", "happens", "in", "the", "case", "where", "we", "don't\n", "have", "flavor", "information", "in", "sysmeta", "or", "extra,", "and", "doing\n", "this", "triggers", "a", "lookup", "based", "on", "our", "instance_type_id", "for\n", "(very)", "legacy", "instances.", "That", "legacy", "code", "expects", "a", "None", "here,\n", "so", "emulate", "it", "for", "this", "helper,", "even", "though", "the", "actual", "attribute\n", "is", "not", "nullable.\n", "cell_name", "is", "not", "normally", "an", "empty", "string,", "this", "means", "it", "was", "None\n", "or", "unset", "before", "cells_utils.BLOCK_SYNC_FLAG", "was", "applied.\n", "Build", "an", "instance_uuid:latest-fault", "mapping\n", "Version", "2.0:", "Initial", "Version\n", "Version", "2.1:", "Add", "get_uuids_by_host()\n", "Version", "2.2:", "Pagination", "for", "get_active_by_window_joined()\n", "NOTE(mriedem):", "We", "need", "to", "convert", "the", "begin/end", "timestamp", "strings\n", "to", "timezone-aware", "datetime", "objects", "for", "the", "DB", "API", "call.\n", "NOTE(mriedem):", "We", "have", "to", "convert", "the", "datetime", "objects", "to", "string\n", "primitives", "for", "the", "remote", "call.\n", "NOTE(danms):", "Otherwise", "the", "caller", "will", "cause", "a", "lazy-load\n", "when", "checking", "it,", "and", "we", "know", "there", "are", "none\n", "NOTE(danms):", "We", "could", "potentially", "do", "this", "a", "little", "more", "efficiently\n", "but", "for", "now", "just", "pull", "all", "the", "instances", "and", "scrape", "the", "uuids."], "/Users/mehranhassani/repos/nova/nova/ipv6/rfc2462.py": ["TypeError", "_", "address", "i", "int", "ipv6_address", "mac", "mac64", "mac64_addr", "mask1", "mask2", "maskIP", "netaddr", "prefix", "project_id", "RFC2462", "style", "IPv6", "address", "generation."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/339_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/create_backup.py": ["False", "copy", "create_backup", "create_backup_v20", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/driver.py": ["ALLOWED_QEMU_SERIAL_PORTS", "AttributeError", "BAD_LIBVIRT_CPU_POLICY_VERSIONS", "BAD_LIBVIRT_NUMA_VERSIONS", "CONF", "CONSOLE", "DEFAULT_FIREWALL_DRIVER", "DEFAULT_UEFI_LOADER_PATH", "DISABLE_PREFIX", "DISABLE_REASON_UNDEFINED", "Exception", "False", "GuestNumaConfig", "IndexError", "InjectionInfo", "KeyError", "LIBVIRT_PERF_EVENT_PREFIX", "LOG", "LibvirtDriver", "MAX_CONSOLE_BYTES", "MIN_LIBVIRT_AUTO_CONVERGE_VERSION", "MIN_LIBVIRT_BLOCKJOB_RELATIVE_VERSION", "MIN_LIBVIRT_BLOCK_LM_WITH_VOLUMES_VERSION", "MIN_LIBVIRT_FSFREEZE_VERSION", "MIN_LIBVIRT_HUGEPAGE_VERSION", "MIN_LIBVIRT_HYPERV_TIMER_VERSION", "MIN_LIBVIRT_KVM_PPC64_VERSION", "MIN_LIBVIRT_KVM_S390_VERSION", "MIN_LIBVIRT_NUMA_VERSION", "MIN_LIBVIRT_NUMA_VERSION_PPC", "MIN_LIBVIRT_OTHER_ARCH", "MIN_LIBVIRT_PARALLELS_SET_ADMIN_PASSWD", "MIN_LIBVIRT_PERF_VERSION", "MIN_LIBVIRT_PF_WITH_NO_VFS_CAP_VERSION", "MIN_LIBVIRT_POSTCOPY_VERSION", "MIN_LIBVIRT_REALTIME_VERSION", "MIN_LIBVIRT_SET_ADMIN_PASSWD", "MIN_LIBVIRT_UEFI_VERSION", "MIN_LIBVIRT_VERSION", "MIN_LIBVIRT_VIRTLOGD", "MIN_LIBVIRT_VIRTUOZZO_VERSION", "MIN_QEMU_AUTO_CONVERGE", "MIN_QEMU_DISCARD_VERSION", "MIN_QEMU_HYPERV_TIMER_VERSION", "MIN_QEMU_NUMA_HUGEPAGE_VERSION", "MIN_QEMU_OTHER_ARCH", "MIN_QEMU_POSTCOPY_VERSION", "MIN_QEMU_PPC64_VERSION", "MIN_QEMU_S390_VERSION", "MIN_QEMU_VERSION", "MIN_QEMU_VIRTLOGD", "MIN_VIRTUOZZO_VERSION", "NEXT_MIN_LIBVIRT_VERSION", "NEXT_MIN_QEMU_VERSION", "NO_COMPRESSION_TYPES", "None", "NotImplementedError", "OSError", "PERF_EVENTS_CPU_FLAG_MAPPING", "QEMU_MAX_SERIAL_PORTS", "SHUTDOWN_STATES", "True", "VALID_VIDEO_DEVICES", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_conn", "_create_base_dev", "_create_logd_dev", "_get_connection", "_get_device_name", "_get_device_type", "_get_reserved_memory_for_cell", "_get_snap_dev", "_sep", "_wait_for_boot", "_wait_for_destroy", "_wait_for_reboot", "_wait_for_snapshot", "active_disk", "active_disk_object", "active_protocol", "add_video_driver", "address", "admin_pass", "admin_password", "align_size", "all_instances", "allowed_cpus", "any", "archs", "args", "attempt", "attempts", "avail_pagesize", "available", "available_ids", "available_least", "available_mb", "b", "b_file_fmt", "backend", "backing_disk_info", "backing_file", "backing_store", "bad_volumes_callback", "balloon", "bark", "base", "bdm", "bdm_list", "bdmi", "bdms", "belongs_to_instance", "block", "block_device", "block_device_info", "block_device_lists", "block_device_mapping", "block_device_mappings", "block_device_obj", "block_devices", "block_disk_info", "block_migration", "block_migration_flags", "blockinfo", "blocks", "bool", "booted_from_volume", "brick_exception", "bus", "bytes_to_read", "cache_mode", "cache_name", "capabilities", "caps", "cdb", "cdrom_bus", "cell", "cell_id", "cells", "cfg", "cfgdev", "channel", "char_dev_cls", "child", "cinder", "clk", "clone_fallback_to_fetch", "cnt", "collections", "commit_base", "commit_disk", "commit_top", "completion_timeout", "compression", "compute_host_bdms", "compute_utils", "conf", "config", "config_disk", "config_disk_local_path", "config_drive", "config_name", "configdrive", "connection_info", "connector", "console", "console_file", "console_log", "console_tcp", "console_type", "consolelog", "consolepty", "container_dir", "context", "contextlib", "copy_from_host", "cpu", "cpu_config", "cpu_features", "cpu_info", "cpu_time", "cpu_xml", "cpuset", "cputuning", "create_info", "ctx", "ctxt", "ctype", "curdowntime", "current_file", "current_filename", "current_name", "d", "data", "data_gb", "dbsf", "delay", "delay_min", "delete_info", "deque", "dest", "dest_check_data", "destroy_disks", "destroy_vifs", "dev", "dev_meta", "dev_names", "device", "device_info", "device_name", "device_names", "device_type", "devices", "devname", "diagnostics", "diags", "dict", "direct_passthrough_pci_addresses", "dirnames", "dirpath", "disable_reason", "disable_service", "disk", "disk_api", "disk_available_gb", "disk_available_mb", "disk_bus", "disk_delta", "disk_dev", "disk_free_gb", "disk_gb", "disk_id", "disk_image", "disk_images", "disk_info", "disk_info_dict", "disk_info_text", "disk_infos", "disk_mapping", "disk_name", "disk_nodes", "disk_over_commit", "disk_over_committed", "disk_over_committed_size", "disk_path", "disk_paths", "disk_type", "diskconfig", "diskeph", "disklocal", "diskos", "diskrescue", "disks", "disks_to_skip", "disks_to_snap", "diskswap", "dk_size", "dmcrypt", "doc", "dom", "dom_info", "dom_io", "domain", "downtime", "downtime_min", "downtime_steps", "driver", "driver_bdm", "driver_block_device", "driver_cache", "driver_class", "driver_nodes", "driver_registry", "driver_str", "driver_type", "dst_compute_info", "dst_disk_info_path", "dt", "e", "elapsed", "emulatorpin", "emupcpus", "enabled", "encrypted_volumes", "encryption", "encryptor", "encryptors", "enumerate", "eph", "eph_size", "ephemeral_down", "ephemeral_gb", "ephemeral_size", "ephemerals", "err", "errcode", "errmsg", "errno", "error_code", "etree", "event", "event_name", "eventlet", "events", "ex", "exc", "exception", "excutils", "exists", "expected_domid", "extra_md", "f", "failed_snap", "fallback_from_host", "fd", "features", "fetch_func", "fields", "file_console", "file_consoles", "file_extension", "filename", "filename_to_merge", "filenames", "fileutils", "filter", "filter_fn", "filters", "find_nodes", "finish_event", "firewall", "flat_disk", "flavor", "float", "fmeta", "fn", "fname", "fp", "fpath", "from_path", "fs", "fs_label", "fs_type", "fsos", "fsrescue", "fullpath", "fun_cap", "functools", "g", "gen_confdrive", "get_spice_ports_for_instance", "get_vnc_port_for_instance", "getattr", "gid_maps", "glob", "graphic", "graphics", "greenthread", "guest", "guest_cell", "guest_cellid", "guest_cfg", "guest_config", "guest_config_cell", "guest_cpu", "guest_cpu_numa", "guest_cpu_numa_config", "guest_cpu_tune", "guest_disk", "guest_node_id", "guest_numa_config", "guest_numa_tune", "guestarch", "guestfs", "hardware", "hasDirectIO", "hasattr", "hdbsf", "hdev", "host", "host_arch", "host_cell", "host_cpu_info", "host_cpu_str", "host_topology", "hostarch", "hostname", "hv", "hw_firmware_type", "hw_scsi_model", "i", "id_maps", "idmap", "idmaps", "idx", "ignore_bdi_for_swap", "ignore_errors", "ignored_states", "image", "image_disk_info", "image_disk_info_path", "image_file", "image_format", "image_id", "image_meta", "image_model", "image_path", "image_type", "imagebackend", "imagecache", "images", "img_fmt", "img_id", "img_path", "imgmodel", "importutils", "index", "info", "injected_files", "injection_info", "inst", "inst_base", "inst_base_resize", "inst_cell", "inst_md", "inst_path", "inst_topology", "inst_type", "instance", "instance_bdms", "instance_cap", "instance_caps", "instance_cell", "instance_dir", "instance_disk", "instance_domains", "instance_info", "instance_metadata", "instance_name", "instance_numa_topology", "instance_path", "instance_topology", "instance_uuids", "instancejobtracker", "instances", "int", "interface", "ips", "is_able", "is_block_dev", "is_block_migration", "is_okay", "is_physical_function", "is_post_copy_enabled", "is_shared_block_storage", "is_shared_instance_path", "is_supported", "isinstance", "itertools", "jsonutils", "k", "kernel_path", "key", "klass", "kvm_arch", "kwargs", "launched_at", "len", "lg", "libvirt", "libvirt_dev", "libvirt_dev_addr", "libvirt_firewall", "libvirt_guest", "libvirt_migrate", "libvirt_perf_event_name", "libvirt_utils", "libvirt_ver", "libvirt_vif", "libvirt_volume_drivers", "lines", "list", "listen_port", "live", "live_migration_flags", "live_snapshot", "local_instance_list", "local_instances", "log", "log_data", "log_path", "logging", "logical_volumes", "loopingcall", "lvm", "lvmdisk", "m", "mac", "mach_type", "machine_type", "map", "map_string", "map_strings", "mapping", "mappings", "matched_name", "max_mem", "max_retry", "max_vram", "md_obj", "mem", "membacking", "memnode", "mempages", "meta", "metadata", "migrate_data", "migrate_data_obj", "migrate_uri", "migration", "migration_flags", "mmap", "mode", "mode_str", "model", "mount_rootfs", "mountpoint", "msg", "multipath_id", "my_dev", "my_snap_base", "my_snap_dev", "my_snap_top", "n", "name", "names", "necessary", "need_inject", "net", "netutils", "network_disks_to_snap", "network_info", "network_info_str", "network_model", "new_connection_info", "new_domid", "new_file", "new_file_path", "new_filename", "new_pass", "new_path", "new_xml_str", "node", "node_type", "nodename", "nodes", "nova", "nova_context", "now", "num_cpu", "num_ports", "numa_mem", "numa_memnodes", "numa_topology", "numatune", "nw_info", "object_numa_cell", "objects", "offset", "old_connection_info", "old_dir", "old_domid", "ometa", "on_completion", "on_execute", "on_migration_failure", "online_cpus", "online_pcpus", "open", "operator", "opthread", "os", "os_type", "os_type_with_default", "out", "out_path", "output", "over_commit_size", "p", "page", "page_size", "pages", "params", "patch_tpool_proxy", "path", "path_node", "path_nodes", "path_qcow", "path_raw", "pattern", "pause", "pci_address", "pci_dev", "pci_device", "pci_devices", "pci_devs", "pci_info", "pci_manager", "pci_utils", "pcpu", "period", "phys_address", "pin_cpuset", "pointer", "pointer_model", "port", "ports", "post_method", "post_xml_callback", "power_on", "power_state", "previous_data_remaining", "process", "processutils", "progress_time", "progress_timeout", "progress_watermark", "property", "pty", "pty_console", "pty_consoles", "qemu_img_extra_arg", "qga", "quiesced", "ram_gb", "ramdisk_path", "range", "rate_bytes", "raw", "rbd_utils", "read_log_data", "read_only", "reason", "rebase_base", "rebase_disk", "reboot", "reboot_type", "recover_method", "refresh", "relative", "remaining", "remaining_path", "remotefs", "repr", "repr_method", "rescue", "rescue_file", "rescue_files", "rescue_image_id", "rescue_images", "rescue_password", "resize_instance", "resize_to", "result", "ret", "retry", "retry_countdown", "retry_interval", "rng_allowed", "rng_allowed_str", "rng_device", "rng_is_virtio", "rng_path", "root_bdm", "root_device_name", "root_disk", "root_down", "root_fname", "root_helper", "root_info", "rootfs_dev", "round", "s390x_archs", "scsi_controller", "sec", "section", "security_group_id", "self", "sep", "serial_console", "serial_listen_addr", "serial_ports", "serial_tcp", "serials", "service", "set", "setattr", "shared_block_storage", "shared_instance_path", "shared_storage", "shutil", "sib", "siblings", "six", "size", "size_gb", "smallest", "snap_disk", "snapshot", "snapshot_directory", "snapshot_id", "snapshot_name", "snapshot_xml", "snp_name", "soft_reboot_success", "sorted", "source", "source_cpu_info", "source_filename", "source_format", "source_node", "source_type", "specified_fs", "src", "src_back_path", "src_compute_info", "src_disk_info_path", "src_disk_size", "start", "state", "staticmethod", "stats", "status", "status_name", "steps", "steps_min", "storage_configs", "str", "str_method", "strutils", "success", "suffix", "suggested_dev_name", "super", "support_matrix", "supported_archs", "supported_events", "swap", "swap_mb", "sysinfo", "sysinfo_serial_funcs", "tablet", "tagged_bdms", "tagged_vifs", "target", "target_del", "target_nodes", "target_partition", "target_resize", "target_type", "task_states", "tcp_devices", "tempfile", "testfile", "thread", "thread_finished", "time", "timeout", "timeout_count", "timer", "timeutils", "tmhpet", "tmhyperv", "tmp_file", "tmp_path", "tmpdir", "tmpit", "tmrtc", "topology", "total", "total_pcpus", "tpool", "tree", "tuple", "type", "u", "uefi_logged", "uid_maps", "units", "unrescue_xml", "unrescue_xml_path", "update_task_state", "uptime", "uri", "uris", "user", "utils", "uuid", "uuids", "v", "values", "vconfig", "vcpu", "vcpu_model", "vcpus", "vcpus_rt", "vcpusched", "ver", "ver_", "version", "vg", "video", "video_ram", "vif", "vifs", "vifs_already_plugged", "virt_dom", "virt_size", "virt_type", "virtapi", "virtdev", "vol", "vol_dev", "vol_driver", "vol_stats", "vol_usage", "volume_api", "volume_devices", "volume_id", "wait_for_detach", "wants_cputune", "wants_hugepages", "wants_realtime", "wantsmempages", "wantsrealtime", "watchdog_action", "x", "xf", "xml", "xml_doc", "xml_dom", "xmlstr", "xpath_mode", "zip", "Set", "cache", "mode", "on", "LibvirtConfigGuestDisk", "object.\nEfficient", "override", "of", "base", "instance_exists", "method.\nPlug", "VIFs", "into", "networks.\nUnplug", "VIFs", "from", "networks.\nCalled", "at", "an", "interval", "until", "the", "VM", "is", "gone.\nDetaches", "encrypted", "volumes", "attached", "to", "instance.\nDelete", "all", "LVM", "disks", "for", "given", "instance", "object.\nReturns", "all", "LVM", "disks", "for", "given", "instance", "object.\nSwap", "existing", "disk", "with", "a", "new", "block", "device.\nThaw", "the", "guest", "filesystems", "after", "snapshot.\nSnapshot", "an", "instance", "without", "downtime.\nReboot", "a", "virtual", "machine,", "given", "an", "instance", "reference.\nCalled", "at", "an", "interval", "until", "the", "VM", "is", "running", "again.\nPause", "VM", "instance.\nUnpause", "paused", "VM", "instance.\nPower", "off", "the", "specified", "instance.\nPower", "on", "the", "specified", "instance.\nTrigger", "crash", "dump", "by", "injecting", "an", "NMI", "to", "the", "specified", "instance.\nSuspend", "the", "specified", "instance.\nresume", "the", "specified", "instance.\nresume", "guest", "state", "when", "a", "host", "is", "booted.\nCalled", "at", "an", "interval", "until", "the", "VM", "is", "running.\nCreate", "a", "swap", "file", "of", "specified", "size.\nGet", "metadata", "config", "for", "guest.\nReturns", "the", "guest", "OS", "type", "based", "on", "virt", "type.\nDo", "required", "network", "setup", "and", "create", "domain.\nReturns", "a", "dict", "of", "PCI", "device.\nNote", "that", "this", "function", "takes", "an", "instance", "name.\nChecks", "if", "destination", "has", "enough", "disk", "for", "block", "migration.\nMakes", "tmpfile", "under", "CONF.instances_path.\nRemoves", "existence", "of", "the", "tmpfile", "under", "CONF.instances_path.\nDownload", "kernel", "and", "ramdisk", "for", "instance", "in", "instance", "directory.\nClean", "up", "destination", "node", "after", "a", "failed", "live", "migration.\nPreparation", "live", "migration.\nReturn", "total", "over", "committed", "disk", "size", "for", "all", "instances.\nSee", "comments", "of", "same", "method", "in", "firewall_driver.\nReturn", "the", "current", "CPU", "state", "of", "the", "host.\nReturns", "the", "result", "of", "calling", "\"uptime\".\nManage", "the", "local", "cache", "of", "images.\nUsed", "only", "for", "cleanup", "in", "case", "migrate_disk_and_power_off", "fails.\nConverts", "a", "raw", "disk", "to", "qcow2.\nConverts", "a", "qcow2", "disk", "to", "raw.\nConfirms", "a", "resize,", "destroying", "the", "source", "VM.\nget", "the", "list", "of", "io", "devices", "from", "the", "xml", "document.", "The", "libvirt", "driver", "will", "prefix", "any", "disable", "reason", "codes", "with", "this", "string.\n", "Disable", "reason", "for", "the", "service", "which", "was", "enabled", "or", "disabled", "without", "reason\n", "Guest", "config", "console", "string\n962840", "for", "details.\n", "For", "information", "about", "when", "MIN_LIBVIRT_VERSION", "and\n", "NEXT_MIN_LIBVIRT_VERSION", "can", "be", "changed,", "consult\n\n", "https://wiki.openstack.org/wiki/LibvirtDistroSupportMatrix\n\n", "Currently", "this", "is", "effectively", "the", "min", "version", "for", "i686/x86_64\n", "+", "KVM/QEMU,", "as", "other", "architectures/hypervisors", "require", "newer\n", "versions.", "Over", "time,", "this", "will", "become", "a", "common", "min", "version\n", "for", "all", "architectures/hypervisors,", "as", "this", "value", "rises", "to\n", "meet", "them.\n", "TODO(berrange):", "Re-evaluate", "this", "at", "start", "of", "each", "release", "cycle\n", "to", "decide", "if", "we", "want", "to", "plan", "a", "future", "min", "version", "bump.\n", "MIN_LIBVIRT_VERSION", "can", "be", "updated", "to", "match", "this", "after\n", "NEXT_MIN_LIBVIRT_VERSION", "has", "been", "at", "a", "higher", "value", "for\n", "one", "cycle\n", "When", "the", "above", "version", "matches/exceeds", "this", "version\n", "delete", "it", "&", "corresponding", "code", "using", "it\n", "Relative", "block", "commit", "&", "rebase", "(feature", "is", "detected,\n", "this", "version", "is", "only", "used", "for", "messaging)\n", "Libvirt", "version", "1.2.17", "is", "required", "for", "successful", "block", "live", "migration\n", "of", "vm", "booted", "from", "image", "with", "attached", "devices\n", "libvirt", "discard", "feature\n", "While", "earlier", "versions", "could", "support", "NUMA", "reporting", "and\n", "NUMA", "placement,", "not", "until", "1.2.7", "was", "there", "the", "ability\n", "to", "pin", "guest", "nodes", "to", "host", "nodes,", "so", "mandate", "that.", "Without\n", "this", "the", "scheduler", "cannot", "make", "guaranteed", "decisions,", "as", "the\n", "guest", "placement", "may", "not", "match", "what", "was", "requested\n", "PowerPC", "based", "hosts", "that", "support", "NUMA", "using", "libvirt\n", "Versions", "of", "libvirt", "with", "known", "NUMA", "topology", "issues\n", "See", "bug", "#1449028\n", "While", "earlier", "versions", "could", "support", "hugepage", "backed\n", "guests,", "not", "until", "1.2.8", "was", "there", "the", "ability", "to", "request\n", "a", "particular", "huge", "page", "size.", "Without", "this", "the", "scheduler\n", "cannot", "make", "guaranteed", "decisions,", "as", "the", "huge", "page", "size\n", "used", "by", "the", "guest", "may", "not", "match", "what", "was", "requested\n", "Versions", "of", "libvirt", "with", "broken", "cpu", "pinning", "support.", "This", "excludes\n", "versions", "of", "libvirt", "with", "broken", "NUMA", "support", "since", "pinning", "needs\n", "NUMA\n", "See", "bug", "#1438226\n", "qemu", "2.1", "introduces", "support", "for", "pinning", "memory", "on", "host\n", "NUMA", "nodes,", "along", "with", "the", "ability", "to", "specify", "hugepage\n", "sizes", "per", "guest", "NUMA", "node\n", "fsFreeze/fsThaw", "requirement\n", "UEFI", "booting", "support\n", "Hyper-V", "paravirtualized", "time", "source\n", "Virtuozzo", "driver", "support\n", "Ability", "to", "set", "the", "user", "guest", "password", "with", "Qemu\n", "Ability", "to", "set", "the", "user", "guest", "password", "with", "parallels\n", "s/390", "&", "s/390x", "architectures", "with", "KVM\n", "libvirt", "<", "1.3", "reported", "virt_functions", "capability\n", "only", "when", "VFs", "are", "enabled.\n", "libvirt", "1.3", "fix", "f391889f4e942e22b9ef8ecca492de05106ce41e\n", "Use", "the", "\"logd\"", "backend", "for", "handling", "stdout/stderr", "from", "QEMU", "processes.\n", "ppc64/ppc64le", "architectures", "with", "KVM\n", "NOTE(rfolco):", "Same", "levels", "for", "Libvirt/Qemu", "on", "Big", "Endian", "and", "Little\n", "Endian", "giving", "the", "nuance", "around", "guest", "vs", "host", "architectures\n", "Auto", "converge", "support\n", "Names", "of", "the", "types", "that", "do", "not", "get", "compressed", "during", "migration\n", "number", "of", "serial", "console", "limit\n", "Qemu", "supports", "4", "serial", "consoles,", "we", "remove", "1", "because", "of", "the", "PTY", "one", "defined\n", "realtime", "support\n", "libvirt", "postcopy", "support\n", "qemu", "postcopy", "support\n", "perf", "events", "support\n", "TODO(mriedem):", "Long-term", "we", "should", "load", "up", "the", "volume", "drivers", "on\n", "demand", "as", "needed", "rather", "than", "doing", "this", "on", "startup,", "as", "there", "might\n", "be", "unsupported", "volume", "drivers", "in", "this", "list", "based", "on", "the", "underlying\n", "platform.\n", "Compute", "reserved", "hugepages", "from", "conf", "file", "at", "the", "very\n", "beginning", "to", "ensure", "any", "syntax", "error", "will", "be", "reported", "and\n", "avoid", "any", "re-calculation", "when", "computing", "resources.\n", "We", "prefer", "'none'", "for", "consistent", "performance,", "host", "crash\n", "safety", "&", "migration", "correctness", "by", "avoiding", "host", "page", "cache.\n", "Some", "filesystems", "(eg", "GlusterFS", "via", "FUSE)", "don't", "support\n", "O_DIRECT", "though.", "For", "those", "we", "fallback", "to", "'writethrough'\n", "which", "gives", "host", "crash", "safety,", "and", "is", "safe", "for", "migration\n", "provided", "the", "filesystem", "is", "cache", "coherent", "(cluster", "filesystems\n", "typically", "are,", "but", "things", "like", "NFS", "are", "not).\n", "Stop", "libguestfs", "using", "KVM", "unless", "we're", "also", "configured\n", "to", "use", "this.", "This", "solves", "problem", "where", "people", "need", "to\n", "stop", "Nova", "use", "of", "KVM", "because", "nested-virt", "is", "broken\n", "Give", "the", "cloud", "admin", "a", "heads", "up", "if", "we", "are", "intending", "to\n", "change", "the", "MIN_LIBVIRT_VERSION", "in", "the", "next", "release.\n", "Adding", "p2p", "flag", "only", "if", "xen", "is", "not", "in", "use,", "because", "xen", "does", "not\n", "support", "p2p", "migrations\n", "Adding", "VIR_MIGRATE_UNDEFINE_SOURCE", "because,", "without", "it,", "migrated\n", "instance", "will", "remain", "defined", "on", "the", "source", "host\n", "Adding", "VIR_MIGRATE_PERSIST_DEST", "to", "persist", "the", "VM", "on", "the\n", "destination", "host\n", "Adding", "VIR_MIGRATE_NON_SHARED_INC,", "otherwise", "all", "block-migrations\n", "will", "be", "live-migrations", "instead\n", "TODO(sahid):", "This", "method", "is", "targeted", "for", "removal", "when", "the", "tests\n", "have", "been", "updated", "to", "avoid", "its", "use\n\n", "All", "libvirt", "API", "calls", "on", "the", "libvirt.Connect", "object", "should", "be\n", "encapsulated", "by", "methods", "on", "the", "nova.virt.libvirt.host.Host\n", "object,", "rather", "than", "directly", "invoking", "the", "libvirt", "APIs.", "The", "goal\n", "is", "to", "avoid", "a", "direct", "dependency", "on", "the", "libvirt", "API", "from", "the\n", "driver.py", "file.\n", "Only", "Xen", "and", "QEMU", "support", "live", "migration,", "see\n", "https://libvirt.org/migration.html#scenarios", "for", "reference\n", "Only", "QEMU", "live", "migrations", "supports", "migrate-uri", "parameter\n", "QEMU", "accept", "two", "schemes:", "tcp", "and", "rdma.", "By", "default\n", "libvirt", "build", "the", "URI", "using", "the", "remote", "hostname", "and", "the\n", "tcp", "schema.\n", "Because", "dest", "might", "be", "of", "type", "unicode,", "here", "we", "might", "return", "value", "of\n", "type", "unicode", "as", "well", "which", "is", "not", "acceptable", "by", "libvirt", "python\n", "binding", "when", "Python", "2.7", "is", "in", "use,", "so", "let's", "convert", "it", "explicitly\n", "back", "to", "string.", "When", "Python", "3.x", "is", "in", "use,", "libvirt", "python", "binding\n", "accepts", "unicode", "type", "so", "it", "is", "completely", "fine", "to", "do", "a", "no-op", "str(uri)\n", "conversion", "which", "will", "return", "value", "of", "type", "unicode.\n", "This", "method", "is", "called", "for", "several", "events:", "destroy,\n", "rebuild,", "hard-reboot,", "power-off", "-", "For", "all", "of", "these\n", "events", "we", "want", "to", "release", "the", "serial", "ports", "acquired\n", "for", "the", "guest", "before", "destroying", "it.\n", "If", "the", "instance", "is", "already", "terminated,", "we're", "still", "happy\n", "Otherwise,", "destroy", "it\n", "Domain", "already", "gone.", "This", "can", "safely", "be", "ignored.\n", "If", "the", "instance", "is", "already", "shut", "off,", "we", "get", "this:\n", "Code=55", "Error=Requested", "operation", "is", "not", "valid:\n", "domain", "is", "not", "running\n", "Some", "processes", "in", "the", "container", "didn't", "die\n", "fast", "enough", "for", "libvirt.", "The", "container", "will\n", "eventually", "die.", "For", "now,", "move", "on", "and", "let\n", "the", "wait_for_destroy", "logic", "take", "over.\n", "NOTE(danpb):", "When", "libvirt", "kills", "a", "process", "it", "sends", "it\n", "SIGTERM", "first", "and", "waits", "10", "seconds.", "If", "it", "hasn't", "gone\n", "it", "sends", "SIGKILL", "and", "waits", "another", "5", "seconds.", "If", "it\n", "still", "hasn't", "gone", "then", "you", "get", "this", "EBUSY", "error.\n", "Usually", "when", "a", "QEMU", "process", "fails", "to", "go", "away", "upon\n", "SIGKILL", "it", "is", "because", "it", "is", "stuck", "in", "an\n", "uninterruptible", "kernel", "sleep", "waiting", "on", "I/O", "from\n", "some", "non-responsive", "server.\n", "Given", "the", "CPU", "load", "of", "the", "gate", "tests", "though,", "it", "is\n", "conceivable", "that", "the", "15", "second", "timeout", "is", "too", "short,\n", "particularly", "if", "the", "VM", "running", "tempest", "has", "a", "high\n", "steal", "time", "from", "the", "cloud", "host.", "ie", "15", "wallclock\n", "seconds", "may", "have", "passed,", "but", "the", "VM", "might", "have", "only\n", "have", "a", "few", "seconds", "of", "scheduled", "run", "time.\n", "Try", "up", "to", "3", "times", "before", "giving", "up.\n", "NOTE(vish):", "If", "the", "instance", "disappears", "during", "the", "destroy\n", "we", "ignore", "it", "so", "the", "cleanup", "can", "still", "be\n", "attempted", "because", "we", "would", "prefer", "destroy", "to\n", "never", "fail.\n", "NOTE(wangpan):", "If", "the", "instance", "was", "booted", "again", "after", "destroy,\n", "this", "may", "be", "an", "endless", "loop,", "so", "check", "the", "id", "of\n", "domain", "here,", "if", "it", "changed", "and", "the", "instance", "is\n", "still", "running,", "we", "should", "destroy", "it", "again.\n", "see", "https://bugs.launchpad.net/nova/+bug/1111213", "for", "more", "details\n", "NOTE(GuanQiang):", "teardown", "container", "to", "avoid", "resource", "leak\n", "FIXME(wangpan):", "if", "the", "instance", "is", "booted", "again", "here,", "such", "as", "the\n", "the", "soft", "reboot", "operation", "boot", "it", "here,", "it", "will\n", "become", "\"running", "deleted\",", "should", "we", "check", "and", "destroy\n", "it", "at", "the", "end", "of", "this", "method?\n", "NOTE(vish):", "we", "disconnect", "from", "volumes", "regardless\n", "The", "volume", "must", "be", "detached", "from", "the", "VM", "before\n", "disconnecting", "it", "from", "its", "encryptor.", "Otherwise,", "the\n", "encryptor", "may", "report", "that", "the", "volume", "is", "still", "in", "use.\n", "Don't", "block", "on", "Volume", "errors", "if", "we're", "trying", "to\n", "delete", "the", "instance", "as", "we", "may", "be", "partially", "created\n", "or", "deleted\n", "NOTE(haomai):", "destroy", "volumes", "if", "needed\n", "NOTE(mriedem):", "This", "is", "used", "in", "the", "_run_pending_deletes", "periodic\n", "task", "in", "the", "compute", "manager.", "The", "tight", "coupling", "is", "not", "great...\n", "The", "'serial'", "device", "is", "the", "base", "for", "x86", "platforms.", "Other", "platforms\n", "(e.g.", "kvm", "on", "system", "z", "=", "S390X)", "can", "only", "use", "'console'", "devices.\n", "NOTE(nic):", "On", "revert_resize,", "the", "cleanup", "steps", "for", "the", "root\n", "volume", "are", "handled", "with", "an", "\"rbd", "snap", "rollback\"", "command,\n", "and", "none", "of", "this", "is", "needed", "(and", "is,", "in", "fact,", "harmful)", "so\n", "filter", "out", "non-ephemerals", "from", "the", "list\n", "Deletion", "can", "fail", "over", "NFS,", "so", "retry", "the", "deletion", "as", "required.\n", "Set", "maximum", "attempt", "as", "5,", "most", "test", "can", "remove", "the", "directory\n", "for", "the", "second", "time.\n", "TODO(nic):", "Set", "ignore_errors=False", "in", "a", "future", "release.\n", "It", "is", "set", "to", "True", "here", "to", "avoid", "any", "upgrade", "issues", "surrounding\n", "instances", "being", "in", "pending", "resize", "state", "when", "the", "software", "is", "updated;\n", "in", "that", "case", "there", "will", "be", "no", "snapshot", "to", "remove.", "Once", "it", "can", "be\n", "reasonably", "assumed", "that", "no", "such", "instances", "exist", "in", "the", "wild\n", "anymore,", "it", "should", "be", "set", "back", "to", "False", "(the", "default)", "so", "it", "will\n", "throw", "errors,", "like", "it", "should.\n", "Note(cfb):", "If", "the", "volume", "has", "a", "custom", "block", "size,", "check", "that\n", "that", "we", "are", "using", "QEMU/KVM", "and", "libvirt", ">=", "0.10.2.", "The\n", "presence", "of", "a", "block", "size", "is", "considered", "mandatory", "by\n", "cinder", "so", "we", "fail", "if", "we", "can't", "honor", "the", "request.\n", "Save", "a", "copy", "of", "the", "domain's", "persistent", "XML", "file\n", "Abort", "is", "an", "idempotent", "operation,", "so", "make", "sure", "any", "block\n", "jobs", "which", "may", "have", "failed", "are", "ended.\n", "NOTE", "(rmk):", "blockRebase", "cannot", "be", "executed", "on", "persistent\n", "domains,", "so", "we", "need", "to", "temporarily", "undefine", "it.\n", "If", "any", "part", "of", "this", "block", "fails,", "the", "domain", "is\n", "re-defined", "regardless.\n", "Start", "copy", "with", "VIR_DOMAIN_REBASE_REUSE_EXT", "flag", "to\n", "allow", "writing", "to", "existing", "external", "volume", "file\n", "NOTE(alex_xu):", "domain.blockJobAbort", "isn't", "sync", "call.", "This\n", "is", "bug", "in", "libvirt.", "So", "we", "need", "waiting", "for", "the", "pivot", "is\n", "finished.", "libvirt", "bug", "#1119173\n", "Save", "updates", "made", "in", "connection_info", "when", "connect_volume", "was", "called\n", "The", "volume", "must", "be", "detached", "from", "the", "VM", "before", "disconnecting", "it\n", "from", "its", "encryptor.", "Otherwise,", "the", "encryptor", "may", "report", "that", "the\n", "volume", "is", "still", "in", "use.\n", "NOTE(zhaoqin):", "If", "the", "instance", "does", "not", "exist,", "_lookup_by_name()\n", "will", "throw", "InstanceNotFound", "exception.", "Need", "to\n", "disconnect", "volume", "under", "this", "circumstance.\n", "NOTE(vish):", "This", "is", "called", "to", "cleanup", "volumes", "after", "live\n", "migration,", "so", "we", "should", "still", "disconnect", "even", "if\n", "the", "instance", "doesn't", "exist", "here", "anymore.\n", "NOTE(vish):\n", "NOTE(mriedem):", "When", "deleting", "an", "instance", "and", "using", "Neutron,\n", "we", "can", "be", "racing", "against", "Neutron", "deleting", "the", "port", "and\n", "sending", "the", "vif-deleted", "event", "which", "then", "triggers", "a", "call", "to\n", "detach", "the", "interface,", "so", "if", "the", "interface", "is", "not", "found", "then\n", "we", "can", "just", "log", "it", "as", "a", "warning.\n", "The", "interface", "is", "gone", "so", "just", "log", "it", "as", "a", "warning.\n", "NOTE(mriedem):", "When", "deleting", "an", "instance", "and", "using", "Neutron,\n", "we", "can", "be", "racing", "against", "Neutron", "deleting", "the", "port", "and\n", "sending", "the", "vif-deleted", "event", "which", "then", "triggers", "a", "call", "to\n", "detach", "the", "interface,", "so", "we", "might", "have", "failed", "because", "the\n", "network", "device", "no", "longer", "exists.", "Libvirt", "will", "fail", "with\n", "\"operation", "failed:", "no", "matching", "network", "device", "was", "found\"\n", "which", "unfortunately", "does", "not", "have", "a", "unique", "error", "code", "so", "we\n", "need", "to", "look", "up", "the", "interface", "by", "config", "and", "if", "it's", "not", "found\n", "then", "we", "can", "just", "log", "it", "as", "a", "warning", "rather", "than", "tracing", "an\n", "error.\n", "The", "interface", "is", "gone", "so", "just", "log", "it", "as", "a", "warning.\n", "NOTE(vish):", "glance", "forces", "ami", "disk", "format", "to", "be", "ami\n", "TODO(sahid):", "We", "are", "converting", "all", "calls", "from", "a\n", "virDomain", "object", "to", "use", "nova.virt.libvirt.Guest.\n", "We", "should", "be", "able", "to", "remove", "virt_dom", "at", "the", "end.\n", "source_format", "is", "an", "on-disk", "format\n", "source_type", "is", "a", "backend", "type\n", "We", "won't", "have", "source_type", "for", "raw", "or", "qcow2", "disks,", "because", "we", "can't\n", "determine", "that", "from", "the", "path.", "We", "should", "have", "it", "from", "the", "libvirt\n", "xml,", "though.\n", "For", "lxc", "instances", "we", "won't", "have", "it", "either", "from", "libvirt", "xml\n", "(because", "we", "just", "gave", "libvirt", "the", "mounted", "filesystem),", "or", "the", "path,\n", "so", "source_type", "is", "still", "going", "to", "be", "None.", "In", "this", "case,\n", "root_disk", "is", "going", "to", "default", "to", "CONF.libvirt.images_type\n", "below,", "which", "is", "still", "safe.\n", "NOTE(bfilippov):", "save", "lvm", "and", "rbd", "as", "raw\n", "NOTE(dgenin):", "Instances", "with", "LVM", "encrypted", "ephemeral", "storage", "require\n", "cold", "snapshots.", "Currently,", "checking", "for", "encryption", "is\n", "redundant", "because", "LVM", "supports", "only", "cold", "snapshots.\n", "It", "is", "necessary", "in", "case", "this", "situation", "changes", "in", "the\n", "future.\n", "Abort", "is", "an", "idempotent", "operation,", "so", "make", "sure", "any", "block\n", "jobs", "which", "may", "have", "failed", "are", "ended.", "This", "operation", "also\n", "confirms", "the", "running", "instance,", "as", "opposed", "to", "the", "system", "as", "a\n", "whole,", "has", "a", "new", "enough", "version", "of", "the", "hypervisor", "(bug", "1193146).\n", "NOTE(rmk):", "We", "cannot", "perform", "live", "snapshots", "when", "a", "managedSave\n", "file", "is", "present,", "so", "we", "will", "use", "the", "cold/legacy", "method\n", "for", "instances", "which", "are", "shutdown.\n", "TODO(nic):", "possibly", "abstract", "this", "out", "to", "the", "root_disk\n", "Standard", "snapshot", "uses", "qemu-img", "convert", "from", "RBD", "which", "is\n", "not", "safe", "to", "run", "with", "live_snapshot.\n", "Suspend", "the", "guest,", "so", "this", "is", "no", "longer", "a", "live", "snapshot\n", "NOTE(xqueralt):", "libvirt", "needs", "o+x", "in", "the", "tempdir\n", "Upload", "that", "image", "to", "the", "image", "service\n", "NOTE(dkang):", "managedSave", "does", "not", "work", "for", "LXC\n", "NOTE(dkang):", "because", "previous", "managedSave", "is", "not", "called\n", "for", "LXC,", "_create_domain", "must", "not", "be", "called.\n", "Save", "a", "copy", "of", "the", "domain's", "persistent", "XML", "file\n", "Abort", "is", "an", "idempotent", "operation,", "so", "make", "sure", "any", "block\n", "jobs", "which", "may", "have", "failed", "are", "ended.\n", "NOTE", "(rmk):", "We", "are", "using", "shallow", "rebases", "as", "a", "workaround", "to", "a", "bug\n", "in", "QEMU", "1.3.", "In", "order", "to", "do", "this,", "we", "need", "to", "create\n", "a", "destination", "image", "with", "the", "original", "backing", "file\n", "and", "matching", "size", "of", "the", "instance", "root", "disk.\n", "NOTE", "(rmk):", "blockRebase", "cannot", "be", "executed", "on", "persistent\n", "domains,", "so", "we", "need", "to", "temporarily", "undefine", "it.\n", "If", "any", "part", "of", "this", "block", "fails,", "the", "domain", "is\n", "re-defined", "regardless.\n", "NOTE", "(rmk):", "Establish", "a", "temporary", "mirror", "of", "our", "root", "disk", "and\n", "issue", "an", "abort", "once", "we", "have", "a", "complete", "copy.\n", "Convert", "the", "delta", "(CoW)", "image", "with", "a", "backing", "file", "to", "a", "flat\n", "image", "with", "no", "backing", "file.\n", "to", "be", "snapshotted", "by", "libvirt\n", "network", "disks", "(netfs,", "gluster,", "etc.)\n", "local", "disks", "not", "snapshotted\n", "disk", "is", "a", "Cinder", "volume", "with", "the", "correct", "volume_id\n", "Determine", "path", "for", "new_file", "based", "on", "current", "path\n", "It's", "unsure", "how", "well", "qemu-img", "handles", "network", "disks", "for\n", "every", "protocol.", "So", "let's", "be", "safe.\n", "If", "backing_file", "is", "specified", "as", "\"\"", "(the", "empty", "string),", "then\n", "the", "image", "is", "rebased", "onto", "no", "backing", "file", "(i.e.", "it", "will", "exist\n", "independently", "of", "any", "backing", "file).\n", "If", "the", "rebased", "image", "is", "going", "to", "have", "a", "backing", "file", "then\n", "explicitly", "set", "the", "backing", "file", "format", "to", "avoid", "any", "security\n", "concerns", "related", "to", "file", "format", "auto", "detection.\n", "Find", "dev", "name\n", "libgfapi", "delete\n", "determine", "reference", "within", "backing", "store", "for", "desired", "image\n", "pull", "via", "blockRebase()\n", "Merge", "the", "most", "recent", "snapshot", "into", "the", "active", "image\n", "often", "None\n", "NOTE(deepakcs):", "libvirt", "added", "support", "for", "_RELATIVE", "in", "v1.2.7,\n", "and", "when", "available", "this", "flag", "_must_", "be", "used", "to", "ensure", "backing\n", "paths", "are", "maintained", "relative", "by", "qemu.\n\n", "If", "_RELATIVE", "flag", "not", "found,", "continue", "with", "old", "behaviour\n", "(relative", "backing", "path", "seems", "to", "work", "for", "this", "case)\n", "If", "the", "guest", "is", "not", "running", "libvirt", "won't", "do", "a", "blockRebase.\n", "In", "that", "case,", "let's", "ask", "qemu-img", "to", "rebase", "the", "disk.\n", "commit", "with", "blockCommit()\n", "NOTE(deepakcs):", "libvirt", "added", "support", "for", "_RELATIVE", "in", "v1.2.7,\n", "and", "when", "available", "this", "flag", "_must_", "be", "used", "to", "ensure", "backing\n", "paths", "are", "maintained", "relative", "by", "qemu.\n\n", "If", "_RELATIVE", "flag", "not", "found,", "raise", "exception", "as", "relative", "backing\n", "path", "may", "not", "be", "maintained", "and", "Cinder", "flow", "is", "broken", "if", "allowed\n", "to", "continue.\n", "NOTE(vish):", "This", "will", "attempt", "to", "do", "a", "graceful", "shutdown/restart.\n", "NOTE(vish):", "This", "check", "allows", "us", "to", "reboot", "an", "instance", "that\n", "is", "already", "shutdown.\n", "NOTE(vish):", "This", "actually", "could", "take", "slightly", "longer", "than", "the\n", "FLAG", "defines", "depending", "on", "how", "long", "the", "get_info\n", "call", "takes", "to", "return.\n", "NOTE(ivoks):", "By", "checking", "domain", "IDs,", "we", "make", "sure", "we", "are\n", "not", "recreating", "domain", "that's", "already", "running.\n", "Domain", "XML", "will", "be", "redefined", "so", "we", "can", "safely", "undefine", "it\n", "from", "libvirt.", "This", "ensure", "that", "such", "process", "as", "create", "serial\n", "console", "for", "guest", "will", "run", "smoothly.\n", "Convert", "the", "system", "metadata", "to", "image", "metadata\n", "NOTE(mdbooth):", "This", "is", "a", "workaround", "for", "stateless", "Nova", "compute\n", "https://bugs.launchpad.net/nova/+bug/1349978\n", "NOTE(vish):", "This", "could", "generate", "the", "wrong", "device_format", "if", "we", "are\n", "using", "the", "raw", "backend", "and", "the", "images", "don't", "exist", "yet.\n", "The", "create_images_and_backing", "below", "doesn't", "properly\n", "regenerate", "raw", "backend", "images,", "however,", "so", "when", "it\n", "does", "we", "need", "to", "(re)generate", "the", "xml", "after", "the", "images\n", "are", "in", "place.\n", "NOTE(mdbooth):", "context.auth_token", "will", "not", "be", "set", "when", "we", "call\n", "_hard_reboot", "from", "resume_state_on_host_boot()\n", "NOTE", "(rmk):", "Re-populate", "any", "missing", "backing", "files.\n", "Initialize", "all", "the", "necessary", "networking,", "block", "devices", "and\n", "start", "the", "instance.\n", "List", "of", "states", "that", "represent", "a", "shutdown", "instance\n", "If", "the", "instance", "has", "gone", "then", "we", "don't", "need", "to\n", "wait", "for", "it", "to", "shutdown\n", "Note(PhilD):", "We", "can't", "assume", "that", "the", "Guest", "was", "able", "to", "process\n", "any", "previous", "shutdown", "signal", "(for", "example", "it", "may\n", "have", "still", "been", "startingup,", "so", "within", "the", "overall\n", "timeout", "we", "re-trigger", "the", "shutdown", "every\n", "retry_interval\n", "Instance", "could", "shutdown", "at", "any", "time,", "in", "which", "case", "we\n", "will", "get", "an", "exception", "when", "we", "call", "shutdown\n", "Assume", "this", "is", "because", "its", "now", "shutdown,", "so", "loop\n", "one", "more", "time", "to", "clean", "up.\n", "We", "use", "_hard_reboot", "here", "to", "ensure", "that", "all", "backing", "files,\n", "network,", "and", "block", "device", "connections,", "etc.", "are", "established\n", "and", "available", "before", "we", "attempt", "to", "start", "the", "instance.\n", "Check", "if", "the", "instance", "is", "running", "already", "and", "avoid", "doing\n", "anything", "if", "it", "is.\n", "Instance", "is", "not", "up", "and", "could", "be", "in", "an", "unknown", "state.\n", "Be", "as", "absolute", "as", "possible", "about", "getting", "it", "back", "into\n", "a", "known", "and", "running", "state.\n", "TODO(sahid):", "We", "are", "converting", "all", "calls", "from", "a\n", "virDomain", "object", "to", "use", "nova.virt.libvirt.Guest.\n", "We", "should", "be", "able", "to", "remove", "virt_dom", "at", "the", "end.\n", "cleanup", "rescue", "volume\n", "NOTE(ilyaalekseyev):", "Implementation", "like", "in", "multinics\n", "for", "xenapi(tr3buchet)\n", "Required", "by", "Quobyte", "CI\n", "The", "last", "N", "read", "bytes\n", "in", "case", "there", "is", "a", "log", "rotation", "(like", "\"virtlogd\")\n", "We", "need", "the", "log", "file", "content", "in", "chronological", "order,\n", "that's", "why", "we", "*prepend*", "the", "log", "data.\n", "If", "the", "guest", "has", "a", "console", "logging", "to", "a", "file", "prefer", "to", "use", "that\n", "Try", "'pty'", "types\n", "By", "default", "libvirt", "chowns", "the", "console", "log", "when", "it", "starts", "a", "domain.\n", "We", "need", "to", "chown", "it", "back", "before", "attempting", "to", "read", "from", "or", "write\n", "to", "it.\n", "NOTE(markus_z):", "The", "virt_types", "kvm", "and", "qemu", "are", "the", "only", "ones\n", "which", "create", "a", "dedicated", "file", "device", "for", "the", "console", "logging.\n", "Other", "virt_types", "like", "xen,", "lxc,", "uml,", "parallels", "depend", "on", "the\n", "flush", "of", "that", "pty", "device", "into", "the", "\"console.log\"", "file", "to", "ensure\n", "that", "a", "series", "of", "\"get_console_output\"", "calls", "return", "the", "complete\n", "content", "even", "after", "rebooting", "a", "guest.\n", "NOTE(rmk):", "We", "had", "VNC", "consoles", "enabled", "but", "the", "instance", "in\n", "question", "is", "not", "actually", "listening", "for", "connections.\n", "NOTE(rmk):", "We", "had", "Spice", "consoles", "enabled", "but", "the", "instance", "in\n", "question", "is", "not", "actually", "listening", "for", "connections.\n", "Check", "is", "the", "write", "allowed", "with", "512", "byte", "alignment\n", "ensure", "unlink(filepath)", "will", "actually", "remove", "the", "file", "by", "deleting\n", "the", "remaining", "link", "to", "it", "in", "close(fd)\n", "Run", "as", "root", "only", "for", "block", "devices.\n", "NOTE(mdbooth):", "Although", "libvirt", "will", "create", "this", "file", "for", "us\n", "automatically", "when", "it", "starts,", "it", "will", "initially", "create", "it", "with\n", "root", "ownership", "and", "then", "chown", "it", "depending", "on", "the", "configuration", "of\n", "the", "domain", "it", "is", "launching.", "Quobyte", "CI", "explicitly", "disables", "the\n", "chown", "by", "setting", "dynamic_ownership=0", "in", "libvirt's", "config.\n", "Consequently", "when", "the", "domain", "starts", "it", "is", "unable", "to", "write", "to", "its\n", "console.log.", "See", "bug", "https://bugs.launchpad.net/nova/+bug/1597644\n\n", "To", "work", "around", "this,", "we", "create", "the", "file", "manually", "before", "starting\n", "the", "domain", "so", "it", "has", "the", "same", "ownership", "as", "Nova.", "This", "works\n", "for", "Quobyte", "CI", "because", "it", "is", "also", "configured", "to", "run", "qemu", "as", "the", "same\n", "user", "as", "the", "Nova", "service.", "Installations", "which", "don't", "set\n", "dynamic_ownership=0", "are", "not", "affected", "because", "libvirt", "will", "always\n", "correctly", "configure", "permissions", "regardless", "of", "initial", "ownership.\n\n", "Setting", "dynamic_ownership=0", "is", "dubious", "and", "potentially", "broken", "in\n", "more", "ways", "than", "console.log", "(see", "comment", "#22", "on", "the", "above", "bug),", "so\n", "Future", "Maintainer", "who", "finds", "this", "code", "problematic", "should", "check", "to", "see\n", "if", "we", "still", "support", "it.\n", "TODO(mikal):", "there", "is", "a", "bug", "here", "if", "images_type", "has\n", "changed", "since", "creation", "of", "the", "instance,", "but", "I", "am", "pretty\n", "sure", "that", "this", "bug", "already", "exists.\n", "Handles", "the", "partition", "need", "to", "be", "used.\n", "Handles", "the", "key", "injection.\n", "Handles", "the", "admin", "password", "injection.\n", "Handles", "the", "network", "injection.\n", "Handles", "the", "metadata", "injection\n", "NOTE(sileht):", "many", "callers", "of", "this", "method", "assume", "that", "this\n", "method", "doesn't", "fail", "if", "an", "image", "already", "exists", "but", "instead\n", "think", "that", "it", "will", "be", "reused", "(ie:", "(live)-migration/resize)\n", "ensure", "directories", "exist", "and", "are", "writable\n", "Lookup", "the", "filesystem", "type", "if", "required\n", "Generate", "a", "file", "extension", "based", "on", "the", "file", "system\n", "type", "and", "the", "mkfs", "commands", "configured", "if", "any\n", "This", "is", "a", "workaround", "to", "support", "legacy", "swap", "resizing,\n", "which", "does", "not", "touch", "swap", "size", "specified", "in", "bdm,\n", "but", "works", "with", "flavor", "specified", "size", "only.\n", "In", "this", "case", "we", "follow", "the", "legacy", "logic", "and", "ignore", "block\n", "device", "info", "completely.\n", "NOTE(ft):", "This", "workaround", "must", "be", "removed", "when", "a", "correct\n", "implementation", "of", "resize", "operation", "changing", "sizes", "in", "bdms", "is\n", "developed.", "Also", "at", "that", "stage", "we", "probably", "may", "get", "rid", "of\n", "the", "direct", "usage", "of", "flavor", "swap", "size", "here,\n", "leaving", "the", "work", "with", "bdm", "only.\n", "File", "injection", "only", "if", "needed\n", "NOTE(ndipanov):", "Even", "if", "disk_mapping", "was", "passed", "in,", "which\n", "currently", "happens", "only", "on", "rescue", "-", "we", "still", "don't", "want", "to\n", "create", "a", "base", "image.\n", "As", "this", "method", "being", "called", "right", "after", "the", "definition", "of", "a\n", "domain,", "but", "before", "its", "actual", "launch,", "device", "metadata", "will", "be", "built\n", "and", "saved", "in", "the", "instance", "for", "it", "to", "be", "used", "by", "the", "config", "drive", "and\n", "the", "metadata", "service.\n", "Don't", "overwrite", "an", "existing", "config", "drive\n", "NOTE(mdbooth):", "We're", "hardcoding", "here", "the", "path", "of", "the\n", "config", "disk", "when", "using", "the", "flat", "backend.", "This", "isn't\n", "good,", "but", "it's", "required", "because", "we", "need", "a", "local", "path", "we\n", "know", "we", "can", "write", "to", "in", "case", "we're", "subsequently\n", "importing", "into", "rbd.", "This", "will", "be", "cleaned", "up", "when", "we\n", "replace", "this", "with", "a", "call", "to", "create_from_func,", "but", "that\n", "can't", "happen", "until", "we've", "updated", "the", "backends", "and", "we\n", "teach", "them", "not", "to", "cache", "config", "disks.", "This", "isn't\n", "possible", "while", "we're", "still", "using", "cache()", "under", "the", "hood.\n", "NOTE(mikal):", "if", "the", "config", "drive", "was", "imported", "into", "RBD,\n", "then", "we", "no", "longer", "need", "the", "local", "copy\n", "kvm", ",", "qemu", "support", "managed", "mode\n", "In", "managed", "mode,", "the", "configured", "device", "will", "be", "automatically\n", "detached", "from", "the", "host", "OS", "drivers", "when", "the", "guest", "is", "started,\n", "and", "then", "re-attached", "when", "the", "guest", "shuts", "down.\n", "we", "do", "manual", "detach", "only", "for", "xen\n", "Note(yjiang5)", "Spelling", "for", "'dettach'", "is", "correct,", "see\n", "http://libvirt.org/html/libvirt-libvirt.html.\n", "Note(yjiang5):", "A", "reset", "of", "one", "PCI", "device", "may", "impact", "other\n", "devices", "on", "the", "same", "bus,", "thus", "we", "need", "two", "separated", "loops\n", "to", "detach", "and", "then", "reset", "it.\n", "after", "detachDeviceFlags", "returned,", "we", "should", "check", "the", "dom", "to\n", "ensure", "the", "detaching", "is", "finished\n", "In", "case", "of", "VNIC_TYPES_DIRECT_PASSTHROUGH", "ports", "we", "create\n", "pci", "request", "per", "direct", "passthrough", "port.", "Therefore", "we", "can", "trust\n", "that", "pci_slot", "value", "in", "the", "vif", "is", "correct.\n", "use", "detach_pci_devices", "to", "avoid", "failure", "in", "case", "of\n", "multiple", "guest", "direct", "passthrough", "ports", "with", "the", "same", "MAC\n", "(protection", "use-case,", "ports", "are", "on", "different", "physical\n", "interfaces)\n", "Note(jang):", "this", "is", "a", "quick", "fix", "to", "stop", "operator-\n", "disabled", "compute", "hosts", "from", "re-enabling", "themselves\n", "automatically.", "We", "prefix", "any", "automatic", "reason", "code\n", "with", "a", "fixed", "string.", "We", "only", "re-enable", "a", "host\n", "automatically", "if", "we", "find", "that", "string", "in", "place.\n", "This", "should", "probably", "be", "replaced", "with", "a", "separate", "flag.\n", "This", "is", "likely", "an", "older", "config", "drive", "that", "has", "not", "been", "migrated\n", "to", "rbd", "yet.", "Try", "to", "fall", "back", "on", "'flat'", "image", "type.\n", "TODO(melwitt):", "Add", "online", "migration", "of", "some", "sort", "so", "we", "can\n", "remove", "this", "fall", "back", "once", "we", "know", "all", "config", "drives", "are", "in", "rbd.\n", "NOTE(vladikr):", "make", "sure", "that", "the", "flat", "image", "exist,", "otherwise\n", "the", "image", "will", "be", "created", "after", "the", "domain", "definition.\n", "We", "want", "to", "have", "'-'", "in", "the", "right", "place\n", "so", "we", "parse", "&", "reformat", "the", "value\n", "only", "kvm", "support", "managed", "mode\n", "The", "underlying", "machine", "type", "can", "be", "set", "as", "an", "image", "attribute,\n", "or", "otherwise", "based", "on", "some", "architecture", "specific", "defaults\n", "For", "ARM", "systems", "we", "will", "default", "to", "vexpress-a15", "for", "armv7\n", "and", "virt", "for", "aarch64\n", "If", "set", "in", "the", "config,", "use", "that", "as", "the", "default.\n", "Setting", "the", "default", "cpu.shares", "value", "to", "be", "a", "value\n", "dependent", "on", "the", "number", "of", "vcpus\n", "The", "vhost-user", "network", "backend", "requires", "file", "backed\n", "guest", "memory", "(ie", "huge", "pages)", "to", "be", "marked", "as", "shared\n", "access,", "not", "private,", "so", "an", "external", "process", "can", "read\n", "and", "write", "the", "pages.\n\n", "You", "can't", "change", "the", "shared", "vs", "private", "flag", "for", "an\n", "already", "running", "guest,", "and", "since", "we", "can't", "predict", "what\n", "types", "of", "NIC", "may", "be", "hotplugged,", "we", "have", "no", "choice", "but\n", "to", "unconditionally", "turn", "on", "the", "shared", "flag.", "This", "has\n", "no", "real", "negative", "functional", "effect", "on", "the", "guest,", "so\n", "is", "a", "reasonable", "approach", "to", "take\n", "Remove", "smallest", "page", "size", "as", "that's", "not", "classed", "as", "a", "largepage\n", "See", "if", "we", "have", "page", "size", "set\n", "We", "should", "not", "get", "here,", "since", "we", "should", "have", "avoided\n", "reporting", "NUMA", "topology", "from", "_get_host_numa_topology\n", "in", "the", "first", "place.", "Just", "in", "case", "of", "a", "scheduler\n", "mess", "up", "though,", "raise", "an", "exception\n", "We", "have", "instance", "NUMA", "so", "translate", "it", "to", "the", "config", "class\n", "No", "NUMA", "topology", "defined", "for", "instance", "-", "let", "the", "host", "kernel", "deal\n", "with", "the", "NUMA", "effects.\n", "TODO(ndipanov):", "Attempt", "to", "spread", "the", "instance\n", "across", "NUMA", "nodes", "and", "expose", "the", "topology", "to", "the\n", "instance", "as", "an", "optimisation\n", "Now", "get", "the", "CpuTune", "configuration", "from", "the", "numa_topology\n", "Prepare", "realtime", "config", "for", "libvirt\n", "If", "there", "is", "pinning", "information", "in", "the", "cell\n", "we", "pin", "to", "individual", "CPUs,", "otherwise", "we", "float\n", "over", "the", "whole", "host", "NUMA", "node\n", "-", "If", "realtime", "IS", "NOT", "enabled,", "the\n", "emulator", "threads", "are", "allowed", "to", "float\n", "across", "all", "the", "pCPUs", "associated", "with\n", "the", "guest", "vCPUs", "(\"not", "wants_realtime\"\n", "is", "true,", "so", "we", "add", "all", "pcpus)\n", "-", "If", "realtime", "IS", "enabled,", "then", "at", "least\n", "1", "vCPU", "is", "required", "to", "be", "set", "aside", "for\n", "non-realtime", "usage.", "The", "emulator\n", "threads", "are", "allowed", "to", "float", "acros", "the\n", "pCPUs", "that", "are", "associated", "with", "the\n", "non-realtime", "VCPUs", "(the", "\"cpu", "not", "in\n", "vcpu_rt\"", "check", "deals", "with", "this\n", "filtering)\n", "TODO(berrange)", "When", "the", "guest", "has", ">1", "NUMA", "node,", "it", "will\n", "span", "multiple", "host", "NUMA", "nodes.", "By", "pinning", "emulator", "threads\n", "to", "the", "union", "of", "all", "nodes,", "we", "guarantee", "there", "will", "be\n", "cross-node", "memory", "access", "by", "the", "emulator", "threads", "when\n", "responding", "to", "guest", "I/O", "operations.", "The", "only", "way", "to", "avoid\n", "this", "would", "be", "to", "pin", "emulator", "threads", "to", "a", "single", "node", "and\n", "tell", "the", "guest", "OS", "to", "only", "do", "I/O", "from", "one", "of", "its", "virtual\n", "NUMA", "nodes.", "This", "is", "not", "even", "remotely", "practical.\n\n", "The", "long", "term", "solution", "is", "to", "make", "use", "of", "a", "new", "QEMU", "feature\n", "called", "\"I/O", "Threads\"", "which", "will", "let", "us", "configure", "an", "explicit\n", "I/O", "thread", "for", "each", "guest", "vCPU", "or", "guest", "NUMA", "node.", "It", "is\n", "still", "TBD", "how", "to", "make", "use", "of", "this", "feature", "though,", "especially\n", "how", "to", "associate", "IO", "threads", "with", "guest", "devices", "to", "eliminiate\n", "cross", "NUMA", "node", "traffic.", "This", "is", "an", "area", "of", "investigation\n", "for", "QEMU", "community", "devs.\n", "Sort", "the", "vcpupin", "list", "per", "vCPU", "id", "for", "human-friendlier", "XML\n", "normalize", "cell.id\n", "we", "only", "support", "os_command_line", "with", "images", "with", "an", "explicit\n", "kernel", "set", "and", "don't", "want", "to", "break", "nova", "if", "there's", "an\n", "os_command_line", "property", "without", "a", "specified", "kernel_id", "param\n", "NOTE(mikal):", "Microsoft", "Windows", "expects", "the", "clock", "to", "be", "in\n", "\"localtime\".", "If", "the", "clock", "is", "set", "to", "UTC,", "then", "you", "can", "use", "a\n", "registry", "key", "to", "let", "windows", "know,", "but", "Microsoft", "says", "this", "is\n", "buggy", "in", "http://support.microsoft.com/kb/2687252\n", "TODO(berrange)", "One", "day", "this", "should", "be", "per-guest\n", "OS", "type", "configurable\n", "NOTE(rfolco):", "HPET", "is", "a", "hardware", "timer", "for", "x86", "arch.\n", "qemu", "-no-hpet", "is", "not", "supported", "on", "non-x86", "targets.\n", "With", "new", "enough", "QEMU", "we", "can", "provide", "Windows", "guests\n", "with", "the", "paravirtualized", "hyperv", "timer", "source.", "This\n", "is", "the", "windows", "equiv", "of", "kvm-clock,", "allowing", "Windows\n", "guests", "to", "accurately", "keep", "time.\n", "PAE", "only", "makes", "sense", "in", "X86\n", "Increase", "spinlock", "retries", "-", "value", "recommended", "by\n", "KVM", "maintainers", "who", "certify", "Windows", "guests\n", "with", "Microsoft\n", "NOTE(ldbragst):", "The", "following", "logic", "sets", "the", "video.type\n", "depending", "on", "supported", "defaults", "given", "the", "architecture,\n", "virtualization", "type,", "and", "features.", "The", "video.type", "attribute", "can\n", "be", "overridden", "by", "the", "user", "with", "image_meta.properties,", "which\n", "is", "carried", "out", "in", "the", "next", "if", "statement", "below", "this", "one.\n", "NOTE(ldbragst):", "PowerKVM", "doesn't", "support", "'cirrus'", "be", "default\n", "so", "use", "'vga'", "instead", "when", "running", "on", "Power", "hardware.\n", "Set", "video", "memory,", "only", "if", "the", "flavor's", "limit", "is", "set\n", "Enable", "qga", "only", "if", "the", "'hw_qemu_guest_agent'", "is", "equal", "to", "yes\n", "We", "should", "not", "get", "here,", "since", "we", "should", "have", "avoided\n", "reporting", "NUMA", "topology", "from", "_get_host_numa_topology\n", "in", "the", "first", "place.", "Just", "in", "case", "of", "a", "scheduler\n", "mess", "up", "though,", "raise", "an", "exception\n", "As", "above,", "we", "should", "not", "get", "here", "but", "just", "in", "case...\n", "Currently", "libvirt", "does", "not", "support", "the", "smallest\n", "pagesize", "set", "as", "a", "backend", "memory.\n", "https://bugzilla.redhat.com/show_bug.cgi?id=1173507\n", "Quit", "early...\n", "This", "means", "that", "the", "host", "can", "support", "uefi", "booting", "for", "guests\n", "NOTE(markus_z):", "Beware!", "Below", "are", "so", "many", "conditionals", "that", "it", "is\n", "easy", "to", "lose", "track.", "Use", "this", "chart", "to", "figure", "out", "your", "case:\n\n", "case", "|", "is", "serial", "|", "has", "|", "is", "qemu", "|", "resulting\n", "|", "enabled?", "|", "virtlogd?", "|", "or", "kvm?", "|", "devices\n", "--------------------------------------------------\n", "1", "|", "no", "|", "no", "|", "no", "|", "pty*\n", "2", "|", "no", "|", "no", "|", "yes", "|", "file", "+", "pty\n", "3", "|", "no", "|", "yes", "|", "no", "|", "see", "case", "1\n", "4", "|", "no", "|", "yes", "|", "yes", "|", "pty", "with", "logd\n", "5", "|", "yes", "|", "no", "|", "no", "|", "see", "case", "1\n", "6", "|", "yes", "|", "no", "|", "yes", "|", "tcp", "+", "pty\n", "7", "|", "yes", "|", "yes", "|", "no", "|", "see", "case", "1\n", "8", "|", "yes", "|", "yes", "|", "yes", "|", "tcp", "with", "logd\n", "*", "exception:", "virt_type", "\"parallels\"", "doesn't", "create", "a", "device\n", "NOTE(markus_z):", "You", "may", "wonder", "why", "this", "is", "necessary", "and\n", "so", "do", "I.", "I'm", "certain", "that", "this", "is", "*not*", "needed", "in", "any\n", "real", "use", "case.", "It", "is,", "however,", "useful", "if", "you", "want", "to\n", "pypass", "the", "Nova", "API", "and", "use", "\"virsh", "console", "<guest>\"", "on\n", "an", "hypervisor,", "as", "this", "CLI", "command", "doesn't", "work", "with", "TCP\n", "devices", "(like", "the", "serial", "console", "is).\n", "https://bugzilla.redhat.com/show_bug.cgi?id=781467\n", "Pypassing", "the", "Nova", "API", "however", "is", "a", "thing", "we", "don't", "want.\n", "Future", "changes", "should", "remove", "this", "and", "fix", "the", "unit", "tests\n", "which", "ask", "for", "the", "existence.\n", "Serial", "port", "are", "already", "configured", "for", "instance", "that\n", "means", "we", "are", "in", "a", "context", "of", "migration.\n", "NOTE:", "only", "the", "first", "serial", "console", "gets", "the", "boot", "messages,\n", "that's", "why", "we", "attach", "the", "logd", "subdevice", "only", "to", "that.\n", "We", "are", "using", "default", "unit", "for", "memory:", "KiB\n", "Notes(yjiang5):", "we", "always", "sync", "the", "instance's", "vcpu", "model", "with\n", "the", "corresponding", "config", "file.\n", "NOTE(yamahata):\n", "for", "nova.api.ec2.cloud.CloudController.get_metadata()\n", "NB", "some", "versions", "of", "libvirt", "support", "both", "SPICE", "and", "VNC\n", "at", "the", "same", "time.", "We're", "not", "trying", "to", "second", "guess", "which\n", "those", "versions", "are.", "We'll", "just", "let", "libvirt", "report", "the\n", "errors", "appropriately", "if", "the", "user", "enables", "both.\n", "Qemu", "guest", "agent", "only", "support", "'qemu'", "and", "'kvm'", "hypervisor\n", "Get", "all", "generic", "PCI", "devices", "(non-SR-IOV).\n", "PCI", "devices", "is", "only", "supported", "for", "hypervisor", "'xen',", "'qemu'", "and\n", "'kvm'.\n", "image", "meta", "takes", "precedence", "over", "flavor", "extra", "specs;", "disable", "the\n", "watchdog", "action", "by", "default\n", "NB(sross):", "currently", "only", "actually", "supported", "by", "KVM/QEmu\n", "Memory", "balloon", "device", "only", "support", "'qemu/kvm'", "and", "'xen'", "hypervisor\n", "TODO(sahid):", "We", "set", "pointer_model", "to", "keep", "compatibility\n", "until", "the", "next", "release", "O*.", "It", "means", "operators", "can", "continue\n", "to", "use", "the", "deprecated", "option", "\"use_usb_tablet\"", "or", "set", "a\n", "specific", "device", "to", "use\n", "We", "want", "a", "tablet", "if", "VNC", "is", "enabled,", "or", "SPICE", "is", "enabled", "and\n", "the", "SPICE", "agent", "is", "disabled.", "If", "the", "SPICE", "agent", "is", "enabled\n", "it", "provides", "a", "paravirt", "mouse", "which", "drastically", "reduces\n", "overhead", "(by", "eliminating", "USB", "polling).\n", "For", "backward", "compatibility", "We", "don't", "want", "to", "break\n", "process", "of", "booting", "an", "instance", "if", "host", "is", "configured\n", "to", "use", "USB", "tablet", "without", "VNC", "or", "SPICE", "and", "SPICE\n", "agent", "disable.\n", "For", "backward", "compatibility", "We", "don't", "want", "to", "break\n", "process", "of", "booting", "an", "instance", "if", "virtual", "machine", "mode\n", "is", "not", "configured", "as", "HVM.\n", "NOTE(danms):", "Stringifying", "a", "NetworkInfo", "will", "take", "a", "lock.", "Do\n", "this", "ahead", "of", "time", "so", "that", "we", "don't", "acquire", "it", "while", "also\n", "holding", "the", "logging", "lock.\n", "NOTE(mriedem):", "block_device_info", "can", "contain", "auth_password", "so", "we\n", "need", "to", "sanitize", "the", "password", "in", "the", "message.\n", "Kind", "of", "ugly", "but", "we", "need", "to", "pass", "host", "to", "get_info", "as", "for", "a\n", "workaround,", "see", "libvirt/compat.py\n", "NOTE(apmelton)", "-", "Even", "though", "the", "instance", "is", "being", "booted", "from", "a\n", "cinder", "volume,", "it", "is", "still", "presented", "as", "a", "local", "block", "device.\n", "LocalBlockImage", "is", "used", "here", "to", "indicate", "that", "the", "instance's\n", "disk", "is", "backed", "by", "a", "local", "block", "device.\n", "Save", "rootfs", "device", "to", "disconnect", "it", "when", "deleting", "the", "instance\n", "The", "domain", "may", "not", "be", "present", "if", "the", "instance", "failed", "to", "start\n", "NOTE(uni):", "Now", "the", "container", "is", "running", "with", "its", "own", "private\n", "mount", "namespace", "and", "so", "there", "is", "no", "need", "to", "keep", "the", "container\n", "rootfs", "mounted", "in", "the", "host", "namespace\n", "TODO(sahid):", "Consider", "renaming", "this", "to", "_create_guest.\n", "NOTE(danms):", "We", "need", "to", "collect", "any", "VIFs", "that", "are", "currently\n", "down", "that", "we", "expect", "a", "down->up", "event", "for.", "Anything", "that", "is\n", "already", "up", "will", "not", "undergo", "that", "transition,", "and", "for\n", "anything", "that", "might", "be", "stale", "(cache-wise)", "assume", "it's\n", "already", "up", "so", "we", "don't", "block", "on", "it.\n", "Neutron", "reported", "failure", "and", "we", "didn't", "swallow", "it,", "so\n", "bail", "here\n", "We", "never", "heard", "from", "Neutron\n", "Any", "other", "error,", "be", "sure", "to", "clean", "up\n", "Resume", "only", "if", "domain", "has", "been", "paused\n", "We", "get", "the", "list", "of", "online", "CPUs", "on", "the", "host", "and", "see", "if", "the", "requested\n", "set", "falls", "under", "these.", "If", "not,", "we", "retain", "the", "old", "behavior.\n", "NOTE(gtt116):", "give", "other", "tasks", "a", "chance.\n", "Note(moshele):", "libvirt", "<", "1.3", "reported", "virt_functions", "capability\n", "only", "when", "VFs", "are", "enabled.", "The", "check", "below", "is", "a", "workaround\n", "to", "get", "the", "correct", "report", "regardless", "of", "whether", "or", "not", "any\n", "VFs", "are", "enabled", "for", "the", "device.\n", "requirement", "by", "DataBase", "Model\n", "Bail", "early", "if", "we", "know", "we", "can't", "support", "`listDevices`", "to", "avoid\n", "repeated", "warnings", "within", "a", "periodic", "task\n", "This", "means", "that", "the", "host", "can", "support", "LibvirtConfigGuestNUMATune\n", "and", "the", "nodeset", "field", "in", "LibvirtConfigGuestMemoryBackingPage\n", "This", "means", "that", "the", "host", "can", "support", "multiple", "values", "for", "the", "size\n", "field", "in", "LibvirtConfigGuestMemoryBackingPage\n", "Filter", "out", "singles", "and", "empty", "sibling", "sets", "that", "may", "be", "left\n", "TODO(sahid):", "We", "are", "converting", "all", "calls", "from", "a\n", "virDomain", "object", "to", "use", "nova.virt.libvirt.Guest.\n", "We", "should", "be", "able", "to", "remove", "domain", "at", "the", "end.\n", "TODO(mdragon):", "console", "proxy", "should", "be", "implemented", "for", "libvirt,\n", "in", "case", "someone", "wants", "to", "use", "it", "with", "kvm", "or\n", "such.", "For", "now", "return", "fake", "data.\n", "NOTE(dprince):", "calling", "capabilities", "before", "getVersion", "works", "around\n", "an", "initialization", "issue", "with", "some", "versions", "of", "Libvirt", "(1.0.5.5).\n", "See:", "https://bugzilla.redhat.com/show_bug.cgi?id=1000116\n", "See:", "https://bugs.launchpad.net/nova/+bug/1215593\n", "TODO(berrange):", "why", "do", "we", "bother", "converting", "the\n", "libvirt", "capabilities", "XML", "into", "a", "special", "JSON", "format", "?\n", "The", "data", "format", "is", "different", "across", "all", "the", "drivers\n", "so", "we", "could", "just", "return", "the", "raw", "capabilities", "XML\n", "which", "'compare_cpu'", "could", "use", "directly\n\n", "That", "said,", "arch_filter.py", "now", "seems", "to", "rely", "on\n", "the", "libvirt", "drivers", "format", "which", "suggests", "this\n", "data", "format", "needs", "to", "be", "standardized", "across", "drivers\n", "Compare", "CPU\n", "Create", "file", "on", "storage,", "to", "be", "checked", "on", "source", "host\n", "Notes(eliqiao):", "block_migration", "and", "disk_over_commit", "are", "not\n", "nullable,", "so", "just", "don't", "set", "them", "if", "they", "are", "None\n", "Checking", "shared", "storage", "connectivity\n", "if", "block", "migration,", "instances_path", "should", "not", "be", "on", "shared", "storage.\n", "TODO(eliqiao):", "Once", "block_migration", "flag", "is", "removed", "from", "the", "API\n", "we", "can", "safely", "remove", "the", "if", "condition\n", "NOTE(pkoniszewski):", "libvirt", "from", "version", "1.2.17", "upwards\n", "supports", "selective", "block", "device", "migration.", "It", "means", "that", "it\n", "is", "possible", "to", "define", "subset", "of", "block", "devices", "to", "be", "copied\n", "during", "migration.", "If", "they", "are", "not", "specified", "-", "block", "devices\n", "won't", "be", "migrated.", "However,", "it", "does", "not", "work", "when", "live\n", "migration", "is", "tunnelled", "through", "libvirt.\n", "NOTE(stpierre):", "if", "this", "instance", "has", "mapped", "volumes,\n", "we", "can't", "do", "a", "block", "migration,", "since", "that", "will", "result\n", "in", "volumes", "being", "copied", "from", "themselves", "to", "themselves,\n", "which", "is", "a", "recipe", "for", "disaster.\n", "NOTE(eliqiao):", "Selective", "disk", "migrations", "are", "not", "supported\n", "with", "tunnelled", "block", "migrations", "so", "we", "can", "block", "them", "early.\n", "NOTE(mikal):", "include", "the", "instance", "directory", "name", "here", "because", "it\n", "doesn't", "yet", "exist", "on", "the", "destination", "but", "we", "want", "to", "force", "that\n", "same", "name", "to", "be", "used\n", "NOTE(dgenin):", "currently", "true", "only", "for", "RBD", "image", "backend\n", "NOTE(angdraug):", "file", "based", "image", "backends", "(Flat,", "Qcow2)\n", "place", "block", "device", "files", "under", "the", "instance", "path\n", "Libvirt", "supports", "qcow2", "disk", "format,which", "is", "usually", "compressed\n", "on", "compute", "nodes.\n", "Real", "disk", "image", "(compressed)", "may", "enlarged", "to", "\"virtual", "disk", "size\",\n", "that", "is", "specified", "as", "the", "maximum", "disk", "size.\n", "(See", "qemu-img", "-f", "path-to-disk)\n", "Scheduler", "recognizes", "destination", "host", "still", "has", "enough", "disk", "space\n", "if", "real", "disk", "size", "<", "available", "disk", "size\n", "if", "disk_over_commit", "is", "True,\n", "otherwise", "virtual", "disk", "size", "<", "available", "disk", "size.\n", "Check", "that", "available", "disk", ">", "necessary", "disk\n", "NOTE(kchamart):", "Comparing", "host", "to", "guest", "CPU", "model", "for", "emulated\n", "guests", "(<domain", "type='qemu'>)", "should", "not", "matter", "--", "in", "this\n", "mode", "(QEMU", "\"TCG\")", "the", "CPU", "is", "fully", "emulated", "in", "software", "and", "no\n", "hardware", "acceleration,", "like", "KVM,", "is", "involved.", "So,", "skip", "the", "CPU\n", "compatibility", "check", "for", "the", "QEMU", "domain", "type,", "and", "retain", "it", "for\n", "KVM", "guests.\n\"\n", "unknown", "character", "exists", "in", "xml,", "then", "libvirt", "complains\n", "NOTE(tpatzig):", "if", "instances_path", "is", "a", "shared", "volume", "that", "is\n", "under", "heavy", "IO", "(many", "instances", "on", "many", "compute", "nodes),\n", "then", "checking", "the", "existence", "of", "the", "testfile", "fails,\n", "just", "because", "it", "takes", "longer", "until", "the", "client", "refreshes", "and", "new\n", "content", "gets", "visible.\n", "os.utime", "(like", "touch)", "on", "the", "directory", "forces", "the", "client", "to", "refresh.\n", "nwfilters", "may", "be", "defined", "in", "a", "separate", "thread", "in", "the", "case\n", "of", "libvirt", "non-blocking", "mode,", "so", "we", "wait", "for", "completion\n", "'dest'", "will", "be", "substituted", "into", "'migration_uri'", "so", "ensure\n", "it", "does't", "contain", "any", "characters", "that", "could", "be", "used", "to\n", "exploit", "the", "URI", "accepted", "by", "libivrt\n", "In", "this", "context", "we", "want", "to", "ensure", "that", "serial", "console", "is\n", "disabled", "on", "source", "node.", "This", "is", "because", "nova", "couldn't\n", "retrieve", "serial", "listen", "address", "from", "destination", "node,", "so", "we\n", "consider", "that", "destination", "node", "might", "have", "serial", "console\n", "disabled", "as", "well.\n", "NOTE(aplanas)", "migrate_uri", "will", "have", "a", "value", "only", "in", "the\n", "case", "that", "`live_migration_inbound_addr`", "parameter", "is\n", "set,", "and", "we", "propose", "a", "non", "tunneled", "migration.\n", "TODO(sahid):", "It's", "not", "a", "really", "good", "idea", "to", "pass\n", "the", "method", "_get_volume_config", "and", "we", "should", "to", "find\n", "a", "way", "to", "avoid", "this", "in", "future.\n", "NOTE(pkoniszewski):", "Because", "of", "precheck", "which", "blocks\n", "tunnelled", "block", "live", "migration", "with", "mapped", "volumes", "we\n", "can", "safely", "remove", "migrate_disks", "when", "tunnelling", "is", "on.\n", "Otherwise", "we", "will", "block", "all", "tunnelled", "block", "migrations,\n", "even", "when", "an", "instance", "does", "not", "have", "volumes", "mapped.\n", "This", "is", "because", "selective", "disk", "migration", "is", "not\n", "supported", "in", "tunnelled", "block", "live", "migration.", "Also", "we\n", "cannot", "fallback", "to", "migrateToURI2", "in", "this", "case", "because", "of\n", "bug", "#1398999\n", "TODO(sahid):", "This", "should", "be", "in\n", "post_live_migration_at_source", "but", "no", "way", "to", "retrieve\n", "ports", "acquired", "on", "the", "host", "for", "the", "guest", "at", "this\n", "step.", "Since", "the", "domain", "is", "going", "to", "be", "removed", "from\n", "libvird", "on", "source", "host", "after", "migration,", "we", "backup", "the\n", "serial", "ports", "to", "release", "them", "if", "all", "went", "well.\n", "If", "'migrateToURI'", "fails", "we", "don't", "know", "what", "state", "the\n", "VM", "instances", "on", "each", "host", "are", "in.", "Possibilities", "include\n\n", "1.", "src==running,", "dst==none\n\n", "Migration", "failed", "&", "rolled", "back,", "or", "never", "started\n\n", "2.", "src==running,", "dst==paused\n\n", "Migration", "started", "but", "is", "still", "ongoing\n\n", "3.", "src==paused,", "dst==paused\n\n", "Migration", "data", "transfer", "completed,", "but", "switchover\n", "is", "still", "ongoing,", "or", "failed\n\n", "4.", "src==paused,", "dst==running\n\n", "Migration", "data", "transfer", "completed,", "switchover\n", "happened", "but", "cleanup", "on", "source", "failed\n\n", "5.", "src==none,", "dst==running\n\n", "Migration", "fully", "succeeded.\n\n", "Libvirt", "will", "aim", "to", "complete", "any", "migration", "operation\n", "or", "roll", "it", "back.", "So", "even", "if", "the", "migrateToURI", "call", "has\n", "returned", "an", "error,", "if", "the", "migration", "was", "not", "finished\n", "libvirt", "should", "clean", "up.\n\n", "So", "we", "take", "the", "error", "raise", "here", "with", "a", "pinch", "of", "salt\n", "and", "rely", "on", "the", "domain", "job", "info", "status", "to", "figure", "out\n", "what", "really", "happened", "to", "the", "VM,", "which", "is", "a", "much", "more\n", "reliable", "indicator.\n\n", "In", "particular", "we", "need", "to", "try", "very", "hard", "to", "ensure", "that\n", "Nova", "does", "not", "\"forget\"", "about", "the", "guest.", "ie", "leaving", "it\n", "running", "on", "a", "different", "host", "to", "the", "one", "recorded", "in\n", "the", "database,", "as", "that", "would", "be", "a", "serious", "resource", "leak\n", "TODO(hieulq):", "Need", "to", "move", "min/max", "value", "into", "the", "config", "option,\n", "currently", "oslo_config", "will", "raise", "ValueError", "instead", "of", "setting\n", "option", "value", "to", "its", "min/max.\n", "TODO(pkoniszewski):", "Remove", "version", "check", "when", "we", "bump", "min", "libvirt\n", "version", "to", ">=", "1.2.17.\n", "Ignore", "error", "since", "we", "don't", "want", "to", "break\n", "the", "migration", "monitoring", "thread", "operation\n", "Either", "still", "running,", "or", "failed", "or", "completed,\n", "lets", "untangle", "the", "mess\n", "Migration", "is", "not", "yet", "started\n", "Migration", "is", "still", "running\n\n", "This", "is", "where", "we", "wire", "up", "calls", "to", "change", "live\n", "migration", "status.", "eg", "change", "max", "downtime,", "cancel\n", "the", "operation,", "change", "max", "bandwidth\n", "We", "loop", "every", "500ms,", "so", "don't", "log", "on", "every\n", "iteration", "to", "avoid", "spamming", "logs", "for", "long\n", "running", "migrations.", "Just", "once", "every", "5", "secs\n", "is", "sufficient", "for", "developers", "to", "debug", "problems.\n", "We", "log", "once", "every", "30", "seconds", "at", "info", "to", "help\n", "admins", "see", "slow", "running", "migration", "operations\n", "when", "debug", "logs", "are", "off.\n", "Ignoring", "memory_processed,", "as", "due", "to", "repeated\n", "dirtying", "of", "data,", "this", "can", "be", "way", "larger", "than\n", "memory_total.", "Best", "to", "just", "look", "at", "what's\n", "remaining", "to", "copy", "and", "ignore", "what's", "done", "already\n\n", "TODO(berrange)", "perhaps", "we", "could", "include", "disk\n", "transfer", "stats", "in", "the", "progress", "too,", "but", "it\n", "might", "make", "memory", "info", "more", "obscure", "as", "large\n", "disk", "sizes", "might", "dwarf", "memory", "size\n", "Migration", "is", "all", "done\n", "Migration", "did", "not", "succeed\n", "Migration", "was", "stopped", "by", "admin\n", "Let", "eventlet", "schedule", "the", "new", "thread", "right", "away\n", "NOTE(dsanders):", "only", "fetch", "image", "if", "it's", "not", "available", "at\n", "kernel_path.", "This", "also", "avoids", "ImageNotFound", "exception", "if\n", "the", "image", "has", "been", "deleted", "from", "glance\n", "NOTE(dsanders):", "only", "fetch", "image", "if", "it's", "not", "available", "at\n", "ramdisk_path.", "This", "also", "avoids", "ImageNotFound", "exception", "if\n", "the", "image", "has", "been", "deleted", "from", "glance\n", "NOTE(gcb):", "Failed", "block", "live", "migration", "may", "leave", "instance\n", "directory", "at", "destination", "node,", "ensure", "it", "is", "always", "deleted.\n", "Releases", "serial", "ports", "reserved.\n", "Recreate", "the", "disk.info", "file", "and", "in", "doing", "so", "stop", "the\n", "imagebackend", "from", "recreating", "it", "incorrectly", "by", "inspecting", "the\n", "contents", "of", "each", "file", "when", "using", "the", "Raw", "backend.\n", "Ensure", "images", "and", "backing", "files", "are", "present.\n", "NOTE(pkoniszewski):", "Due", "to", "a", "bug", "in", "libvirt", "iso", "config\n", "drive", "needs", "to", "be", "copied", "to", "destination", "prior", "to\n", "migration", "when", "instance", "path", "is", "not", "shared", "and", "block\n", "storage", "is", "not", "shared.", "Files", "that", "are", "already", "present\n", "on", "destination", "are", "excluded", "from", "a", "list", "of", "files", "that\n", "need", "to", "be", "copied", "to", "destination.", "If", "we", "don't", "do", "that\n", "live", "migration", "will", "fail", "on", "copying", "iso", "config", "drive", "to\n", "destination", "and", "writing", "to", "read-only", "device.\n", "Please", "see", "bug/1246201", "for", "more", "details.\n", "NOTE(angdraug):", "when", "block", "storage", "is", "shared", "between", "source\n", "and", "destination", "and", "instance", "path", "isn't", "(e.g.", "volume", "backed\n", "or", "rbd", "backed", "instance),", "instance", "path", "on", "destination", "has", "to\n", "be", "prepared\n", "Required", "by", "Quobyte", "CI\n", "if", "image", "has", "kernel", "and", "ramdisk,", "just", "download\n", "following", "normal", "way.\n", "Establishing", "connection", "to", "volume", "server.\n", "We", "call", "plug_vifs", "before", "the", "compute", "manager", "calls\n", "ensure_filtering_rules_for_instance,", "to", "ensure", "bridge", "is", "set", "up\n", "Retry", "operation", "is", "necessary", "because", "continuously", "request", "comes,\n", "concurrent", "request", "occurs", "to", "iptables,", "then", "it", "complains.\n", "Store", "vncserver_listen", "and", "latest", "disk", "device", "info\n", "Store", "live_migration_inbound_addr\n", "Get", "image", "type", "and", "create", "empty", "disk", "image,", "and\n", "create", "backing", "file", "in", "case", "of", "qcow2.\n", "Creating", "backing", "file", "follows", "same", "way", "as", "spawning", "instances.\n", "The", "argument", "'size'", "is", "used", "by", "image.cache", "to\n", "validate", "disk", "size", "retrieved", "from", "cache", "against\n", "the", "instance", "disk", "size", "(should", "always", "return", "OK)\n", "and", "ephemeral_size", "is", "used", "by", "_create_ephemeral\n", "to", "build", "the", "image", "if", "the", "disk", "is", "not", "already\n", "cached.\n", "if", "disk", "has", "kernel", "and", "ramdisk,", "just", "download\n", "following", "normal", "way.\n", "Disconnect", "from", "volume", "server\n", "Retrieve", "connection", "info", "from", "Cinder's", "initialize_connection", "API.\n", "The", "info", "returned", "will", "be", "accurate", "for", "the", "source", "server.\n", "TODO(leeantho)", "The", "following", "multipath_id", "logic", "is", "temporary\n", "and", "will", "be", "removed", "in", "the", "future", "once", "os-brick", "is", "updated\n", "to", "handle", "multipath", "for", "drivers", "in", "a", "more", "efficient", "way.\n", "For", "now", "this", "logic", "is", "needed", "to", "ensure", "the", "connection", "info\n", "data", "is", "correct.\n", "Pull", "out", "multipath_id", "from", "the", "bdm", "information.", "The\n", "multipath_id", "can", "be", "placed", "into", "the", "connection", "info\n", "because", "it", "is", "based", "off", "of", "the", "volume", "and", "will", "be", "the\n", "same", "on", "the", "source", "and", "destination", "hosts.\n", "TODO(sahid):", "In", "Ocata", "we", "have", "added", "the", "migration", "flag\n", "VIR_MIGRATE_PERSIST_DEST", "to", "libvirt,", "which", "means", "that", "the\n", "guest", "XML", "is", "going", "to", "be", "set", "in", "libvirtd", "on", "destination", "node\n", "automatically.", "However", "we", "do", "not", "remove", "that", "part", "until", "P*\n", "because", "during", "an", "upgrade,", "to", "ensure", "migrating", "instances\n", "from", "node", "running", "Newton", "is", "still", "going", "to", "set", "the", "guest", "XML\n", "in", "libvirtd", "on", "destination", "node.\n", "Make", "sure", "we", "define", "the", "migrated", "instance", "in", "libvirt\n", "get", "the", "real", "disk", "size", "or\n", "raise", "a", "localized", "error", "if", "image", "is", "unavailable\n", "Disk", "size", "that", "all", "instance", "uses", ":", "virtual_size", "-", "disk_size\n", "Get", "all", "instance", "uuids\n", "Get", "instance", "object", "list", "by", "uuid", "filter\n", "NOTE(ankit):", "objects.InstanceList.get_by_filters", "method", "is\n", "getting", "called", "twice", "one", "is", "here", "and", "another", "in", "the\n", "_update_available_resource", "method", "of", "resource_tracker.", "Since\n", "_update_available_resource", "method", "is", "synchronized,", "there", "is", "a\n", "possibility", "the", "instances", "list", "retrieved", "here", "to", "calculate\n", "disk_over_committed_size", "would", "differ", "to", "the", "list", "you", "would", "get\n", "in", "_update_available_resource", "method", "for", "calculating", "usages", "based\n", "on", "instance", "utilization.\n", "Convert", "instance", "list", "to", "dictionary", "with", "instance", "uuid", "as", "key.\n", "Get", "bdms", "by", "instance", "uuids\n", "Get", "block", "device", "info", "for", "instance\n", "NOTE(gtt116):", "give", "other", "tasks", "a", "chance.\n", "NOTE", "(rmk):", "There", "are", "two", "methods", "of", "determining", "whether", "we", "are\n", "on", "the", "same", "filesystem:", "the", "source", "and", "dest", "IP", "are", "the\n", "same,", "or", "we", "create", "a", "file", "on", "the", "dest", "system", "via", "SSH\n", "and", "check", "whether", "the", "source", "system", "can", "also", "see", "it.\n", "NOTE", "(drwahl):", "Actually,", "there", "is", "a", "3rd", "way:", "if", "images_type", "is", "rbd,\n", "it", "will", "always", "be", "shared", "storage\n", "get_bdm_ephemeral_disk_size()", "will", "return", "0", "if", "the", "new\n", "instance's", "requested", "block", "device", "mapping", "contain", "no\n", "ephemeral", "devices.", "However,", "we", "still", "want", "to", "check", "if\n", "the", "original", "instance's", "ephemeral_gb", "property", "was", "set", "and\n", "ensure", "that", "the", "new", "requested", "flavor", "ephemeral", "size", "is", "greater\n", "Checks", "if", "the", "migration", "needs", "a", "disk", "resize", "down.\n", "NOTE(dgenin):", "Migration", "is", "not", "implemented", "for", "LVM", "backed", "instances.\n", "copy", "disks", "to", "destination\n", "rename", "instance", "dir", "to", "+_resize", "at", "first", "for", "using\n", "shared", "storage", "for", "instance", "dir", "(eg.", "NFS).\n", "try", "to", "create", "the", "directory", "on", "the", "remote", "compute", "node\n", "if", "this", "fails", "we", "pass", "the", "exception", "up", "the", "stack", "so", "we", "can", "catch\n", "failures", "here", "earlier\n", "if", "we", "are", "migrating", "the", "instance", "with", "shared", "storage", "then\n", "create", "the", "directory.", "If", "it", "is", "a", "remote", "node", "the", "directory\n", "has", "already", "been", "created\n", "assume", "inst_base", "==", "dirname(info['path'])\n", "We", "will", "not", "copy", "over", "the", "swap", "disk", "here,", "and", "rely", "on\n", "finish_migration", "to", "re-create", "it", "for", "us.", "This", "is", "ok", "because\n", "the", "OS", "is", "shut", "down,", "and", "as", "recreating", "a", "swap", "disk", "is", "very\n", "cheap", "it", "is", "more", "efficient", "than", "copying", "either", "locally", "or\n", "over", "the", "network.", "This", "also", "means", "we", "don't", "have", "to", "resize", "it.\n", "Ensure", "disk.info", "is", "written", "to", "the", "new", "path", "to", "avoid", "disks", "being\n", "reinspected", "and", "potentially", "changing", "format.\n", "assume", "_create_image", "does", "nothing", "if", "a", "target", "file", "exists.\n", "NOTE:", "This", "has", "the", "intended", "side-effect", "of", "fetching", "a", "missing\n", "backing", "file.\n", "Required", "by", "Quobyte", "CI\n", "Convert", "raw", "disks", "to", "qcow2", "if", "migrating", "to", "host", "which", "uses\n", "qcow2", "from", "host", "which", "uses", "raw.\n", "NOTE(mdbooth):", "The", "code", "below", "looks", "wrong,", "but", "is", "actually\n", "required", "to", "prevent", "a", "security", "hole", "when", "migrating", "from", "a", "host\n", "with", "use_cow_images=False", "to", "one", "with", "use_cow_images=True.\n", "Imagebackend", "uses", "use_cow_images", "to", "select", "between", "the\n", "atrociously-named-Raw", "and", "Qcow2", "backends.", "The", "Qcow2", "backend\n", "writes", "to", "disk.info,", "but", "does", "not", "read", "it", "as", "it", "assumes", "qcow2.\n", "Therefore", "if", "we", "don't", "convert", "raw", "to", "qcow2", "here,", "a", "raw", "disk", "will\n", "be", "incorrectly", "assumed", "to", "be", "qcow2,", "which", "is", "a", "severe", "security\n", "flaw.", "The", "reverse", "is", "not", "true,", "because", "the", "atrociously-named-Raw\n", "backend", "supports", "both", "qcow2", "and", "raw", "disks,", "and", "will", "choose\n", "appropriately", "between", "them", "as", "long", "as", "disk.info", "exists", "and", "is\n", "correctly", "populated,", "which", "it", "is", "because", "Qcow2", "writes", "to\n", "disk.info.\n\n", "In", "general,", "we", "do", "not", "yet", "support", "format", "conversion", "during\n", "migration.", "For", "example:\n", "*", "Converting", "from", "use_cow_images=True", "to", "use_cow_images=False\n", "isn't", "handled.", "This", "isn't", "a", "security", "bug,", "but", "is", "almost\n", "certainly", "buggy", "in", "other", "cases,", "as", "the", "'Raw'", "backend", "doesn't\n", "expect", "a", "backing", "file.\n", "*", "Converting", "to/from", "lvm", "and", "rbd", "backends", "is", "not", "supported.\n\n", "This", "behaviour", "is", "inconsistent,", "and", "therefore", "undesirable", "for\n", "users.", "It", "is", "tightly-coupled", "to", "implementation", "quirks", "of", "2\n", "out", "of", "5", "backends", "in", "imagebackend", "and", "defends", "against", "a", "severe\n", "security", "flaw", "which", "is", "not", "at", "all", "obvious", "without", "deep", "analysis,\n", "and", "is", "therefore", "undesirable", "to", "developers.", "We", "should", "aim", "to\n", "remove", "it.", "This", "will", "not", "be", "possible,", "though,", "until", "we", "can\n", "represent", "the", "storage", "layout", "of", "a", "specific", "instance\n", "independent", "of", "the", "default", "configuration", "of", "the", "local", "compute\n", "host.\n", "Config", "disks", "are", "hard-coded", "to", "be", "raw", "even", "when\n", "use_cow_images=True", "(see", "_get_disk_config_image_type),so", "don't\n", "need", "to", "be", "converted.\n", "NOTE(mriedem):", "vifs_already_plugged=True", "here,", "regardless", "of", "whether\n", "or", "not", "we've", "migrated", "to", "another", "host,", "because", "we", "unplug", "VIFs", "locally\n", "and", "the", "status", "change", "in", "the", "port", "might", "go", "undetected", "by", "the", "neutron\n", "L2", "agent", "(or", "neutron", "server)", "so", "neutron", "may", "not", "know", "that", "the", "VIF", "was\n", "unplugged", "in", "the", "first", "place", "and", "never", "send", "an", "event.\n", "Sync", "guest", "time", "after", "migration.\n", "NOTE(danms):", "if", "we're", "recovering", "from", "a", "failed", "migration,\n", "make", "sure", "we", "don't", "have", "a", "left-over", "same-host", "base", "directory\n", "that", "would", "conflict.", "Also,", "don't", "fail", "on", "the", "rename", "if", "the\n", "failure", "happened", "early.\n", "Once", "we", "rollback,", "the", "snapshot", "is", "no", "longer", "needed,", "so", "remove", "it\n", "TODO(nic):", "Remove", "the", "try/except/finally", "in", "a", "future", "release\n", "To", "avoid", "any", "upgrade", "issues", "surrounding", "instances", "being", "in", "pending\n", "resize", "state", "when", "the", "software", "is", "updated,", "this", "portion", "of", "the\n", "method", "logs", "exceptions", "rather", "than", "failing", "on", "them.", "Once", "it", "can", "be\n", "reasonably", "assumed", "that", "no", "such", "instances", "exist", "in", "the", "wild\n", "anymore,", "the", "try/except/finally", "should", "be", "removed,\n", "and", "ignore_errors", "should", "be", "set", "back", "to", "False", "(the", "default)", "so\n", "that", "problems", "throw", "errors,", "like", "they", "should.\n", "TODO(sahid):", "We", "are", "converting", "all", "calls", "from", "a\n", "virDomain", "object", "to", "use", "nova.virt.libvirt.Guest.\n", "We", "should", "be", "able", "to", "remove", "domain", "at", "the", "end.\n", "get", "cpu", "time,", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "get", "io", "status\n", "blockStats", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "interfaceStats", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "memoryStats", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "TODO(sahid):", "We", "are", "converting", "all", "calls", "from", "a\n", "virDomain", "object", "to", "use", "nova.virt.libvirt.Guest.\n", "We", "should", "be", "able", "to", "remove", "domain", "at", "the", "end.\n", "TODO(sahid):", "Needs", "to", "use", "get_info", "but", "more", "changes", "have", "to\n", "be", "done", "since", "a", "mapping", "STATE_MAP", "LIBVIRT_POWER_STATE", "is\n", "needed.\n", "get", "cpu", "time,", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "get", "io", "status\n", "blockStats", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "interfaceStats", "might", "launch", "an", "exception", "if", "the", "method\n", "is", "not", "supported", "by", "the", "underlying", "hypervisor", "being\n", "used", "by", "libvirt\n", "Update", "mac", "addresses", "of", "interface", "if", "stats", "have", "been", "reported\n", "TODO(mriedem):", "We", "should", "be", "able", "to", "avoid", "the", "DB", "query", "here", "by", "using\n", "block_device_info['block_device_mapping']", "which", "is", "passed", "into", "most\n", "methods", "that", "call", "this", "function.\n", "Build", "network", "interfaces", "related", "metadata\n", "Build", "disks", "related", "metadata\n", "ensure", "directories", "exist", "and", "are", "writable\n", "NOTE(flwang):", "For", "shared", "block", "storage", "scenario,", "the", "file", "system", "is\n", "not", "really", "shared", "by", "the", "two", "hosts,", "but", "the", "volume", "of", "evacuated\n", "instance", "is", "reachable.\n", "A", "resize", "may", "be", "in", "progress\n", "Other", "threads", "may", "attempt", "to", "rename", "the", "path,", "so", "renaming", "the", "path\n", "to", "target", "+", "'_del'", "(because", "it", "is", "atomic)", "and", "iterating", "through\n", "twice", "in", "the", "unlikely", "event", "that", "a", "concurrent", "rename", "occurs", "between\n", "the", "two", "rename", "attempts", "in", "this", "method.", "In", "general", "this", "method\n", "should", "be", "fairly", "thread-safe", "without", "these", "additional", "checks,", "since\n", "other", "operations", "involving", "renames", "are", "not", "permitted", "when", "the", "task\n", "state", "is", "not", "None", "and", "the", "task", "state", "should", "be", "set", "to", "something\n", "other", "than", "None", "by", "the", "time", "this", "method", "is", "invoked.\n", "Either", "the", "target", "or", "target_resize", "path", "may", "still", "exist", "if", "all\n", "rename", "attempts", "failed.\n", "A", "previous", "delete", "attempt", "may", "have", "been", "interrupted,", "so", "target_del\n", "may", "exist", "even", "if", "all", "rename", "attempts", "during", "the", "present", "method\n", "invocation", "failed", "due", "to", "the", "absence", "of", "both", "target", "and\n", "target_resize.\n", "It", "is", "possible", "that", "the", "delete", "failed,", "if", "so", "don't", "mark", "the", "instance\n", "as", "cleaned.\n", "NOTE(ndipanov):", "Null", "out", "the", "device", "names", "so", "that", "blockinfo", "code\n", "will", "assign", "them\n", "NOTE(ndipanov):", "get_info_from_bdm", "will", "generate", "the", "new", "device", "name\n", "only", "when", "it's", "actually", "not", "set", "on", "the", "bd", "object"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/attach_interfaces.py": ["False", "create", "parameter_types", "NOTE:", "This", "parameter", "is", "passed", "to", "the", "search_opts", "of\n", "Neutron", "list_network", "API:", "search_opts", "=", "{'id':", "net_id}\n", "NOTE:", "This", "parameter", "is", "passed", "to", "Neutron", "show_port", "API\n", "as", "a", "port", "id."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/agents.py": ["False", "create", "update"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_agent.py": ["AgentTestCaseBase", "Exception", "FakeRebootException", "False", "None", "SysMetaKeyTestBase", "True", "_get_fake_instance", "addl_args", "agent", "agent_inst", "b64_contents", "b64_path", "base64", "details", "error", "exception", "expected_args", "fake_call_plugin", "fake_error", "fake_time", "files", "instance", "instance_mock", "k", "key", "kwargs", "mock", "mock_add_fault", "mock_add_instance_fault", "mock_call_agent", "mock_dh", "mock_exchange", "mock_inject_file", "mock_save", "mock_session", "mock_simple_dh", "mock_sleep", "mock_time", "mock_uuid", "mock_wait", "new", "object", "old", "result", "returncode", "self", "session", "success_codes", "system_metadata", "test", "time", "uuid", "v", "value", "xenapi_fake", "The", "following", "ssh", "key", "\"\n", "make", "sure", "its", "not", "called"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/235_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/availability_zone_filter.py": ["CONF", "LOG", "True", "__name__", "availability_zone", "filters", "host_az", "host_state", "hosts_passes", "logging", "metadata", "nova", "run_filter_once_per_request", "self", "spec_obj", "utils", "Availability", "zones", "do", "not", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/cells/opts.py": ["CONF", "nova"], "/Users/mehranhassani/repos/nova/nova/virt/fake.py": ["CONF", "FakeDriver", "FakeInstance", "False", "KeyError", "LOG", "None", "Resources", "True", "_FAKE_NODES", "_LW", "__name__", "action", "admin_password", "b64_contents", "b64_path", "bad_volumes_callback", "block_device_info", "block_migration", "bw", "capabilities", "collections", "compute_host_bdms", "connection_info", "console_type", "context", "contextlib", "cpu_info", "ctype", "deadline", "dest", "dest_check_data", "destroy_disks", "destroy_vifs", "device_type", "diagnostics", "diags", "disk", "disk_bus", "disk_id", "disk_info", "disk_over_commit", "driver", "dst_compute_info", "enabled", "encryption", "error_callback", "event_names", "exception", "fake_instance", "flavor", "getattr", "hardware", "host", "host_status", "i", "image_id", "image_meta", "injected_files", "instance", "instance_name", "instance_uuid", "instances", "jsonutils", "key", "local_gb", "local_gb_used", "logging", "mem", "memory_mb", "memory_mb_used", "migrate_data", "migration", "mode", "mountpoint", "name", "network_info", "new_connection_info", "new_pass", "nodename", "nodes", "nova", "obj_fields", "object", "old_connection_info", "post_method", "power_on", "power_state", "read_only", "reboot_type", "recover_method", "refresh", "rescue_password", "resize_instance", "resize_to", "retry_interval", "security_group_id", "self", "set_nodes", "src_compute_info", "state", "stats", "super", "task_states", "timeout", "update_task_state", "uuid", "vcpus", "vcpus_used", "versionutils", "vif", "virtapi", "volusage", "Fake", "hypervisor", "driver.\nPlug", "VIFs", "into", "networks.\nUnplug", "VIFs", "from", "networks.\nAttach", "the", "disk", "to", "the", "instance", "at", "mountpoint", "using", "info.\nDetach", "the", "disk", "attached", "to", "the", "instance.\nReplace", "the", "disk", "attached", "to", "the", "instance.\nRemoves", "the", "named", "VM,", "as", "if", "it", "crashed.", "For", "testing.\nReboots,", "shuts", "down", "or", "powers", "up", "the", "host.\nSets", "the", "specified", "host's", "ability", "to", "accept", "new", "instances.", "Since", "we", "don't", "have", "a", "real", "hypervisor,", "pretend", "we", "have", "lots", "of\n", "disk", "and", "ram", "so", "this", "driver", "can", "be", "used", "to", "test", "large", "instances.\n", "NOTE(danms):", "Don't", "actually", "wait", "for", "any", "events,", "just\n", "fall", "through\n", "The", "api", "samples", "expect", "specific", "cpu", "memory", "and", "disk", "sizes.", "In", "order", "to\n", "allow", "the", "FakeVirt", "driver", "to", "be", "used", "outside", "of", "the", "unit", "tests,", "provide\n", "a", "separate", "class", "that", "has", "the", "values", "expected", "by", "the", "api", "samples.", "So\n", "instead", "of", "requiring", "new", "samples", "every", "time", "those\n", "values", "are", "adjusted", "allow", "them", "to", "be", "overwritten", "here."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_quotas.py": ["None", "QUOTAS", "TestQuotasModule", "ValueError", "_TestQuotasObject", "commit_mock", "context", "elevated", "fake_instance", "fake_reservations", "mock", "mock_create", "mock_update", "object", "project_id", "quota", "quotas", "quotas_obj", "reserve_mock", "rollback_mock", "self", "super", "test", "test_objects", "user_id"], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/io_ops.py": ["CONF", "host_state", "minval", "nova", "self", "weight_properties", "weights", "Override", "the", "weight", "multiplier."], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/root.py": ["jsonutils", "max_version", "microversion", "min_version", "req", "version_data", "version_json", "webob", "Handler", "for", "the", "root", "of", "the", "Placement", "API.", "NOTE(cdent):", "As", "sections", "of", "the", "api", "are", "added,", "links", "can", "be\n", "added", "to", "this", "output", "to", "align", "with", "the", "guidelines", "at\n", "http://specs.openstack.org/openstack/api-wg/guidelines/microversion_specification.html#version-discovery"], "/Users/mehranhassani/repos/nova/nova/policies/consoles.py": ["POLICY_ROOT", "base", "consoles_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_network.py": ["CONF", "FakeContext", "FakeModel", "False", "HOST", "None", "True", "_create_instances_with_cached_ips", "_get_fake_cache", "_get_instances_with_cached_ips", "_info_cache", "_info_cache_for", "_ip", "_real_functions", "address", "args", "bottom_reserved", "cidr", "cm", "compute_api", "compute_manager", "conductor_api", "context", "db", "dev_addr", "dict", "enumerate", "exception", "extra_reserved", "f", "f_ips", "fake_async_networkinfo", "fake_cache", "fake_create", "fake_device", "fake_get", "fake_get_all", "fake_get_instance_nw_info", "fake_info_cache", "fake_network", "fake_networkinfo", "fake_pci_device_get_by_addr", "fake_vif", "fakenet", "fixed", "fixed_cidr", "fixed_ip_id", "fixed_ip_ids", "fixed_ips", "fixed_ips_fake", "floating_ip_id", "floating_ip_ids", "floating_ips", "floating_ips_per_fixed_ip", "floats", "func", "get_instance_nw_info", "getattr", "host", "i", "info", "info_cache", "instance", "instance_id", "instance_uuid", "instances", "ip", "ip_dict", "ips", "ips_per_vif", "ipv6", "ipv6_addr", "isinstance", "j", "jsonutils", "kwargs", "list", "match_octets", "match_string", "name", "net", "network", "network_id", "network_manager", "network_model", "network_obj", "network_rpcapi", "network_uuid", "next", "next_fixed_ip", "next_floating_ip", "next_id", "node_id", "nova", "num_floating_ips", "num_networks", "nw_model", "obj_base", "object", "objects", "octet", "orig_create", "orig_func", "orig_get", "orig_get_all", "project_only", "range", "reservation_id", "rxtx_factor", "self", "stubs", "test", "test_fixed_ip", "test_instance_info_cache", "test_pci_device", "top_reserved", "update_cache_fake", "utils", "uuids", "vif_id", "vif_obj", "vifs", "x", "Represent", "a", "model", "from", "the", "db.", "TODO(matelakat)", "method", "signature", "should", "align", "with", "the", "faked", "one's\n", "TODO(matelakat)", "use", "the", "deallocate_fixed_ip_calls", "instead\n", "and", "since", "network_id", "and", "vif_id", "happen", "to", "be", "equivalent\n", "test", "is", "an", "instance", "of", "nova.test.TestCase\n", "ips_per_vif", "is", "the", "number", "of", "ips", "each", "vif", "will", "have\n", "num_floating_ips", "is", "number", "of", "float", "ips", "for", "each", "fixed", "ip\n", "reset", "the", "fixed", "and", "floating", "ip", "generators"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/243_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavor_manage.py": ["False", "FlavorManageTestV21", "FlavorManagerPolicyEnforcementV21", "MAX_LENGTH", "None", "PrivateFlavorManageTestV21", "True", "base_url", "body", "controller", "datetime", "db", "db_flavor", "ephemeral_gb", "exc", "exception", "expected", "expected_flavor_access_body", "fake_create", "fakes", "flavor_access_body", "flavor_access_v21", "flavorid", "flavormanage_v21", "flavors", "is_public", "isinstance", "jsonutils", "key", "memory_mb", "mock", "mock_destroy", "name", "newflavor", "parameter", "property", "req", "res", "root_gb", "rule_name", "rxtx_factor", "self", "six", "status_int", "super", "swap", "test", "updates", "url", "validation_error", "vcpus", "webob", "Check", "negative", "and", "decimal", "number", "can't", "be", "accepted.", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "subsequent", "delete", "should", "fail\n!$%\\x00", "name'\n!$#!$^#&^$&\"\n", "Because", "for", "normal", "user", "can't", "access", "the", "non-public", "flavor", "without\n", "access.", "So", "it", "need", "admin", "context", "at", "here."], "/Users/mehranhassani/repos/nova/nova/cmd/scheduler.py": ["CONF", "config", "gmr", "logging", "nova", "objects", "server", "service", "sys", "utils", "version", "Starter", "script", "for", "Nova", "Scheduler."], "/Users/mehranhassani/repos/nova/nova/filters.py": ["False", "LOG", "None", "True", "_LI", "__name__", "cls_name", "dict", "end_count", "filter_", "filter_obj_list", "filters", "full_filter_results", "full_msg", "getattr", "index", "inst_props", "inst_uuid", "isinstance", "len", "list", "list_objs", "loadables", "log_msg", "logging", "msg_dict", "obj", "object", "objs", "part_filter_results", "part_msg", "remaining", "rspec", "run_filter_once_per_request", "self", "spec_obj", "start_count", "str", "Base", "class", "for", "all", "filter", "classes.", "Set", "to", "true", "in", "a", "subclass", "if", "a", "filter", "only", "needs", "to", "be", "run", "once\n", "for", "each", "request", "rather", "than", "for", "each", "instance\n", "Track", "the", "hosts", "as", "they", "are", "removed.", "The", "'full_filter_results'", "list\n", "contains", "the", "host/nodename", "info", "for", "every", "host", "that", "passes", "each\n", "filter,", "while", "the", "'part_filter_results'", "list", "just", "tracks", "the", "number\n", "removed", "by", "each", "filter,", "unless", "the", "filter", "returns", "zero", "hosts,", "in\n", "which", "case", "it", "records", "the", "host/nodename", "for", "the", "last", "batch", "that", "was\n", "removed.", "Since", "the", "full_filter_results", "can", "be", "very", "large,", "it", "is", "only\n", "recorded", "if", "the", "LOG", "level", "is", "set", "to", "debug.\n", "Log", "the", "filtration", "history\n", "NOTE(sbauza):", "Since", "the", "Cells", "scheduler", "still", "provides", "a", "legacy\n", "dictionary", "for", "filter_props,", "and", "since", "we", "agreed", "on", "not", "modifying\n", "the", "Cells", "scheduler", "to", "support", "that", "because", "of", "Cells", "v2,", "we\n", "prefer", "to", "define", "a", "compatible", "way", "to", "address", "both", "types"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_block_device_mapping_boot.py": ["BlockDeviceMappingV1BootJsonTest", "fakes", "sample_dir", "self", "test_servers"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/blockinfo.py": ["BOOT_DEV_FOR_TYPE", "CONF", "False", "None", "SUPPORTED_DEVICE_TYPES", "True", "_", "allowed_types", "assigned_devices", "bdm", "bdm_bus", "bdm_format", "bdm_info", "bdm_type", "block_device", "block_device_info", "block_device_mapping", "boot_devs_dup", "boot_index", "boot_mapping", "bus", "cdrom_bus", "cfg", "chr", "config_drive_type", "config_info", "configdrive", "context", "default_eph", "dev", "dev_prefix", "dev_type", "device_name", "device_name_field", "device_type", "devs", "dict", "disk", "disk_bus", "disk_dev", "disk_info", "driver", "driver_bdm", "el", "enumerate", "eph", "eph_info", "ephemerals", "exception", "find_disk_dev_for_disk_bus", "get_config_drive_type", "get_default_ephemeral_info", "get_dev_count_for_disk_bus", "get_dev_prefix_for_disk_bus", "get_device_name", "get_disk_bus_for_device_type", "get_disk_bus_for_disk_dev", "get_disk_info", "get_disk_mapping", "get_eph_disk", "get_info_from_bdm", "get_next_disk_info", "get_root_info", "guest_vm_mode", "guestarch", "has_disk_dev", "idx", "image_meta", "index", "info", "instance", "is_disk_bus_valid_for_virt", "isinstance", "itertools", "key", "libvirt_utils", "lst", "mapping", "max_dev", "msg", "name", "no_root_bdm", "obj_base", "obj_fields", "operator", "ord", "os_info", "osinfo", "padded_mapping", "pre_assigned_device_names", "range", "rescue", "rescue_info", "root_bdm", "root_device_bus", "root_device_name", "root_device_type", "root_info", "s", "set", "six", "sorted", "str", "swap", "swap_info", "uniq", "update_bdm", "valid_bus", "virt_type", "vol_info", "zip", "Get", "the", "device", "name", "if", "present", "regardless", "of", "the", "bdm", "format.", "Prefer", "a", "disk", "bus", "set", "against", "the", "image", "first", "of", "all\n", "Otherwise", "pick", "a", "hypervisor", "default", "disk", "bus\n", "If", "virt-type", "not", "in", "list", "then", "it", "is", "unsupported\n", "Reverse", "mapping", "'sd'", "is", "not", "reliable\n", "there", "are", "many", "possible", "mappings.", "So\n", "this", "picks", "the", "most", "likely", "mappings\n", "NOTE(ndipanov):", "libvirt", "starts", "ordering", "from", "1,", "not", "0\n", "NOTE", "(ndipanov):", "This", "is", "a", "hack", "to", "avoid", "considering", "an", "image\n", "BDM", "with", "local", "target,", "as", "we", "don't", "support", "them\n", "yet.", "Only", "applies", "when", "passed", "non-driver", "format\n", "NOTE(mriedem):", "In", "case", "the", "image_meta", "object", "was", "constructed", "from\n", "an", "empty", "dict,", "like", "in", "the", "case", "of", "evacuate,", "we", "have", "to", "first", "check\n", "if", "disk_format", "is", "set", "on", "the", "ImageMeta", "object.\n", "Do", "not", "update", "the", "device", "name", "if", "it", "was", "already", "present\n", "NOTE", "(ndipanov):", "root_bdm", "can", "be", "None", "when", "we", "boot", "from", "image\n", "as", "there", "is", "no", "driver", "representation", "of", "local", "targeted", "images\n", "and", "they", "will", "not", "be", "in", "block_device_info", "list.\n", "NOTE", "(ndipanov):", "This", "implicitly", "relies", "on", "image->local", "BDMs", "not\n", "being", "considered", "in", "the", "driver", "layer", "-", "so", "missing\n", "bdm", "with", "boot_index", "0", "means", "-", "use", "image,", "unless", "it", "was\n", "overridden.", "This", "can", "happen", "when", "using", "legacy", "syntax", "and\n", "no", "root_device_name", "is", "set", "on", "the", "instance.\n", "NOTE", "(ft):", "If", "device", "name", "is", "not", "set", "in", "root", "bdm,", "root_info", "has", "a\n", "generated", "one.", "We", "have", "to", "copy", "device", "name", "to", "root", "bdm", "to", "prevent", "its\n", "second", "generation", "in", "loop", "through", "bdms.", "If", "device", "name", "is", "already\n", "set,", "nothing", "is", "changed."], "/Users/mehranhassani/repos/nova/nova/tests/functional/libvirt/test_numa_servers.py": ["CONF", "LOG", "NUMAServersTest", "NumaHostInfo", "ServersTestBase", "__name__", "cfg", "conn_mock", "cpu_count", "created_server", "created_server_id", "ctx", "end_status", "extra_spec", "fake_connection", "fake_imagebackend", "fake_libvirt_utils", "fake_network", "fakelibvirt", "filter_mock", "fixtures", "flavor_id", "found_server", "good_server", "host_info", "host_manager", "host_pass_mock", "inst", "kwargs", "len", "logging", "mock", "nova_context", "numa_filter_class", "objects", "post", "s", "self", "server", "server_ids", "servers", "super", "test", "topology", "update", "number", "of", "active", "cpus\n", "Replace", "libvirt", "with", "fakelibvirt\n", "Create", "server\n", "Validate", "that", "the", "server", "has", "been", "created\n", "It", "should", "also", "be", "in", "the", "all-servers", "list\n", "Validate", "that", "NUMATopologyFilter", "has", "been", "called\n", "Create", "a", "flavor\n", "Create", "a", "flavor\n", "Create", "a", "flavor"], "/Users/mehranhassani/repos/nova/nova/policies/block_device_mapping.py": ["POLICY_ROOT", "base", "block_device_mapping_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/api/metadata/handler.py": ["CONF", "Exception", "LOG", "None", "True", "_", "_LE", "_LW", "__name__", "address", "base", "cache_key", "cache_utils", "callable", "context", "data", "e", "encodeutils", "exception", "expected_signature", "hashlib", "hmac", "instance_address", "instance_data", "instance_id", "isinstance", "logging", "md_networks", "md_subnets", "meta_data", "msg", "neutron", "neutronapi", "nova", "nova_context", "os", "provider_id", "remote_address", "req", "requestor_address", "requestor_id", "resp", "secutils", "self", "signature", "six", "subnet", "tenant_id", "webob", "wsgi", "Metadata", "request", "handler.\nServe", "metadata.", "Ensure", "that", "only", "one", "header", "was", "passed\n", "We", "use", "admin", "context,", "admin=True", "to", "lookup", "the\n", "inter-Edge", "network", "port\n", "Tenant,", "instance", "ids", "are", "found", "in", "the", "following", "method:\n", "X-Metadata-Provider", "contains", "id", "of", "the", "metadata", "provider,", "and", "since\n", "overlapping", "networks", "cannot", "be", "connected", "to", "the", "same", "metadata\n", "provider,", "the", "combo", "of", "tenant's", "instance", "IP", "and", "the", "metadata\n", "provider", "has", "to", "be", "unique.\n\n", "The", "networks", "which", "are", "connected", "to", "the", "metadata", "provider", "are\n", "retrieved", "in", "the", "1st", "call", "to", "neutron.list_subnets()\n", "In", "the", "2nd", "call", "we", "read", "the", "ports", "which", "belong", "to", "any", "of", "the\n", "networks", "retrieved", "above,", "and", "have", "the", "X-Forwarded-For", "IP", "address.\n", "This", "combination", "has", "to", "be", "unique", "as", "explained", "above,", "and", "we", "can\n", "read", "the", "instance_id,", "tenant_id", "from", "that", "port", "entry.\n", "Retrieve", "networks", "which", "are", "connected", "to", "metadata", "provider\n", "Retrieve", "the", "instance", "data", "from", "the", "instance's", "port\n", "instance_data", "is", "unicode-encoded,", "while", "cache_utils", "doesn't", "like\n", "that.", "Therefore", "we", "convert", "to", "str\n", "If", "authentication", "token", "is", "set,", "authenticate\n", "causes", "a", "404", "to", "be", "raised"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_admin_actions.py": ["AdminActionsPolicyEnforcementV21", "AdminActionsTestV21", "_api_version", "_fake_controller", "actions", "admin_actions", "admin_actions_v21", "admin_only_action_common", "arg", "exc", "exception", "fakes", "fun_name", "func", "getattr", "kwarg", "method_translations", "rule", "self", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_fault.py": ["False", "None", "True", "_TestInstanceFault", "cells_fault_create", "db", "db_fault", "enumerate", "exception", "fake_faults", "fault", "faults", "get_mock", "index", "instance_fault", "key", "len", "mock", "mock_create", "object", "self", "test_objects", "update_cells", "uuids"], "/Users/mehranhassani/repos/nova/nova/policies/rescue.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "rescue_policies"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/310_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_networks_associate.py": ["ADMIN_API", "NetworksAssociateJsonTests", "True", "_sentinel", "api_sample_base", "context", "fake_associate", "host", "network_id", "object", "project", "response", "sample_dir", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_metadata.py": ["CONF", "CallableMD", "ENCODE_USER_DATA_STRING", "Exception", "FAKE_SEED", "FakeDeviceBus", "FakeDeviceMetadata", "False", "ImportError", "MetadataHandlerTestCase", "MetadataPasswordTestCase", "MetadataTestCase", "None", "OpenStackMetadataTestCase", "True", "TypeError", "USER_DATA_STRING", "ValueError", "_test_metadata_path", "actual_paths", "address", "api", "app", "args", "bad_secret", "base", "base64", "block_device", "cfg", "content", "context", "copy", "ctx", "ctxt", "data", "delattr", "device_with_fake_bus_obj", "encodeutils", "exc", "exception", "expected", "expected_addr", "expected_instance_id", "expected_local", "expected_metadata", "expected_paths", "extra", "extra_md", "f", "fake_InstanceMetadata", "fake_bdm_get", "fake_block_device", "fake_device_obj", "fake_get_metadata", "fake_get_metadata_by_instance_id", "fake_inst_obj", "fake_keypair_obj", "fake_list_ports", "fake_metadata_dicts", "fake_metadata_objects", "fake_network", "fake_request", "fakes", "fent", "fixed_ip", "flavors", "folsom_supported_apis", "found", "get_by_uuid", "get_metadata_by_remote_address", "gmd", "grizzly_supported_apis", "handler", "hashlib", "havana_supported_apis", "headers", "hmac", "hnd", "ide_disk_meta", "ide_disk_obj", "imd", "include_rest_result", "inst", "inst_data", "inst_md", "instance", "instance_id", "instance_ref0", "instance_ref1", "is_cells", "item", "jsonfile", "jsonutils", "k", "key", "keypair", "kwargs", "len", "liberty_supported_apis", "listing", "log_mock", "md", "mddict", "mdinst", "mdjson", "mdlist", "meta", "meta_data", "metadata_obj", "mock", "mock_base64", "mock_cells_keypair", "mock_client", "mock_compare", "mock_context", "mock_get", "mock_get_client", "mock_get_context", "mock_inst_get_by_uuid", "mock_json_dump_as_bytes", "mock_net_api", "mock_netutils", "mock_network_api", "mock_uuid", "myVdriver", "mydata", "name", "netutils", "network_data", "network_info", "network_info_from_api", "network_metadata", "network_model", "neutronapi", "nic_meta", "nic_obj", "nw", "nw_data", "nw_info", "nwinfo", "nwpath", "obj", "object", "objects", "open", "os", "os_version", "password", "path", "path_info", "pickle", "proxy_lb_id", "pubkey_ent", "re", "relpath", "remote_address", "req", "request", "request_mock", "requests", "response", "response_code", "response_ctype", "result", "save", "scsi_disk_meta", "scsi_disk_obj", "self", "self_app", "self_gm", "sgroups", "shared_secret", "signature", "signed", "six", "super", "test", "testcase", "tmpdir", "usb_disk_meta", "usb_disk_obj", "userdata_found", "utils", "uuid", "uuids", "v", "val", "value", "vd", "vd_driver", "vdpath", "vendordata", "vendordata_dynamic", "verify", "webob", "Tests", "for", "metadata", "service.\nTest", "that", "metadata", "is", "returning", "proper", "values.", "Make", "sure", "that", "InstanceMetadata", "is", "possible", "to", "pickle.", "This", "is\n", "required", "for", "memcache", "backend", "to", "work", "correctly.\n", "Make", "sure", "that", "_format_instance_mappings", "works.\n", "we", "want", "to", "make", "sure", "that", "key_name", "is", "set", "but", "not", "keypairs", "so", "it", "has\n", "to", "be", "lazy-loaded", "from", "the", "database\n", "Because", "we", "handle", "a", "list", "of", "devices,", "we", "have", "only", "one", "test", "and", "in", "it\n", "include", "the", "various", "devices", "types", "that", "we", "have", "to", "test,", "as", "well", "as", "a\n", "couple", "of", "fake", "device", "types", "and", "bus", "types", "that", "should", "be", "silently\n", "ignored\n", "request", "for", "/openstack/<version>/", "should", "show", "metadata.json\n", "trailing", "/", "should", "not", "affect", "anything\n", "the", "'content'", "should", "not", "show", "up", "in", "directory", "listing\n", "request", "for", "/openstack/<version>/", "should", "show", "metadata.json\n", "verify", "that", "each", "of", "the", "things", "we", "put", "in", "content\n", "resulted", "in", "an", "entry", "in", "'files',", "that", "their", "content\n", "there", "is", "as", "expected,", "and", "that", "/content", "lists", "them.\n", "make", "sure", "extra_md", "makes", "it", "through", "to", "metadata\n", "make", "sure", "extra_md", "makes", "it", "through", "to", "metadata\n", "since", "we", "had", "user-data", "in", "this", "instance,", "it", "should", "be", "in", "listing\n", "since", "this", "instance", "had", "no", "user-data", "it", "should", "not", "be", "there.\n", "verify", "that", "2013-04-04", "has", "the", "'random'", "field\n", "verify", "that", "older", "version", "do", "not", "have", "it\n", "verify", "that", "2015-10-15", "has", "the", "'project_id'", "field\n", "verify", "that", "older", "version", "do", "not", "have", "it\n", "top", "level", "entries", "in", "meta_data", "should", "not", "contain", "'-'", "in", "their", "name\n", "verify", "that", "2013-10-17", "has", "the", "vendor_data.json", "file\n", "verify", "that", "older", "version", "do", "not", "have", "it\n", "verify", "that", "2016-10-06", "has", "the", "vendor_data2.json", "file\n", "verify", "that", "2013-10-17", "has", "the", "vendor_data.json", "file\n", "the", "instance", "should", "be", "passed", "through,", "and", "our", "class", "copies", "the\n", "uuid", "through", "to", "'inst_uuid'.\n", "check", "the", "other", "expected", "values\n", "verify", "that", "2013-10-17", "has", "the", "vendor_data.json", "file\n", "verify", "that", "2016-10-06", "works", "as", "well\n", "verify", "the", "new", "format", "as", "well\n", "verify", "the", "new", "format", "as", "well\n", "and", "exception", "should", "result", "in", "nothing", "being", "added,", "but", "no", "error\n", "verify", "that", "2015-10-15", "has", "the", "network_data.json", "file\n", "verify", "that", "older", "version", "do", "not", "have", "it\n", "verify", "that", "2015-10-15", "has", "the", "network_data.json", "file\n", "check", "the", "other", "expected", "values\n", "raise", "the", "exception", "to", "aid", "with", "500", "response", "code", "test\n", "try", "a", "request", "with", "service", "disabled\n", "now", "enable", "the", "service\n", "mismatched", "signature\n", "missing", "X-Tenant-ID", "from", "request\n", "mismatched", "X-Tenant-ID\n", "without", "X-Forwarded-For\n", "unexpected", "Instance-ID\n", "recursively", "confirm", "a", "http", "200", "from", "all", "meta-data", "elements\n", "available", "at", "relpath.\n", "meta-data/public-keys/0=keyname", "refers", "to\n", "meta-data/public-keys/0\n", "test", "twice", "to", "ensure", "that", "the", "cache", "works\n", "test", "twice", "to", "ensure", "that", "disabling", "the", "cache", "works\n", "test", "twice", "to", "ensure", "that", "the", "cache", "works\n", "test", "twice", "to", "ensure", "that", "disabling", "the", "cache", "works\n", "with", "X-Metadata-Provider\n", "with", "X-Metadata-Provider\n", "with", "X-Metadata-Provider\n", "with", "X-Metadata-Provider"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/pool.py": ["CONF", "Exception", "LOG", "None", "_", "_LE", "__name__", "aggregate", "aggregate_id", "aggregate_name", "args", "compute_rpcapi", "compute_uuid", "context", "dict", "e", "exception", "host", "host_addr", "host_rec", "host_ref", "host_uuid", "invalid", "jsonutils", "len", "logging", "master_compute", "metadata", "nova", "object", "op", "passwd", "pool_ref", "pool_states", "self", "sender_url", "session", "set_error", "six", "slave_info", "swap_xapi_host", "temp_url", "url", "urlparse", "user", "virtapi", "vm_ref", "vm_utils", "Implements", "resource", "pool", "operations.\nUndo", "aggregate", "operation", "when", "pool", "error", "raised.\nAdd", "a", "compute", "host", "to", "an", "aggregate.\nRemove", "a", "compute", "host", "from", "an", "aggregate.\nJoins", "a", "slave", "into", "a", "XenServer", "resource", "pool.\nEject", "a", "slave", "from", "a", "XenServer", "resource", "pool.\nSet", "the", "name", "label", "of", "a", "XenServer", "pool.\nClear", "the", "name", "label", "of", "a", "XenServer", "pool.\nXenServer", "specific", "info", "needed", "to", "join", "the", "hypervisor", "pool.\nReplace", "the", "XenServer", "address", "present", "in", "'url'", "with", "'host_addr'.", "this", "is", "the", "first", "host", "of", "the", "pool", "->", "make", "it", "master\n", "save", "metadata", "so", "that", "we", "can", "find", "the", "master", "again\n", "the", "pool", "is", "already", "up", "and", "running,", "we", "need", "to", "figure", "out\n", "whether", "we", "can", "serve", "the", "request", "from", "this", "host", "or", "not.\n", "this", "is", "the", "master", "->", "do", "a", "pool-join\n", "To", "this", "aim,", "nova", "compute", "on", "the", "slave", "has", "to", "go", "down.\n", "NOTE:", "it", "is", "assumed", "that", "ONLY", "nova", "compute", "is", "running", "now\n", "send", "rpc", "cast", "to", "master,", "asking", "to", "add", "the", "following\n", "host", "with", "specified", "credentials.\n", "this", "is", "the", "master", "->", "instruct", "it", "to", "eject", "a", "host", "from", "the", "pool\n", "Remove", "master", "from", "its", "own", "pool", "->", "destroy", "pool", "only", "if", "the\n", "master", "is", "on", "its", "own,", "otherwise", "raise", "fault.", "Destroying", "a\n", "pool", "made", "only", "by", "master", "is", "fictional\n", "NOTE:", "this", "could", "be", "avoided", "by", "doing", "a", "master\n", "re-election,", "but", "this", "is", "simpler", "for", "now.\n", "A", "master", "exists", "->", "forward", "pool-eject", "request", "to", "master\n", "this", "shouldn't", "have", "happened\n", "shutdown", "nova-compute;", "if", "there", "are", "other", "VMs", "running,", "e.g.\n", "guest", "instances,", "the", "eject", "will", "fail.", "That's", "a", "precaution\n", "to", "deal", "with", "the", "fact", "that", "the", "admin", "should", "evacuate", "the", "host\n", "first.", "The", "eject", "wipes", "out", "the", "host", "completely.\n", "replace", "the", "address", "from", "the", "xenapi", "connection", "url\n", "because", "this", "might", "be", "169.254.0.1,", "i.e.", "xenapi\n", "NOTE:", "password", "in", "clear", "is", "not", "great,", "but", "it'll", "do", "for", "now"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/vfs/test_localfs.py": ["Exception", "False", "NbdMount", "None", "True", "VirtDiskVFSLocalFSTest", "VirtDiskVFSLocalFSTestPaths", "append", "args", "cmd_parts", "commands", "dirs", "exception", "execute", "fake_execute", "fake_get_dev", "fake_setup", "fake_teardown", "files", "gid", "group", "imgmodel", "int", "kwargs", "mkdtemp", "mock", "mode", "mounter", "nbd", "nonroot_execute", "nova", "owner", "path", "processutils", "real_execute", "ret", "root_helper", "self", "sep", "super", "tempfile", "test", "tests_utils", "uid", "user", "vfs", "vfsimpl"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_multinic.py": ["ADMIN_API", "MultinicSampleJsonTest", "True", "response", "sample_dir", "self", "subs", "super", "test_servers", "NOTE(markmc):", "it", "looks", "like", "multinic", "and", "instance_dns_manager", "are\n", "incompatible.", "See:\n", "https://bugs.launchpad.net/nova/+bug/1213251"], "/Users/mehranhassani/repos/nova/nova/policies/pci.py": ["POLICY_ROOT", "base", "pci_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/mount/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_manager.py": ["CONF", "CellsManagerClassTestCase", "FAKE_COMPUTE_NODES", "FAKE_SERVICES", "FAKE_TASK_LOGS", "False", "None", "True", "args", "build_inst_kwargs", "call_info", "cell", "cell1_migrations", "cell2_migrations", "cell_and_host", "cell_and_id", "cell_name", "cell_service_id", "cells_manager", "cells_utils", "clean_shutdown", "compute", "compute_node", "compute_nodes", "compute_proxy", "console_port", "console_type", "context", "copy", "datetime", "dict", "driver", "exc", "expected_compute_node", "expected_resp", "expected_response", "expected_service", "expected_task_log", "fake_act", "fake_action_id", "fake_cell", "fake_cell_and_host", "fake_compute", "fake_context", "fake_events", "fake_get_keypair", "fake_host", "fake_instance", "fake_req_id", "fake_response", "fake_responses", "fake_server_actions", "fake_service", "fake_uuid", "fakes", "filter_properties", "filters", "flavor_dict", "get_instances_to_sync", "host_uptime", "i", "instance", "instance_get_by_uuid", "instance_uuid", "instances", "int", "iter", "k", "keypairs", "kwargs", "messaging", "method_info", "migrations", "mock", "mock_bi", "msg_runner", "nova", "num", "objects", "our_cell", "params_to_update", "proxy", "range", "raw_resp1", "raw_resp2", "raw_resp3", "raw_response", "response", "responses", "self", "service", "service_delete", "service_id", "service_proxy", "services", "set_admin_password", "stalled_time", "staticmethod", "super", "sync_instance", "target_cell", "task_log", "task_logs", "test", "test_flavor", "timeutils", "topic", "updated_since", "utcnow", "uuid", "values", "Test", "case", "for", "CellsManager", "class.", "pick", "a", "child", "cell", "to", "use", "for", "tests.\n", "Args", "should", "just", "be", "silently", "passed", "through\n", "Only", "first", "2\n", "Now", "the", "last", "1", "and", "the", "first", "1\n", "3", "cells...", "so", "3", "responses.", "Each", "response", "is", "a", "list", "of", "services.\n", "Manager", "should", "turn", "these", "into", "a", "single", "list", "of", "responses.\n", "Calls", "are", "done", "by", "cells,", "so", "we", "need", "to", "sort", "the", "list", "by", "the", "cell", "name\n", "3", "cells...", "so", "3", "responses.", "Each", "response", "is", "a", "list", "of", "task", "log\n", "entries.", "Manager", "should", "turn", "these", "into", "a", "single", "list", "of\n", "task", "log", "entries.\n", "Host", "filter", "only", "has", "cell", "name.\n", "3", "cells...", "so", "3", "responses.", "Each", "response", "is", "a", "list", "of", "computes.\n", "Manager", "should", "turn", "these", "into", "a", "single", "list", "of", "responses.\n", "Calls", "are", "done", "by", "cells,", "so", "we", "need", "to", "sort", "the", "list", "by", "the", "cell", "name"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cert/test_rpcapi.py": ["CONF", "cert_rpcapi", "cfg", "context", "csv_mock", "ctxt", "getattr", "kwargs", "method", "mock", "orig_prepare", "prepare_mock", "retval", "rpc_mock", "rpcapi", "self", "test", "v"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_security_group.py": ["False", "None", "True", "_TestSecurityGroupListObject", "_TestSecurityGroupObject", "db", "db_secgroup", "dict", "fake_secgroup", "fake_secgroups", "i", "inst", "instance", "len", "mock", "mock_db_update", "mock_get", "mock_inuse", "mock_update", "object", "ovo_fixture", "primitive", "range", "secgroup", "secgroup_list", "security_group", "self", "set", "test_objects", "updated_secgroup", "uuids", "NOTE(danms):", "Account", "for", "the", "difference", "in", "'deleted'\n", "Test", "set/get.\n", "Test", "backport.\n", "Make", "sure", "the", "uuid", "is", "still", "set", "before", "we", "save()."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/288_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/cmd/compute.py": ["CONF", "LOG", "cmd_common", "conductor_rpcapi", "config", "gmr", "logging", "nova", "objects", "objects_base", "os_vif", "priv_context", "server", "service", "shlex", "sys", "utils", "version", "Starter", "script", "for", "Nova", "Compute.", "Ensure", "os-vif", "objects", "are", "registered", "and", "plugins", "loaded"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_multiple_create.py": ["CONF", "False", "MultiCreateExtensionTestV21", "None", "True", "args", "bdm", "block_device_mapping_v21", "body", "columns_to_join", "compute_api", "context", "create", "datetime", "def_image_ref", "dict", "exc", "exception", "ext_info", "extension_info", "fake", "fake_instance", "fake_method", "fakes", "flavor_ref", "flavors", "image_href", "image_uuid", "inst", "inst_type", "instance", "instance_create", "instance_get", "instance_id", "instance_update", "instance_uuid", "instance_uuids", "int", "kwargs", "len", "max_count", "min_count", "multiple_create_v21", "no_image", "nova", "old_create", "override_controller", "params", "project_get_networks", "res", "reservation_id", "resv_id_return", "return_security_group", "security_group_id", "self", "server", "server_dict", "server_update", "servers_v21", "super", "test", "user_id", "uuid", "validation_error", "values", "webob", "Shared", "implementation", "for", "tests", "below", "that", "create", "instance.\nutility", "function", "-", "check", "server_dict", "for", "admin_password", "length.\nutility", "function", "-", "check", "server_dict", "for", "admin_password", "absence.", "Network", "API", "needs", "to", "be", "stubbed", "out", "before", "creating", "the", "controllers.\n", "NOTE:", "on", "v2.1", "API,", "\"create", "a", "server\"", "API", "doesn't", "add", "the", "following\n", "attributes", "into", "kwargs", "when", "non-loading", "multiple_create", "extension.\n", "However,", "v2.0", "API", "adds", "them", "as", "values", "\"1\"", "instead.", "So", "we", "need", "to\n", "define", "checking", "methods", "for", "each", "API", "here."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/cells/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_utils.py": ["_AGGREGATE_FIXTURES", "f", "fakes", "float", "host_state", "inst1", "inst2", "instance", "instances", "int", "max", "metadata", "min", "objects", "self", "set", "test", "utils", "uuids", "values"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/deferred_delete.py": ["ALIAS", "DeferredDeleteController", "alias", "args", "body", "common", "compute", "context", "controller", "dd_policies", "e", "error", "exception", "extension", "extensions", "id", "instance", "kwargs", "name", "req", "self", "state_error", "super", "version", "webob", "wsgi", "The", "deferred", "instance", "delete", "extension.\nRestore", "a", "previously", "deleted", "instance.\nForce", "delete", "of", "instance", "before", "deferred", "cleanup.\nInstance", "deferred", "delete."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_common.py": ["ATOMNS", "False", "LimiterTest", "NS", "None", "ValueError", "ViewBuilderLinkTest", "actual", "api_version", "bmk_url", "bookmark_link", "builder", "collection", "common", "dict", "e", "exc", "exception", "expected", "fakes", "fixture", "fixture1", "fixture2", "fixture3", "href_link", "href_link_mock", "identifier", "items", "joined", "len", "marker", "matchers", "max_limit", "mock", "next_link", "params", "pieces", "proj_id", "project_id", "range", "req", "result", "results", "search_opts", "self", "six", "sort_dir_vals", "sort_dirs", "sort_key_vals", "sort_keys", "super", "task_state", "task_states", "test", "type", "url", "use_admin_context", "value", "vb", "vm_state", "vm_states", "webob", "Run", "before", "each", "test.\nTests", "the", "_get_collection_links", "method.", "Test", "offset", "key", "works", "with", "0.\n", "Test", "offset", "key", "works", "with", "a", "medium", "sized", "number.\n", "Test", "offset", "key", "works", "with", "a", "number", "over", "1000", "(max_limit).\n", "Test", "offset", "key", "works", "with", "a", "blank", "offset.\n", "Test", "offset", "key", "works", "with", "a", "BAD", "offset.\n", "Test", "request", "with", "no", "offset", "or", "limit.\n", "Test", "limit", "of", "zero.\n", "Test", "limit", "of", "10.\n", "Test", "limit", "of", "3000.\n", "Test", "request", "with", "both", "limit", "and", "offset.\n", "Test", "a", "max_limit", "other", "than", "1000.\n", "Test", "a", "negative", "limit.\n", "Test", "a", "negative", "offset.\n", "sort_key", "was", "supplied,", "sort_dir", "should", "be", "defaulted\n", "sort_dir", "was", "supplied,", "sort_key", "should", "be", "defaulted\n", "Also", "ensure", "that", "the", "input", "parameters", "are", "not", "modified\n", "Test", "no", "params.\n", "Test", "valid", "marker", "param.\n", "Test", "valid", "limit", "param.\n", "Test", "invalid", "limit", "param.\n", "Test", "valid", "limit", "and", "marker", "parameters.\n", "Test", "valid", "page_size", "param.\n", "Test", "invalid", "page_size", "param.\n", "Test", "valid", "limit", "and", "page_size", "parameters.\n", "Given", "limit", "is", "greater", "than", "default", "max,", "only", "return", "default", "max"], "/Users/mehranhassani/repos/nova/doc/ext/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/test_volume_utils.py": ["Exception", "FakeException", "False", "None", "True", "UUIDException", "_call_xenapi", "actual", "args", "booted_from_volume", "cases", "classmethod", "cls", "conn_info", "create_pbd", "data1", "data2", "data_key_to_null", "details", "ex", "exception", "expected", "expected_params", "fake_call_xenapi", "fake_get_vdi_ref", "func", "greenthread", "input", "instance", "kwargs", "label", "label1", "label2", "method", "mock", "mock_conn", "mock_file", "mock_forget", "mock_get_vdi_ref", "mock_import_path", "mock_sleep", "mock_stream", "params", "params1", "params2", "resp", "result", "self", "session", "six", "sr_ref", "sr_uuid", "sr_uuid1", "sr_uuid2", "str", "stubs", "target_iqn", "target_lun", "test", "tot_size", "vdi_ref", "vdi_uuid", "volume_utils", "There", "is", "no", "default", "value\n", "Tests", "that", "a", "StorageError", "is", "raised", "if", "volume_id,", "target_host,", "or\n", "target_ign", "is", "missing", "from", "connection_data.", "Also", "ensures", "that", "the\n", "auth_password", "value", "is", "not", "present", "in", "the", "StorageError", "message."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/extended_volumes.py": ["ALIAS", "ExtendedVolumes", "ExtendedVolumesController", "False", "alias", "api_version_request", "bdm", "bdms", "context", "controller", "ev_policies", "extension", "extensions", "id", "instance_bdms", "instance_uuids", "key", "list", "name", "objects", "req", "resp_obj", "self", "server", "servers", "version", "volume_attached", "volumes_attached", "wsgi", "The", "Extended", "Volumes", "API", "extension.\nExtended", "Volumes", "support.", "NOTE(mriedem):", "The", "os-extended-volumes", "prefix", "should", "not", "be", "used", "for\n", "new", "attributes", "after", "v2.1.", "They", "are", "only", "in", "v2.1", "for", "backward", "compat\n", "with", "v2.0.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "the", "'detail'", "or", "'show'", "method.\n", "If", "that", "instance", "has", "since", "been", "deleted,", "it", "won't", "be", "in", "the\n", "'bdms'", "dictionary", "though,", "so", "use", "'get'", "to", "avoid", "KeyErrors."], "/Users/mehranhassani/repos/nova/nova/conf/compute.py": ["ALL_OPTS", "False", "True", "allocation_ratio_opts", "cfg", "compute_manager_opts", "compute_opts", "conf", "db_opts", "instance_cleaning_opts", "interval_opts", "paths", "resource_tracker_opts", "rpcapi_opts", "running_deleted_opts", "socket", "timeout_opts", "Copyright", "2015", "Huawei", "Technology", "corp.\n", "Copyright", "2015", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(sfinucan):", "Add", "min", "parameter\n", "TODO(macsz):", "add", "min=1", "flag", "in", "P", "development", "cycle"], "/Users/mehranhassani/repos/nova/nova/cells/manager.py": ["CONF", "CellsManager", "False", "LOG", "None", "StopIteration", "True", "_LW", "__name__", "_ctxt", "_next_instance", "_path_cell_sep", "action_id", "admin_password", "admin_state_reset", "args", "backup_type", "base_obj", "bdm", "binary", "block_migration", "build_inst_kwargs", "bw_update_info", "call", "cell_and_host", "cell_name", "cell_names", "cell_service_id", "cell_state_manager", "cells_rpc_driver", "cells_state", "cells_utils", "clean_shutdown", "compute_id", "compute_topic", "console_port", "console_type", "context", "create", "ctxt", "data", "datetime", "delete_type", "deleted", "device_name", "dict", "disk_over_commit", "do_cast", "exception", "expected_task_state", "expected_vm_state", "extra_instance_updates", "files_to_inject", "filter_properties", "filters", "flavor", "host", "host_name", "hypervisor_match", "i", "image_href", "image_id", "info", "instance", "instance_fault", "instance_obj", "instance_uuid", "instances", "isinstance", "iter", "key", "keypairs", "kwargs", "len", "logging", "manager", "messaging", "method_info", "migrations", "name", "new_pass", "next", "node", "nodes", "nova", "objects", "oslo_messaging", "our_cell", "params_to_update", "period_beginning", "period_ending", "periodic_task", "preserve_ephemeral", "project_id", "range", "rd_context", "reboot_type", "request_id", "resp", "response", "responses", "ret_nodes", "ret_services", "ret_task_logs", "rotation", "rpc_message", "self", "service", "service_id", "services", "six", "state", "super", "target", "target_cell", "task_log", "task_logs", "task_name", "threshold", "time", "timeout", "timeutils", "topic", "totals", "updated_since", "user_id", "val", "values", "volume_id", "Return", "cell", "information", "for", "our", "neighbor", "cells.\nCall", "a", "compute", "API", "method", "in", "a", "specific", "cell.\nUpdate", "an", "instance", "at", "the", "top", "level", "cell.\nDestroy", "an", "instance", "at", "the", "top", "level", "cell.\nCreate", "an", "instance", "fault", "at", "the", "top", "level", "cell.\nUpdate", "bandwidth", "usage", "at", "top", "level", "cell.\nReturn", "services", "in", "this", "cell", "and", "in", "all", "child", "cells.\nReturn", "a", "service", "entry", "for", "a", "compute", "host", "in", "a", "certain", "cell.\nDeletes", "the", "specified", "service.\nProxy", "an", "RPC", "message", "as-is", "to", "a", "manager.\nGet", "a", "compute", "node", "by", "ID", "in", "a", "specific", "cell.\nReturn", "list", "of", "compute", "nodes", "in", "all", "cells.\nReturn", "compute", "node", "stats", "totals", "from", "all", "cells.\nDelete", "consoleauth", "tokens", "for", "an", "instance", "in", "API", "cells.\nValidate", "console", "port", "with", "child", "cell", "compute", "node.\nBDM", "was", "created/updated", "in", "this", "cell.", "Tell", "the", "API", "cells.\nBDM", "was", "destroyed", "for", "instance", "in", "this", "cell.", "Tell", "the", "API", "cells.\nFetch", "migrations", "applying", "the", "filters.\nUpdate", "an", "instance", "in", "its", "cell.\nStart", "an", "instance", "in", "its", "cell.\nStop", "an", "instance", "in", "its", "cell.\nReboot", "an", "instance", "in", "its", "cell.\nPause", "an", "instance", "in", "its", "cell.\nUnpause", "an", "instance", "in", "its", "cell.\nSuspend", "an", "instance", "in", "its", "cell.\nResume", "an", "instance", "in", "its", "cell.\nDelete", "an", "instance", "in", "its", "cell.\nSoft-delete", "an", "instance", "in", "its", "cell.\nResize", "an", "instance", "in", "its", "cell.\nLive", "migrate", "an", "instance", "in", "its", "cell.\nRevert", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nConfirm", "a", "resize", "for", "an", "instance", "in", "its", "cell.\nReset", "networking", "for", "an", "instance", "in", "its", "cell.\nInject", "networking", "for", "an", "instance", "in", "its", "cell.\nSnapshot", "an", "instance", "in", "its", "cell.\nBackup", "an", "instance", "in", "its", "cell.", "Mostly", "for", "tests.\n", "FIXME(comstud):", "There's", "currently", "no", "hooks", "when", "services", "are\n", "stopping,", "so", "we", "have", "no", "way", "to", "stop", "servers", "cleanly.\n", "No", "need", "to", "sync", "up", "if", "we", "have", "no", "parents.\n", "Yield", "to", "other", "greenthreads\n", "Target", "is", "ourselves", "first.\n", "NOTE(danms):", "Handle", "pre-1.30", "build_instances()", "call.", "Remove", "me\n", "when", "we", "bump", "the", "RPC", "API", "version", "to", "2.0.\n", "NOTE(danms):", "Handle", "pre-1.32", "build_instances()", "call.", "Remove", "me\n", "when", "we", "bump", "the", "RPC", "API", "version", "to", "2.0\n", "1", "response", "per", "cell.", "Each", "response", "is", "a", "list", "of", "services.\n", "If", "no", "cell", "name", "was", "given,", "assume", "that", "the", "host", "name", "is", "the\n", "cell_name", "and", "that", "the", "target", "is", "all", "hosts\n", "1", "response", "per", "cell.", "Each", "response", "is", "a", "list", "of", "task", "log\n", "entries.\n", "1", "response", "per", "cell.", "Each", "response", "is", "a", "list", "of", "compute_node\n", "entries.\n", "TODO(ndipanov):", "Move", "inter-cell", "RPC", "to", "use", "objects\n", "response.value_or_raise", "returns", "MigrationList", "objects.\n", "MigrationList.objects", "returns", "the", "list", "of", "Migration", "objects.\n", "NOTE(rajesht):", "The", "`delete_type`", "parameter", "is", "passed", "so", "that", "it", "will\n", "be", "routed", "to", "destination", "cell,", "where", "instance", "deletion", "will", "happen."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_samples_test_base.py": ["ApiSampleTestBase", "False", "IndexError", "NoMatch", "None", "PROJECT_ID", "True", "TypeError", "ValueError", "__file__", "_use_common_server_api_samples", "all_extensions", "api_version", "args", "body", "char", "classmethod", "cls", "data", "dict", "dirname", "e", "enumerate", "error", "ex_delta", "ex_keys", "ex_obj", "exp_code", "expected", "extra", "float", "hasattr", "headers", "i", "inf", "integrated_helpers", "isinstance", "isotime_re", "jsonutils", "k", "key", "kwargs", "len", "line", "list", "match", "matched_value", "method", "microversion", "name", "new_url", "non_strings", "o", "objectify", "open", "os", "outf", "parts", "pp", "pprint", "pretty_data", "property", "re", "regexes", "repr", "res", "res_delta", "res_keys", "res_obj", "response", "response_data", "response_result", "result", "result_str", "return_json_body", "sample", "sample_data", "sample_dir", "self", "six", "sorted", "str", "strip_version", "strtime_re", "strtime_url_re", "subs", "suffix", "super", "template", "template_data", "test", "text", "type", "update_links", "updated_data", "url", "url_re", "v", "value", "vanilla_regexes", "xmltime_re", "Process", "sample", "data", "and", "update", "version", "specific", "links.", "for", "pretty", "printing", "errors\n", "NOTE(sdague):", "templates", "will", "contain", "values", "like", "%(foo)s\n", "throughout", "them.", "If", "these", "are", "inside", "of", "double", "quoted\n", "strings,", "life", "is", "good,", "and", "we", "can", "treat", "it", "just", "like", "valid\n", "json", "to", "load", "it", "to", "python.\n\n", "However", "we've", "got", "some", "fields", "which", "are", "ints,", "like\n", "aggregate_id.", "This", "means", "we've", "got", "a", "snippet", "in", "the", "sample\n", "that", "looks", "like:\n\n", "\"id\":", "%(aggregate_id)s,\n\n", "which", "is", "not", "valid", "json,", "and", "will", "explode.", "We", "do", "a", "quick", "and\n", "dirty", "transform", "of", "this", "to:\n\n", "\"id\":", "\"%(int:aggregate_id)s\",\n\n", "That", "makes", "it", "valid", "data", "to", "convert", "to", "json,", "but", "keeps\n", "around", "the", "information", "that", "we", "need", "to", "drop", "those", "strings\n", "later.", "The", "regex", "anchors", "from", "the", "':", "',", "as", "all", "of", "these", "will\n", "be", "top", "rooted", "keys.\n", "TODO(auggy):", "subs", "should", "really", "be", "a", "class\n", "Note(gmann):", "if", "_use_common_server_api_samples", "is", "set", "to", "True\n", "then", "common", "server", "sample", "files", "present", "in", "'servers'", "directory\n", "will", "be", "used.", "As", "of", "now", "it", "is", "being", "used", "for", "server", "POST", "request\n", "to", "avoid", "duplicate", "copy", "of", "server", "req", "and", "resp", "sample", "files.\n", "Example", "-", "ServersSampleBase's", "_post_server", "method.\n", "None\n", "TODO(auggy):", "known", "issue", "Bug#1544720\n", "dictionary\n", "TODO(auggy):", "pass", "key", "name", "along", "as", "well", "for", "error", "reporting\n", "list\n", "if", "it's", "a", "list", "of", "1,", "do", "the", "simple", "compare", "which", "gives", "a\n", "better", "error", "message.\n", "This", "is", "clever", "enough", "to", "need", "some", "explanation.", "What", "we\n", "are", "doing", "here", "is", "looping", "the", "result", "list,", "and", "trying", "to\n", "compare", "it", "to", "every", "item", "in", "the", "expected", "list.", "If", "there\n", "is", "more", "than", "one,", "we're", "going", "to", "get", "fails.", "We", "ignore\n", "those.", "But", "every", "time", "we", "match", "an", "expected", "we", "drop", "it,\n", "and", "break", "to", "the", "next", "iteration.", "Every", "time", "we", "hit", "the\n", "end", "of", "the", "iteration,", "we", "add", "our", "results", "into", "a", "bucket\n", "of", "non", "matched.\n\n", "This", "results", "in", "poor", "error", "messages", "because", "we", "don't\n", "really", "know", "why", "the", "elements", "failed", "to", "match", "each\n", "other.", "A", "more", "complicated", "diff", "might", "be", "nice.\n", "template", "string\n", "NOTE(vish):", "escape", "stuff", "for", "regex\n", "NOTE(vish):", "special", "handling", "of", "subs", "that", "are", "not", "quoted.", "We", "are\n", "expecting", "an", "int", "but", "we", "had", "to", "pass", "in", "a", "string\n", "so", "the", "json", "would", "parse", "properly.\n", "string\n", "NOTE(danms):", "Ignore", "whitespace", "in", "this", "comparison\n", "NOTE(tdurakov):this", "attempt", "to", "parse", "string", "as", "JSON\n", "is", "needed", "for", "correct", "comparison", "of", "hypervisor.cpu_info,\n", "which", "is", "stringified", "JSON", "object\n\n", "TODO(tdurakov):", "remove", "this", "check", "as", "soon", "as\n", "hypervisor.cpu_info", "become", "common", "JSON", "object", "in", "REST", "API.\n", "int\n", "replace", "version", "urls\n", "replace", "unversioned", "urls\n", "Always", "also", "include", "the", "laundry", "list", "of", "base", "regular\n", "expressions", "for", "possible", "key", "values", "in", "our", "templates.", "Test\n", "specific", "patterns", "(the", "value", "of", "``subs``)", "can", "override\n", "these.\n", "NOTE(danms):", "replace", "some", "of", "the", "subs", "with", "patterns", "for", "the\n", "doc/api_samples", "check,", "which", "won't", "have", "things", "like", "the\n", "correct", "compute", "host", "name.", "Also", "let", "the", "test", "do", "some", "of", "its\n", "own", "generalization,", "if", "necessary\n", "NOTE(claudiub):", "the", "x509", "keypairs", "are", "different", "from", "the\n", "ssh", "keypairs.", "For", "example,", "the", "x509", "fingerprint", "has", "40", "bytes.\n", "NOTE(sdague):", "\"openstack\"", "is", "stand", "in", "for", "project_id,", "it\n", "should", "be", "more", "generic", "in", "future.\n", "NOTE(sdague):", "\"openstack\"", "is", "stand", "in", "for", "project_id,", "it\n", "should", "be", "more", "generic", "in", "future.\n", "name", "indicates", "that", "we", "have", "a", "body", "document.", "While", "the", "HTTP\n", "spec", "implies", "that", "PUT", "is", "supposed", "to", "have", "one,", "we", "have", "some\n", "APIs", "which", "don't."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_hypervisors.py": ["ADMIN_API", "False", "HypervisorsCellsSampleJsonTests", "HypervisorsSampleJson228Tests", "HypervisorsSampleJson233Tests", "HypervisorsSampleJsonTests", "None", "True", "api_sample_base", "cells_utils", "context", "fake_compute_node_get", "fake_get_host_uptime", "fake_hypervisor", "fake_service_get_by_compute_host", "host", "hyp", "hypervisor_id", "instance", "microversion", "mock", "mock_instance_get", "mocks", "objects", "response", "sample_dir", "scenarios", "self", "str", "subs", "super", "Start", "a", "new", "compute", "service", "to", "fake", "a", "record", "with", "hypervisor", "id=2\n", "for", "pagination", "test."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/244_increase_user_id_length_volume_usage_cache.py": ["MetaData", "String", "Table", "True", "col_resource", "getattr", "meta", "migrate_engine", "table", "Match", "the", "maximum", "length", "of", "user_id", "in", "Keystone", "here", "instead", "of\n", "assuming", "explicitly", "a", "single", "UUID", "length."], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_ldap.py": ["Exception", "FakeLDAP", "False", "KeyError", "MOD_ADD", "MOD_DELETE", "MOD_REPLACE", "NO_SUCH_OBJECT", "None", "NotImplementedError", "SCOPE_BASE", "SCOPE_ONELEVEL", "SCOPE_SUBTREE", "SERVER_DOWN", "Store", "True", "_StorageDict", "_from_json", "_match", "_match_query", "_paren_groups", "_sep", "_subs", "_to_json", "_uri", "attr", "attrs", "attrtype", "classmethod", "cls", "cmd", "count", "dict", "dn", "encoded", "field", "fields", "fnmatch", "hasattr", "hashdict", "inner", "jsonutils", "k", "key", "keys", "l", "len", "list", "modlist", "newattrs", "newdn", "newrdn", "object", "objects", "oldobj", "password", "pat", "pattern", "pos", "property", "query", "r", "range", "result", "ret", "scope", "self", "server_fail", "six", "source", "start", "store", "str", "subs", "super", "unencoded", "v", "val", "value", "value_dict", "values", "x", "Duplicate", "exception", "class", "from", "real", "LDAP", "module.\nDuplicate", "exception", "class", "from", "real", "LDAP", "module.\nDuplicate", "exception", "class", "from", "real", "LDAP", "module.\nOpens", "a", "fake", "connection", "with", "an", "LDAP", "server.\nSplit", "a", "string", "into", "parenthesized", "groups.\nMatch", "a", "given", "key", "and", "value", "against", "an", "attribute", "list.\nFake", "LDAP", "connection.\nThis", "method", "is", "ignored,", "but", "provided", "for", "compatibility.\nThis", "method", "is", "ignored,", "but", "provided", "for", "compatibility.\nAdd", "an", "object", "with", "the", "specified", "attributes", "at", "dn.\nRemove", "the", "ldap", "object", "at", "specified", "dn.\nGet", "the", "prefix", "to", "use", "for", "all", "keys.", "Not", "implemented\n", "cut", "off", "the", "parentheses\n", "cut", "off", "the", "&\n", "cut", "off", "the", "|\n", "cut", "off", "the", "!", "and", "the", "nested", "parentheses\n", "This", "is", "a", "wild", "card", "search.", "Implemented", "as", "all", "or", "nothing", "for", "now.\n", "it", "is", "an", "objectclass", "check,", "so", "check", "subclasses\n", "get", "the", "attributes", "from", "the", "store\n", "turn", "the", "values", "from", "the", "store", "into", "lists\n", "filter", "the", "objects", "by", "query\n", "filter", "the", "attributes", "by", "fields"], "/Users/mehranhassani/repos/nova/nova/policies/hosts.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "hosts_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/hosts.py": ["False", "update"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_loadables/fake_loadable2.py": ["BaseException", "FakeLoadableSubClass6", "fake_loadables", "Classes", "beginning", "with", "'_'", "will", "be", "ignored.\nNot", "a", "correct", "subclass.2"], "/Users/mehranhassani/repos/nova/nova/scheduler/weights/disk.py": ["CONF", "host_state", "minval", "nova", "self", "weight_properties", "weights", "Override", "the", "weight", "multiplier.\nHigher", "weights", "win.", "We", "want", "spreading", "to", "be", "the", "default."], "/Users/mehranhassani/repos/nova/nova/policies/extended_volumes.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "extended_volumes_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/compute/instance_actions.py": ["CHANGE_PASSWORD", "CONFIRM_RESIZE", "CREATE", "DELETE", "EVACUATE", "LIVE_MIGRATION", "LIVE_MIGRATION_CANCEL", "LIVE_MIGRATION_FORCE_COMPLETE", "MIGRATE", "PAUSE", "REBOOT", "REBUILD", "RESCUE", "RESIZE", "RESTORE", "RESUME", "REVERT_RESIZE", "SHELVE", "START", "STOP", "SUSPEND", "TRIGGER_CRASH_DUMP", "UNPAUSE", "UNRESCUE", "UNSHELVE"], "/Users/mehranhassani/repos/nova/nova/cmd/cert.py": ["CONF", "_LW", "__name__", "config", "gmr", "log", "logging", "nova", "objects", "server", "service", "sys", "utils", "version", "versionutils", "Starter", "script", "for", "Nova", "Cert."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_server_groups.py": ["AttrDict", "False", "None", "ServerGroupTestV21", "True", "admin_req", "all", "all_groups", "api_version", "attrs", "body", "context", "ctx", "dict", "exc", "exception", "expected", "fakes", "group_id", "groups", "id", "ig", "ig_uuid", "instance", "instances", "isinstance", "k", "kwargs", "len", "member", "members", "metadata", "mock", "mock_get_all", "mock_get_by_project", "names", "nova", "objects", "p_id", "path", "policies", "policy", "policy_fixture", "req", "res_dict", "resp", "result_members", "return_all_server_groups", "return_get_by_project", "return_server_group", "return_server_groups", "return_tenant_server_groups", "rule_name", "rules", "self", "server_group_db", "server_group_delete", "server_group_resp_template", "server_group_template", "sg", "sg1", "sg2", "sg_policies", "sg_v21", "sgroup", "status_int", "super", "tenant_groups", "tenant_specific", "test", "u_id", "uuidsentinel", "uuidutils", "validation_error", "webob", "wsgi_api_version", "test", "as", "admin\n", "test", "as", "non-admin\n", "override", "policy", "to", "restrict", "to", "admin\n", "check", "for", "success", "as", "admin\n", "check", "for", "failure", "as", "non-admin\n", "always", "empty\n", "test", "as", "admin\n", "test", "as", "non-admin\n", "always", "empty\n", "delete", "an", "instance\n", "check", "that", "the", "instance", "does", "not", "exist\n", "check", "that", "only", "the", "active", "instance", "is", "displayed\n", "test", "as", "admin\n", "test", "as", "non-admin,", "same", "project\n", "test", "as", "non-admin,", "different", "project\n", "override", "policy", "to", "restrict", "to", "admin\n", "check", "for", "success", "as", "admin\n", "check", "for", "failure", "as", "non-admin\n", "The", "fix", "for", "bug", "#1434335", "expanded", "the", "allowable", "character", "set\n", "for", "server", "group", "names", "to", "include", "non-alphanumeric", "characters\n", "if", "they", "are", "printable.\n", "blank", "name\n", "name", "with", "length", "256\n", "non-string", "name\n", "name", "with", "leading", "spaces\n", "name", "with", "trailing", "spaces\n", "name", "with", "all", "spaces\n", "name", "with", "unprintable", "character\n", "name", "with", "out", "of", "range", "char", "U0001F4A9\n", "blank", "policy\n", "policy", "as", "integer\n", "policy", "as", "string\n", "policy", "as", "None\n", "test", "as", "admin\n", "test", "as", "non-admin\n", "override", "policy", "to", "restrict", "to", "admin\n", "check", "for", "success", "as", "admin\n", "check", "for", "failure", "as", "non-admin\n", "NOTE:", "on", "v2.1,", "http", "status", "code", "is", "set", "as", "wsgi_code", "of", "API\n", "method", "instead", "of", "status_int", "in", "a", "response", "object.\n", "test", "as", "admin\n", "test", "as", "non-admin\n", "override", "policy", "to", "restrict", "to", "admin\n", "check", "for", "success", "as", "admin\n", "check", "for", "failure", "as", "non-admin"], "/Users/mehranhassani/repos/nova/nova/conductor/rpcapi.py": ["CONF", "ComputeTaskAPI", "ConductorAPI", "False", "None", "True", "VERSION_ALIASES", "admin_password", "args", "bdm_p", "bdms", "block_device_mapping", "block_migration", "build_requests", "cctxt", "clean_shutdown", "context", "ctxt", "dict", "disk_over_commit", "filter_properties", "flavor", "flavor_p", "host", "image", "image_p", "image_ref", "injected_files", "instance", "instances", "jsonutils", "kw", "kwargs", "legacy_bdm", "live", "messaging", "new_pass", "nova", "object", "object_versions", "objects_base", "objinst", "objmethod", "objname", "objver", "on_shared_storage", "orig_image_ref", "orig_sys_metadata", "ovo_base", "preserve_ephemeral", "rebuild", "recreate", "request_spec", "request_specs", "requested_networks", "reservations", "rpc", "scheduler_hint", "security_groups", "self", "serializer", "super", "target", "version", "version_cap", "versions", "Client", "side", "of", "the", "conductor", "RPC", "API.", "TODO(hanlind):", "This", "method", "can", "be", "removed", "once", "oslo.versionedobjects\n", "has", "been", "converted", "to", "use", "version_manifests", "in", "remotable_classmethod\n", "operations,", "which", "will", "use", "the", "new", "class", "action", "handler."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/cloudpipe.py": ["ALIAS", "CONF", "CloudpipeController", "False", "None", "_", "alias", "body", "cloudpipe", "cloudpipes", "compute", "compute_utils", "context", "cp_policies", "elevated", "exc", "exception", "extensions", "fileutils", "id", "instance", "instances", "ip", "ips", "msg", "name", "network", "networks", "nova", "nw", "nw_info", "objects", "params", "pipelib", "project_id", "req", "resource", "result", "rv", "self", "utils", "validation", "version", "vif", "vm_states", "vpn_ip", "vpn_port", "vpns", "wsgi", "x", "Connect", "your", "vlan", "to", "the", "world.\nHandle", "creating", "and", "listing", "cloudpipe", "instances.\nEnsure", "the", "keychains", "and", "folders", "exist.\nGet", "all", "cloudpipes.\nGet", "the", "cloudpipe", "instance", "for", "a", "project", "from", "context.\nList", "running", "cloudpipe", "instances.\nConfigure", "cloudpipe", "parameters", "for", "the", "project.", "NOTE(vish):", "One", "of", "the", "drawbacks", "of", "doing", "this", "in", "the", "api", "is\n", "the", "keys", "will", "only", "be", "on", "the", "api", "node", "that", "launched\n", "the", "cloudpipe.\n", "NOTE(vish):", "Currently", "network_api.get", "does", "an", "owner", "check", "on\n", "project_id.", "This", "is", "probably", "no", "longer", "necessary\n", "but", "rather", "than", "risk", "changes", "in", "the", "db", "layer,\n", "we", "are", "working", "around", "it", "here", "by", "changing", "the\n", "project_id", "in", "the", "context.", "This", "can", "be", "removed\n", "if", "we", "remove", "the", "project_id", "check", "in", "the", "db.\n", "NOTE(vish):", "downgrade", "to", "project", "context.", "Note", "that", "we", "keep\n", "the", "same", "token", "so", "we", "can", "still", "talk", "to", "glance"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_create_backup.py": ["CreateBackupPolicyEnforcementv21", "CreateBackupTestsV21", "CreateBackupTestsV239", "None", "_fake_controller", "admin_only_action_common", "args_map", "body", "body_map", "common", "controller_name", "create_backup", "create_backup_v21", "dict", "exc", "exception", "fakes", "getattr", "image", "instance", "metadata", "mock", "mock_check_quotas", "mock_get_instance", "res", "rule_name", "self", "super", "test", "validation_error", "webob", "Name", "is", "required", "for", "backups.\n", "Rotation", "is", "required", "for", "backup", "requests.\n", "Backup", "Type", "(daily", "or", "weekly)", "is", "required", "for", "backup", "requests.\n", "The", "happy", "path", "for", "creating", "backups", "if", "rotation", "is", "zero.\n", "The", "happy", "path", "for", "creating", "backups", "if", "rotation", "is", "positive.\n", "'mock_get_instance'", "helps", "to", "skip", "the", "whole", "logic", "of", "the", "action,\n", "but", "to", "make", "the", "test\n", "starting", "from", "version", "2.39", "no", "quota", "checks", "on", "Nova", "side", "are", "performed\n", "for", "'createBackup'", "action", "after", "removing", "'image-metadata'", "proxy", "API"], "/Users/mehranhassani/repos/nova/tools/install_venv_common.py": ["Distro", "False", "Fedora", "InstallVenv", "None", "True", "args", "argv", "bool", "check_exit_code", "cmd", "list", "message", "no_site_packages", "object", "optparse", "os", "output", "parser", "pkg", "print", "proc", "project", "py_version", "redirect_output", "requirements", "root", "self", "stdout", "subprocess", "super", "sys", "test_requirements", "venv", "Parses", "command-line", "arguments.", "First", "things", "first,", "make", "sure", "our", "venv", "has", "the", "latest", "pip", "and\n", "setuptools", "and", "pbr"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/eventlet_utils.py": ["args", "eventlet", "func", "kwargs", "self"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/versionsV21.py": ["ALIAS", "VersionsController", "alias", "builder", "extensions", "id", "mapper", "name", "req", "resources", "self", "version", "versions", "views_versions", "webob", "wsgi", "wsgi_resource", "API", "Version", "information."], "/Users/mehranhassani/repos/nova/nova/objects/request_spec.py": ["FAKE_UUID", "False", "None", "REQUEST_SPEC_OPTIONAL_ATTRS", "RequestSpec", "SchedulerLimits", "SchedulerRetries", "True", "VERSION", "_create_minimal_request_spec", "_get_marker_for_migrate_instances", "_set_or_delete_marker_for_migrate_instances", "api_models", "attrname", "attrs", "availability_zone", "base", "classmethod", "cls", "cn", "computes", "context", "count_all", "count_hit", "db", "db_mapping", "db_spec", "db_updates", "default", "dict", "exception", "field", "fields", "filt_props", "filter_properties", "flavor", "flavor_fields", "getattr", "getter", "hardware", "hint", "hint_name", "hint_val", "hints_dict", "host", "hosts", "image", "instance", "instance_fields", "instance_group", "instance_uuid", "instances", "isinstance", "jsonutils", "key", "legacy_hosts", "len", "limits", "limits_dict", "list", "marker", "max_count", "members", "node", "num_instances", "numa_topology", "obj_instance", "objects", "pci_req_cls", "pci_requests", "policies", "primitive", "property", "req_spec", "request_spec", "result", "retry", "retry_dict", "retry_obj", "scheduler_hints", "scheduler_utils", "security_groups", "self", "set", "setattr", "six", "spec", "spec_obj", "staticmethod", "super", "target_version", "updates", "value", "versionutils", "x", "y", "Creates", "and", "persists", "a", "RequestSpec", "per", "instance", "not", "yet", "having", "it.", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "ImageMeta", "version", "1.6\n", "Version", "1.2:", "SchedulerRetries", "version", "1.1\n", "Version", "1.3:", "InstanceGroup", "version", "1.10\n", "Version", "1.4:", "ImageMeta", "version", "1.7\n", "Version", "1.5:", "Added", "get_by_instance_uuid(),", "create(),", "save()\n", "Version", "1.6:", "Added", "requested_destination\n", "Version", "1.7:", "Added", "destroy()\n", "Version", "1.8:", "Added", "security_groups\n", "NOTE(sbauza):", "Since", "hints", "are", "depending", "on", "running", "filters,", "we", "prefer\n", "to", "leave", "the", "API", "correctly", "validating", "the", "hints", "per", "the", "filters", "and\n", "just", "provide", "to", "the", "RequestSpec", "object", "a", "free-form", "dictionary\n", "NOTE(sbauza):", "In", "case", "the", "primitive", "was", "not", "providing", "that", "field\n", "because", "of", "a", "previous", "RequestSpec", "version,", "we", "want", "to", "default\n", "that", "field", "in", "order", "to", "have", "the", "same", "behaviour.\n", "NOTE(sbauza):", "Until", "Nova", "is", "fully", "providing", "an", "ImageMeta", "object\n", "for", "getting", "properties,", "we", "still", "need", "to", "hydrate", "it", "here\n", "TODO(sbauza):", "To", "be", "removed", "once", "all", "RequestSpec", "hydrations", "are\n", "done", "on", "the", "conductor", "side", "and", "if", "the", "image", "is", "an", "ImageMeta\n", "NOTE(sbauza):", "Instance", "should", "normally", "be", "a", "NovaObject...\n", "NOTE(sbauza):", "...", "but", "there", "are", "some", "cases", "where", "request_spec\n", "has", "an", "instance", "key", "as", "a", "dictionary,", "just", "because\n", "select_destinations()", "is", "getting", "a", "request_spec", "dict", "made", "by\n", "sched_utils.build_request_spec()\n", "TODO(sbauza):", "To", "be", "removed", "once", "all", "RequestSpec", "hydrations", "are\n", "done", "on", "the", "conductor", "side\n", "If", "the", "instance", "is", "None,", "there", "is", "no", "reason", "to", "set", "the", "fields\n", "NOTE(sbauza):", "Again,", "request_spec", "is", "primitived", "by\n", "sched_utils.build_request_spec()", "and", "passed", "to\n", "select_destinations()", "like", "this\n", "TODO(sbauza):", "To", "be", "removed", "once", "all", "RequestSpec", "hydrations", "are\n", "done", "on", "the", "conductor", "side\n", "New-style", "group", "information", "as", "a", "NovaObject,", "we", "can", "directly", "set\n", "the", "field\n", "Old-style", "group", "information", "having", "ugly", "dict", "keys", "containing", "sets\n", "NOTE(sbauza):", "Can", "be", "dropped", "once", "select_destinations", "is", "removed\n", "hosts", "has", "to", "be", "not", "part", "of", "the", "updates", "for", "saving", "the", "object\n", "Set", "the", "value", "anyway", "to", "avoid", "any", "call", "to", "obj_attr_is_set", "for", "it\n", "Hydrate", "from", "request_spec", "first\n", "Hydrate", "now", "from", "filter_properties\n", "NOTE(sbauza):", "Default", "the", "other", "fields", "that", "are", "not", "part", "of", "the\n", "original", "contract\n", "NOTE(sbauza):", "Since", "the", "RequestSpec", "only", "persists", "a", "few", "Instance\n", "fields,", "we", "can", "only", "return", "a", "dict.\n", "NOTE(sbauza):", "Since", "this", "is", "only", "needed", "until", "the", "AffinityFilters", "are\n", "modified", "by", "using", "directly", "the", "RequestSpec", "object,", "we", "need", "to", "keep\n", "the", "existing", "dictionary", "as", "a", "primitive.\n", "NOTE(sbauza):", "We", "need", "to", "backport", "all", "the", "hints", "correctly", "since\n", "we", "had", "to", "hydrate", "the", "field", "by", "putting", "a", "single", "item", "into", "a", "list.\n", "NOTE(sbauza):", "Default", "the", "other", "fields", "that", "are", "not", "part", "of", "the\n", "original", "contract\n", "Load", "these", "from", "the", "db", "model", "not", "the", "serialized", "object", "within,\n", "though", "they", "should", "match.\n", "NOTE(alaski):", "The", "db", "schema", "is", "the", "full", "serialized", "object", "in", "a\n", "'spec'", "column.", "If", "anything", "has", "changed", "we", "rewrite", "the", "full", "thing.\n", "FIXME(sbauza):", "Provide", "a", "classmethod", "when", "oslo.db", "bug", "#1520195", "is\n", "fixed", "and", "released\n", "NOTE(sbauza):", "Make", "sure", "we", "don't", "persist", "this,", "we", "need", "to", "keep", "the\n", "original", "request", "for", "the", "forced", "hosts\n", "NOTE(sbauza):", "Since", "verifying", "a", "huge", "list", "of", "instances", "can", "be", "a", "performance\n", "impact,", "we", "need", "to", "use", "a", "marker", "for", "only", "checking", "a", "set", "of", "them.\n", "As", "the", "current", "model", "doesn't", "expose", "a", "way", "to", "persist", "that", "marker,", "we", "propose\n", "here", "to", "use", "the", "request_specs", "table", "with", "a", "fake", "(and", "impossible)", "instance\n", "UUID", "where", "the", "related", "spec", "field", "(which", "is", "Text)", "would", "be", "the", "marker,", "ie.\n", "the", "last", "instance", "UUID", "we", "checked.\n", "TODO(sbauza):", "Remove", "the", "CRUD", "helpers", "and", "the", "migration", "script", "in", "Ocata.\n", "NOTE(sbauza):", "RFC4122", "(4.1.7)", "allows", "a", "Nil", "UUID", "to", "be", "semantically", "accepted.\n", "We", "need", "to", "delete", "the", "old", "marker", "anyway,", "which", "no", "longer", "corresponds", "to\n", "the", "last", "instance", "we", "checked", "(if", "there", "was", "a", "marker)...\n", "NOTE(sbauza):", "delete()", "deletes", "rows", "that", "match", "the", "query", "and", "if", "none\n", "are", "found,", "returns", "0", "hits.\n", "...", "but", "there", "can", "be", "a", "new", "marker", "to", "set\n", "TODO(sbauza):", "Modify", "that", "once", "setup_instance_group()", "accepts", "a\n", "RequestSpec", "object\n", "This", "is", "an", "old", "instance.", "Let's", "try", "to", "populate", "a", "RequestSpec\n", "object", "using", "the", "existing", "information", "we", "have", "previously", "saved.\n", "Prevent", "lazy-load", "of", "those", "fields", "for", "every", "instance", "later.\n", "We", "want", "to", "persist", "which", "last", "instance", "was", "checked", "in", "order", "to", "make\n", "sure", "we", "don't", "review", "it", "again", "in", "a", "next", "call.\n", "Version", "1.0:", "Initial", "version\n", "NOTE(sbauza):", "Given", "we", "want", "to", "split", "the", "host/node", "relationship", "later\n", "and", "also", "remove", "the", "possibility", "to", "have", "multiple", "nodes", "per", "service,\n", "let's", "provide", "a", "possible", "nullable", "node", "here.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "ComputeNodeList", "version", "1.14\n", "NOTE(sbauza):", "Even", "if", "we", "are", "only", "using", "host/node", "strings,", "we", "need", "to\n", "know", "which", "compute", "nodes", "were", "tried\n", "NOTE(sbauza):", "We", "are", "not", "persisting", "the", "user", "context", "since", "it's", "only\n", "needed", "for", "hydrating", "the", "Retry", "object\n", "NOTE(sbauza):", "We", "prefer", "to", "return", "an", "empty", "object", "if", "the\n", "primitive", "is", "not", "good", "enough\n", "NOTE(sbauza):", "each", "retry_dict['hosts']", "item", "is", "a", "list", "of", "[host,", "node]\n", "Version", "1.0:", "Initial", "version\n", "NOTE(sbauza):", "Since", "the", "limits", "can", "be", "set", "for", "each", "field", "or", "not,", "we\n", "prefer", "to", "have", "the", "fields", "nullable,", "but", "default", "the", "value", "to", "None.\n", "Here", "we", "accept", "that", "the", "object", "is", "always", "generated", "from", "a", "primitive\n", "hence", "the", "use", "of", "obj_set_defaults", "exceptionally."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cmd/test_cmd_db_blocks.py": ["True", "compute", "cond", "conf", "contextlib", "db", "exception", "gmr", "mock", "mod", "network", "orig", "patch", "restore_db", "run_main", "self", "serv", "test"], "/Users/mehranhassani/repos/nova/nova/virt/driver.py": ["CONF", "ComputeDriver", "Exception", "False", "ImportError", "LOG", "None", "NotImplementedError", "True", "ValueError", "_", "_LE", "_LI", "__name__", "action", "admin_password", "aggregate", "all_instances", "attach_block_devices", "b64_contents", "b64_path", "bad_volumes_callback", "bdms", "block_device_info", "block_device_mapping", "block_device_obj", "block_migration", "callback", "capabilities", "compute_driver", "compute_host_bdms", "connection_info", "console_type", "context", "create_info", "data", "delete_info", "dest", "dest_check_data", "destroy_disks", "destroy_vifs", "detach_block_devices", "device_type", "diff", "disk_bus", "disk_id", "disk_info", "disk_over_commit", "driver", "dst_compute_info", "enabled", "encryption", "ephemerals", "event", "ex", "flavor", "fs_type", "host", "image_id", "image_meta", "importutils", "injected_files", "instance", "instance_info", "instances", "is_bootable", "isinstance", "len", "logging", "migrate_data", "migration", "mode", "mountpoint", "network_info", "new_connection_info", "new_pass", "nodename", "nova", "nw_info", "object", "old_connection_info", "op", "post_method", "power_on", "preserve_ephemeral", "property", "reboot_type", "recover_method", "recreate", "refresh", "rescue_password", "resize_instance", "resize_to", "retry_interval", "root_bdm", "root_device_name", "security_group_id", "self", "set_error", "six", "snapshot_id", "src_compute_info", "swap", "swap_list", "sys", "timeout", "update_task_state", "utils", "vif", "virt_block_device", "virtapi", "virtevent", "volume_id", "Attach", "the", "disk", "to", "the", "instance", "at", "mountpoint", "using", "info.\nDetach", "the", "disk", "attached", "to", "the", "instance.\nreset", "networking", "for", "specified", "instance.\nDefer", "application", "of", "IPTables", "rules.\nTurn", "off", "deferral", "of", "IPTables", "rules", "and", "apply", "the", "rules", "now.\nStop", "filtering", "instance.\ninject", "network", "info", "for", "specified", "instance.\nDoes", "the", "driver", "want", "networks", "deallocated", "on", "reschedule?\nUndo", "for", "Resource", "Pools.\nReturn", "whether", "this", "compute", "service", "manages", "a", "particular", "node.\nDefault", "the", "missing", "device", "names", "in", "the", "block", "device", "mapping.", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "TODO(Vek):", "Need", "to", "pass", "context", "in", "for", "access", "to", "auth_token\n", "NOTE(markus_z):", "2015-08-18\n", "The", "compute", "manager", "doesn't", "use", "this", "interface,", "which", "seems", "odd\n", "since", "the", "manager", "should", "be", "the", "controlling", "thing", "here.\n", "NOTE(jogo)", "Currently", "only", "used", "for", "XenAPI-Pool\n", "Refresh", "and", "check", "again.\n", "NOTE(jichenjc):", "Return", "False", "here", "so", "that", "every", "hypervisor\n", "need", "to", "define", "their", "supported", "file", "system\n", "type", "and", "implement", "this", "function", "at", "their\n", "virt", "layer."], "/Users/mehranhassani/repos/nova/nova/conf/guestfs.py": ["False", "cfg", "conf", "enable_guestfs_debug_opts", "guestfs_group"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/bittorrent.py": ["DEFAULT_MMA", "DEFAULT_MORQ", "DEFAULT_MQDB", "DEFAULT_MQDBLW", "DEFAULT_SEED_CACHE", "DEFAULT_TORRENT_CACHE", "Exception", "False", "IOError", "Mi", "None", "SEEDER_PROCESS", "True", "__name__", "_active_seeder_processes", "_download", "_extract_tarball", "_fetch_torrent_file", "_make_seed_cache", "_make_torrent_cache", "_reap_finished_seeds", "_reap_old_torrent_files", "_seed", "_seed_if_needed", "_should_seed", "cmdline", "download_vhd", "e", "errno", "fname", "image_id", "info", "inspect", "int", "last_accessed", "last_progress", "last_progress_updated", "len", "libtorrent", "list", "log_time", "logging", "map", "max_out_request_queue", "max_queued_disk_bytes", "max_queued_disk_bytes_low_watermark", "missing", "mixed_mode_algorithm", "num_active_seeders", "open", "os", "pid", "pids", "plugin_path", "pluginlib_nova", "progress", "rand", "random", "remote_torrent_file", "s", "save_as_path", "seed_cache_path", "seed_cmd", "seed_filename", "seed_path", "seeder_path", "session", "session_opts", "shutil", "sr_path", "staging_path", "stall_duration", "str", "tarball_filename", "tarball_fileobj", "tarball_path", "temp_directory", "temp_file", "temp_path", "tempfile", "time", "torrent", "torrent_cache_path", "torrent_download_stall_cutoff", "torrent_listen_port_end", "torrent_listen_port_start", "torrent_max_last_accessed", "torrent_max_seeder_processes_per_host", "torrent_path", "torrent_seed_chance", "torrent_seed_duration", "torrent_url", "urllib2", "utils", "uuid_stack", "vdi_list", "Download", "images", "via", "BitTorrent.\nDelete", "any", "torrent", "files", "that", "haven't", "been", "accessed", "recently.\nExtract", "the", "tarball", "into", "the", "staging", "directory.\nDelete", "any", "cached", "seeds", "where", "the", "seeder", "process", "has", "died.", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "Taken", "from", "units", "since", "we", "don't", "pull", "down", "full", "library\n", "Write", "contents", "to", "temporary", "path", "to", "ensure", "we", "don't", "have", "partially\n", "completed", "files", "in", "the", "cache.\n", "Daemonize", "and", "seed", "the", "image\n", "noqa\n", "Housekeeping\n", "Download", "tarball", "into", "staging", "area\n", "Extract", "the", "tarball", "into", "the", "staging", "area\n", "Move", "the", "VHDs", "from", "the", "staging", "area", "into", "the", "storage", "repository\n", "Seed", "image", "for", "others", "in", "the", "swarm"], "/Users/mehranhassani/repos/nova/nova/exception_wrapper.py": ["CONF", "Exception", "None", "_cleanse_dict", "_emit_exception_notification", "_emit_legacy_exception_notification", "_emit_versioned_exception_notification", "_get_call_dict", "args", "base", "binary", "call_dict", "context", "dict", "e", "event_type", "ex", "exception", "excutils", "f", "fields", "function", "function_name", "functools", "get_notifier", "inner", "inspect", "k", "kw", "notification", "notifier", "nova", "original", "payload", "publisher", "safe_utils", "self", "six", "v", "versioned_exception_payload", "wrapped", "wrapped_func", "Strip", "all", "admin_password,", "new_pass,", "rescue_pass", "keys", "from", "a", "dict.", "Don't", "store", "self", "or", "context", "in", "the", "payload,", "it", "now", "seems", "to\n", "contain", "confidential", "information.\n", "self", "can't", "be", "serialized", "and", "shouldn't", "be", "in", "the\n", "payload"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/vfs/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_access_ips.py": ["AccessIPsAPIValidationTestV21", "False", "body", "context", "exception", "ext_info", "extension_info", "fake", "fake_rebuild", "fake_save", "fakes", "key", "params", "res", "res_dict", "self", "server", "servers_v21", "super", "test", "v4_key", "v6_key", "validation_error", "value", "test", "with", "admin", "passwords", "disabled", "See", "lp", "bug", "921814"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/quota_classes.py": ["False", "quota_sets", "update"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_exception.py": ["FakeNovaException", "FakeNovaException_Remote", "KeyError", "None", "TypeError", "WrapExceptionTestCase", "bad_function_exception", "bad_function_unknown_module", "blah", "boo", "code", "context", "ctxt", "dir", "e", "etree", "exc", "exception", "exception_wrapper", "extra", "failures", "fake_notifier", "getattr", "good_function", "inspect", "isinstance", "issubclass", "key", "kwargs", "len", "msg_fmt", "name", "notification", "obj", "payload", "rpc", "self", "six", "staticmethod", "status_reasons", "super", "test", "type", "wrapped", "x", "zoo", "NOTE(dprince):", "disable", "format", "errors", "since", "we", "are", "not", "passing", "kwargs"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/pci.py": ["ALIAS", "False", "None", "PCI_ADMIN_KEYS", "PCI_DETAIL_KEYS", "Pci", "PciController", "PciHypervisorController", "PciServerController", "True", "action", "alias", "compute", "compute_extension", "compute_node", "compute_nodes", "context", "detail", "dev", "dev_dict", "dev_id", "device", "dict", "e", "exception", "extensions", "field", "getattr", "hypervisor", "hypervisors", "id", "instance", "key", "list", "name", "node", "objects", "pci_dev", "pci_devs", "pci_policies", "pci_pool", "pci_pools", "req", "resources", "resp_obj", "result", "results", "self", "server", "server_extension", "servers", "version", "webob", "wsgi", "Pci", "access", "support."], "/Users/mehranhassani/repos/nova/nova/tests/unit/image/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/netutils.py": ["CONF", "False", "None", "StopIteration", "True", "_get_default_route", "_get_dns_services", "_get_eth_link", "_get_first_network", "_get_nets", "address", "address_v6", "broadcast", "cidr", "dns", "dns_v6", "env", "gateway", "gateway_v6", "get_net_and_mask", "have_ipv6", "hwaddress", "i", "ifc_num", "int", "ip", "ip_v6", "ipv6_is_available", "jinja2", "libvirt_virt_type", "link", "link_id", "links", "mask", "model", "net", "net_info", "net_num", "netaddr", "netmask", "netmask_v6", "nets", "network", "network_info", "new_route", "next", "nic_type", "nova", "os", "route", "route_addr", "route_ref", "routes", "services", "str", "subnet", "subnet_v4", "subnet_v6", "template", "tmpl_file", "tmpl_path", "use_ipv6", "version", "vif", "Network-related", "utilities", "for", "supporting", "libvirt", "connection", "code.\nGet", "the", "DNS", "servers", "for", "the", "subnet.", "Using", "a", "generator", "expression", "with", "a", "next()", "call", "for", "the", "first", "element\n", "of", "a", "list", "since", "we", "don't", "want", "to", "evaluate", "the", "whole", "list", "as", "we", "can\n", "have", "a", "lot", "of", "subnets\n", "NOTE(bnemec):", "The", "template", "only", "supports", "a", "single", "subnet", "per\n", "interface", "and", "I'm", "not", "sure", "how/if", "that", "can", "be", "fixed,", "so", "this\n", "code", "only", "takes", "the", "first", "subnet", "of", "the", "appropriate", "type.\n", "IPv4", "or", "IPv6", "networks\n", "VIFs,", "physical", "NICs,", "or", "VLANs.", "Physical", "NICs", "will", "have", "type", "'phy'.\n", "Non-network", "bound", "services,", "such", "as", "DNS\n", "NOTE(JoshNang)", "currently,", "only", "supports", "the", "first", "IPv4", "and", "first\n", "IPv6", "subnet", "on", "network,", "a", "limitation", "that", "also", "exists", "in", "the\n", "network", "template.\n", "Get", "the", "VIF", "or", "physical", "NIC", "data\n", "Add", "IPv4", "and", "IPv6", "networks", "if", "they", "exist\n", "Use", "'phy'", "for", "physical", "links.", "Ethernet", "can", "be", "confusing\n", "Add", "any", "additional", "routes", "beyond", "the", "default", "route"], "/Users/mehranhassani/repos/nova/nova/api/ec2/ec2utils.py": ["False", "LOG", "None", "StopIteration", "True", "ValueError", "_", "_CACHE", "_CACHE_TIME", "_LI", "__name__", "_c2u", "_ms_time_regex", "_negative_zero", "_try_convert", "abs", "args", "attach_status", "base", "cache_utils", "camelcase_to_underscore", "char", "context", "ctxt", "d", "ec2_attach_status", "ec2_id", "ec2_id_to_id", "ec2_re", "epsilon", "exception", "expires", "expiry_time", "f", "filters", "fixed_ips", "float", "func", "functools", "get_instance_uuid_from_int_id", "get_int_id_from_instance_uuid", "get_int_id_from_snapshot_uuid", "get_int_id_from_volume_uuid", "get_ip_info_for_instance_from_nw_info", "get_snapshot_uuid_from_int_id", "get_volume_uuid_from_int_id", "glance_id", "glance_id_to_id", "id_to_ec2_id", "id_to_glance_id", "image_ec2_id", "image_id", "image_type", "imap", "info_cache", "instance", "instance_id", "instance_uuid", "int", "int_id", "ip", "ip_info", "isinstance", "items", "iter", "iter_ec2_re", "k", "key", "known_types", "len", "logging", "lowered_value", "memoize", "memoizer", "msg", "network_model", "next", "next_char", "nw_info", "obj_base", "objects", "parse_strtime", "parts", "prefix", "py_re", "query_time", "re", "reqid", "request", "resource_id", "s3imap", "six", "smap", "snapshot_id", "snapshot_uuid", "str", "strtime", "template", "time_format", "timestamp", "timeutils", "type_marker", "uuidutils", "v", "value", "vmap", "volume", "volume_id", "volume_status", "volume_uuid", "Convert", "an", "internal", "(db)", "id", "to", "a", "glance", "id.\nConvert", "a", "glance", "id", "to", "an", "internal", "(db)", "id.\nConvert", "an", "ec2", "ID", "(i-[base", "16", "number])", "to", "an", "instance", "id", "(int).\nReturns", "image", "ec2_id", "using", "id", "and", "three", "letter", "type.\nReturn", "a", "dictionary", "of", "IP", "information", "for", "an", "instance.\nConvert", "an", "instance", "ID", "(int)", "to", "an", "ec2", "ID", "(i-[base", "16", "number]).\nGet", "or", "create", "an", "ec2", "instance", "ID", "(i-[base", "16", "number])", "from", "uuid.\n\"Convert", "an", "instance", "id", "to", "uuid.\nGet", "or", "create", "an", "ec2", "volume", "ID", "(vol-[base", "16", "number])", "from", "uuid.\nGet", "or", "create", "an", "ec2", "volume", "ID", "(vol-[base", "16", "number])", "from", "uuid.\nGet", "the", "corresponding", "UUID", "for", "the", "given", "ec2-id.\nGet", "the", "corresponding", "UUID", "for", "the", "given", "ec2-id.", "NOTE(vish):", "cache", "mapping", "for", "one", "week\n", "FIXME(comstud):", "Temporary", "as", "we", "transition", "to", "objects.\n", "Make", "sure", "empty", "response", "is", "turned", "into", "the", "model\n", "NOTE(jgriffith)", "first", "strip", "prefix", "to", "get", "just", "the", "numeric\n", "NOTE(MotoKen):", "time", "format", "for", "aws-sdk-java", "contains", "millisecond\n", "Check", "if", "the", "difference", "between", "the", "timestamp", "in", "the", "request\n", "and", "the", "time", "on", "our", "servers", "is", "larger", "than", "5", "minutes,", "the\n", "request", "is", "too", "old", "(or", "too", "new).\n", "NOTE(jgriffith)", "first", "strip", "prefix", "to", "get", "just", "the", "numeric\n", "NOTE(vish):", "Automatically", "convert", "strings", "back\n", "into", "their", "respective", "values"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/vmops.py": ["CONF", "DEFAULT_FIREWALL_DRIVER", "DEVICE_CD", "DEVICE_CONFIGDRIVE", "DEVICE_EPHEMERAL", "DEVICE_RESCUE", "DEVICE_ROOT", "DEVICE_SWAP", "Exception", "False", "LOG", "None", "NotImplementedError", "RESIZE_TOTAL_STEPS", "RuntimeError", "True", "_", "_LE", "_LI", "_LW", "__name__", "_get_uuid", "_ignore", "_is_active", "_process_ephemeral_chain_recursive", "_sr", "active_root_vdi_uuid", "active_uuid", "active_vdi_uuids", "addl_args", "admin_password", "agent", "aggregate_list", "allowed_chars", "apply_security_group_filters_step", "args", "attach_devices_step", "attach_disks", "attach_orig_disks_step", "attach_pci_devices", "auto_disk_config", "bad_devices", "bad_volumes_callback", "base64", "bdm", "bdms", "block_device", "block_device_info", "block_device_map", "block_device_mapping", "block_migration", "boot_and_configure_instance_step", "bump_progress", "bw", "cd_vdi", "chain_vdi_uuids", "change", "check_rescue", "cleanup_vdi_copy", "command_name", "completed_callback", "compute", "configdrive", "conn_data", "conn_info", "connection_data", "connection_info", "contents", "context", "convert_route", "counters", "create_copy_vdi_and_resize", "create_disks_step", "create_image_vdis", "create_kernel_ramdisk_step", "create_vm_record_step", "ctxt", "ctype", "d", "data_dict", "dest", "dest_check_data", "destination_hostname", "destination_sr_ref", "destref", "destroy_disks", "details", "determine_disk_image_type_step", "dev_to_passthrough", "device", "device_id", "device_name", "devices", "dict", "diff", "disk_image_type", "disk_info", "disk_over_commit", "dns", "dom", "dom_id", "domid", "duration", "e", "enumerate", "eph_vdis", "ephemeral_chains", "ephemeral_disk_index", "ephemeral_disk_number", "ephemeral_gb", "ephemeral_vdi", "ephemeral_vdi_uuid", "ephemeral_vdi_uuids", "ephemeral_vdis", "err_msg", "error", "event_name", "eventlet", "events", "exc", "exception", "exclude_volumes", "excutils", "expiration", "expr", "f", "fake_step_to_match_resizing_up", "fake_step_to_show_snapshot_complete", "files", "firewall", "first_boot", "fixed_ip_dict", "flavor", "float", "functools", "get_ip", "greenthread", "host_ref", "host_uuid", "hostname", "ignore_missing", "ignore_missing_path", "image_id", "image_meta", "image_type", "immutable_root_vdi_uuids", "import_root", "importutils", "inactive_vdi_uuids", "info_dict", "inject_instance_data_step", "injected_files", "inner", "instance", "instance_ref", "instance_uuid", "instances", "instances_info", "int", "ip", "is_bootable", "iscsi_srs", "jsonutils", "kernel", "kernel_file", "key", "kwargs", "label", "len", "list", "location", "logging", "mac", "major_ver", "major_version", "make_step_decorator", "memory_mb", "method", "micro_ver", "migrate_data", "migrate_send_data", "migration", "minor_ver", "mode", "mount_device", "msg", "name", "name_label", "name_labels", "net_devices", "netaddr", "netmask", "netutils", "network", "network_info", "new_gb", "new_pass", "new_ref", "new_root_gb", "new_size", "new_vdi_ref", "new_vdi_uuid", "nova", "nova_context", "nova_uuid", "nova_uuids", "null_step_decorator", "number_of_chains", "nwref", "obj_fields", "object", "objects", "old_gb", "old_vdi_ref", "options", "ord", "orig_vdi_refs", "orig_vm_ref", "original_vm_ref", "other_config", "params", "path", "pci_address", "pci_manager", "pifkey", "pifs", "plugin", "pool_states", "post_method", "power_down_and_transfer_leaf_vhds", "power_on", "power_state", "process_change", "progress", "ramdisk", "ramdisk_file", "raw_console_data", "reason", "reboot_type", "recover_method", "remaining_chains", "rename_and_power_off_vm", "rescue", "rescue_name_label", "rescue_password", "rescue_vm_mode", "rescue_vm_ref", "resize", "resize_down", "resize_instance", "restore_orig_vm", "ret", "rollback_error", "root_device_name", "root_disk_size", "root_vdi", "root_vdi_ref", "root_vdi_uuid", "root_vdi_uuids", "root_vol_vdi", "round", "route", "routes", "rv", "security_group_id", "self", "seq_num", "session", "session_id", "set", "setup_network_step", "six", "sizes", "sr_path", "sr_rec", "sr_ref", "sr_uuid", "sr_uuid_map", "src", "start_pause", "start_paused_step", "start_time", "state", "staticmethod", "step", "step_decorator", "step_info", "store_auto_disk_config", "store_meta", "str", "strutils", "subnet", "swap_mb", "swap_vdi_ref", "task", "task_created", "task_rec", "task_ref", "task_refs", "task_states", "time", "timeout", "timeutils", "topdir", "total_ephemeral_gb", "total_offset", "total_steps", "transfer_ephemeral_disks_then_all_leaf_vdis", "transfer_immutable_vhds", "transfer_vhd_to_dest", "type_", "undo_attach_orig_disks", "undo_create_disks", "undo_create_kernel_ramdisk", "undo_create_vm", "undo_mgr", "units", "update_hostname", "update_instance_progress", "update_meta", "update_nwinfo", "update_task_state", "usage", "use_pv_kernel", "userdevice", "utils", "uuid", "v4_subnets", "v6_subnets", "val", "value", "vbd", "vbd_ref", "vbd_refs", "vdi", "vdi_info", "vdi_map", "vdi_ref", "vdi_refs", "vdi_uuid", "vdi_uuids", "vdis", "version", "vhd_num", "vif", "vif_data", "vif_impl", "vif_list", "vif_map", "vif_num", "vif_ref", "vif_refs", "vifs_bw", "virt_driver", "virtapi", "vm", "vm_rec", "vm_ref", "vm_states", "vm_utils", "vm_vdi_rec", "vm_vdis", "vol", "vol_vdi_ref", "vol_vdi_refs", "volume_id", "volume_utils", "volumeops", "vrec", "x", "xapi_agent", "xs_data", "xs_path", "zlib", "Management", "class", "for", "VM-related", "tasks.\nList", "VM", "instances.\nPower", "on", "a", "VM", "instance.\nCreate", "or", "connect", "to", "all", "virtual", "disks", "for", "this", "instance.\nAttach", "all", "the", "cinder", "volumes", "described", "in", "block_device_info.\nPrevent", "an", "instance", "from", "booting.\nAllow", "an", "instance", "to", "boot.\nCleans", "up", "any", "resources", "left", "after", "a", "failed", "snapshot.\nReboot", "VM", "instance.\nSet", "the", "root/admin", "password", "on", "the", "VM", "instance.\nWrite", "a", "file", "to", "the", "VM", "instance.\nInject", "instance", "metadata", "into", "xenstore.\nInject", "instance's", "auto_disk_config", "attribute", "into", "xenstore.\nApply", "changes", "to", "instance", "metadata", "to", "xenstore.\nFind", "and", "return", "the", "root", "and", "ephemeral", "vdi", "refs", "for", "a", "VM.\nDestroys", "all", "VDIs", "associated", "with", "a", "VM.\nDestroy", "a", "rescue", "instance.\nPause", "VM", "instance.\nUnpause", "VM", "instance.\nSuspend", "the", "specified", "instance.\nResume", "the", "specified", "instance.\nSet", "the", "ability", "to", "power", "on/off", "an", "instance.\nSoft", "delete", "the", "specified", "instance.\nRestore", "the", "specified", "instance.\nPower", "off", "the", "specified", "instance.\nPower", "on", "the", "specified", "instance.\nCancel", "the", "given", "tasks", "that", "are", "older", "than", "the", "given", "timeout.\nReturn", "data", "about", "VM", "instance.\nReturn", "data", "about", "VM", "diagnostics.\nReturn", "data", "about", "VM", "diagnostics", "using", "the", "common", "API.\nReturn", "last", "few", "lines", "of", "instance", "console.\nReturn", "connection", "info", "for", "a", "vnc", "console.\nconvert", "a", "network", "info", "vif", "to", "injectable", "instance", "data.\nCreates", "vifs", "for", "an", "instance.\nSet", "up", "VIF", "networking", "on", "the", "host.\nCalls", "resetnetwork", "method", "in", "agent.\nInject", "the", "hostname", "of", "the", "instance", "into", "the", "xenstore.\nrecreates", "security", "group", "rules", "for", "every", "instance.\nrecreates", "security", "group", "rules", "for", "specified", "instance.\nRemoves", "filters", "for", "each", "VIF", "of", "the", "specified", "instance.\ngenerate", "a", "vdi_map", "for", "_call_live_migrate_command.\nunpack", "xapi", "specific", "parameters,", "and", "call", "a", "live", "migrate", "command.\nGet", "usage", "info", "about", "each", "active", "instance.", "Note(johngarbutt)", "HVM", "guests", "only", "support", "four", "devices\n", "until", "the", "PV", "tools", "activate,", "when", "others", "before", "available\n", "As", "such,", "ephemeral", "disk", "only", "available", "once", "PV", "tools", "load\n", "Note(johngarbutt)", "When", "very", "large", "ephemeral", "storage", "is", "required,\n", "multiple", "disks", "may", "be", "added.", "In", "this", "case", "the", "device", "id", "below\n", "is", "the", "used", "for", "the", "first", "disk.", "The", "second", "disk", "will", "be", "given\n", "next", "device", "id,", "i.e.", "5,", "and", "so", "on,", "until", "enough", "space", "is", "added.\n", "Note(johngarbutt)", "Currently", "don't", "support", "ISO", "boot", "during", "rescue\n", "and", "we", "must", "have", "the", "ISO", "visible", "before", "the", "PV", "drivers", "start\n", "TODO(justinsb):", "Should", "we", "just", "always", "use", "the", "details", "method?\n", "Seems", "to", "be", "the", "same", "number", "of", "API", "calls..\n", "We", "are", "attaching", "these", "volumes", "before", "start", "(no", "hotplugging)\n", "because", "some", "guests", "(windows)", "don't", "load", "PV", "drivers", "quickly\n", "NOTE(alaski):", "The", "root", "device", "should", "be", "attached", "already\n", "NOTE(sirp):", "the", "original", "vm", "was", "suffixed", "with", "'-orig';", "find", "it", "using\n", "the", "old", "suffix,", "remove", "the", "suffix,", "then", "power", "it", "back", "on.\n", "NOTE(danms):", "if", "we're", "reverting", "migration", "in", "the", "failure", "case,\n", "make", "sure", "we", "don't", "have", "a", "conflicting", "vm", "still", "running", "here,\n", "as", "might", "be", "the", "case", "in", "a", "failed", "migrate-to-same-host", "situation\n", "Remove", "the", "'-orig'", "suffix", "(which", "was", "added", "in", "case", "the\n", "resized", "VM", "ends", "up", "on", "the", "source", "host,", "common", "during\n", "testing)\n", "We", "crashed", "before", "the", "-orig", "backup", "was", "made\n", "NOTE(alaski):", "Follows", "the", "basic", "procedure", "of\n", "vm_utils.get_vdis_for_instance()", "used", "by", "spawn()\n", "TODO(johngarbutt)", "clean", "up", "if", "this", "is", "not", "run\n", "Attached", "volumes", "that", "have", "become", "non-responsive", "will", "prevent", "a", "VM\n", "from", "starting,", "so", "scan", "for", "these", "before", "attempting", "to", "start\n\n", "In", "order", "to", "make", "sure", "this", "detach", "is", "consistent", "(virt,", "BDM,", "cinder),\n", "we", "only", "detach", "in", "the", "virt-layer", "if", "a", "callback", "is", "provided.\n", "Allow", "higher-layers", "a", "chance", "to", "detach", "bad-volumes", "as", "well", "(in", "order\n", "to", "cleanup", "BDM", "entries", "and", "detach", "in", "Cinder)\n", "Do", "some", "operations", "which", "have", "to", "be", "done", "after", "start:\n", "e.g.", "The", "vif's", "interim", "bridge", "won't", "be", "created", "until", "VM", "starts.\n", "So", "the", "operations", "on", "the", "interim", "bridge", "have", "be", "done", "after\n", "start.\n", "If", "we", "didn't", "get", "a", "root", "VDI", "from", "volumes,\n", "then", "use", "the", "Glance", "image", "as", "the", "root", "device\n", "Fetch", "VDI", "refs", "now", "so", "we", "don't", "have", "to", "fetch", "the", "ref", "multiple", "times\n", "NOTE(mriedem):", "block_device_info", "can", "contain", "an", "auth_password\n", "so", "we", "have", "to", "scrub", "the", "message", "before", "logging", "it.\n", "If", "we're", "a", "root-device,", "record", "that", "fact", "so", "we", "don't\n", "download", "a", "root", "image", "via", "Glance\n", "Otherwise,", "use", "mount_device", "as", "`type_`", "so", "that", "we", "have\n", "easy", "access", "to", "it", "in", "_attach_disks", "to", "create", "the", "VBD\n", "Remove", "the", "first", "comma", "if", "string", "is", "not", "empty.\n", "Note(guillaume-thouvenin):", "If", "dev_to_passthrough", "is", "empty,", "we\n", "don't", "need", "to", "update", "other_config.\n", "NOTE(johannes):", "Attach", "disks", "from", "original", "VM", "to", "rescue", "VM", "now,\n", "before", "booting", "the", "VM,", "since", "we", "can't", "hotplug", "block", "devices\n", "on", "non-PV", "guests\n", "Destroy", "the", "VBDs", "in", "preparation", "to", "re-attach", "the", "VDIs\n", "to", "its", "original", "VM.", "(does", "not", "delete", "VDI)\n", "NOTE:", "We", "add", "the", "hostname", "here", "so", "windows", "PV", "tools\n", "can", "pick", "it", "up", "during", "booting\n", "NOTE(sirp):", "The", "create_disks()", "step", "will", "potentially", "take", "a\n", "*very*", "long", "time", "to", "complete", "since", "it", "has", "to", "fetch", "the", "image\n", "over", "the", "network", "and", "images", "can", "be", "several", "gigs", "in", "size.", "To\n", "avoid", "progress", "remaining", "at", "0%", "for", "too", "long,", "make", "sure", "the\n", "first", "step", "is", "something", "that", "completes", "rather", "quickly.\n", "if", "use", "neutron,", "prepare", "waiting", "event", "from", "neutron\n", "first_boot", "is", "True", "in", "new", "booted", "instance\n", "first_boot", "is", "False", "in", "migration", "and", "we", "don't", "waiting\n", "for", "neutron", "event", "regardless", "of", "whether", "or", "not", "it", "is\n", "migrated", "to", "another", "host,", "if", "unplug", "VIFs", "locally,", "the\n", "port", "status", "may", "not", "changed", "in", "neutron", "side", "and", "we\n", "cannot", "get", "the", "vif", "plug", "event", "from", "neturon\n", "We", "didn't", "get", "callback", "from", "Neutron", "within", "given", "time\n", "Only", "get", "network-vif-plugged", "events", "with", "VIF's", "status", "is", "not", "active.\n", "With", "VIF", "whose", "status", "is", "active,", "neutron", "may", "not", "notify", "such", "event.\n", "Attach", "original", "root", "disk\n", "Attach", "original", "swap", "disk\n", "Attach", "original", "ephemeral", "disks\n", "NOTE(tpownall):", "If", "rescue", "mode", "then", "we", "should", "try", "to", "pull", "the", "vm_mode\n", "value", "from", "the", "image", "properties", "to", "ensure", "the", "vm", "is", "built", "properly.\n", "Update", "database", "with", "normalized", "(or", "determined)", "value\n", "Attach", "(required)", "root", "disk\n", "DISK_ISO", "needs", "two", "VBDs:", "the", "ISO", "disk", "and", "a", "blank", "RW", "disk\n", "NOTE(tpownall):", "If", "rescue", "mode", "we", "need", "to", "ensure", "that", "we're\n", "pulling", "the", "auto_disk_config", "value", "from", "the", "image", "properties", "so\n", "that", "we", "can", "pull", "it", "from", "the", "rescue_image_ref.\n", "Attach", "(optional)", "additional", "block-devices\n", "Additional", "block-devices", "for", "boot", "use", "their", "device-name", "as", "the\n", "type.\n", "Convert", "device", "name", "to", "user", "device", "number,", "e.g.", "/dev/xvdb", "->", "1\n", "For", "rescue,", "swap", "and", "ephemeral", "disks", "get", "attached", "in\n", "_attach_orig_disks\n", "Attach", "(optional)", "swap", "disk\n", "attach", "existing", "(migrated)", "ephemeral", "disks\n", "create", "specified", "ephemeral", "disks\n", "Attach", "(optional)", "configdrive", "v2", "disk\n", "NOTE(johngarbutt)", "the", "agent", "object", "allows", "all", "of\n", "the", "following", "steps", "to", "silently", "fail\n", "NOTE(salvatore-orlando):", "setup_basic_filtering", "might", "be\n", "empty", "or", "not", "implemented", "at", "all,", "as", "basic", "filter", "could\n", "be", "implemented", "with", "VIF", "rules", "created", "by", "xapi", "plugin\n", "FIXME(sirp):", "for", "now", "we're", "taking", "a", "KISS", "approach", "to", "instance\n", "progress:\n", "Divide", "the", "action's", "workflow", "into", "discrete", "steps", "and", "\"bump\"", "the\n", "instance's", "progress", "field", "as", "each", "step", "is", "completed.\n\n", "For", "a", "first", "cut", "this", "should", "be", "fine,", "however,", "for", "large", "VM", "images,\n", "the", "get_vdis_for_instance", "step", "begins", "to", "dominate", "the", "equation.", "A\n", "better", "approximation", "would", "use", "the", "percentage", "of", "the", "VM", "image", "that\n", "has", "been", "streamed", "to", "the", "destination", "host.\n", "Do", "not", "need", "to", "restore", "block", "devices,", "not", "yet", "been", "removed\n", "Clean", "up", "VDI", "now", "that", "it's", "been", "copied\n", "This", "method", "is", "called", "several", "times,", "recursively.\n", "The", "first", "phase", "snapshots", "the", "ephemeral", "disks,", "and\n", "migrates", "the", "read", "only", "VHD", "files.\n", "The", "final", "call", "into", "this", "method", "calls\n", "power_down_and_transfer_leaf_vhds\n", "to", "turn", "off", "the", "VM", "and", "copy", "the", "rest", "of", "the", "VHDs.\n", "If", "we", "get", "here,", "we", "have", "snapshotted", "and", "migrated\n", "all", "the", "ephemeral", "disks,", "so", "its", "time", "to", "power", "down\n", "and", "complete", "the", "migration", "of", "the", "diffs", "since", "the", "snapshot\n", "Here", "we", "take", "a", "snapshot", "of", "the", "ephemeral", "disk,\n", "and", "migrate", "all", "VHDs", "in", "the", "chain", "that", "are", "not", "being", "written", "to\n", "Once", "that", "is", "completed,", "we", "call", "back", "into", "this", "method", "to", "either:\n", "-", "migrate", "any", "remaining", "ephemeral", "disks\n", "-", "or,", "if", "all", "disks", "are", "migrated,", "we", "power", "down", "and", "complete\n", "the", "migration", "but", "copying", "the", "diffs", "since", "all", "the", "snapshots\n", "were", "taken\n", "remember", "active", "vdi,", "we", "will", "migrate", "these", "later\n", "migrate", "inactive", "vhds\n", "This", "is", "recursive", "to", "simplify", "the", "taking", "and", "cleaning", "up\n", "of", "all", "the", "ephemeral", "disk", "snapshots\n", "NOTE(alaski):", "This", "is", "done", "twice", "to", "match", "the", "number", "of\n", "defined", "steps.\n", "NOTE(alaski):", "This", "is", "set", "to", "None", "to", "avoid", "transferring", "the\n", "VHD", "in", "power_down_and_transfer_leaf_vhds.\n", "snapshot", "and", "transfer", "all", "ephemeral", "disks\n", "then", "power", "down", "and", "transfer", "any", "diffs", "since\n", "the", "snapshots", "were", "taken\n", "NOTE(johngarbutt)", "snapshot", "attached", "here", "will", "delete\n", "the", "snapshot", "if", "an", "error", "occurs\n", "transfer", "all", "the", "non-active", "VHDs", "in", "the", "root", "disk", "chain\n", "snapshot", "and", "transfer", "all", "ephemeral", "disks\n", "then", "power", "down", "and", "transfer", "any", "diffs", "since\n", "the", "snapshots", "were", "taken\n", "TODO(johngarbutt)", "should", "also", "cleanup", "VHDs", "at", "destination\n", "NOTE(sirp):", "in", "case", "we're", "resizing", "to", "the", "same", "host", "(for", "dev\n", "purposes),", "apply", "a", "suffix", "to", "name-label", "so", "the", "two", "VM", "records\n", "extant", "until", "a", "confirm_resize", "don't", "collide.\n", "0.", "Zero", "out", "the", "progress", "to", "begin\n", "NOTE(sirp):", "disk_info", "isn't", "used", "by", "the", "xenapi", "driver,", "instead", "it\n", "uses", "a", "staging-area", "(/images/instance<uuid>)", "and", "sequence-numbered\n", "VHDs", "to", "figure", "out", "how", "to", "reconstruct", "the", "VDI", "chain", "after", "syncing\n", "Don't", "resize", "root", "volumes.\n", "NOTE(johngarbutt)", "no", "existing", "(migrated)", "ephemeral", "disks\n", "to", "resize,", "so", "nothing", "more", "to", "do", "here.\n", "resize", "existing", "(migrated)", "ephemeral", "disks,\n", "and", "add", "any", "extra", "disks", "if", "required", "due", "to", "a\n", "larger", "total_ephemeral_gb", "(resize", "down", "is", "not", "supported).\n", "NOTE(johngarbutt)", "we", "generate", "but", "don't", "attach\n", "the", "new", "disk", "to", "make", "up", "any", "additional", "ephemeral", "space\n", "Note", "(salvatore-orlando):", "security", "group", "rules", "are", "not", "re-enforced\n", "upon", "reboot,", "since", "this", "action", "on", "the", "XenAPI", "drivers", "does", "not\n", "remove", "existing", "filters\n", "Store", "user", "metadata\n", "NOTE(johngarbutt)", "race", "conditions", "mean", "we", "can", "still", "get", "here\n", "during", "operations", "where", "the", "VM", "is", "not", "present,", "like", "resize.\n", "Skip", "the", "update", "when", "not", "possible,", "as", "the", "updated", "metadata", "will\n", "get", "added", "when", "the", "VM", "is", "being", "booted", "up", "at", "the", "end", "of", "the\n", "resize", "or", "rebuild.\n", "If", "the", "VM", "is", "not", "running", "then", "no", "need", "to", "update\n", "the", "live", "xenstore", "-", "the", "param", "xenstore", "will", "be\n", "used", "next", "time", "the", "VM", "is", "booted\n", "If", "the", "VM", "is", "not", "running", "then", "no", "need", "to", "update\n", "the", "live", "xenstore\n", "1.", "No", "kernel", "or", "ramdisk\n", "2.", "We", "only", "have", "kernel", "xor", "ramdisk\n", "3.", "We", "have", "both", "kernel", "and", "ramdisk\n", "Shutdown", "Rescue", "VM\n", "Destroy", "Rescue", "VDIs\n", "Don't", "destroy", "any", "VDIs", "belonging", "to", "the", "original", "VM\n", "Destroy", "Rescue", "VM\n", "We", "don't", "use", "_get_vm_opaque_ref", "because", "the", "instance", "may\n", "truly", "not", "exist", "because", "of", "a", "failure", "during", "build.", "A", "valid\n", "vm_ref", "is", "checked", "correctly", "where", "necessary.\n", "NOTE(sirp):", "information", "about", "which", "volumes", "should", "be", "detached", "is\n", "determined", "by", "the", "VBD.other_config['osvol']", "attribute\n", "NOTE(alaski):", "`block_device_info`", "is", "used", "to", "efficiently", "determine", "if\n", "there's", "a", "volume", "attached,", "or", "which", "volumes", "to", "cleanup", "if", "there", "is\n", "no", "VM", "present.\n", "NOTE(alaski):", "There", "should", "not", "be", "a", "block", "device", "mapping", "here,\n", "but", "if", "there", "is", "it", "very", "likely", "means", "there", "was", "an", "error", "cleaning\n", "it", "up", "previously", "and", "there", "is", "now", "an", "orphaned", "sr/pbd.", "This", "will\n", "prevent", "both", "volume", "and", "instance", "deletes", "from", "completing.\n", "Note(bobba):", "Check", "for", "the", "old-style", "SR", "first;", "if", "this\n", "doesn't", "find", "the", "SR,", "also", "look", "for", "the", "new-style", "from\n", "parse_sr_info\n", "NOTE(alaski):", "Attempt", "clean", "shutdown", "first", "if", "there's", "an", "attached\n", "volume", "to", "reduce", "the", "risk", "of", "corruption.\n", "NOTE(jk0):", "All", "existing", "clean_reboot", "tasks", "must", "be", "canceled", "before\n", "we", "can", "kick", "off", "the", "hard_reboot", "tasks.\n", "The", "rescue", "instance", "might", "not", "be", "ready", "at", "this", "point.\n", "The", "compute", "manager", "expects", "InstanceNotFound", "for", "this", "case.\n", "NOTE:", "XS5.6sp2+", "use", "http", "over", "port", "80", "for", "xenapi", "com\n", "NOTE(tr3buchet):", "routes", "and", "DNS", "come", "from", "all", "subnets\n", "NOTE(tr3buchet):", "gateway", "and", "broadcast", "from", "first", "subnet\n", "primary", "IP", "will", "be", "from", "first", "subnet\n", "subnets", "are", "generally", "unordered", ":(\n", "NOTE(tr3buchet):", "gateway", "from", "first", "subnet\n", "primary", "IP", "will", "be", "from", "first", "subnet\n", "subnets", "are", "generally", "unordered", ":(\n", "If", "the", "VM", "is", "not", "running,", "no", "need", "to", "update", "the\n", "live", "xenstore\n", "this", "function", "raises", "if", "vm_ref", "is", "not", "a", "vm_opaque_ref\n", "NOTE(jk0):", "Windows", "host", "names", "can", "only", "be", "<=", "15", "chars.\n", "NOTE(sulo):", "These", "need", "to", "be", "string", "for", "valid", "field", "type\n", "for", "xapi.\n", "Get", "the", "network", "to", "for", "migrate.\n", "This", "is", "the", "one", "associated", "with", "the", "pif", "marked", "management.", "From", "cli:\n", "uuid=`xe", "pif-list", "--minimal", "management=true`\n", "xe", "pif-param-get", "param-name=network-uuid", "uuid=$uuid\n", "Check", "if", "it's", "on", "an", "iSCSI", "SR\n", "Notes(eliqiao):", "if", "block_migration", "is", "None,", "we", "calculate", "it\n", "by", "checking", "if", "src", "and", "dest", "node", "are", "in", "same", "aggregate\n", "TODO(eilqiao):", "There", "is", "still", "one", "case", "that", "block_migration", "is\n", "passed", "from", "admin", "user,", "so", "we", "need", "this", "check", "until\n", "block_migration", "flag", "is", "removed", "from", "API\n", "TODO(johngarbutt)", "we", "currently", "assume\n", "instance", "is", "on", "a", "SR", "shared", "with", "other", "destination\n", "block", "migration", "work", "will", "be", "able", "to", "resolve", "this\n", "XAPI", "must", "support", "the", "relaxed", "SR", "check", "for", "live", "migrating", "with\n", "iSCSI", "VBDs\n", "Since", "driver", "version", "is", "reported", "we", "do", "not", "need", "to", "do", "anything\n", "xenstore", "reports", "back", "string", "only,", "if", "the", "path", "is", "missing", "we", "get\n", "None", "as", "string,", "since", "missing", "paths", "are", "ignored.\n", "NOTE(sulo):", "We", "infer", "the", "presence", "of", "pv", "driver\n", "by", "the", "presence", "of", "a", "pv", "network", "device.", "If", "xenstore", "reports\n", "device", "status", "as", "connected", "(status=4)", "we", "take", "that", "as", "the", "presence\n", "of", "pv", "driver.", "Any", "other", "status", "will", "likely", "cause", "migration", "to", "fail.\n", "NOTE(coreywright):", "though", "a", "nullable", "object", "field,", "migrate_send_data\n", "is", "required", "for", "XenAPI", "live", "migration", "commands\n", "NOTE(coreywright):", "convert", "to", "xmlrpc", "marshallable", "type\n", "Add", "destination", "SR", "refs", "for", "all", "of", "the", "VDIs", "that", "we", "created\n", "as", "part", "of", "the", "pre", "migration", "callback\n", "Source", "and", "destination", "SRs", "have", "the", "same", "UUID,", "so", "get", "the\n", "reference", "for", "the", "local", "SR\n", "NOTE(sulo):", "We", "try", "to", "ensure", "that", "PV", "driver", "information", "is\n", "present", "in", "xenstore", "for", "the", "instance", "we", "are", "trying", "to\n", "live-migrate,", "if", "the", "process", "of", "faking", "pv", "version", "info", "fails,\n", "we", "simply", "log", "it", "and", "carry", "on", "with", "the", "rest", "of", "the", "process.\n", "Any", "xapi", "error", "due", "to", "PV", "version", "are", "caught", "and", "migration\n", "will", "be", "safely", "reverted", "by", "the", "rollback", "process.\n", "Tidy", "up", "the", "iSCSI", "SRs\n", "FIXME(johngarbutt):", "we", "should", "block", "all", "traffic", "until", "we", "have\n", "applied", "security", "groups,", "however", "this", "requires", "changes", "to", "XenServer\n", "NOTE(johngarbutt)", "workaround", "XenServer", "bug", "CA-98606\n", "Disconnect", "the", "volumes", "we", "just", "connected"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/aggregate.py": ["PUT_AGGREGATES_SCHEMA", "True", "_send_aggregates", "_serialize_aggregates", "aggregate_uuids", "context", "jsonutils", "microversion", "objects", "req", "resource_provider", "response", "util", "uuid", "webob", "Aggregate", "handlers", "for", "Placement", "API."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/fakelibvirt.py": ["Connection", "Domain", "DomainSnapshot", "Exception", "FAKE_LIBVIRT_VERSION", "FAKE_QEMU_VERSION", "FakeLibvirtFixture", "FakePciDevice", "False", "HostInfo", "HostPciSRIOVDevicesInfo", "KeyError", "NWFilter", "NodeDevice", "None", "PF_CAP_TYPE", "PF_DRIVER_NAME", "PF_PROD_NAME", "PF_SLOT", "True", "VF_CAP_TYPE", "VF_DRIVER_NAME", "VF_PROD_NAME", "VF_SLOT", "VIR_CONNECT_BASELINE_CPU_EXPAND_FEATURES", "VIR_CONNECT_LIST_DOMAINS_ACTIVE", "VIR_CONNECT_LIST_DOMAINS_INACTIVE", "VIR_CONNECT_RO", "VIR_CPU_COMPARE_ERROR", "VIR_CPU_COMPARE_IDENTICAL", "VIR_CPU_COMPARE_INCOMPATIBLE", "VIR_CPU_COMPARE_SUPERSET", "VIR_CRED_AUTHNAME", "VIR_CRED_CNONCE", "VIR_CRED_ECHOPROMPT", "VIR_CRED_EXTERNAL", "VIR_CRED_LANGUAGE", "VIR_CRED_NOECHOPROMPT", "VIR_CRED_PASSPHRASE", "VIR_CRED_REALM", "VIR_CRED_USERNAME", "VIR_DOMAIN_AFFECT_CONFIG", "VIR_DOMAIN_AFFECT_CURRENT", "VIR_DOMAIN_AFFECT_LIVE", "VIR_DOMAIN_BLOCKED", "VIR_DOMAIN_BLOCK_COMMIT_RELATIVE", "VIR_DOMAIN_BLOCK_JOB_ABORT_ASYNC", "VIR_DOMAIN_BLOCK_JOB_ABORT_PIVOT", "VIR_DOMAIN_BLOCK_REBASE_COPY", "VIR_DOMAIN_BLOCK_REBASE_RELATIVE", "VIR_DOMAIN_BLOCK_REBASE_REUSE_EXT", "VIR_DOMAIN_BLOCK_REBASE_SHALLOW", "VIR_DOMAIN_CRASHED", "VIR_DOMAIN_EVENT_DEFINED", "VIR_DOMAIN_EVENT_ID_LIFECYCLE", "VIR_DOMAIN_EVENT_PMSUSPENDED", "VIR_DOMAIN_EVENT_RESUMED", "VIR_DOMAIN_EVENT_SHUTDOWN", "VIR_DOMAIN_EVENT_STARTED", "VIR_DOMAIN_EVENT_STOPPED", "VIR_DOMAIN_EVENT_SUSPENDED", "VIR_DOMAIN_EVENT_UNDEFINED", "VIR_DOMAIN_JOB_BOUNDED", "VIR_DOMAIN_JOB_CANCELLED", "VIR_DOMAIN_JOB_COMPLETED", "VIR_DOMAIN_JOB_FAILED", "VIR_DOMAIN_JOB_NONE", "VIR_DOMAIN_JOB_UNBOUNDED", "VIR_DOMAIN_NOSTATE", "VIR_DOMAIN_PAUSED", "VIR_DOMAIN_RUNNING", "VIR_DOMAIN_SHUTDOWN", "VIR_DOMAIN_SHUTOFF", "VIR_DOMAIN_SNAPSHOT_CREATE_DISK_ONLY", "VIR_DOMAIN_SNAPSHOT_CREATE_NO_METADATA", "VIR_DOMAIN_SNAPSHOT_CREATE_QUIESCE", "VIR_DOMAIN_SNAPSHOT_CREATE_REUSE_EXT", "VIR_DOMAIN_START_PAUSED", "VIR_DOMAIN_UNDEFINE_MANAGED_SAVE", "VIR_DOMAIN_XML_INACTIVE", "VIR_DOMAIN_XML_MIGRATABLE", "VIR_DOMAIN_XML_SECURE", "VIR_DOMAIN_XML_UPDATE_CPU", "VIR_ERR_AGENT_UNRESPONSIVE", "VIR_ERR_ARGUMENT_UNSUPPORTED", "VIR_ERR_CONFIG_UNSUPPORTED", "VIR_ERR_INTERNAL_ERROR", "VIR_ERR_INVALID_ARG", "VIR_ERR_NO_DOMAIN", "VIR_ERR_NO_NODE_DEVICE", "VIR_ERR_NO_NWFILTER", "VIR_ERR_NO_SECRET", "VIR_ERR_NO_SUPPORT", "VIR_ERR_OPERATION_FAILED", "VIR_ERR_OPERATION_INVALID", "VIR_ERR_OPERATION_TIMEOUT", "VIR_ERR_SYSTEM_ERROR", "VIR_ERR_XML_DETAIL", "VIR_FROM_DOMAIN", "VIR_FROM_NODEDEV", "VIR_FROM_NWFILTER", "VIR_FROM_QEMU", "VIR_FROM_REMOTE", "VIR_FROM_RPC", "VIR_MIGRATE_AUTO_CONVERGE", "VIR_MIGRATE_LIVE", "VIR_MIGRATE_NON_SHARED_INC", "VIR_MIGRATE_PEER2PEER", "VIR_MIGRATE_PERSIST_DEST", "VIR_MIGRATE_POSTCOPY", "VIR_MIGRATE_TUNNELLED", "VIR_MIGRATE_UNDEFINE_SOURCE", "VIR_NODE_CPU_STATS_ALL_CPUS", "VIR_SECRET_USAGE_TYPE_CEPH", "VIR_SECRET_USAGE_TYPE_ISCSI", "VIR_SECRET_USAGE_TYPE_NONE", "VIR_SECRET_USAGE_TYPE_VOLUME", "ValueError", "__name__", "_calc_numa_node", "_parse_disk_info", "acpi", "active_cpus", "addr_templ", "allow_default_uri_connection", "arch", "arch_node", "auth", "bandwidth", "base", "callable", "callback", "cap", "cb", "cbinfo", "cell", "cell_count", "classmethod", "cls", "conn", "connection", "connection_used", "cpu", "cpuNum", "cpu_cores", "cpu_count", "cpu_disabled", "cpu_map", "cpu_mhz", "cpu_model", "cpu_nodes", "cpu_num", "cpu_sockets", "cpu_threads", "cpu_vendor", "cpus", "ctxt", "dconnuri", "definition", "defmsg", "desturi", "detail", "dev", "dev_group", "dev_name", "dev_type", "device", "device_name", "device_nodes", "devices", "disable_event_thread", "disk", "disk_info", "disks", "disks_info", "dname", "dom", "domain", "downtime", "driver", "dxml", "element", "error_class", "error_code", "error_domain", "error_level", "error_message", "etree", "event", "eventid", "evloop", "exc", "features", "fixtures", "flag", "flags", "group", "handler", "host_info", "hv_version", "i", "int", "int1", "int2", "isinstance", "k", "kB_mem", "kb_mem", "len", "libvirtError", "list", "logical_sum", "mac", "make_libvirtError", "memory", "mempages", "miguri", "model_node", "module", "msg", "name", "net", "nic", "nic_info", "nics", "nics_info", "nodedev", "num_pfs", "num_vfs", "numa_mempages_list", "numa_node", "numa_topology", "nwfilter", "obj_fields", "object", "opaque", "os", "os_boot", "os_cmdline", "os_initrd", "os_kernel", "os_type", "params", "password", "pci_dev", "pci_dev_name", "pci_dev_template", "pci_info", "pf_caps", "pf_product_id", "pool", "product_id", "range", "readonly", "root", "running", "self", "set", "six", "size", "slot", "snapshot", "socket_count", "source", "str", "str1", "str2", "str3", "stub_os_vif", "super", "sys", "target", "thread", "time", "top", "topology", "total_cpus", "total_numa_nodes", "transient", "tree", "type", "uri", "uri_whitelist", "usage_id", "usage_type_obj", "user", "uuid_elem", "uuids", "v", "vconfig", "vcpu", "vcpus", "vendor_node", "version", "vf_caps", "vf_product_id", "vf_ratio", "virConnect", "virDomain", "virNodeDevice", "vm", "vms", "vol", "x", "xml", "Return", "spoofed", "capabilities.\nAdd", "new", "libvirt", "API.", "Allow", "passing", "None", "to", "the", "various", "connect", "methods\n", "(i.e.", "allow", "the", "client", "to", "rely", "on", "default", "URLs)\n", "Has", "libvirt", "connection", "been", "used", "at", "least", "once\n", "virDomainState\n", "NOTE(mriedem):", "These", "values", "come", "from", "include/libvirt/libvirt-domain.h\n", "libvirtError", "enums\n", "(Intentionally", "different", "from", "what's", "in", "libvirt.", "We", "do", "this", "to", "check,\n", "that", "consumers", "of", "the", "library", "are", "using", "the", "symbolic", "names", "rather", "than\n", "hardcoding", "the", "numerical", "values)\n", "Readonly\n", "virConnectBaselineCPU", "flags\n", "snapshotCreateXML", "flags\n", "blockCommit", "flags\n", "blockRebase", "flags\n", "secret", "type\n", "Libvirt", "version", "to", "match", "MIN_LIBVIRT_VERSION", "in", "driver.py\n", "Libvirt", "version", "to", "match", "MIN_QEMU_VERSION", "in", "driver.py\n02x'", "function='0x%(dev)d'/>\n", "Generate", "PFs\n", "Generate", "VFs\n", "Set", "mempages", "per", "numa", "cell.", "if", "numa_mempages_list", "is", "empty\n", "we", "will", "set", "only", "the", "default", "4K", "pages.\n", "because", "we", "are", "patching", "a", "method", "in", "a", "class", "MonkeyPatch", "doesn't\n", "auto", "import", "correctly.", "Import", "explicitly", "otherwise", "the", "patching\n", "may", "silently", "fail.\n", "noqa\n", "Create", "an", "unsupported", "error", "exception\n", "FIXME:", "Not", "handling", "flags", "at", "the", "moment\n", "FIXME:", "Not", "handling", "flags", "at", "the", "moment\n", "NOTE(danms):", "This", "is", "an", "array", "of", "12", "integers,", "so", "just", "report\n", "something", "to", "avoid", "an", "IndexError", "if", "we", "look", "at", "this\n", "from", "LibvirtDriver._uri()\n", "from", "LibvirtDriver._uri()\n", "libvirt", "reserves", "0", "for", "the", "hypervisor.\n", "The", "rest", "of", "the", "stuff", "libvirt", "implements", "is", "rather", "complicated\n", "and", "I", "don't", "think", "it", "adds", "much", "value", "to", "replicate", "it", "here.\n", "Some", "modules", "load", "the", "libvirt", "library", "in", "a", "strange", "way\n", "NOTE(mdbooth):", "The", "strange", "incantation", "below", "means", "'this", "module'\n", "Make", "sure", "to", "never", "try", "and", "actually", "plug", "VIFs", "in", "os-vif", "unless\n", "we're", "explicitly", "testing", "that", "code", "and", "the", "test", "itself", "will\n", "handle", "the", "appropriate", "mocking."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_aggregate_multitenancy_isolation_filters.py": ["TestAggregateMultitenancyIsolationFilter", "agg_mock", "ami", "fakes", "host", "mock", "objects", "self", "set", "spec_obj", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_stats.py": ["None", "StatsTestCase", "_get", "fake_instance", "i", "instance", "len", "os_type", "proj_id", "range", "self", "state", "stats", "super", "task_states", "tasks", "test", "updates", "uuids", "values", "vm_states", "vms", "Tests", "for", "compute", "node", "stats.", "no", "change"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_build_request.py": ["Exception", "False", "None", "block_devices", "context", "ctxt", "datetime", "db_build_request", "db_req", "fake_block_device", "fake_db_req", "fake_instance", "field", "fields", "instance", "instance_uuid", "isinstance", "jsonutils", "name", "objects", "req_obj", "setattr", "updates", "uuids", "uuidutils", "value", "This", "will", "always", "be", "set", "this", "way", "for", "an", "instance", "at", "build", "time\n", "create()", "can't", "be", "called", "if", "this", "is", "set\n", "This", "should", "never", "be", "a", "changed", "field"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/weights/test_weights_affinity.py": ["None", "SoftAffinityWeigherTestCase", "SoftAntiAffinityWeigherTestCase", "SoftWeigherTestBase", "affinity", "expected_host", "expected_weight", "fakes", "host", "host_values", "hostinfo_list", "hosts", "mock", "mock_log", "node", "objects", "policy", "request_spec", "self", "super", "test", "values", "weighed_host", "weights", "We", "do", "not", "know", "the", "host,", "all", "have", "same", "weight.\n", "call", "twice", "and", "assert", "that", "only", "one", "warning", "is", "emitted\n", "We", "do", "not", "know", "the", "host,", "all", "have", "same", "weight.\n", "call", "twice", "and", "assert", "that", "only", "one", "warning", "is", "emitted"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/vfs/fakeguestfs.py": ["CAN_SET_OWNERSHIP", "EVENT_APPLIANCE", "EVENT_LIBRARY", "EVENT_TRACE", "EVENT_WARNING", "False", "None", "RuntimeError", "SUPPORT_CLOSE_ON_EXIT", "SUPPORT_RETURN_DICT", "True", "TypeError", "args", "cfgpath", "content", "dev", "device", "dict", "enabled", "events", "file", "flags", "format", "func", "gid", "kwargs", "mntpoint", "mode", "mountpoints", "object", "options", "path", "root", "self", "settings", "uid"], "/Users/mehranhassani/repos/nova/nova/conf/conductor.py": ["ALL_OPTS", "True", "cfg", "conductor_group", "conf", "migrate_opts"], "/Users/mehranhassani/repos/nova/nova/objects/migration.py": ["False", "Migration", "None", "True", "VERSION", "attrname", "base", "cls", "confirm_window", "context", "db", "db_migration", "db_migrations", "dest_compute", "determine_migration_type", "exception", "fields", "filters", "hasattr", "host", "instance", "instance_uuid", "key", "migration", "migration_id", "migration_type", "node", "objects", "primitive", "property", "self", "staticmethod", "status", "super", "target_version", "updates", "use_slave", "value", "versionutils", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Added", "migration_type", "and", "hidden\n", "Version", "1.3:", "Added", "get_by_id_and_instance()\n", "Version", "1.4:", "Added", "migration", "progress", "detail\n", "NOTE(danms):", "The", "only", "reason", "we'd", "need", "to", "load", "this", "is", "if\n", "some", "older", "node", "sent", "us", "one.", "So,", "guess", "the", "type.\n", "Version", "1.0:", "Initial", "version\n", "Migration", "<=", "1.1\n", "Version", "1.1:", "Added", "use_slave", "to", "get_unconfirmed_by_dest_compute\n", "Version", "1.2:", "Migration", "version", "1.2\n", "Version", "1.3:", "Added", "a", "new", "function", "to", "get", "in", "progress", "migrations\n", "for", "an", "instance."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_ds_util_datastore_selection.py": ["DynamicProperty", "False", "MoRef", "None", "ObjectContent", "ResultSet", "True", "VMwareDSUtilDatastoreSelectionTestCase", "best_match", "collections", "data", "datastore_regex", "datastores", "ds_obj", "ds_util", "enumerate", "id", "index", "mock_data", "name_list", "obj", "objects", "prop_names", "property", "re", "rec", "row", "self", "super", "test", "units", "value", "datastores", "will", "have", "a", "moref_id", "of", "ds-000", "and\n", "so", "on", "based", "on", "their", "index", "in", "the", "mock_data", "list\n", "only", "the", "DS", "some-name-good", "is", "accessible", "and", "matches", "the", "regex\n", "no", "matches", "are", "expected", "when", "'summary.accessible'", "is", "missing\n", "the", "current", "best", "match", "is", "better", "than", "all", "candidates"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/005_flavors.py": ["Boolean", "Column", "DateTime", "False", "Float", "ForeignKeyConstraint", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "flavor_extra_specs", "flavor_projects", "flavors", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/253_add_pci_requests_to_instance_extra_table.py": ["BASE_TABLE_NAME", "Column", "MetaData", "NEW_COLUMN_NAME", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/285_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/monitors/cpu/test_virt_driver.py": ["FakeDriver", "FakeResourceTracker", "driver", "len", "m", "metric", "metrics", "mock", "mocked", "monitor", "names", "object", "objects", "self", "test", "virt_driver", "Tests", "for", "Compute", "Driver", "CPU", "resource", "monitor.", "Some", "conversion", "to", "a", "dict", "to", "ease", "testing...\n", "We", "want", "to", "ensure", "that", "the", "virt", "driver's", "get_host_cpu_stats()\n", "is", "only", "ever", "called", "once,", "otherwise", "values", "for", "monitor", "metrics\n", "might", "be", "illogical", "--", "e.g.", "pct", "cpu", "times", "for", "user/system/idle\n", "may", "add", "up", "to", "more", "than", "100."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/test_inject.py": ["False", "OrderedDict", "True", "VirtDiskTest", "called", "diskapi", "exception", "fake_has_file", "fake_make_path", "fake_salt", "fakeguestfs", "fixtures", "imgmodel", "len", "metadata", "os", "os_name", "self", "shadow", "shadow_dir", "shadow_file", "sorted", "super", "test", "vfs", "vfsguestfs", "Cause", "password", "injection", "to", "fail\n", "The", "following", "ssh", "\"", "+\n!/bin/sh\\n#", "Added", "by", "\"", "+\n", "The", "following", "ssh", "\"", "+\n!/bin/sh\\necho", "done\")\n!/bin/sh\\necho", "done\\n#", "Added", "\"\n", "if", "the", "encrypted", "password", "is", "only", "13", "characters", "long,", "then\n", "nova.virt.disk.api:_set_password", "fell", "back", "to", "DES.\n", "test", "for", "already", "exists", "dir\n", "test", "for", "root", "dir\n", "test", "for", "null", "dir"], "/Users/mehranhassani/repos/nova/nova/utils.py": ["CONF", "DEFAULT_PASSWORD_SYMBOLS", "EASIER_PASSWORD_SYMBOLS", "Exception", "False", "IOError", "KeyError", "LOG", "NOT_PRESENT", "None", "OSError", "RootwrapDaemonHelper", "RootwrapProcessHelper", "SM_IMAGE_PROP_PREFIX", "SM_INHERITABLE_KEYS", "SM_SKIP_KEYS", "TIME_UNITS", "True", "TypeError", "UnicodeDecodeError", "UnicodeEncodeError", "VIM_IMAGE_ATTRIBUTES", "ValueError", "_", "_FILE_CACHE", "_IS_NEUTRON", "_LE", "_LI", "_LW", "__import__", "__name__", "_clients", "_context", "_decorator", "_decorator_checker", "_default", "_err", "_filter_metadata", "_get_id", "_i", "_match_any", "_x", "a", "adc_lowered", "addr", "address", "any", "arg", "arg_names", "argdict", "args", "argspec", "at", "attempts", "attr", "auto_disk_config_disabled", "auto_disk_config_raw", "b_value", "base", "base_f", "base_str", "before", "begin", "bool", "c", "cache_info", "characters", "check_exit_code", "choices", "clazz", "client", "client_sess", "cls", "clz", "cmd", "col1", "common_context", "condition", "context_wrapper", "contextlib", "copy", "data", "date_string", "datetime", "dct", "dec", "decode_ok", "decorator", "decorator_name", "default", "default_name", "delattr", "delay_on_retry", "delete", "delete_cached_file", "dest", "dev", "dict", "dict_property", "dict_value", "discard_warnings", "e", "encodeutils", "encountered", "end", "end_time", "err", "errno", "eventlet", "ex", "exception", "excutils", "execute", "exn", "f", "failed", "fap", "file_like_object", "file_path", "filename", "filt", "flavor", "fmt", "fn", "force_reload", "format", "formatted_metadata_list", "fs", "func", "functools", "get", "get_root_helper", "getattr", "hasattr", "hashlib", "host", "hostname", "identifier", "ids", "if_str", "ignore_exit_code", "image_meta", "image_properties", "importutils", "include_deleted", "input_metadata", "inspect", "instance", "instance_sys_meta", "int", "interface", "ip", "ip_segment", "is_dict_like", "is_method", "isinstance", "item", "k", "key", "keys_filter", "kw", "kwargs", "label", "label_opt", "len", "length", "line", "lines", "links", "lockutils", "log_errors", "logging", "loglevel", "mac", "map", "max", "max_length", "max_value", "messaging", "metadata", "metadata_to_dict", "metadata_type", "method", "min_length", "min_value", "missing", "module", "module_and_decorator", "module_data", "month", "msg", "mtime", "name", "net", "netaddr", "network", "new_client", "new_value", "nova", "num", "num_defaults", "obj", "object", "offset", "old_value", "old_values", "open", "orig_uid", "os", "out", "output_metadata", "owner_uid", "partition", "password", "path", "pattern", "pattern_list", "port", "prefix_format", "prettytable", "process_input", "processutils", "properties", "pt", "pyclbr", "r", "random", "range", "re", "received", "reloaded", "remaining", "required_args", "res", "resource", "resource_list", "resource_type", "result", "returncode", "reversed", "rightnow", "rootwrap_config", "run_as_root", "s", "safe_ip_format", "safe_truncate", "safe_utils", "sanitized_cmd", "saxutils", "search_filt", "search_filts", "self", "server_sess", "server_str", "session_id", "set", "set_value", "setattr", "shutil", "six", "size", "sock", "socket", "sorted", "ssh_cmd", "start_time", "str", "string", "struct", "strutils", "subclass", "subsubclass", "symbolgroups", "symbols", "synchronized", "sys", "sys_meta", "system_meta", "target", "tempfile", "textwrap", "thing", "time", "timeout", "timeutils", "tmpdir", "topic", "truncate_hostname", "tz", "u_value", "undo_func", "unit", "units", "v", "val", "value", "values_filter", "volume", "w", "walk_class_hierarchy", "wrap", "wrapper", "x", "year", "Utilities", "and", "helper", "functions.\nConvenience", "wrapper", "around", "oslo's", "execute()", "method.\nConvenience", "wrapper", "to", "execute", "ssh", "command.\nConvenience", "wrapper", "around", "oslo's", "trycmd()", "method.\nChecks", "that", "obj", "is", "of", "type", "cls,", "and", "lets", "PyLint", "infer", "types.\nGenerate", "an", "Ethernet", "MAC", "address.\nSecure", "helper", "to", "read", "file", "as", "root.\nWalk", "class", "hierarchy,", "yielding", "most", "derived", "classes", "first.\nMake", "sure", "that", "value", "is", "a", "valid", "integer,", "potentially", "within", "range.", "used", "in", "limits\n", "Keys", "which", "hold", "large", "structured", "data", "that", "won't", "fit", "in", "the\n", "size", "constraints", "of", "the", "system_metadata", "table,", "so", "we", "avoid\n", "storing", "and/or", "loading", "them.\n", "Legacy", "names\n", "Modern", "names\n", "Image", "attributes", "which", "Cinder", "stores", "in", "volume", "image", "metadata\n", "as", "regular", "properties\n", "NOTE(tonyb)", "session_id", "isn't", "used", "for", "a", "real", "VPN", "connection", "so", "using", "a\n", "cryptographically", "weak", "value", "is", "fine.\n", "Handle", "commands", "that", "output", "to", "stderr", "but", "otherwise", "succeed\n", "NOTE(dims):", "This", "method", "is", "to", "provide", "compatibility", "with", "the\n", "processutils.execute", "interface.", "So", "that", "calling", "daemon", "or", "direct\n", "rootwrap", "to", "honor", "the", "same", "set", "of", "flags", "in", "kwargs", "and", "to", "ensure\n", "that", "we", "don't", "regress", "any", "current", "behavior.\n", "if", "we", "want", "to", "always", "log", "the", "errors", "or", "if", "this", "is\n", "the", "final", "attempt", "that", "failed", "and", "we", "want", "to", "log", "that.\n", "Default", "symbols", "to", "use", "for", "passwords.", "Avoids", "visually", "confusing", "characters.\n", "~6", "bits", "per", "symbol\n", "Removed:", "0,1\n", "Removed:", "I,", "O\n", "Removed:", "l\n", "~5", "bits", "per", "symbol\n", "Removed:", "0,", "1\n", "Removed:", "I,", "O\n", "NOTE(jerdfelt):", "Some", "password", "policies", "require", "at", "least", "one", "character\n", "from", "each", "group", "of", "symbols,", "so", "start", "off", "with", "one", "random", "character\n", "from", "each", "symbol", "group\n", "If", "length", "<", "len(symbolgroups),", "the", "leading", "characters", "will", "only\n", "be", "from", "the", "first", "length", "groups.", "Try", "our", "best", "to", "not", "be", "predictable\n", "by", "shuffling", "and", "then", "truncating.\n", "then", "fill", "with", "random", "characters", "from", "all", "symbol", "groups\n", "finally", "shuffle", "to", "ensure", "first", "x", "characters", "aren't", "from", "a\n", "predictable", "group\n", "First", "of", "all,", "exclude", "pure", "IPv6", "address", "(w/o", "port).\n", "Next,", "check", "if", "this", "is", "IPv6", "address", "with", "a", "port", "number", "combination.\n", "Third,", "check", "if", "this", "is", "a", "combination", "of", "an", "address", "and", "a", "port\n", "This", "must", "be", "a", "combination", "of", "an", "address", "and", "a", "port\n", "Validate", "the", "correct", "CIDR", "Address\n", "Prior", "validation", "partially", "verify", "/xx", "part\n", "Verify", "it", "here\n", "hostname\n", "it's", "IPv4", "or", "hostname\n", "If", "CONF.monkey_patch", "is", "not", "True,", "this", "function", "do", "nothing.\n", "Unbound", "methods", "became", "regular", "functions", "on", "Python", "3\n", "Get", "list", "of", "modules", "and", "decorators\n", "import", "decorator", "function\n", "Retrieve", "module", "information", "using", "pyclbr\n", "set", "the", "decorator", "for", "the", "class", "methods\n", "set", "the", "decorator", "for", "the", "function\n", "Remove", "characters", "outside", "the", "Unicode", "range", "U+0000-U+00FF\n", "NOTE(eliqiao):", "set", "hostname", "to", "default_display_name", "to", "avoid\n", "empty", "hostname\n", "NOTE(vish):", "We", "would", "prefer", "to", "use", "0xfe", "here", "to", "ensure", "that", "linux\n", "bridge", "mac", "addresses", "don't", "change,", "but", "it", "appears", "to\n", "conflict", "with", "libvirt,", "so", "we", "use", "the", "next", "highest", "octet\n", "that", "has", "the", "unicast", "and", "locally", "administered", "bits", "set\n", "properly:", "0xfa.\n", "Discussion:", "https://bugs.launchpad.net/nova/+bug/921838\n", "drill", "down", "to", "leaves", "first\n", "add", "-F", "to", "force", "no", "interactive", "execute", "on", "non-block", "device.\n", "seek()", "fails", "with", "EINVAL", "when", "trying", "to", "go", "before", "the", "start", "of", "the\n", "file.", "It", "means", "that", "num", "is", "larger", "than", "the", "file", "size,", "so", "just\n", "go", "to", "the", "start.\n", "NOTE", "(ndipanov):", "We", "can't", "really", "tell", "if", "correct", "stuff", "will\n", "be", "passed", "if", "it's", "a", "function", "with", "*args", "or", "**kwargs", "so\n", "we", "still", "carry", "on", "and", "hope", "for", "the", "best\n", "NOTE:", "If", "update_store", "is", "not", "called", "after", "spawn", "it", "won't", "be\n", "available", "for", "the", "logger", "to", "pull", "from", "threadlocal", "storage.\n", "NOTE:", "If", "update_store", "is", "not", "called", "after", "spawn_n", "it", "won't", "be\n", "available", "for", "the", "logger", "to", "pull", "from", "threadlocal", "storage.\n", "NOTE(xqueralt):", "Not", "sure", "this", "has", "to", "inherit", "all", "the", "properties", "or\n", "just", "the", "ones", "we", "need.", "Leaving", "it", "for", "now", "to", "keep", "the", "old", "behaviour.\n", "Volume", "size", "is", "no", "longer", "related", "to", "the", "original", "image", "size,\n", "so", "we", "take", "it", "from", "the", "volume", "directly.", "Cinder", "creates\n", "volumes", "in", "Gb", "increments,", "and", "stores", "size", "in", "Gb,", "whereas\n", "glance", "reports", "size", "in", "bytes.", "As", "we're", "returning", "glance\n", "metadata", "here,", "we", "need", "to", "convert", "it.\n", "NOTE(yjiang5):", "restore", "the", "basic", "attributes\n", "NOTE(mdbooth):", "These", "values", "come", "from", "volume_glance_metadata\n", "in", "cinder.", "This", "is", "a", "simple", "key/value", "table,", "and", "all", "values\n", "are", "strings.", "We", "need", "to", "convert", "them", "to", "ints", "to", "avoid\n", "unexpected", "type", "errors.\n", "NOTE(yjiang5):", "Always", "set", "the", "image", "status", "as", "'active'\n", "and", "depends", "on", "followed", "volume_api.check_attach()", "to\n", "verify", "it.", "This", "hack", "should", "be", "harmless", "with", "that", "check.\n", "Both", "keys", "and", "value", "defined", "--", "AND\n", "Only", "keys", "or", "value", "is", "defined\n", "NOTE(rushiagr):", "metadata_type", "should", "be", "'metadata'", "or\n", "'system_metadata'", "if", "resource_type", "is", "instance.", "Defaulting", "to\n", "'metadata'", "if", "not", "specified.\n", "By", "chaining", "the", "input", "to", "the", "output,", "the", "filters", "are\n", "ANDed", "together\n", "NOTE(chaochin)", "UTF-8", "character", "byte", "size", "varies", "from", "1", "to", "6.", "If\n", "truncating", "a", "long", "byte", "string", "to", "255,", "the", "last", "character", "may", "be\n", "cut", "in", "the", "middle,", "so", "that", "UnicodeDecodeError", "will", "occur", "when\n", "converting", "it", "back", "to", "unicode.\n", "convert", "dict", "to", "str", "to", "check", "length\n", "if", "value", "has", "a", "newline,", "add", "in", "multiple", "rows\n", "e.g.", "fault", "with", "stacktrace"], "/Users/mehranhassani/repos/nova/plugins/xenserver/networking/etc/xensource/scripts/novalib.py": ["True", "command", "devnull", "map", "open", "os", "proc", "stdout", "str", "subprocess", "Execute", "and", "return", "stdout.\nExecute", "without", "returning", "stdout."], "/Users/mehranhassani/repos/nova/nova/objects/image_meta.py": ["False", "ImageMetaProps", "NULLABLE_INTEGER_FIELDS", "NULLABLE_STRING_FIELDS", "NUMA_NODES_MAX", "None", "True", "VERSION", "_legacy_property_map", "base", "bus", "cellid", "classmethod", "cls", "context", "copy", "cpuprop", "defvalue", "exception", "fields", "fld", "getattr", "hardware", "hw_numa_cpus", "hw_numa_cpus_set", "hw_numa_mem", "hw_numa_mem_set", "image", "image_api", "image_meta", "image_props", "image_ref", "instance", "int", "key", "legacy_key", "memprop", "name", "new_key", "obj", "objects", "primitive", "range", "self", "setattr", "super", "sysmeta", "target_version", "utils", "versionutils", "vmware_adaptertype", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "updated", "ImageMetaProps\n", "Version", "1.2:", "ImageMetaProps", "version", "1.2\n", "Version", "1.3:", "ImageMetaProps", "version", "1.3\n", "Version", "1.4:", "ImageMetaProps", "version", "1.4\n", "Version", "1.5:", "ImageMetaProps", "version", "1.5\n", "Version", "1.6:", "ImageMetaProps", "version", "1.6\n", "Version", "1.7:", "ImageMetaProps", "version", "1.7\n", "Version", "1.8:", "ImageMetaProps", "version", "1.8\n", "These", "are", "driven", "by", "what", "the", "image", "client", "API", "returns\n", "to", "Nova", "from", "Glance.", "This", "is", "defined", "in", "the", "glance\n", "code", "glance/api/v2/images.py", "get_base_properties()\n", "method.", "A", "few", "things", "are", "currently", "left", "out:\n", "self,", "file,", "schema", "-", "Nova", "does", "not", "appear", "to", "ever", "use\n", "these", "field;", "locations", "-", "modelling", "the", "arbitrary\n", "data", "in", "the", "'metadata'", "subfield", "is", "non-trivial", "as\n", "there's", "no", "clear", "spec.\n\n", "TODO(ft):", "In", "version", "2.0,", "these", "fields", "should", "be", "nullable:\n", "name,", "checksum,", "owner,", "size,", "virtual_size,", "container_format,", "disk_format\n\n", "We", "must", "turn", "'properties'", "key", "dict", "into", "an", "object\n", "so", "copy", "image_meta", "to", "avoid", "changing", "original\n", "Some", "fields", "are", "nullable", "in", "Glance", "DB", "schema,", "but", "was", "not", "marked", "that\n", "in", "ImageMeta", "initially", "by", "mistake.", "To", "keep", "compatibility", "with", "compute\n", "nodes", "which", "are", "run", "with", "previous", "versions", "these", "fields", "are", "still\n", "not", "nullable", "in", "ImageMeta,", "but", "the", "code", "below", "converts", "None", "to\n", "appropriate", "empty", "values.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "added", "os_require_quiesce", "field\n", "Version", "1.2:", "added", "img_hv_type", "and", "img_hv_requested_version", "fields\n", "Version", "1.3:", "HVSpec", "version", "1.1\n", "Version", "1.4:", "added", "hw_vif_multiqueue_enabled", "field\n", "Version", "1.5:", "added", "os_admin_user", "field\n", "Version", "1.6:", "Added", "'lxc'", "and", "'uml'", "enum", "types", "to", "DiskBusField\n", "Version", "1.7:", "added", "img_config_drive", "field\n", "Version", "1.8:", "Added", "'lxd'", "to", "hypervisor", "types\n", "Version", "1.9:", "added", "hw_cpu_thread_policy", "field\n", "Version", "1.10:", "added", "hw_cpu_realtime_mask", "field\n", "Version", "1.11:", "Added", "hw_firmware_type", "field\n", "Version", "1.12:", "Added", "properties", "for", "image", "signature", "verification\n", "Version", "1.13:", "added", "os_secure_boot", "field\n", "Version", "1.14:", "Added", "'hw_pointer_model'", "field\n", "Version", "1.15:", "Added", "hw_rescue_bus", "and", "hw_rescue_device.\n", "Maximum", "number", "of", "NUMA", "nodes", "permitted", "for", "the", "guest", "topology\n", "'hw_'", "-", "settings", "affecting", "the", "guest", "virtual", "machine", "hardware\n", "'img_'", "-", "settings", "affecting", "the", "use", "of", "images", "by", "the", "compute", "node\n", "'os_'", "-", "settings", "affecting", "the", "guest", "operating", "system", "setup\n", "name", "of", "guest", "hardware", "architecture", "eg", "i686,", "x86_64,", "ppc64\n", "used", "to", "decide", "to", "expand", "root", "disk", "partition", "and", "fs", "to", "full", "size", "of\n", "root", "disk\n", "whether", "to", "display", "BIOS", "boot", "device", "menu\n", "name", "of", "the", "CDROM", "bus", "to", "use", "eg", "virtio,", "scsi,", "ide\n", "preferred", "number", "of", "CPU", "cores", "per", "socket\n", "preferred", "number", "of", "CPU", "sockets\n", "maximum", "number", "of", "CPU", "cores", "per", "socket\n", "maximum", "number", "of", "CPU", "sockets\n", "maximum", "number", "of", "CPU", "threads", "per", "core\n", "CPU", "allocation", "policy\n", "CPU", "thread", "allocation", "policy\n", "CPU", "mask", "indicates", "which", "vCPUs", "will", "have", "realtime", "enable,\n", "example", "^0-1", "means", "that", "all", "vCPUs", "except", "0", "and", "1", "will", "have", "a\n", "realtime", "policy.\n", "preferred", "number", "of", "CPU", "threads", "per", "core\n", "guest", "ABI", "version", "for", "guest", "xentools", "either", "1", "or", "2", "(or", "3", "-", "depends", "on\n", "Citrix", "PV", "tools", "version", "installed", "in", "image)\n", "name", "of", "the", "hard", "disk", "bus", "to", "use", "eg", "virtio,", "scsi,", "ide\n", "allocation", "mode", "eg", "'preallocated'\n", "name", "of", "the", "floppy", "disk", "bus", "to", "use", "eg", "fd,", "scsi,", "ide\n", "This", "indicates", "the", "guest", "needs", "UEFI", "firmware\n", "boolean", "-", "used", "to", "trigger", "code", "to", "inject", "networking", "when", "booting", "a", "CD\n", "image", "with", "a", "network", "boot", "image\n", "There", "are", "sooooooooooo", "many", "possible", "machine", "types", "in\n", "QEMU", "-", "several", "new", "ones", "with", "each", "new", "release", "-", "that", "it\n", "is", "not", "practical", "to", "enumerate", "them", "all.", "So", "we", "use", "a", "free\n", "form", "string\n", "One", "of", "the", "magic", "strings", "'small',", "'any',", "'large'\n", "or", "an", "explicit", "page", "size", "in", "KB", "(eg", "4,", "2048,", "...)\n", "Number", "of", "guest", "NUMA", "nodes\n", "Each", "list", "entry", "corresponds", "to", "a", "guest", "NUMA", "node", "and", "the\n", "set", "members", "indicate", "CPUs", "for", "that", "node\n", "Each", "list", "entry", "corresponds", "to", "a", "guest", "NUMA", "node", "and", "the\n", "list", "value", "indicates", "the", "memory", "size", "of", "that", "node.\n", "Generic", "property", "to", "specify", "the", "pointer", "model", "type.\n", "boolean", "'yes'", "or", "'no'", "to", "enable", "QEMU", "guest", "agent\n", "name", "of", "the", "rescue", "bus", "to", "use", "with", "the", "associated", "rescue", "device.\n", "name", "of", "rescue", "device", "to", "use.\n", "name", "of", "the", "RNG", "device", "type", "eg", "virtio\n", "number", "of", "serial", "ports", "to", "create\n", "name", "of", "the", "SCSI", "bus", "controller", "eg", "'virtio-scsi',", "'lsilogic',", "etc\n", "name", "of", "the", "video", "adapter", "model", "to", "use,", "eg", "cirrus,", "vga,", "xen,", "qxl\n", "MB", "of", "video", "RAM", "to", "provide", "eg", "64\n", "name", "of", "a", "NIC", "device", "model", "eg", "virtio,", "e1000,", "rtl8139\n", "\"xen\"", "vs", "\"hvm\"\n", "action", "to", "take", "when", "watchdog", "device", "fires", "eg", "reset,", "poweroff,", "pause,\n", "none\n", "boolean", "-", "If", "true,", "this", "will", "enable", "the", "virtio-multiqueue", "feature\n", "if", "true", "download", "using", "bittorrent\n", "Which", "data", "format", "the", "'img_block_device_mapping'", "field", "is\n", "using", "to", "represent", "the", "block", "device", "mapping\n", "Block", "device", "mapping", "-", "the", "may", "can", "be", "in", "one", "or", "two", "completely\n", "different", "formats.", "The", "'img_bdm_v2'", "field", "determines", "whether\n", "it", "is", "in", "legacy", "format,", "or", "the", "new", "current", "format.", "Ideally\n", "we", "would", "have", "a", "formal", "data", "type", "for", "this", "field", "instead", "of", "a\n", "dict,", "but", "with", "2", "different", "formats", "to", "represent", "this", "is", "hard.\n", "See", "nova/block_device.py", "from_legacy_mapping()", "for", "the", "complex\n", "conversion", "code.", "So", "for", "now", "leave", "it", "as", "a", "dict", "and", "continue\n", "to", "use", "existing", "code", "that", "is", "able", "to", "convert", "dict", "into", "the\n", "desired", "internal", "BDM", "formats\n", "boolean", "-", "if", "True,", "and", "image", "cache", "set", "to", "\"some\"", "decides", "if", "image\n", "should", "be", "cached", "on", "host", "when", "server", "is", "booted", "on", "that", "host\n", "Compression", "level", "for", "images.", "(1-9)\n", "hypervisor", "supported", "version,", "eg.", "'>=2.6'\n", "type", "of", "the", "hypervisor,", "eg", "kvm,", "ironic,", "xen\n", "Whether", "the", "image", "needs/expected", "config", "drive\n", "boolean", "flag", "to", "set", "space-saving", "or", "performance", "behavior", "on", "the\n", "Datastore\n", "Image", "mappings", "-", "related", "to", "Block", "device", "mapping", "data", "-", "mapping\n", "of", "virtual", "image", "names", "to", "device", "names.", "This", "could", "be", "represented\n", "as", "a", "formal", "data", "type,", "but", "is", "left", "as", "dict", "for", "same", "reason", "as\n", "img_block_device_mapping", "field.", "It", "would", "arguably", "make", "sense", "for\n", "the", "two", "to", "be", "combined", "into", "a", "single", "field", "and", "data", "type", "in", "the\n", "future.\n", "image", "project", "id", "(set", "on", "upload)\n", "root", "device", "name,", "used", "in", "snapshotting", "eg", "/dev/<blah>\n", "boolean", "-", "if", "false", "don't", "talk", "to", "nova", "agent\n", "integer", "value", "1\n", "base64", "of", "encoding", "of", "image", "signature\n", "string", "indicating", "hash", "method", "used", "to", "compute", "image", "signature\n", "string", "indicating", "Castellan", "uuid", "of", "certificate\n", "used", "to", "compute", "the", "image's", "signature\n", "string", "indicating", "type", "of", "key", "used", "to", "compute", "image", "signature\n", "string", "of", "username", "with", "admin", "privileges\n", "string", "of", "boot", "time", "command", "line", "arguments", "for", "the", "guest", "kernel\n", "the", "name", "of", "the", "specific", "guest", "operating", "system", "distro.", "This\n", "is", "not", "done", "as", "an", "Enum", "since", "the", "list", "of", "operating", "systems", "is\n", "growing", "incredibly", "fast,", "and", "valid", "values", "can", "be", "arbitrarily\n", "user", "defined.", "Nova", "has", "no", "real", "need", "for", "strict", "validation", "so\n", "leave", "it", "freeform\n", "boolean", "-", "if", "true,", "then", "guest", "must", "support", "disk", "quiesce\n", "or", "snapshot", "operation", "will", "be", "denied\n", "Secure", "Boot", "feature", "will", "be", "enabled", "by", "setting", "the", "\"os_secure_boot\"\n", "image", "property", "to", "\"required\".", "Other", "options", "can", "be:", "\"disabled\"", "or\n", "\"optional\".\n", "\"os:secure_boot\"", "flavor", "extra", "spec", "value", "overrides", "the", "image", "property\n", "value.\n", "boolean", "-", "if", "using", "agent", "don't", "inject", "files,", "assume", "someone", "else", "is\n", "doing", "that", "(cloud-init)\n", "boolean", "-", "if", "using", "agent", "don't", "try", "inject", "ssh", "key,", "assume", "someone\n", "else", "is", "doing", "that", "(cloud-init)\n", "The", "guest", "operating", "system", "family", "such", "as", "'linux',", "'windows'", "-", "this\n", "is", "a", "fairly", "generic", "type.", "For", "a", "detailed", "type", "consider", "os_distro\n", "instead\n", "The", "keys", "are", "the", "legacy", "property", "names", "and\n", "the", "values", "are", "the", "current", "preferred", "names\n", "TODO(berrange):", "Need", "to", "run", "this", "from", "a", "data", "migration\n", "at", "some", "point", "so", "we", "can", "eventually", "kill", "off", "the", "compat\n", "The", "two", "NUMA", "fields", "need", "special", "handling", "to\n", "un-stringify", "them", "correctly\n", "We", "look", "to", "see", "if", "the", "dict", "has", "entries", "for", "any\n", "of", "the", "legacy", "property", "names", "first.", "Then", "we", "use\n", "the", "current", "property", "names.", "That", "way", "if", "both", "the\n", "current", "and", "legacy", "names", "are", "set,", "the", "value\n", "associated", "with", "the", "current", "name", "takes", "priority"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/254_add_request_id_in_pci_devices.py": ["Column", "MetaData", "String", "Table", "True", "engine", "hasattr", "meta", "pci_devices", "request_id", "shadow_pci_devices", "Function", "adds", "request_id", "field."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_extension_info.py": ["api_sample_base", "response", "sample_dir", "self", "template", "The", "full", "extension", "list", "is", "one", "of", "the", "places", "that", "things", "are\n", "different", "between", "the", "API", "versions", "and", "the", "legacy", "vs.", "new\n", "stack.", "We", "default", "to", "the", "v2.1", "case."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/338_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_notifications.py": ["Exception", "False", "None", "NotificationsTestCase", "True", "access_ip_v4", "access_ip_v6", "actual_ip", "arg1", "arg2", "bandwidth", "called", "cls", "context", "copy", "ctxt", "display_name", "e", "exception", "expected_ip", "expected_new_task_state", "expected_state", "fail_sending", "fake_get_nw_info", "fake_net_info", "fake_network", "fake_notifier", "flavor", "flavors", "func_name", "hostname", "info", "inst", "instance", "instance_type", "ip_addresses", "len", "mock", "mock_bandwidth_list", "mock_log_exception", "n", "net_info", "new_display_name", "new_name_inst", "new_task_state", "new_vm_state", "node", "notfound", "notif", "notifications", "o_context", "o_fixture", "obj_base", "objects", "old", "old_display_name", "old_task_state", "old_vm_state", "param", "params", "payload", "self", "sending_no_state_change", "state_update", "states", "str", "super", "task_states", "test", "usage", "uuids", "vif", "vm_states", "zip", "Tests", "for", "common", "notifications.", "Get", "a", "real", "exception", "with", "a", "call", "stack.\n", "Get", "a", "real", "exception", "with", "a", "call", "stack.\n", "Get", "a", "real", "exception", "with", "a", "call", "stack.\n", "Get", "a", "real", "exception", "with", "a", "call", "stack.\n", "test", "config", "disable", "of", "the", "notifications\n", "test", "config", "disable", "of", "just", "the", "task", "state", "notifications\n", "we", "should", "not", "get", "a", "notification", "on", "task", "stgate", "chagne", "now\n", "ok", "now", "enable", "task", "state", "notifications", "and", "re-try\n", "test", "notification", "on", "send", "no", "initial", "vm", "state:\n", "pretend", "we", "just", "transitioned", "to", "ACTIVE:\n", "service", "name", "should", "default", "to", "'compute'\n", "pretend", "we", "just", "transitioned", "to", "task", "SPAWNING:\n", "service", "name", "should", "default", "to", "'compute'\n", "in", "the", "versioned", "notification", "it", "defaults", "to", "nova-compute\n", "service", "name", "should", "default", "to", "'compute'\n", "service", "name", "should", "default", "to", "'compute'\n", "Zero", "these", "to", "make", "sure", "they", "are", "not", "used\n", "Set", "flavor", "values", "and", "make", "sure", "_these_", "are", "present", "in", "the", "output\n", "Tests", "that", "InstanceNotFound", "is", "handled", "as", "an", "expected", "exception", "and\n", "not", "logged", "as", "an", "error.\n", "Tests", "that", "InstanceNotFound", "is", "handled", "as", "an", "expected", "exception", "and\n", "not", "logged", "as", "an", "error.\n", "Decorated", "with", "notify_decorator", "like", "monkey_patch"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_policy.py": ["AdminRolePolicyTestCase", "CONF", "False", "IsAdminCheckTestCase", "PolicyFileTestCase", "PolicyTestCase", "RealRolePolicyTestCase", "True", "action", "admin_context", "check", "context", "dict", "exception", "fake_policy", "jsonutils", "lowercase_action", "mock", "mock_warning", "name", "nova", "open", "os", "oslo_policy", "policy", "policy_fixture", "policyfile", "req_mock", "requests_mock", "result", "rule", "rules", "self", "set", "special_rules", "super", "target", "target_mine", "target_not_mine", "test", "tmpdir", "tmpfilename", "uppercase_action", "utils", "Test", "of", "Policy", "Engine", "For", "Nova.", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE(uni):", "context", "construction", "invokes", "policy", "check", "to", "determine\n", "is_admin", "or", "not.", "As", "a", "side-effect,", "policy", "reset", "is", "needed", "here\n", "to", "flush", "existing", "policy", "cache.\n", "before", "a", "policy", "rule", "can", "be", "used,", "its", "default", "has", "to", "be", "registered.\n", "NOTE(dprince)", "we", "mix", "case", "in", "the", "Admin", "role", "here", "to", "ensure\n", "case", "is", "ignored\n", "eliqiao", "os_compute_api:os-quota-class-sets:show", "requires\n", "admin=True", "or", "quota_class", "match,", "this", "rule", "won't", "belong", "to\n", "admin_only,", "non_admin,", "admin_or_user,", "empty_rule"], "/Users/mehranhassani/repos/nova/doc/ext/nova_todo.py": ["False", "NoUri", "None", "Todo", "TodoList", "_", "app", "comment", "depart_todo_node", "doctree", "env", "filename", "fromdocname", "hasattr", "i", "innernode", "int", "item", "link", "lists", "m", "newnode", "node", "nodes", "para", "priority", "process_todo_nodes", "process_todos", "purge_todos", "range", "re", "s", "str", "todo_entry", "todo_info", "todo_node", "todolist", "visit_todo_node", "Replace", "all", "todolist", "nodes", "with", "a", "list", "of", "the", "collected", "todos.\n", "Augment", "each", "todo", "with", "a", "backlink", "to", "the", "original", "location.\n", "remove", "the", "item", "that", "was", "added", "in", "the", "constructor,", "since", "I'm", "tired", "of\n", "reading", "through", "docutils", "for", "the", "proper", "way", "to", "construct", "an", "empty", "list\n", "Create", "a", "reference\n'", "+", "todo_info['target']['refid']\n", "ignore", "if", "no", "URI", "can", "be", "determined,", "e.g.", "for", "LaTeX", "output"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_pause_server.py": ["PauseServerSamplesJsonTest", "response", "sample_dir", "self", "super", "test_servers", "Get", "api", "samples", "to", "pause", "server", "request.\n", "Get", "api", "samples", "to", "unpause", "server", "request."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/quota_classes.py": ["ALIAS", "EXTENDED_QUOTAS", "None", "QUOTAS", "QuotaClassSetsController", "alias", "body", "context", "db", "dict", "e", "exception", "extension", "extension_info", "extensions", "id", "key", "kwargs", "name", "qcs_policies", "quota", "quota_class", "quota_classes", "quota_set", "req", "res", "resource", "resources", "result", "self", "str", "supported_quotas", "utils", "validation", "value", "values", "version", "webob", "wsgi", "Convert", "the", "quota", "object", "to", "a", "result", "dict.\nQuota", "classes", "management", "support.", "Quotas", "that", "are", "only", "enabled", "by", "specific", "extensions"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/block_device_mapping_v1.py": ["False", "legacy_block_device_mapping", "parameter_types", "server_create", "Do", "not", "allow", "empty", "device", "names", "and", "number", "values", "and\n", "containing", "spaces(defined", "in", "nova/block_device.py:from_api())\n", "Defined", "as", "boolean", "in", "nova/block_device.py:from_api()\n", "Defined", "as", "mediumtext", "in", "column", "\"connection_info\"", "in", "table\n", "\"block_device_mapping\""], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_console_auth_tokens.py": ["ConsoleAuthTokensExtensionTestV21", "ConsoleAuthTokensExtensionTestV231", "None", "True", "_EXPECTED_OUTPUT", "_FAKE_CONNECT_INFO", "_fake_check_token", "_fake_check_token_not_found", "_fake_check_token_unauthorized", "api_version_request", "connect_info", "console_auth_tokens_v21", "consoleauth_rpcapi", "context", "controller_class", "copy", "fakes", "mock", "mock_check", "output", "self", "super", "test", "token", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/functional/integrated_helpers.py": ["ADMIN_API", "CONF", "False", "LOG", "None", "REQUIRES_LOCKING", "True", "USE_NEUTRON", "_IntegratedTestBase", "__name__", "_x", "admin_api", "api", "app", "body", "candidate", "cast_as_call", "disk", "endpoint", "ephemeral", "expected_middleware", "expected_status", "extra_spec", "flavor", "flavor_id", "flavor_ids", "flavor_names", "flavors", "flv_id", "flv_name", "generate_new_element", "generate_random_alphanumeric", "generate_random_numeric", "getattr", "hasattr", "id", "image", "image_uuid", "int", "is_public", "isinstance", "items", "length", "list", "logging", "max_retries", "memory_mb", "middleware", "name", "nova", "nova_fixtures", "numeric", "object", "prefix", "ram", "random", "range", "retry_count", "rxtx_factor", "self", "server", "server_name", "server_names", "servers", "spec", "string", "super", "swap", "test", "time", "uuids", "vcpu", "vcpus", "Creates", "a", "random", "alphanumeric", "string", "of", "specified", "length.\nCreates", "a", "random", "numeric", "string", "of", "specified", "length.\nCreates", "a", "random", "string", "with", "prefix,", "that", "is", "not", "in", "'items'", "list.", "Override", "this", "in", "subclasses", "which", "use", "the", "NeutronFixture.", "New", "tests\n", "should", "rely", "on", "Neutron", "since", "nova-network", "is", "deprecated.", "The", "default\n", "value", "of", "False", "here", "is", "only", "temporary", "while", "we", "update", "the", "existing\n", "functional", "tests", "to", "use", "Neutron.\n", "TODO(mriedem):", "Fix", "the", "functional", "tests", "to", "work", "with", "Neutron.\n", "if", "the", "class", "needs", "to", "run", "as", "admin,", "make", "the", "api", "endpoint\n", "the", "admin,", "otherwise", "it's", "safer", "to", "run", "as", "non", "admin", "user.\n", "We", "now", "have", "a", "valid", "imageId\n", "Set", "a", "valid", "flavorId\n", "Set", "a", "valid", "server", "name\n", "We", "now", "have", "a", "valid", "imageId\n", "Set", "a", "valid", "flavorId\n", "Set", "a", "valid", "server", "name\n", "We", "now", "have", "a", "valid", "imageId\n", "Set", "a", "valid", "flavorId"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/268_add_host_in_compute_node.py": ["Column", "MetaData", "String", "Table", "True", "UniqueConstraint", "compute_nodes", "hasattr", "host", "meta", "migrate_engine", "shadow_compute_nodes", "ukey", "Add", "a", "new", "column", "host\n", "NOTE(sbauza)", ":", "Old", "compute", "nodes", "can", "report", "stats", "without", "this", "field,", "we\n", "need", "to", "set", "it", "as", "nullable\n", "NOTE(sbauza)", ":", "Populate", "the", "host", "field", "with", "the", "value", "from", "the", "services\n", "table", "will", "be", "done", "at", "the", "ComputeNode", "object", "level", "when", "save()"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/image/test_utils.py": ["FakeIterable", "None", "_self", "first_tarinfo", "glance_image", "image", "mock", "mocked", "object", "open", "raw_image", "result", "self", "source_file", "source_tar", "tar_file", "tar_info", "tarfile", "target_file", "test", "the_file", "utils"], "/Users/mehranhassani/repos/nova/nova/console/xvp.py": ["CONF", "False", "IOError", "LOG", "None", "OSError", "True", "ValueError", "XVPConsoleProxy", "_", "_LE", "__name__", "cfile", "conf_data", "config", "console", "context", "ctxt", "db", "env", "err", "excutils", "flag", "int", "is_pool_password", "jinja2", "logging", "maxlen", "nova", "object", "open", "os", "out", "password", "pid", "pidfile", "pool", "pools", "processutils", "property", "self", "signal", "super", "template", "tmpl_file", "tmpl_path", "utils", "XVP", "(Xenserver", "VNC", "Proxy)", "driver.\nSets", "up", "XVP", "config,", "and", "manages", "XVP", "daemon.\nGet", "available", "port", "for", "consoles", "that", "need", "one.\nSets", "up", "actual", "proxies.\nTears", "down", "actual", "proxies.\nStart", "up", "any", "config'ed", "consoles", "on", "start.\nTrim", "password", "to", "length,", "and", "encode.\nTrim", "password", "to", "length,", "and", "encode.", "default,", "set", "by", "manager.\n", "TODO(mdragon):", "implement", "port", "selection", "for", "non", "multiplex", "ports,\n", "we", "are", "not", "using", "that,", "but", "someone", "else", "may", "want\n", "it.\n", "if", "it's", "already", "not", "running,", "no", "problem.\n", "xvp", "will", "blow", "up", "on", "passwords", "that", "are", "too", "long", "(mdragon)"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/test_volumeops.py": ["False", "None", "True", "VMwareVolumeOpsTestCase", "_call_method", "_wait_for_task", "adapter_type", "attach_disk_to_vm", "backing", "connection_info", "connector", "consolidate_vmdk_volume", "constants", "context", "datastore", "default_adapter_type", "destroy_disk", "detach_disk_from_vm", "device", "device_name", "device_uuid", "disk_type", "disk_uuid", "driver", "exception", "expected_prop", "fake_call", "fake_call_method", "fake_device", "fake_get_host_ref", "fake_get_host_ref_for_vm", "fake_get_vm_ref", "fake_instance", "fake_iscsi_get_host_iqn", "file_name", "get_host_of_vm", "get_rdm_disk", "get_res_pool_of_host", "get_scsi_adapter_type", "get_vm_extra_config_spec", "get_vm_ref", "get_vm_state", "get_vmdk_backed_disk_device", "get_vmdk_base_volume_device", "get_vmdk_info", "get_volume_ref", "get_volume_uuid", "hardware_devices", "hasattr", "hba", "hbas", "host", "host_mor", "image_fake", "instance", "iqn", "iscsi_discover_target", "iscsi_get_target", "kwargs", "method", "mock", "module", "new_backing", "new_file_name", "opt_val", "original_device", "oslo_vmw_exceptions", "prop", "reconfigure_vm", "relocate_calls", "relocate_vmdk_volume", "result", "ret", "rp", "self", "session", "stubs", "super", "test", "update_volume_details", "url", "uuid", "uuidsentinel", "val", "vim", "virtual_device_config", "vm_id", "vm_ref", "vm_state", "vm_states", "vm_util", "vmdk_detach_config_spec", "vmdk_info", "vmwareapi_fake", "volume_device", "volume_ref", "volume_uuid", "volumeops", "vutil"], "/Users/mehranhassani/repos/nova/nova/policies/availability_zone.py": ["POLICY_ROOT", "availability_zone_policies", "base", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_versions.py": ["False", "args", "builtins", "cfg", "data", "fake_find_file", "fake_open", "kwargs", "name", "path", "real_find_file", "real_open", "self", "six", "test", "version", "Test", "cases", "for", "Versions", "code.\nEnsure", "uninstalled", "code", "get", "version", "string."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_conf.py": ["ConfTest", "False", "None", "True", "actual", "args", "basename", "cfg", "config", "contents", "default_config_files", "ext", "fd", "files", "fixtures", "hasattr", "mock", "nova", "os", "path", "paths", "register_options", "self", "super", "tempfile", "tempfiles", "test", "This", "is", "a", "test", "and", "pattern", "for", "parsing", "tricky", "options.", "NOTE(sdague):", "In", "oslo.config", "if", "you", "specify", "a", "parameter\n", "incorrectly,", "it", "silently", "drops", "it", "from", "the", "conf.", "Which", "means\n", "the", "attr", "doesn't", "exist", "at", "all.", "The", "first", "attr", "test", "here", "is\n", "for", "an", "unrelated", "boolean", "option", "that", "is", "using", "defaults", "(so\n", "will", "always", "work.", "It's", "a", "basic", "control", "that", "*anything*", "is", "working.\n", "NOTE(sdague):", "Yes,", "this", "actually", "parses", "as", "an", "array", "holding\n", "a", "dict."], "/Users/mehranhassani/repos/nova/nova/api/ec2/cloud.py": ["LOG", "_LW", "__name__", "logging", "object", "self", "versionutils"], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_messaging.py": ["CONF", "CellsBroadcastMethodsTestCase", "CellsMessageClassesTestCase", "CellsMsgingTestObject", "CellsPublicInterfacesTestCase", "CellsTargetedMethodsTestCase", "CellsTargetedMethodsWithDatabaseTestCase", "FakeMessage", "False", "None", "True", "_check_create", "_check_object", "_ensure_skip_cells_sync_called", "admin_state_reset", "api_method", "args", "bcast_message", "begin", "binary", "build_inst_kwargs", "call_info", "capabs", "capacs", "cell", "cell_state", "cells", "cells_rpcapi", "cells_utils", "check_state", "child_cell", "child_cells", "clean_shutdown", "compute_id", "console_port", "console_type", "context", "ctxt", "db", "delete", "deleted", "deserialized_response", "dict", "direction", "disabled", "do_test", "end", "error", "exception", "exists", "exp_states", "expect_result", "expected", "expected_args", "expected_attrs", "expected_bdm", "expected_capabs", "expected_cell_name", "expected_host_uptime", "expected_kwargs", "expected_output", "expected_task_state", "expected_vm_state", "extra_instance_updates", "extra_kwargs", "failure_responses", "fake_act", "fake_action_id", "fake_attrs", "fake_bdm", "fake_bw_update_info", "fake_device_name", "fake_events", "fake_get_by_name", "fake_host_name", "fake_info_cache", "fake_inst_bdms", "fake_instance", "fake_instance_fault", "fake_instance_uuid", "fake_instances", "fake_process", "fake_req_id", "fake_rpc_message", "fake_save", "fake_server_actions", "fake_service", "fake_sys_metadata", "fake_topic", "fake_uuid", "fake_volume_id", "fakes", "fields", "filters", "flavor", "getattr", "host", "host_name", "host_uptime", "hypervisor_match", "id", "if_mock", "if_obj_mock", "inst", "inst_ref", "inst_upd_at_top", "instance", "instance1", "instance2", "instance_info", "instance_uuid", "json_response", "jsonutils", "keypair_exception", "kwargs", "len", "list", "message", "messaging", "meth_cls", "method", "method_corrections", "method_info", "method_kwargs", "method_name", "method_translations", "methods_cls", "mid_cell", "migrations_from_cell1", "migrations_from_cell2", "migrations_in_progress", "mock", "mock_create", "mock_db_update", "mock_destroy", "mock_get", "mock_get_by_uuid", "mock_message", "mock_method", "mock_save", "mock_sync", "mock_validate", "mox", "msg_runner", "name", "next_hop", "next_hops", "nova", "obj", "object", "objects", "objects_base", "objects_fields", "oslo_messaging", "other_response", "our_fake_method", "our_fake_method_failing", "our_name", "params_to_update", "parent_cell", "parent_cells", "path", "project_id", "resp", "response", "response_values", "responses", "result", "rev_path", "rpc", "rpcclient", "run_method", "self", "set", "source_cell", "src_cell", "state", "state_manager", "success_responses", "super", "target", "target_cell", "task_name", "task_states", "test", "test_input", "test_obj", "test_paths", "tgt_cell", "tgt_message", "tgt_method", "tgt_shortname", "timeutils", "up", "updated_since_parsed", "updated_since_raw", "user_id", "uuids", "vm_states", "Test", "case", "for", "the", "main", "Cells", "Message", "classes.\nThese", "tests", "access", "the", "database", "unlike", "the", "others.\nTest", "case", "for", "the", "public", "interfaces", "into", "cells", "messaging.", "test", "array", "with", "tuples", "of", "inputs/expected", "outputs\n", "test", "array", "with", "tuples", "of", "inputs/expected", "outputs\n", "Correct", "next", "hop?\n", "Correct", "next", "hop?\n", "Correct", "next", "hop?\n", "Correct", "next", "hop?\n", "Correct", "next", "hops?\n", "Correct", "next", "hops?\n", "Verify", "we", "get", "a", "new", "object", "with", "what", "we", "expect.\n", "fakes", "creates", "8", "cells", "(including", "ourself).\n", "Paths", "are", "reversed,", "since", "going", "'up'\n", "fakes", "creates", "8", "cells", "(including", "ourself).", "So", "we", "should", "see\n", "only", "7", "here.\n", "Should", "only", "get", "responses", "from", "our", "immediate", "children", "(and\n", "ourselves)\n", "Run", "compute_api", "start", "method\n", "Run", "compute_api", "shelve", "method", "as", "it", "requires", "info_cache", "and\n", "metadata", "to", "be", "present", "in", "instance", "object\n", "Unknown", "instance", "should", "send", "a", "broadcast", "up", "that", "instance\n", "is", "gone.\n", "Route", "up", "to", "API\n", "The", "list(set([]))", "seems", "silly,", "but", "we", "can't", "assume", "the", "order\n", "of", "the", "list...", "This", "behavior", "should", "match", "the", "code", "we're\n", "testing...", "which", "is", "check", "that", "a", "set", "was", "converted", "to", "a", "list.\n", "To", "make", "this", "easier", "to", "test,", "make", "us", "only", "have", "1", "child", "cell.\n", "To", "make", "this", "easier", "to", "test,", "make", "us", "only", "have", "1", "child", "cell.\n", "Using", "'snapshot'", "for", "this", "test,", "because", "it\n", "takes", "args", "and", "kwargs.\n", "task_state", "and", "vm_state", "changes", "should", "have", "been", "cleared\n", "before", "calling", "save()\n", "fudge", "things", "so", "we", "only", "have", "1", "child", "to", "broadcast", "to\n", "Check", "that", "save", "is", "called", "with", "the", "right", "expected", "states.\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Should", "not", "be", "called", "in", "src", "(API", "cell)\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Should", "not", "be", "called", "in", "src", "(API", "cell)\n", "Should", "not", "be", "set\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Middle", "cell.\n", "Bottom/Target", "cell\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Calls", "are", "made", "from", "grandchild-cell", "to", "api-cell\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Calls", "are", "made", "from", "grandchild-cell", "to", "api-cell\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Calls", "are", "made", "from", "grandchild-cell", "to", "api-cell\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "Calls", "are", "made", "from", "grandchild-cell", "to", "api-cell\n", "Reset", "this,", "as", "this", "is", "a", "broadcast", "down.\n", "To", "show", "these", "should", "not", "be", "called", "in", "src/mid-level", "cell\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Should", "try", "to", "update", "ID", "2.\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Should", "try", "to", "update", "ID", "2.\n", "Shouldn't", "be", "called", "for", "these", "2", "cells\n", "Shouldn't", "be", "called", "for", "these", "2", "cells"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/multiple_create.py": ["ALIAS", "False", "MAX_ATTRIBUTE_NAME", "MIN_ATTRIBUTE_NAME", "RRID_ATTRIBUTE_NAME", "_", "alias", "body_deprecated_param", "create_kwargs", "exc", "extensions", "int", "max_count", "min_count", "msg", "name", "return_id", "schema_multiple_create", "self", "server_dict", "version", "Allow", "multiple", "create", "in", "the", "Create", "Server", "v2.1", "API.", "use", "nova.api.extensions.server.extensions", "entry", "point", "to", "modify\n", "server", "create", "kwargs\n", "NOTE(gmann):", "This", "function", "is", "not", "supposed", "to", "use", "'body_deprecated_param'\n", "parameter", "as", "this", "is", "placed", "to", "handle", "scheduler_hint", "extension", "for", "V2.1.\n", "min_count", "and", "max_count", "are", "optional.", "If", "they", "exist,", "they", "may", "come\n", "in", "as", "strings.", "Verify", "that", "they", "are", "valid", "integers", "and", ">", "0.\n", "Also,", "we", "want", "to", "default", "'min_count'", "to", "1,", "and", "default\n", "'max_count'", "to", "be", "'min_count'."], "/Users/mehranhassani/repos/nova/nova/tests/unit/cells/test_cells_filters.py": ["ImagePropertiesFilter", "None", "TestDifferentCellFilter", "True", "_FilterTestClass", "_fake_build_instances", "cell", "cells", "class_names", "cls", "context", "ctxt", "current_cell", "expected_info", "fakes", "filter_classes", "filter_cls_name", "filter_properties", "filter_props", "filtered_cells", "filters", "image", "info", "len", "models", "sched_kwargs", "self", "set", "state", "super", "target_cell", "test", "Makes", "sure", "the", "proper", "filters", "are", "in", "the", "directory.\nBase", "class", "for", "testing", "individual", "filter", "plugins.", "assert", "again", "to", "verify", "filter", "doesn't", "mutate", "state\n", "LP", "bug", "#1325705\n", "No", "filtering\n", "No", "filtering\n", "Only", "myself", "in", "the", "list.\n", "No", "filtering,", "because", "not", "an", "admin.\n", "None", "is", "returned", "to", "bypass", "further", "scheduling.\n", "The", "filter", "should", "have", "re-scheduled", "to", "the", "child", "cell", "itself.\n", "We", "only", "load", "one", "filter", "so", "we", "know", "the", "first", "one", "is", "the", "one", "we", "want\n", "No", "filtering\n", "No", "filtering\n", "No", "filtering,", "because", "not", "an", "admin."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_context.py": ["ContextTestCase", "False", "None", "True", "USES_DB_SELF", "ValueError", "a", "admin_ctxt", "context", "ctx", "ctx1", "ctxt", "dict", "exception", "expected_values", "isinstance", "len", "mapping", "mock", "mock_authorize", "mock_create_ctxt_mgr", "msg", "o_context", "o_fixture", "objects", "result", "self", "service_catalog", "setattr", "str", "stub_warn", "super", "test", "user_ctxt", "values", "values2", "volume_catalog", "warns", "NOTE(danms):", "Avoid", "any", "cells", "setup", "by", "claiming", "we", "will\n", "do", "things", "ourselves.\n", "If", "no", "context", "exists", "we", "store", "one", "even", "if", "overwrite", "is", "false\n", "(since", "we", "are", "not", "overwriting", "anything).\n", "If", "there", "is", "already", "a", "context", "in", "the", "cache", "a", "new", "one", "will\n", "not", "overwrite", "it", "if", "overwrite=False.\n", "If", "there", "is", "already", "a", "context", "in", "the", "cache", "creating", "another", "context\n", "should", "not", "overwrite", "it.\n", "If", "there", "is", "already", "a", "context", "in", "the", "cache", "creating", "an", "admin\n", "context", "will", "not", "overwrite", "it.\n", "fake", "dict()", "created", "with", "oslo.context", "2.4.x,", "Missing", "is_admin_project\n", "key\n", "to_dict()", "will", "add", "is_admin_project\n", "Verify", "the", "existing", "db_connection,", "if", "any,", "is", "restored"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/304_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/image/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/007_instance_mapping_nullable_cellid.py": ["MetaData", "Table", "True", "instance_mapping", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/compute/__init__.py": ["CELL_TYPE_TO_CLS_NAME", "None", "_get_compute_api_class_name", "args", "cell_type", "class_name", "compute_api_class", "compute_api_class_name", "importutils", "kwargs", "nova", "Returns", "the", "name", "of", "compute", "API", "class.", "Importing", "full", "names", "to", "not", "pollute", "the", "namespace", "and", "cause", "possible\n", "collisions", "with", "use", "of", "'from", "nova.compute", "import", "<foo>'", "elsewhere."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_exact_disk_filter.py": ["TestExactDiskFilter", "disk_gb", "exact_disk_filter", "fakes", "host", "host_attributes", "objects", "self", "spec_obj", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/storage/test_dmcrypt.py": ["LibvirtDmcryptTestCase", "True", "dmcrypt", "encrypted_volumes", "mock", "mock_execute", "mock_listdir", "mock_log", "processutils", "range", "self", "str", "super", "test", "x", "error", "logged\n", "error", "logged"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_fixtures.py": ["CONF", "False", "None", "True", "TypeError", "ValueError", "__name__", "aggregate", "api", "c", "call_count", "cfg", "cml", "column", "compute_rpcapi", "conductor", "conf_fixture", "conn", "context", "engine", "exception", "fake", "fix", "fixtures", "foo", "fx", "gt", "hasattr", "len", "line", "log", "logging", "meta", "mock", "mock_db", "mock_get", "mock_resize", "mock_service_create", "mock_wait", "obj_base", "objects", "orig_spawn", "out", "param", "passed_arg", "resp", "result", "root", "rows", "schema", "self", "service_obj", "session", "sqlalchemy", "stdlog", "sys", "table", "tester", "testtools", "thread", "timeout", "utils", "uuid", "uuidutils", "warn_log", "x", "Ensure", "the", "OSAPI", "server", "responds", "to", "calls", "sensibly.", "TODO(sdague):", "nuke", "the", "out", "and", "err", "buffers", "so", "it", "doesn't\n", "make", "it", "to", "testr\n", "there", "should", "be", "a", "null", "handler", "as", "well", "at", "DEBUG\n", "broken", "debug", "messages", "should", "still", "explode,", "even", "though", "we\n", "aren't", "logging", "them", "in", "the", "regular", "handler\n", "and,", "ensure", "that", "one", "of", "the", "terrible", "log", "messages", "isn't\n", "output", "at", "info\n", "there", "should", "no", "longer", "be", "a", "null", "handler\n", "a", "bad", "scaling", "factor\n", "various", "things", "that", "should", "work.\n", "request", "the", "API", "root,", "which", "provides", "us", "the", "versions", "of", "the", "API\n", "request", "a", "bad", "root", "url,", "should", "be", "a", "404\n\n", "NOTE(sdague):", "this", "currently", "fails,", "as", "it", "falls", "into", "the", "300\n", "dispatcher", "instead.", "This", "is", "a", "bug.", "The", "test", "case", "is", "left", "in\n", "here,", "commented", "out", "until", "we", "can", "address", "it.\n\n", "resp", "=", "api.api_request('/foo',", "strip_version=True)\n", "self.assertEqual(resp.status_code,", "400,", "resp.content)\n", "request", "a", "known", "bad", "url,", "and", "we", "should", "get", "a", "404\n", "because", "this", "sets", "up", "reasonable", "db", "connection", "strings\n", "insert", "a", "6th", "instance", "type,", "column", "5", "below", "is", "an", "int", "id\n", "which", "has", "a", "constraint", "on", "it,", "so", "if", "new", "standard", "instance\n", "types", "are", "added", "you", "have", "to", "bump", "it.\n", "reset", "by", "invoking", "the", "fixture", "again\n\n", "NOTE(sdague):", "it's", "important", "to", "reestablish", "the", "db\n", "connection", "because", "otherwise", "we", "have", "a", "reference", "to", "the", "old\n", "in", "mem", "db.\n", "This", "sets", "up", "reasonable", "db", "connection", "strings\n", "reset", "by", "invoking", "the", "fixture", "again\n\n", "NOTE(sdague):", "it's", "important", "to", "reestablish", "the", "db\n", "connection", "because", "otherwise", "we", "have", "a", "reference", "to", "the", "old\n", "in", "mem", "db.\n", "because", "this", "sets", "up", "reasonable", "db", "connection", "strings\n", "manually", "do", "the", "cleanup", "that", "addCleanup", "will", "do\n", "ensure", "the", "db", "contains", "nothing\n", "This", "sets", "up", "reasonable", "db", "connection", "strings\n", "No", "data", "inserted", "by", "migrations", "so", "we", "need", "to", "add", "a", "row\n", "Manually", "do", "the", "cleanup", "that", "addCleanup", "will", "do\n", "Ensure", "the", "db", "contains", "nothing\n", "In/after", "317", "aggregates", "did", "have", "uuid\n", "Before", "317,", "aggregates", "had", "no", "uuid\n", "Should", "initially", "be", "None\n", "make", "sure", "the", "fixture", "correctly", "sets", "the", "value\n", "manually", "do", "the", "cleanup", "that", "addCleanup", "will", "do\n", "ensure", "the", "initial", "value", "is", "restored"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/286_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/conductor/manager.py": ["CONF", "ComputeTaskManager", "ConductorManager", "Exception", "False", "LOG", "None", "NotImplementedError", "True", "_", "_LE", "_LI", "_LW", "__name__", "_set_vm_state", "actual_version", "admin_password", "args", "attrs", "base", "bdm", "bdms", "block_device_mapping", "block_migration", "build_request", "build_requests", "cell", "cell0", "cell_context", "cfg", "clean_shutdown", "compute_rpcapi", "compute_utils", "context", "contextlib", "copy", "ctx", "destination", "dict", "disk_over_commit", "do_backport", "ex", "exc", "exc_ctxt", "exception", "excutils", "field", "filter_properties", "filter_props", "flavor", "getattr", "host", "host_dict", "host_mapping", "host_mapping_cache", "host_state", "hosts", "image", "image_id", "image_ref", "injected_files", "inst", "inst_mapping", "instance", "instance_actions", "instance_bdms", "instance_block_device_mapping", "instance_type", "instance_uuid", "instances", "instances_by_uuid", "isinstance", "kwargs", "legacy_bdm", "legacy_secgroups", "legacy_spec", "limits", "list", "live", "live_migrate", "local_filter_props", "logging", "manager", "messaging", "method", "migrate", "migration", "msg", "name", "network", "new_pass", "node", "notifications", "nova_context", "nova_object", "num_attempts", "obj", "obj_target_cell", "objclass", "object_versions", "objects", "objinst", "objmethod", "objname", "oldobj", "on_shared_storage", "orig_image_ref", "orig_sys_metadata", "other_major_version", "preserve_ephemeral", "reason", "rebuild", "recreate", "request_spec", "request_specs", "requested_networks", "requested_version", "reservations", "result", "rpc", "s", "safe_image_show", "scheduler_client", "scheduler_hint", "scheduler_utils", "security_groups", "self", "service_version", "servicegroup", "six", "size", "spec_obj", "staticmethod", "super", "sys_meta", "target", "target_version", "task", "task_state", "task_states", "try_target_cell", "tuple", "updates", "utils", "ver", "versionutils", "vm_state", "vm_states", "wrap_instance_event", "Handles", "database", "requests", "from", "other", "nova", "services.\nPerform", "an", "action", "on", "an", "object.\nRun", "with", "object's", "context", "set", "to", "a", "specific", "cell", "NOTE(hanlind):", "This", "can", "be", "removed", "in", "version", "4.0", "of", "the", "RPC", "API\n", "NOTE(hanlind):", "Simulate", "an", "empty", "db", "result", "for", "compat", "reasons.\n", "NOTE(danms):", "Keep", "the", "getattr", "inside", "the", "try", "block", "since\n", "a", "missing", "method", "is", "really", "a", "client", "problem\n", "NOTE(danms):", "The", "RPC", "layer", "will", "convert", "to", "primitives", "for", "us,\n", "but", "in", "this", "case,", "we", "need", "to", "honor", "the", "version", "the", "client", "is\n", "asking", "for,", "so", "we", "do", "it", "before", "returning", "here.\n", "NOTE(hanlind):", "Do", "not", "convert", "older", "than", "requested", "objects,\n", "see", "bug", "#1596119.\n", "NOTE(danms):", "Diff", "the", "object", "with", "the", "one", "passed", "to", "us", "and\n", "generate", "a", "list", "of", "changes", "to", "forward", "back\n", "Avoid", "demand-loading", "anything\n", "This", "is", "safe", "since", "a", "field", "named", "this", "would", "conflict", "with", "the\n", "method", "anyway\n", "TODO(tdurakov):", "remove", "`live`", "parameter", "here", "on", "compute", "task", "api", "RPC\n", "version", "bump", "to", "2.x\n", "NOTE(danms):", "Until", "v2", "of", "the", "RPC", "API,", "we", "need", "to", "tolerate\n", "old-world", "instance", "objects", "here\n", "NOTE:", "Remove", "this", "when", "we", "drop", "support", "for", "v1", "of", "the", "RPC", "API\n", "Code", "downstream", "may", "expect", "extra_specs", "to", "be", "populated", "since", "it\n", "is", "receiving", "an", "object,", "so", "lookup", "the", "flavor", "to", "ensure", "this.\n", "NOTE(sbauza):", "If", "a", "reschedule", "occurs", "when", "prep_resize(),", "then\n", "it", "only", "provides", "filter_properties", "legacy", "dict", "back", "to", "the\n", "conductor", "with", "no", "RequestSpec", "part", "of", "the", "payload.\n", "Make", "sure", "we", "hydrate", "a", "new", "RequestSpec", "object", "with", "the", "new", "flavor\n", "and", "not", "the", "nested", "one", "from", "the", "instance\n", "NOTE(sbauza):", "Resizes", "means", "new", "flavor,", "so", "we", "need", "to", "update", "the\n", "original", "RequestSpec", "object", "for", "make", "sure", "the", "scheduler", "verifies\n", "the", "right", "one", "and", "not", "the", "original", "flavor\n", "TODO(sbauza):", "Provide", "directly", "the", "RequestSpec", "object", "once\n", "_set_vm_state_and_notify()", "accepts", "it\n", "if", "the", "flavor", "IDs", "match,", "it's", "migrate;", "otherwise", "resize\n", "NOTE(sbauza):", "Make", "sure", "we", "persist", "the", "new", "flavor", "in", "case", "we", "had\n", "a", "successful", "scheduler", "call", "if", "and", "only", "if", "nothing", "bad", "happened\n", "If", "we", "were", "told", "not", "to", "allocate", "networks", "let's", "save", "ourselves\n", "the", "trouble", "of", "calling", "the", "network", "API.\n", "NOTE:", "It's", "possible", "that", "we're", "cleaning", "up", "the", "networks\n", "because", "the", "instance", "was", "deleted.", "If", "that's", "the", "case", "then", "this\n", "exception", "will", "be", "raised", "by", "instance.save()\n", "TODO(johngarbutt)", "-", "eventually", "need", "instance", "actions", "here\n", "The", "BuildRequest", "needs", "to", "be", "stored", "until", "the", "instance", "is", "mapped", "to\n", "an", "instance", "table.", "At", "that", "point", "it", "will", "never", "be", "used", "again", "and\n", "should", "be", "deleted.\n", "TODO(alaski):", "Sync", "API", "updates", "of", "the", "build_request", "to", "the\n", "instance", "before", "it", "is", "destroyed.", "Right", "now", "only", "locked_by", "can\n", "be", "updated", "before", "this", "is", "destroyed.\n", "A", "BuildRequest", "was", "created", "during", "the", "boot", "process,", "the\n", "NotFound", "exception", "indicates", "a", "delete", "happened", "which\n", "should", "abort", "the", "boot.\n", "NOTE(alaski):", "If", "nova-api", "is", "up", "to", "date", "this", "exception", "should\n", "never", "be", "hit.", "But", "during", "an", "upgrade", "it's", "possible", "that", "an", "old\n", "nova-api", "didn't", "create", "an", "instance_mapping", "during", "this", "boot\n", "request.\n", "NOTE(alaski):", "For", "now", "this", "exception", "means", "that", "a\n", "deployment", "has", "not", "migrated", "to", "cellsv2", "and", "we", "should\n", "remove", "the", "instance_mapping", "that", "has", "been", "created.\n", "Eventually", "this", "will", "indicate", "a", "failure", "to", "properly", "map", "a\n", "host", "to", "a", "cell", "and", "we", "may", "want", "to", "reschedule.\n", "TODO(ndipanov):", "Remove", "block_device_mapping", "and", "legacy_bdm", "in", "version\n", "2.0", "of", "the", "RPC", "API.\n", "TODO(danms):", "Remove", "this", "in", "version", "2.0", "of", "the", "RPC", "API\n", "TODO(melwitt):", "Remove", "this", "in", "version", "2.0", "of", "the", "RPC", "API\n", "Code", "downstream", "may", "expect", "extra_specs", "to", "be", "populated", "since", "it\n", "is", "receiving", "an", "object,", "so", "lookup", "the", "flavor", "to", "ensure", "this.\n", "check", "retry", "policy.", "Rather", "ugly", "use", "of", "instances[0]...\n", "but", "if", "we've", "exceeded", "max", "retries...", "then", "we", "really", "only\n", "have", "a", "single", "instance.\n", "If", "the", "BuildRequest", "stays", "around", "then", "instance", "show/lists\n", "will", "pull", "from", "it", "rather", "than", "the", "errored", "instance.\n", "The", "block_device_mapping", "passed", "from", "the", "api", "doesn't", "contain\n", "instance", "specific", "information\n", "This", "is", "populated", "in", "scheduler_utils.populate_retry\n", "If", "this", "is", "a", "reschedule", "the", "instance", "is", "already", "mapped", "to\n", "this", "cell", "and", "the", "BuildRequest", "is", "already", "deleted", "so", "ignore\n", "the", "logic", "below.\n", "This", "indicates", "an", "instance", "delete", "has", "been", "requested", "in\n", "the", "API.", "Stop", "the", "build,", "cleanup", "the", "instance_mapping", "and\n", "potentially", "the", "block_device_mappings\n", "TODO(alaski):", "Handle", "block_device_mapping", "cleanup\n", "TODO(sbauza):", "Hydrate", "here", "the", "object", "until", "we", "modify", "the\n", "scheduler.utils", "methods", "to", "directly", "use", "the", "RequestSpec", "object\n", "No", "need", "to", "check", "for", "image", "if", "image_id", "is", "None", "as\n", "\"shelved_image_id\"", "key", "is", "not", "set", "for", "volume", "backed\n", "instance", "during", "the", "shelve", "process\n", "NOTE(sbauza):", "We", "were", "unable", "to", "find", "an", "original\n", "RequestSpec", "object", "-", "probably", "because", "the", "instance", "is\n", "old.", "We", "need", "to", "mock", "that", "the", "old", "way\n", "NOTE(sbauza):", "Force_hosts/nodes", "needs", "to", "be", "reset\n", "if", "we", "want", "to", "make", "sure", "that", "the", "next", "destination\n", "is", "not", "forced", "to", "be", "the", "original", "host\n", "TODO(sbauza):", "Provide", "directly", "the", "RequestSpec", "object\n", "when", "_schedule_instances(),\n", "populate_filter_properties", "and", "populate_retry()\n", "accept", "it\n", "NOTE(sbauza):", "We", "were", "unable", "to", "find", "an", "original\n", "RequestSpec", "object", "-", "probably", "because", "the", "instance", "is", "old\n", "We", "need", "to", "mock", "that", "the", "old", "way\n", "NOTE(sbauza):", "Augment", "the", "RequestSpec", "object", "by", "excluding\n", "the", "source", "host", "for", "avoiding", "the", "scheduler", "to", "pick", "it\n", "NOTE(sbauza):", "Force_hosts/nodes", "needs", "to", "be", "reset\n", "if", "we", "want", "to", "make", "sure", "that", "the", "next", "destination\n", "is", "not", "forced", "to", "be", "the", "original", "host\n", "TODO(sbauza):", "Provide", "directly", "the", "RequestSpec", "object\n", "when", "_schedule_instances()", "and", "_set_vm_state_and_notify()\n", "accept", "it\n", "TODO(avolkov):", "move", "method", "to", "bdm\n", "NOTE", "(ndipanov):", "inherit", "flavor", "size", "only", "for", "swap", "and", "ephemeral\n", "Not", "yet", "setup", "for", "cellsv2.", "Instances", "will", "need", "to", "be", "written\n", "to", "the", "configured", "database.", "This", "will", "become", "a", "deployment\n", "error", "in", "Ocata.\n", "This", "is", "an", "instance", "object", "with", "no", "matching", "db", "entry.\n", "Instance", "was", "deleted", "before", "we", "finished", "scheduling\n", "Convert", "host", "from", "the", "scheduler", "into", "a", "cell", "record\n", "send", "a", "state", "update", "notification", "for", "the", "initial", "create", "to\n", "show", "it", "going", "from", "non-existent", "to", "BUILDING\n", "Update", "mapping", "for", "instance.", "Normally", "this", "check", "is", "guarded", "by\n", "a", "try/except", "but", "if", "we're", "here", "we", "know", "that", "a", "newer", "nova-api\n", "handled", "the", "build", "process", "and", "would", "have", "created", "the", "mapping\n", "This", "indicates", "an", "instance", "deletion", "request", "has", "been\n", "processed,", "and", "the", "build", "should", "halt", "here.", "Clean", "up", "the\n", "bdm", "and", "instance", "record.\n", "NOTE(danms):", "Compute", "RPC", "expects", "security", "group", "names", "or", "ids\n", "not", "objects,", "so", "convert", "this", "to", "a", "list", "of", "names", "until", "we", "can\n", "pass", "the", "objects."], "/Users/mehranhassani/repos/nova/nova/cmd/network.py": ["CONF", "LOG", "_LE", "_LW", "cmd_common", "conductor_rpcapi", "config", "gmr", "logging", "nova", "objects", "objects_base", "server", "service", "sys", "utils", "version", "Starter", "script", "for", "Nova", "Network."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_iscsi.py": ["None", "conf", "connection_info", "connector", "device_path", "driver", "iscsi", "libvirt_driver", "mock", "mock_LOG_warning", "msg", "os_brick_exception", "out", "sample_input", "self", "targets", "test_volume", "transport", "tree", "TODO(mriedem):", "move", "this", "to", "os-brick\n", "Ensure", "that", "parsing", "iscsiadm", "discover", "ignores", "cruft.\n", "This", "slight", "wonkiness", "brought", "to", "you", "by", "pep8,", "as", "the", "actual\n", "example", "output", "runs", "about", "97", "chars", "wide."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/333_add_console_auth_tokens_table.py": ["Column", "DateTime", "False", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "auth_tokens", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/images.py": ["CHUNK_SIZE", "CONF", "IMAGE_API", "LOG", "NFC_LEASE_UPDATE_PERIOD", "None", "QUEUE_BUFFER_SIZE", "True", "_", "_LI", "__name__", "_build_import_spec_for_import_vapp", "_build_shadow_vm_config_spec", "adapter_type", "block_size", "cf", "cfg", "classmethod", "client_factory", "cls", "constants", "container_format", "context", "controller_device", "controller_spec", "cookies", "create_spec", "data", "datastore_name", "dc_name", "disk", "disk_device", "disk_device_bkng", "disk_spec", "disk_type", "ds_name", "encodeutils", "etree", "exception", "extracted", "fields", "file", "file_id", "file_path", "file_size", "file_type", "get_vmdk_name_from_ovf", "get_vsphere_location", "getattr", "host", "hw_disk_bus", "hw_scsi_model", "image", "image_id", "image_linked_clone", "image_meta", "image_metadata", "image_ref", "image_transfer", "imported_vm_ref", "instance", "int", "iso_file", "iso_path", "k", "kwargs", "len", "linked_clone", "loc", "loc_url", "locations", "logging", "loopingcall", "mapping", "max", "metadata", "name", "nsovf", "object", "open", "os", "os_type", "ovf", "port", "properties", "property", "props", "props_map", "read_file_handle", "read_handle", "read_iter", "res_pool_ref", "rw_handles", "self", "session", "six", "size_kb", "strutils", "tar", "tar_info", "tarfile", "units", "update_cb", "updater", "v", "vif_model", "vm", "vm_create_spec", "vm_file_info", "vm_folder_ref", "vm_import_spec", "vm_name", "vm_util", "vmdk", "vmdk_name", "vmdk_size", "vsphere_location", "write_file_handle", "write_handle", "xmlstr", "Get", "image", "location", "in", "vsphere", "or", "None.\nDownload", "image", "from", "the", "glance", "image", "server.\nFetch", "image", "from", "Glance", "to", "ESX", "datastore.\nParse", "the", "OVA", "descriptor", "to", "extract", "the", "vmdk", "name.\nUpload", "the", "snapshotted", "vm", "disk", "file", "to", "Glance", "image", "server.", "NOTE(mdbooth):", "We", "use", "use_linked_clone", "below,", "but", "don't", "have", "to", "import", "it\n", "because", "nova.virt.vmwareapi.driver", "is", "imported", "first.", "In", "fact,", "it", "is", "not\n", "possible", "to", "import", "it", "here,", "as", "nova.virt.vmwareapi.driver", "calls\n", "CONF.register_opts()", "after", "the", "import", "chain", "which", "imports", "this", "module.", "This\n", "is", "not", "a", "problem", "as", "long", "as", "the", "import", "order", "doesn't", "change.\n", "update", "NFC", "lease", "every", "60sec.\n", "default", "chunk", "size", "for", "image", "transfer\n", "NOTE(vui):", "This", "should", "be", "removed", "when", "we", "restore", "the\n", "descriptor-based", "validation.\n", "calculate", "linked_clone", "flag,", "allow", "image", "properties", "to", "override", "the\n", "global", "property", "set", "in", "the", "configurations.\n", "catch", "any", "string", "values", "that", "need", "to", "be", "interpreted", "as", "boolean", "values\n", "image_id", "can", "be", "None", "if", "the", "instance", "is", "booted", "using", "a", "volume.\n", "write_handle", "could", "be", "an", "NFC", "lease,", "so", "we", "need", "to", "periodically\n", "update", "its", "progress\n", "for", "very", "small", "disks", "allocate", "at", "least", "1KB\n", "Actual", "file", "name", "is", "<vmdk_name>.XXXXXXX\n", "Set", "the", "image", "properties.", "It", "is", "important", "to", "set", "the", "'size'", "to", "0.\n", "Otherwise,", "the", "image", "service", "client", "will", "use", "the", "VM's", "disk", "capacity\n", "which", "will", "not", "be", "the", "image", "size", "after", "upload,", "since", "it", "is", "converted\n", "to", "a", "stream-optimized", "sparse", "disk."], "/Users/mehranhassani/repos/nova/nova/network/floating_ips.py": ["CONF", "Exception", "False", "FloatingIP", "LOG", "LocalManager", "None", "QUOTAS", "True", "_LE", "_LI", "_LW", "__name__", "address", "admin_context", "affect_auto_assigned", "auto_assigned", "av_zone", "base", "context", "dest", "dict", "dns_domain", "dns_type", "do_associate", "do_disassociate", "domain", "domain_entry", "domain_list", "domainref", "domains", "e", "exception", "excutils", "fixed", "fixed_address", "fixed_id", "fixed_ip", "fixed_ips", "floating", "floating_address", "floating_addresses", "floating_driver_domain_list", "floating_ip", "floating_ips", "host", "id", "importutils", "instance", "instance_driver_domain_list", "instance_uuid", "interface", "kwargs", "logging", "messaging", "name", "names", "network", "network_rpcapi", "nova", "nw_info", "object", "objects", "orig_instance_uuid", "payload", "pool", "pools", "processutils", "project", "project_id", "quota", "reservations", "rows_updated", "rpc", "rxtx_factor", "scope", "self", "service", "servicegroup", "servicegroup_api", "six", "source", "str", "super", "this_domain", "use_quota", "utils", "uuidutils", "Mixin", "class", "for", "adding", "floating", "IP", "functionality", "to", "a", "manager.\nConfigures", "floating", "IPs", "owned", "by", "host.\nRaises", "if", "floating", "IP", "does", "not", "belong", "to", "project.\nGets", "a", "floating", "IP", "from", "the", "pool.\nReturns", "a", "floating", "IP", "to", "the", "pool.\nPerforms", "db", "and", "driver", "calls", "to", "associate", "floating", "IP", "&", "fixed", "IP.\nPerforms", "db", "and", "driver", "calls", "to", "disassociate", "floating", "IP.\nReturns", "a", "floating", "IP", "as", "a", "dict.\nReturns", "list", "of", "floating", "pools.\nReturns", "list", "of", "floating", "ip", "pools.\nReturns", "a", "floating", "IP", "as", "a", "dict.\nReturns", "the", "floating", "IPs", "allocated", "to", "a", "project.\nReturns", "the", "floating", "IPs", "associated", "with", "a", "fixed_address.", "call", "the", "next", "inherited", "class's", "allocate_for_instance()\n", "which", "is", "currently", "the", "NetworkManager", "version\n", "do", "this", "first", "so", "fixed", "ip", "is", "already", "allocated\n", "allocate", "a", "floating", "ip\n", "get", "the", "first", "fixed", "address", "belonging", "to", "the", "instance\n", "associate", "the", "floating", "ip", "to", "fixed_ip\n", "create", "a", "fresh", "set", "of", "network", "info", "that", "contains", "the", "floating", "ip\n", "NOTE(francois.charlier):", "in", "some", "cases", "the", "instance", "might", "be\n", "deleted", "before", "the", "IPs", "are", "released,", "so", "we", "need", "to", "get\n", "deleted", "instances", "too\n", "add", "to", "kwargs", "so", "we", "can", "pass", "to", "super", "to", "save", "a", "db", "lookup", "there\n", "disassociate", "floating", "ips", "related", "to", "fixed_ip\n", "deallocate", "if", "auto_assigned\n", "call", "the", "next", "inherited", "class's", "deallocate_for_instance()\n", "which", "is", "currently", "the", "NetworkManager", "version\n", "call", "this", "after", "so", "floating", "IPs", "are", "handled", "first\n", "NOTE(tr3buchet):", "all", "network", "hosts", "in", "zone", "now", "use", "the", "same", "pool\n", "Check", "the", "quota;", "can't", "put", "this", "in", "the", "API", "because", "we", "get\n", "called", "into", "from", "other", "places\n", "Commit", "the", "reservations\n", "handle", "auto_assigned\n", "make", "sure", "project", "owns", "this", "floating", "ip", "(allocated)\n", "make", "sure", "floating", "ip", "is", "not", "associated\n", "clean", "up", "any", "associated", "DNS", "entries\n", "Get", "reservations...\n", "number", "of", "updated", "rows", "will", "be", "0", "if", "concurrently", "another\n", "API", "call", "has", "also", "deallocated", "the", "same", "floating", "ip\n", "Commit", "the", "reservations\n", "handle", "auto_assigned\n", "make", "sure", "project", "owns", "this", "floating", "ip", "(allocated)\n", "disassociate", "any", "already", "associated\n", "find", "previously", "associated", "instance\n", "NOTE(vish):", "already", "associated", "to", "this", "address\n", "send", "to", "correct", "host,", "unless", "i'm", "the", "correct", "host\n", "i'm", "the", "correct", "host\n", "send", "to", "correct", "host\n", "associate", "floating", "ip\n", "NOTE(vish):", "ip", "was", "already", "associated\n", "gogo", "driver", "time\n", "handle", "auto", "assigned\n", "make", "sure", "project", "owns", "this", "floating", "ip", "(allocated)\n", "make", "sure", "floating", "ip", "is", "associated\n", "send", "to", "correct", "host,", "unless", "i'm", "the", "correct", "host\n", "NOTE(vish):", "if", "the", "service", "is", "down", "just", "deallocate", "the", "data\n", "locally.", "Set", "the", "host", "to", "local", "so", "the", "call", "will\n", "not", "go", "over", "rpc", "and", "set", "interface", "to", "None", "so", "the\n", "teardown", "in", "the", "driver", "does", "not", "happen.\n", "i'm", "the", "correct", "host\n", "send", "to", "correct", "host\n", "NOTE(vish):", "Note", "that", "we", "are", "disassociating", "in", "the", "db", "before", "we\n", "actually", "remove", "the", "ip", "address", "on", "the", "host.", "We", "are\n", "safe", "from", "races", "on", "this", "host", "due", "to", "the", "decorator,\n", "but", "another", "host", "might", "grab", "the", "ip", "right", "away.", "We\n", "don't", "worry", "about", "this", "case", "because", "the", "minuscule\n", "window", "where", "the", "ip", "is", "on", "both", "hosts", "shouldn't", "cause\n", "any", "problems.\n", "NOTE(vish):", "ip", "was", "already", "disassociated\n", "go", "go", "driver", "time\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi.\n", "NOTE(maurosr)", "This", "method", "should", "be", "removed", "in", "future,", "replaced", "by\n", "get_floating_ip_pools.", "See", "bug", "#1091668\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi.\n", "We", "only", "care", "if", "floating_addresses", "are", "provided", "and", "we're\n", "switching", "hosts\n", "NOTE(wenjianhn):", "Make", "this", "address", "will", "not", "be", "bound", "to", "public\n", "interface", "when", "restarts", "nova-network", "on", "dest", "compute", "node\n", "We", "only", "care", "if", "floating_addresses", "are", "provided", "and", "we're\n", "switching", "hosts\n", "NOTE(vish):", "setting", "the", "host", "to", "none", "ensures", "that", "the", "actual\n", "l3driver", "commands", "for", "l3", "are", "done", "via", "rpc."], "/Users/mehranhassani/repos/nova/nova/virt/__init__.py": ["__import__", "__name__", "Allow", "composition", "of", "nova.virt", "namespace", "from", "disparate", "packages."], "/Users/mehranhassani/repos/nova/nova/conf/network.py": ["ALL_DEFAULT_OPTS", "False", "True", "cfg", "conf", "driver_opts", "ldap_dns_opts", "linux_net_opts", "network_opts", "paths", "rpcapi_opts", "NOTE(sfinucan):", "Don't", "move", "this", "option", "to", "a", "group", "as", "it", "will", "be\n", "deprecated", "in", "a", "future", "release.\n", "NOTE(stephenfin):", "This", "should", "move", "to", "True", "for", "a", "cycle", "before", "being\n", "removed.\n", "TODO(siva_krishnan):", "Validate", "URL", "scheme", "once", "that", "feature", "is", "added\n", "in", "oslo_config\n", "TODO(sfinucan):", "This", "should", "be", "converted", "to", "a", "ListOpt.", "Perhaps", "when", "the\n", "option", "is", "moved", "to", "a", "group?\n", "TODO(sfinucan):", "Add", "a", "min", "parameter", "to", "this", "and", "the", "below", "options"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_fields.py": ["AARDVARK", "ALL", "ALLIGATOR", "AUTO_TYPE", "FROG", "FakeAddress", "FakeAddressField", "FakeEnum", "FakeEnumAlt", "FakeEnumAltField", "FakeEnumField", "FakeFieldType", "False", "None", "ObjectLikeThing", "PATTERN", "PLATYPUS", "TestBaseEnum", "TestBoolean", "TestDateTime", "TestDict", "TestDictOfIntegers", "TestDictOfStrings", "TestDictOfStringsNone", "TestEnum", "TestField", "TestFloat", "TestIDEAddress", "TestImageSignatureTypes", "TestInteger", "TestList", "TestListOfDictOfNullableStringsField", "TestListOfSetsOfIntegers", "TestListOfStrings", "TestNetworkModel", "TestNonNegativeFloat", "TestNonNegativeInteger", "TestNotificationAction", "TestNotificationPhase", "TestNotificationPriority", "TestPCIAddress", "TestResourceClass", "TestSCSIAddress", "TestSecureBoot", "TestSet", "TestSetOfIntegers", "TestString", "TestUSBAddress", "True", "TypeError", "ValueError", "_context", "attr", "datetime", "dict", "exception", "expected", "fake_instance", "field", "field1", "field2", "fields", "hash_name", "in_val", "inst", "int", "iso8601", "key_type", "key_type_dict", "key_types", "kwargs", "list", "mock", "mock_uname", "mode", "model", "network_model", "networkinfo", "obj", "object", "os", "out_val", "ovo_exc", "prim_val", "self", "set", "signature_utils", "six", "str", "super", "test", "tuple", "updates", "utils", "value", "Notes(yjiang5):", "make", "sure", "changing", "valid_value", "will", "be", "detected\n", "in", "test_objects.test_versions\n", "Notes(yjiang5):", "make", "sure", "changing", "valid_value", "will", "be", "detected\n", "in", "test_objects.test_versions\n1", "SMP", "Mon", "Jun", "16", "21:57:53", "UTC", "2014',\n", "Ensure", "that", "the", "object", "definition", "is", "updated\n", "in", "step", "with", "the", "signature_utils", "module"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/019_build_request_add_block_device_mapping.py": ["Column", "MetaData", "Table", "Text", "True", "build_requests", "hasattr", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_servers_ips.py": ["CONF", "nova", "response", "sample_dir", "self", "test_servers", "uuid", "Test", "getting", "a", "server's", "IP", "information.\n", "Test", "getting", "a", "server's", "IP", "information", "by", "network", "id."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/server_usage.py": ["ALIAS", "False", "None", "ServerUsageController", "alias", "context", "controller", "db_instance", "extension", "extensions", "id", "instance", "k", "key", "list", "name", "req", "resp_obj", "resp_topic", "self", "server", "servers", "su_policies", "version", "wsgi", "Adds", "launched_at", "and", "terminated_at", "on", "Servers.", "NOTE(danms):", "Historically,", "this", "timestamp", "has", "been", "generated\n", "merely", "by", "grabbing", "str(datetime)", "of", "a", "TZ-naive", "object.", "The\n", "only", "way", "we", "can", "keep", "that", "with", "instance", "objects", "is", "to", "strip\n", "the", "tzinfo", "from", "the", "stamp", "and", "str()", "it.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'show'", "method.\n", "server['id']", "is", "guaranteed", "to", "be", "in", "the", "cache", "due", "to\n", "the", "core", "API", "adding", "it", "in", "its", "'detail'", "method."], "/Users/mehranhassani/repos/nova/nova/policies/create_backup.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "create_backup_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/imagecache.py": ["CONF", "ImageCacheManager", "LOG", "TIMESTAMP_FORMAT", "TIMESTAMP_PREFIX", "True", "_LI", "_LW", "__name__", "age_seconds", "base_folder", "cache_root_folder", "cfg", "context", "datastore", "datastores_info", "dc_info", "dc_ref", "ds_browser", "ds_path", "ds_ref", "ds_util", "dt", "e", "file", "files", "image", "image_id", "imagecache", "images", "instances", "lockutils", "logging", "originals", "path", "running", "self", "session", "set", "str", "super", "timestamp_filename", "timeutils", "ts", "ts_path", "unused_images", "vexc", "vutil", "Returns", "the", "timestamp", "folder.\nAges", "cached", "images.\nReturns", "datastore", "path", "of", "folder", "containing", "the", "image.", "There", "may", "be", "more", "than", "one", "process", "or", "thread", "that", "tries\n", "to", "delete", "the", "file.\n", "Check", "if", "the", "timestamp", "file", "exists", "-", "if", "so", "then", "delete", "it.", "This\n", "will", "ensure", "that", "the", "aging", "will", "not", "delete", "a", "cache", "image", "if", "it\n", "is", "going", "to", "be", "used", "now.\n", "Lock", "to", "ensure", "that", "the", "spawn", "will", "not", "try", "and", "access", "an", "image\n", "that", "is", "currently", "being", "deleted", "on", "the", "datastore.\n", "Image", "is", "used", "-", "no", "longer", "need", "timestamp", "folder\n", "Lock", "to", "ensure", "that", "the", "spawn", "will", "not", "try", "and", "access", "an", "image\n", "that", "is", "currently", "being", "deleted", "on", "the", "datastore.\n", "Image", "has", "aged", "-", "delete", "the", "image", "ID", "folder\n", "If", "the", "image", "is", "used", "and", "the", "timestamp", "file", "exists", "then", "we", "delete\n", "the", "timestamp.\n", "read", "running", "instances", "data\n", "perform", "the", "aging", "and", "image", "verification", "per", "datastore"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/serialconsolehandler.py": ["CONF", "LOG", "None", "_", "_LI", "__name__", "cfg", "constants", "ctype", "enable_logging", "err_msg", "exception", "handler", "instance_name", "ioutils", "kwargs", "log_rw_pipe_output", "logging", "object", "patcher", "pathutils", "pipe_path", "pipe_type", "port_type", "self", "serial_console", "serial_port_conns", "serial_port_mapping", "serialproxy", "threading", "utilsfactory", "worker", "Handles", "serial", "console", "ops", "related", "to", "a", "given", "instance.", "Use", "this", "event", "in", "order", "to", "manage\n", "pending", "queue", "operations.\n", "At", "most", "2", "named", "pipes", "will", "be", "used", "to", "access", "the", "vm", "serial", "ports.\n\n", "The", "named", "pipe", "having", "the", "'ro'", "suffix", "will", "be", "used", "only", "for", "logging\n", "while", "the", "'rw'", "pipe", "will", "be", "used", "for", "interactive", "sessions,", "logging\n", "only", "when", "there", "is", "no", "'ro'", "pipe.\n", "At", "the", "moment,", "we", "tag", "the", "pipes", "by", "using", "a", "pipe", "path", "suffix\n", "as", "we", "can't", "use", "the", "serial", "port", "ElementName", "attribute", "because", "of\n", "a", "Hyper-V", "bug.\n", "expected", "pipe_path:\n", "'\\\\.\\pipe\\fc1bcc91-c7d3-4116-a210-0cd151e019cd_rw'"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/client/test_query.py": ["SchedulerQueryClientTestCase", "aggregate", "aggregates", "context", "fake_spec", "mock", "mock_delete_agg", "mock_select_destinations", "mock_update_aggs", "objects", "query", "self", "super", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_instance.py": ["Exception", "False", "None", "True", "code", "context", "datetime", "db_instance", "details", "dict", "enumerate", "expected_attrs", "fake_db_instance", "fake_db_secgroups", "fault", "field", "fields", "flavor", "flavorinfo", "group_name", "i", "inst", "instance", "instance_uuid", "isinstance", "jsonutils", "message", "name", "names", "obj_instance_class", "objects", "secgroups", "updates", "uuidutils"], "/Users/mehranhassani/repos/nova/nova/tests/unit/matchers.py": ["DictKeysMismatch", "DictListMatches", "DictMatches", "DictMismatch", "False", "IsSubDictOf", "ListLengthMismatch", "None", "SKIP_TAGS", "SubDictMismatch", "True", "TypeError", "UnicodeDecodeError", "ValueError", "XMLAttrKeysMismatch", "XMLAttrValueMismatch", "XMLDocInfoMismatch", "XMLExpectedChild", "XMLMatchState", "XMLMismatch", "XMLTagMismatch", "XMLTextValueMismatch", "XMLUnexpectedChild", "abs", "actual", "actual_attrs", "actual_child", "actual_child_idx", "actual_doc_info", "actual_only", "actual_tag", "actual_text", "actual_value", "actual_xml", "allow_mixed_nodes", "approx_equal", "args", "child", "content", "d1", "d1_value", "d1keys", "d1only", "d1value", "d2", "d2_value", "d2keys", "d2only", "d2value", "dict", "dict_list_matcher", "did_match", "enumerate", "error", "etree", "exc_tb", "exc_type", "exc_value", "expected", "expected_attrs", "expected_child", "expected_doc_info", "expected_func_calls", "expected_only", "expected_tag", "expected_text", "expected_value", "first_actual_child_idx", "float", "func_call", "hasattr", "idx", "isinstance", "k", "key", "keys", "kwargs", "l1", "l1count", "l2", "l2count", "len", "len1", "len2", "matched_actual_child_idxs", "matcher", "obj", "object", "parser", "pprint", "range", "reason", "related_actual_child_idx", "result", "self", "set", "six", "skip_empty_text_nodes", "skip_values", "sorted", "state", "staticmethod", "str", "sub_dict", "sub_value", "super", "super_dict", "super_value", "tag", "testtools", "text", "text_nodes_mismatch", "text_or_bytes", "tolerance", "type", "within_tolerance", "xml_document", "zip", "Matcher", "classes", "to", "be", "used", "inside", "of", "the", "testtools", "assertThat", "framework.\nAssert", "a", "list", "of", "dicts", "are", "equivalent.\nAssert", "a", "sub_dict", "is", "subset", "of", "super_dict.\nSuperclass", "for", "XML", "mismatch.\nXML", "version", "or", "encoding", "doesn't", "match.\nXML", "tags", "don't", "match.\nXML", "attribute", "keys", "don't", "match.\nXML", "attribute", "values", "don't", "match.\nXML", "text", "values", "don't", "match.\nUnexpected", "child", "present", "in", "XML.\nExpected", "child", "not", "present", "in", "XML.\nCompare", "XML", "strings.", "More", "complete", "than", "string", "comparison.\nRecursively", "compares", "nodes", "within", "the", "XML", "tree.", "Useful", "assertions\n", "If", "both", "values", "aren't", "convertible", "to", "float,", "just", "ignore\n", "ValueError", "if", "arg", "is", "a", "str,", "TypeError", "if", "it's", "something", "else\n", "(like", "None)\n", "Useful", "assertions\n", "lets", "sort", "text", "nodes", "because", "they", "can", "be", "mixed\n", "Start", "by", "comparing", "the", "tags\n", "Compare", "the", "attribute", "keys\n", "Compare", "the", "attribute", "values\n", "Compare", "text", "nodes\n", "Compare", "the", "contents", "of", "the", "node\n", "first_actual_child_idx", "-", "pointer", "to", "next", "actual", "child\n", "used", "with", "allow_mixed_nodes=False", "ONLY\n", "prevent", "to", "visit", "actual", "child", "nodes", "twice\n", "Compare", "the", "nodes\n", "nodes", "match\n", "Make", "sure", "we", "consumed", "all", "nodes", "in", "actual\n", "The", "nodes", "match"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_multiple_create.py": ["fake", "response", "sample_dir", "self", "subs", "test_servers"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/trusted_filter.py": ["AttestationService", "CONF", "ComputeAttestation", "ComputeAttestationCache", "False", "IOError", "LOG", "None", "True", "TypeError", "ValueError", "_LW", "__name__", "action_url", "admin", "body", "cachevalid", "cmd", "compute", "computes", "context", "cooked", "data", "entry", "extra", "filters", "headers", "host", "host_state", "hosts", "instance_type", "jsonutils", "len", "level", "list", "logging", "method", "node_stats", "nova", "object", "objects", "requests", "res", "result", "run_filter_once_per_request", "self", "spec_obj", "state", "states", "status", "status_code", "subcmd", "timeutils", "trust", "vtime", "Check", "host's", "trust", "level.\nTrusted", "filter", "to", "support", "Trusted", "Compute", "Pools.", "Provide", "access", "wrapper", "to", "attestation", "server", "to", "get", "integrity", "report.\n", "If", "the", "CA", "file", "is", "not", "provided,", "let's", "check", "the", "cert", "if", "verification\n", "asked\n", "Connects", "to", "the", "server", "and", "issues", "a", "request.\n", ":returns:", "result", "data\n", ":raises:", "IOError", "if", "the", "request", "fails\n", "Fetch", "compute", "node", "list", "to", "initialize", "the", "compute_nodes,\n", "so", "that", "we", "don't", "need", "poll", "OAT", "service", "one", "by", "one", "for", "each\n", "host", "in", "the", "first", "round", "that", "scheduler", "invokes", "us.\n", "TODO(sfinucan):", "Remove", "this", "warning", "when", "the", "named", "config", "options\n", "gains", "a", "'min'", "parameter.\n", "Normalize", "as", "naive", "object", "to", "interoperate", "with", "utcnow().\n", "Mt.", "Wilson", "does", "not", "necessarily", "return", "an", "ISO8601", "formatted\n", "`vtime`,", "so", "we", "should", "try", "to", "parse", "it", "as", "a", "string", "formatted\n", "datetime.\n", "Mark", "the", "system", "as", "un-trusted", "if", "get", "invalid", "vtime.\n", "The", "hosts", "the", "instances", "are", "running", "on", "doesn't", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/image/download/base.py": ["context", "dst_path", "exception", "metadata", "object", "self", "url_parts"], "/Users/mehranhassani/repos/nova/doc/ext/feature_matrix.py": ["Exception", "FeatureMatrixDirective", "MATURITY_ALL", "MATURITY_COMPLETE", "MATURITY_DEPRECATED", "MATURITY_EXPERIMENTAL", "MATURITY_INCOMPLETE", "Matrix", "MatrixFeature", "MatrixImplementation", "MatrixTarget", "None", "STATUS_ALL", "STATUS_COMPLETE", "STATUS_MISSING", "STATUS_PARTIAL", "STATUS_UKNOWN", "admin_doc_link", "api_doc_link", "app", "architecture", "base", "blank", "c", "cfg", "cli", "cli_command", "cols", "commands", "configparser", "content", "details", "detailstitle", "driver", "env", "feature", "features", "filename", "fp", "fpath", "header", "hypervisor", "i", "id", "impl", "impl_status", "impl_status_and_release", "implcol", "implref", "impls", "impltxt", "info_list", "inline", "inline_link", "inline_ref", "item", "items", "key", "keycol", "keyref", "keytxt", "len", "link", "link_end_idx", "link_idx", "link_idxs", "m", "matrix", "maturity", "maturity_literal", "maturitycol", "nodes", "notes", "noteskey", "object", "open", "para", "para_divers", "para_info", "para_notes", "range", "re", "ref", "rel_fpath", "release", "release_letter", "release_text", "required_arguments", "rst", "section", "self", "start_idx", "status", "subitem", "summary", "summarybody", "summarygroup", "summaryhead", "summarytitle", "sys", "target", "target_ref", "target_txt", "targets", "tempest_items", "tempest_test_uuids", "text", "title", "uri", "uuid", "Constructs", "the", "docutils", "content", "for", "the", "feature", "matrix", "SafeConfigParser", "was", "deprecated", "in", "Python", "3.2\n", "This", "ensures", "that", "the", "docs", "are", "rebuilt", "whenever", "the\n", ".ini", "file", "changes\n", "Now", "we've", "got", "the", "basic", "feature", "details,", "we", "must", "process\n", "the", "hypervisor", "driver", "implementation", "for", "each", "feature\n", "TODO(johngarbutt)", "would", "be", "better", "to", "skip", "known", "list\n", "This", "sets", "up", "all", "the", "column", "headers", "-", "two", "fixed\n", "columns", "for", "feature", "name", "&", "status\n", "then", "one", "column", "for", "each", "hypervisor", "driver\n", "We", "now", "produce", "the", "body", "of", "the", "table,", "one", "row", "for\n", "each", "feature", "to", "report", "on\n", "the", "hyperlink", "target", "name", "linking", "to", "details\n", "first", "the", "to", "fixed", "columns", "for", "title/status\n", "and", "then", "one", "column", "for", "each", "hypervisor", "driver\n", "One", "list", "entry", "for", "each", "feature", "we're", "reporting", "on\n", "The", "hypervisor", "target", "name", "linked", "from", "summary", "table\n", "Highlight", "the", "feature", "title", "name\n", "A", "sub-list", "giving", "details", "of", "each", "hypervisor", "target\n", "removing", "trailing", "punctuation\n", "links", "could", "start", "with", "http://", "or", "https://\n", "assume", "the", "notes", "start", "with", "text", "(could", "be", "empty)\n", "create", "a", "URL", "node", "until", "the", "next", "text", "or", "the", "end", "of", "the", "notes\n", "In", "case", "the", "notes", "end", "with", "a", "link", "without", "a", "blank\n", "get", "all", "text", "after", "the", "last", "link", "(could", "be", "empty)", "or", "all", "of", "the\n", "text", "if", "no", "link", "was", "given"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/console/fake.py": ["console", "context", "length", "object", "password", "property", "self", "Fake", "ConsoleProxy", "driver", "for", "tests.\nFake", "ConsoleProxy", "driver.\nSets", "up", "actual", "proxies.\nTears", "down", "actual", "proxies.\nStart", "up", "any", "config'ed", "consoles", "on", "start.\nReturns", "random", "console", "password.\nGet", "available", "port", "for", "consoles", "that", "need", "one.\nTrim", "password", "to", "length,", "and", "any", "other", "messaging.\nTrim", "password", "to", "length,", "and", "any", "other", "messaging."], "/Users/mehranhassani/repos/nova/nova/scheduler/caching_scheduler.py": ["CachingScheduler", "None", "all_hosts_iterator", "args", "context", "elevated", "filter_scheduler", "kwargs", "list", "self", "super", "Called", "from", "a", "periodic", "tasks", "in", "the", "manager.\nCalled", "from", "the", "filter", "scheduler,", "in", "a", "template", "pattern.", "NOTE(johngarbutt)", "Fetching", "the", "list", "of", "hosts", "before", "we", "get\n", "a", "user", "request,", "so", "no", "user", "requests", "have", "to", "wait", "while", "we\n", "fetch", "the", "list", "of", "hosts.\n", "NOTE(johngarbutt)", "We", "only", "get", "here", "when", "we", "a", "scheduler", "request\n", "comes", "in", "before", "the", "first", "run", "of", "the", "periodic", "task.\n", "Rather", "than", "raise", "an", "error,", "we", "fetch", "the", "list", "of", "hosts."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_images.py": ["None", "True", "convert_image", "exc", "exception", "fetch", "image_info", "images", "mock", "mocked_execute", "os", "path", "path_exists", "processutils", "qemu_img_info", "self", "six", "str", "test", "utils", "utils_execute"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/_bittorrent_seeder.py": ["False", "OSError", "True", "__name__", "_daemonize", "child", "decoded_data", "e", "info", "int", "libtorrent", "logging", "main", "open", "os", "pid", "pluginlib_nova", "se", "seed_cache_path", "seed_time", "session", "si", "so", "stderr", "stdin", "stdout", "sys", "time", "torrent", "torrent_data", "torrent_file", "torrent_listen_port_end", "torrent_listen_port_start", "torrent_path", "torrent_seed_duration", "Copyright", "(c)", "2012", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "TODO(sfinucan):", "Resolve", "all", "'noqa'", "items", "once", "the", "above", "is", "no", "longer", "true\n", "1st", "fork\n", "first", "parent", "returns\n", "noqa\n1", "failed:", "%d", "(%s)\"", "%", "(\n", "decouple", "from", "parent", "environment\n", "2nd", "fork\n", "second", "parent", "exits\n", "noqa\n2", "failed:", "%d", "(%s)\"", "%", "(\n", "redirect", "standard", "file", "descriptors\n", "At", "this", "point", "we're", "the", "daemonized", "child..."], "/Users/mehranhassani/repos/nova/nova/baserpc.py": ["BaseAPI", "CONF", "None", "VERSION_ALIASES", "_NAMESPACE", "arg", "arg_p", "backdoor_port", "cctxt", "context", "host", "jsonutils", "messaging", "nova", "object", "resp", "rpc", "self", "service_name", "super", "target", "timeout", "topic", "version_cap", "Server", "side", "of", "the", "base", "RPC", "API.", "baseapi", "was", "added", "in", "havana"], "/Users/mehranhassani/repos/nova/nova/objects/resource_provider.py": ["Allocation", "CUSTOM_NAMESPACE", "False", "Inventory", "InventoryList", "KeyError", "LOG", "MIN_CUSTOM_RESOURCE_CLASS_ID", "None", "NotImplementedError", "RESOURCE_CREATE_RETRY_COUNT", "RPA_model", "ResourceClass", "ResourceProvider", "True", "Usage", "VERSION", "ValueError", "_AGG_TBL", "_ALLOC_TBL", "_HasAResourceProvider", "_INV_TBL", "_LW", "_RC_CACHE", "_RC_TBL", "_RP_AGG_TBL", "_RP_TBL", "__name__", "_add_inventory", "_add_inventory_to_provider", "_check_capacity_exceeded", "_create_inventory_in_db", "_delete_current_allocs", "_delete_inventory", "_delete_inventory_from_provider", "_ensure_rc_cache", "_get_current_inventory_resources", "_id", "_increment_provider_generation", "_set_inventory", "_update_inventory", "_update_inventory_for_provider", "_update_inventory_in_db", "a", "agg_uuid", "aggregate_uuids", "alloc", "allocation", "allocation_query", "allocation_ratio", "allocations", "allocs", "allowed_filters", "amount", "amount_needed", "base", "before_gens", "can_host", "capacity", "class_str", "classmethod", "cls", "cols_in_output", "conn", "consumer_id", "contains_eager", "context", "copy", "ctx", "cur_res_sel", "customs", "db_allocation", "db_allocation_list", "db_api", "db_exc", "db_inventory", "db_inventory_list", "db_rc", "db_resource_provider", "db_rp", "del_sql", "del_stmt", "dict", "e", "exceeded", "exception", "existing_aggregates", "existing_resources", "field", "fields", "filters", "found_agg", "func", "id", "id_", "ins_stmt", "insert_aggregates", "int", "inv_join", "inv_list", "inv_rec", "inv_record", "inventory", "isinstance", "item", "join_clause", "join_statement", "key", "len", "list", "logging", "map_key", "max_id", "max_unit", "member_of", "min_unit", "missing_provs", "models", "name", "new_aggregate", "new_generation", "next_id", "num_inv", "obj", "objects", "primary_join", "primitive", "property", "provided_aggregates", "provider_str", "provider_uuids", "provs_with_inv", "query", "r", "r_idx", "r_name", "rc", "rc_cache", "rc_id", "rc_ids", "rc_str", "rclass", "record", "records", "repr", "res", "res_class", "res_providers", "resource_class", "resource_classes", "resource_provider", "resource_provider_id", "resource_provider_uuid", "resource_providers", "resources", "result", "retries", "rp", "rp_allocations", "rp_gen", "rp_id", "rp_uuid", "rps_in_aggregates", "sa", "sel", "select_agg_id", "self", "set", "setattr", "six", "source", "sql", "staticmethod", "step_size", "str", "strings", "super", "target", "target_aggregates", "target_version", "these_resources", "to_add", "to_delete", "to_update", "upd_stmt", "updates", "usage", "usage_list", "usage_map", "used", "uuid", "versionutils", "where_clauses", "x", "Delete", "Inventory", "of", "provided", "resource_class.\nSet", "all", "resource", "provider", "Inventory", "to", "be", "the", "provided", "list.\nGet", "the", "aggregate", "uuids", "associated", "with", "this", "resource", "provider.\nInventory", "capacity,", "adjusted", "by", "allocation_ratio.\nCreate", "the", "supplied", "allocations.\nAll", "non-standard", "resource", "classes", "must", "begin", "with", "this", "string.", "NOTE(cdent):", "The", "resource", "provider", "objects", "are", "designed", "to", "never", "be\n", "used", "over", "RPC.", "Remote", "manipulation", "is", "done", "with", "the", "placement", "HTTP\n", "API.", "The", "'remotable'", "decorators", "should", "not", "be", "used.\n", "Determine", "which", "resources", "we", "should", "be", "adding,", "deleting", "and/or\n", "updating", "in", "the", "resource", "provider's", "inventory", "by", "comparing", "sets\n", "of", "resource", "class", "identifiers.\n", "Here", "is", "where", "we", "update", "the", "resource", "provider's", "generation", "value.\n", "If", "this", "update", "updates", "zero", "rows,", "that", "means", "that", "another\n", "thread", "has", "updated", "the", "inventory", "for", "this", "resource", "provider\n", "between", "the", "time", "the", "caller", "originally", "read", "the", "resource", "provider\n", "record", "and", "inventory", "information", "and", "this", "point.", "We", "raise", "an\n", "exception", "here", "which", "will", "rollback", "the", "above", "transaction", "and\n", "return", "an", "error", "to", "the", "caller", "to", "indicate", "that", "they", "can", "attempt\n", "to", "retry", "the", "inventory", "save", "after", "reverifying", "any", "capacity\n", "conditions", "and", "re-reading", "the", "existing", "inventory", "information.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Add", "destroy()\n", "Version", "1.2:", "Add", "get_aggregates(),", "set_aggregates()\n", "Version", "1.3:", "Turn", "off", "remotable\n", "Don't", "delete", "the", "resource", "provider", "if", "it", "has", "allocations.\n", "Delete", "any", "inventory", "associated", "with", "the", "resource", "provider\n", "Delete", "any", "aggregate", "associations", "for", "the", "resource", "provider\n", "The", "name", "substitution", "on", "the", "next", "line", "is", "needed", "to", "satisfy", "pep8\n", "Now", "delete", "the", "RP", "records\n", "When", "aggregate", "uuids", "are", "persisted", "no", "validation", "is", "done\n", "to", "ensure", "that", "they", "refer", "to", "something", "that", "has", "meaning\n", "elsewhere.", "It", "is", "assumed", "that", "code", "which", "makes", "use", "of", "the\n", "aggregates,", "later,", "will", "validate", "their", "fitness.\n", "TODO(cdent):", "At", "the", "moment", "we", "do", "not", "delete\n", "a", "PlacementAggregate", "that", "no", "longer", "has", "any", "associations\n", "with", "at", "least", "one", "resource", "provider.", "We", "may", "wish", "to", "do", "that\n", "to", "avoid", "bloat", "if", "it", "turns", "out", "we're", "creating", "a", "lot", "of", "noise.\n", "Not", "doing", "now", "to", "move", "things", "along.\n", "Create", "any", "aggregates", "that", "do", "not", "yet", "exist", "in\n", "PlacementAggregates.", "This", "is", "different", "from\n", "the", "set", "in", "existing_aggregates;", "those", "are", "aggregates", "for\n", "which", "there", "are", "associations", "for", "the", "resource", "provider\n", "at", "rp_id.", "The", "following", "loop", "checks", "for", "the", "existence", "of", "any\n", "aggregate", "with", "the", "provided", "uuid.", "In", "this", "way", "we", "only\n", "create", "a", "new", "row", "in", "the", "PlacementAggregate", "table", "if", "the\n", "aggregate", "uuid", "has", "never", "been", "seen", "before.", "Code", "further\n", "below", "will", "update", "the", "associations.\n", "Flush", "each", "aggregate", "to", "explicitly", "call", "the", "INSERT\n", "statement", "that", "could", "result", "in", "an", "integrity", "error\n", "if", "some", "other", "thread", "has", "added", "this", "agg_uuid.", "This\n", "also", "makes", "sure", "that", "the", "new", "aggregates", "have\n", "ids", "when", "the", "SELECT", "below", "happens.\n", "Something", "else", "has", "already", "added", "this", "agg_uuid\n", "Remove", "all", "aggregate", "associations", "so", "we", "can", "refresh", "them\n", "below.", "This", "means", "that", "all", "associations", "are", "added,", "but", "the\n", "aggregates", "themselves", "stay", "around.\n", "Set", "resource_provider_id,", "aggregate_id", "pairs", "to\n", "ResourceProviderAggregate", "table.\n", "Version", "1.0:", "Initial", "Version\n", "Version", "1.1:", "Turn", "off", "remotable\n", "Eg.", "filters", "can", "be:\n", "filters", "=", "{\n", "'name':", "<name>,\n", "'uuid':", "<uuid>,\n", "'member_of':", "[<aggregate_uuid>,", "<aggregate_uuid>]\n", "'resources':", "{\n", "'VCPU':", "1,\n", "'MEMORY_MB':", "1024\n", "}\n", "}\n", "Since", "we", "modify", "the", "filters,", "copy", "them", "so", "that", "we", "don't", "modify\n", "them", "in", "the", "calling", "program.\n", "NOTE(sbauza):", "We", "want", "to", "key", "the", "dict", "by", "the", "resource", "class", "IDs\n", "and", "we", "want", "to", "make", "sure", "those", "class", "names", "aren't", "incorrect.\n", "If", "'member_of'", "has", "values", "join", "with", "the", "PlacementAggregates", "to\n", "get", "those", "resource", "providers", "that", "are", "associated", "with", "any", "of", "the\n", "list", "of", "aggregate", "uuids", "provided", "with", "'member_of'.\n", "Returns", "quickly", "the", "list", "in", "case", "we", "don't", "need", "to", "check", "the\n", "resource", "usage\n", "NOTE(sbauza):", "In", "case", "we", "want", "to", "look", "at", "the", "resource", "criteria,", "then\n", "the", "SQL", "generated", "from", "this", "case", "looks", "something", "like:\n", "SELECT\n", "rp.*\n", "FROM", "resource_providers", "AS", "rp\n", "JOIN", "inventories", "AS", "inv\n", "ON", "rp.id", "=", "inv.resource_provider_id\n", "LEFT", "JOIN", "(\n", "SELECT", "resource_provider_id,", "resource_class_id,", "SUM(used)", "AS", "used\n", "FROM", "allocations\n", "WHERE", "resource_class_id", "IN", "($RESOURCE_CLASSES)\n", "GROUP", "BY", "resource_provider_id,", "resource_class_id\n", ")", "AS", "usage\n", "ON", "inv.resource_provider_id", "=", "usage.resource_provider_id\n", "AND", "inv.resource_class_id", "=", "usage.resource_class_id\n", "AND", "(inv.resource_class_id", "=", "$X", "AND", "(used", "+", "$AMOUNT_X", "<=", "(\n", "total", "+", "reserved)", "*", "inv.allocation_ratio)", "AND\n", "inv.min_unit", "<=", "$AMOUNT_X", "AND", "inv.max_unit", ">=", "$AMOUNT_X", "AND\n", "$AMOUNT_X", "%", "inv.step_size", "==", "0)\n", "OR", "(inv.resource_class_id", "=", "$Y", "AND", "(used", "+", "$AMOUNT_Y", "<=", "(\n", "total", "+", "reserved)", "*", "inv.allocation_ratio)", "AND\n", "inv.min_unit", "<=", "$AMOUNT_Y", "AND", "inv.max_unit", ">=", "$AMOUNT_Y", "AND\n", "$AMOUNT_Y", "%", "inv.step_size", "==", "0)\n", "OR", "(inv.resource_class_id", "=", "$Z", "AND", "(used", "+", "$AMOUNT_Z", "<=", "(\n", "total", "+", "reserved)", "*", "inv.allocation_ratio)", "AND\n", "inv.min_unit", "<=", "$AMOUNT_Z", "AND", "inv.max_unit", ">=", "$AMOUNT_Z", "AND\n", "$AMOUNT_Z", "%", "inv.step_size", "==", "0))\n", "GROUP", "BY", "rp.uuid\n", "HAVING\n", "COUNT(DISTINCT(inv.resource_class_id))", "==", "len($RESOURCE_CLASSES)\n\n", "with", "a", "possible", "additional", "WHERE", "clause", "for", "the", "name", "and", "uuid", "that\n", "comes", "from", "the", "above", "filters\n", "First", "JOIN", "between", "inventories", "and", "RPs", "is", "here\n", "Now,", "below", "is", "the", "LEFT", "JOIN", "for", "getting", "the", "allocations", "usage\n", "And", "finally,", "we", "verify", "for", "each", "resource", "class", "if", "the", "requested\n", "amount", "isn't", "more", "than", "the", "left", "space", "(considering", "the", "allocation\n", "ratio,", "the", "reserved", "space", "and", "the", "min", "and", "max", "amount", "possible", "sizes)\n", "NOTE(sbauza):", "Only", "RPs", "having", "all", "the", "asked", "resources", "can", "be", "provided\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Changed", "resource_class", "to", "allow", "custom", "strings\n", "Version", "1.2:", "Turn", "off", "remotable\n", "Version", "1.0:", "Initial", "Version\n", "Version", "1.1:", "Turn", "off", "remotable\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Changed", "resource_class", "to", "allow", "custom", "strings\n", "Version", "1.2:", "Turn", "off", "remotable\n", "We", "may", "be", "in", "a", "nested", "context", "manager", "so", "must", "flush", "so", "the\n", "caller", "receives", "an", "id.\n", "The", "SQL", "generated", "below", "looks", "like", "this:\n", "SELECT\n", "rp.id,\n", "rp.uuid,\n", "rp.generation,\n", "inv.resource_class_id,\n", "inv.total,\n", "inv.reserved,\n", "inv.allocation_ratio,\n", "allocs.used\n", "FROM", "resource_providers", "AS", "rp\n", "JOIN", "inventories", "AS", "i1\n", "ON", "rp.id", "=", "i1.resource_provider_id\n", "LEFT", "JOIN", "(\n", "SELECT", "resource_provider_id,", "resource_class_id,", "SUM(used)", "AS", "used\n", "FROM", "allocations\n", "WHERE", "resource_class_id", "IN", "($RESOURCE_CLASSES)\n", "GROUP", "BY", "resource_provider_id,", "resource_class_id\n", ")", "AS", "allocs\n", "ON", "inv.resource_provider_id", "=", "allocs.resource_provider_id\n", "AND", "inv.resource_class_id", "=", "allocs.resource_class_id\n", "WHERE", "rp.uuid", "IN", "($RESOURCE_PROVIDERS)\n", "AND", "inv.resource_class_id", "IN", "($RESOURCE_CLASSES)\n\n", "We", "then", "take", "the", "results", "of", "the", "above", "and", "determine", "if", "any", "of", "the\n", "inventory", "will", "have", "its", "capacity", "exceeded.\n", "Create", "a", "map", "keyed", "by", "(rp_uuid,", "res_class)", "for", "the", "records", "in", "the", "DB\n", "Ensure", "that", "all", "providers", "have", "existing", "inventory\n", "check", "min_unit,", "max_unit,", "step_size\n", "usage[\"used\"]", "can", "be", "returned", "as", "None\n", "Version", "1.0:", "Initial", "Version\n", "Version", "1.1:", "Add", "create_all()", "and", "delete_all()\n", "Version", "1.2:", "Turn", "off", "remotable\n", "Short-circuit", "out", "if", "there", "are", "any", "allocations", "with", "string\n", "resource", "class", "names", "that", "don't", "exist", "this", "will", "raise", "a\n", "ResourceClassNotFound", "exception.\n", "Before", "writing", "any", "allocation", "records,", "we", "check", "that", "the", "submitted\n", "allocations", "do", "not", "cause", "any", "inventory", "capacity", "to", "be", "exceeded", "for\n", "any", "resource", "provider", "and", "resource", "class", "involved", "in", "the", "allocation\n", "transaction.", "_check_capacity_exceeded()", "raises", "an", "exception", "if", "any\n", "inventory", "capacity", "is", "exceeded.", "If", "capacity", "is", "not", "exceeeded,", "the\n", "function", "returns", "a", "list", "of", "ResourceProvider", "objects", "containing", "the\n", "generation", "of", "the", "resource", "provider", "at", "the", "time", "of", "the", "check.", "These\n", "objects", "are", "used", "at", "the", "end", "of", "the", "allocation", "transaction", "as", "a", "guard\n", "against", "concurrent", "updates.\n", "First", "delete", "any", "existing", "allocations", "for", "that", "rp/consumer", "combo.\n", "Now", "add", "the", "allocations", "that", "were", "passed", "in.\n", "Generation", "checking", "happens", "here.", "If", "the", "inventory", "for\n", "this", "resource", "provider", "changed", "out", "from", "under", "us,\n", "this", "will", "raise", "a", "ConcurrentUpdateDetected", "which", "can", "be", "caught\n", "by", "the", "caller", "to", "choose", "to", "try", "again.", "It", "will", "also", "rollback", "the\n", "transaction", "so", "that", "these", "changes", "always", "happen", "atomically.\n", "TODO(jaypipes):", "Retry", "the", "allocation", "writes", "on\n", "ConcurrentUpdateDetected\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Changed", "resource_class", "to", "allow", "custom", "strings\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Turn", "off", "remotable\n", "Version", "1.0:", "Initial", "version\n", "Retry", "count", "for", "handling", "possible", "race", "condition", "in", "creating", "resource\n", "class.", "We", "don't", "ever", "want", "to", "hit", "this,", "as", "it", "is", "simply", "a", "race", "when\n", "creating", "these", "classes,", "but", "this", "is", "just", "a", "stopgap", "to", "prevent", "a", "potential\n", "infinite", "loop.\n", "There", "is", "the", "possibility", "of", "a", "race", "when", "adding", "resource", "classes,", "as\n", "the", "ID", "is", "generated", "locally.", "This", "loop", "catches", "that", "exception,", "and\n", "retries", "until", "either", "it", "succeeds,", "or", "a", "different", "exception", "is\n", "encountered.\n", "Race", "condition", "for", "ID", "creation;", "try", "again\n", "The", "duplication", "is", "on", "the", "other", "unique", "column,", "'name'.", "So", "do\n", "not", "retry;", "raise", "the", "exception", "immediately.\n", "We", "have", "no", "idea", "how", "common", "it", "will", "be", "in", "practice", "for", "the", "retry\n", "limit", "to", "be", "exceeded.", "We", "set", "it", "high", "in", "the", "hope", "that", "we", "never\n", "hit", "this", "point,", "but", "added", "this", "log", "message", "so", "we", "know", "that", "this\n", "specific", "situation", "occurred.\n", "Never", "delete", "any", "standard", "resource", "class,", "since", "the", "standard", "resource\n", "classes", "don't", "even", "exist", "in", "the", "database", "table", "anyway.\n", "Don't", "delete", "the", "resource", "class", "if", "it", "is", "referred", "to", "in", "the\n", "inventories", "table.\n", "Never", "update", "any", "standard", "resource", "class,", "since", "the", "standard", "resource\n", "classes", "don't", "even", "exist", "in", "the", "database", "table", "anyway.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Turn", "off", "remotable"], "/Users/mehranhassani/repos/nova/nova/conf/ssl.py": ["conf", "dict", "sslutils", "The", "oslo_cache", "library", "returns", "a", "list", "of", "tuples"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/257_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/servicegroup/test_db_servicegroup.py": ["DBServiceGroupTestCase", "False", "None", "RuntimeError", "exc_cls", "fn", "messaging", "mock", "now", "objects", "result", "self", "service", "service_ref", "servicegroup", "super", "test", "time_fixture", "timeutils", "upd_mock", "utils_fixture", "Up", "(equal)\n", "Up\n", "Down\n", "\"last_seen_up\"", "says", "down,", "\"updated_at\"", "says", "up.\n", "This", "can", "happen", "if", "we", "do", "a", "service", "disable/enable", "while", "it's", "down.\n", "\"last_seen_up\"", "is", "none", "before", "compute", "node", "reports", "its", "status,\n", "just", "use", "'created_at'", "as", "last_heartbeat.\n", "fail", "if", "exception", "not", "caught"], "/Users/mehranhassani/repos/nova/nova/objects/tag.py": ["MAX_TAG_LENGTH", "VERSION", "base", "cls", "context", "db", "db_tag", "db_tags", "fields", "key", "name", "objects", "resource_id", "self", "setattr", "staticmethod", "tag", "tags", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "method", "exists()\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Tag", "<=", "version", "1.1"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/282_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Kilo", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Liberty", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/disk/mount/block.py": ["False", "None", "True", "api", "mode", "self", "Support", "for", "mounting", "block", "device", "based", "images", "directly."], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/cert/rpcapi.py": ["CONF", "CertAPI", "VERSION_ALIASES", "cctxt", "ctxt", "messaging", "nova", "object", "project_id", "rpc", "self", "super", "target", "text", "user_id", "version_cap"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/024_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/client/session.py": ["CONF", "Exception", "False", "ImportError", "LOG", "None", "PLUGIN_REQUIRED_VERSION", "True", "XenAPI", "_", "_LE", "_LW", "__name__", "_type", "aggr", "apply_session_helpers", "args", "ast", "attempt", "attempts", "callback", "callback_result", "cli_objects", "config_value", "conn", "context", "contextlib", "current_version", "desc", "dict", "e", "errno", "error", "exc", "exception", "fn", "func", "host_ref", "http_client", "i", "kwargs", "label", "len", "logging", "master", "method", "min", "msg", "name", "nova", "num_retries", "object", "objects", "params", "pickle", "platform_version", "platform_version_str", "plugin", "pool", "pool_states", "product_brand", "product_version", "product_version_str", "pw", "queue", "range", "record_type", "ref", "requested_version", "retry_cb", "rv", "self", "session", "sleep_time", "socket", "software_version", "str", "task_ref", "time", "timeout", "url", "urllib", "user", "v", "version", "version_str", "version_string", "versionutils", "xmlrpclib", "xs_url", "The", "session", "to", "invoke", "XenAPI", "SDK", "calls.\nReturn", "a", "tuple", "of", "(major,", "minor,", "rev)", "for", "the", "host", "version\nReturn", "a", "string", "session_id.", "Used", "for", "vnc", "consoles.\nReturn", "exclusive", "session", "for", "scope", "of", "with", "statement.\nReturn", "the", "xenapi", "host", "on", "which", "nova-compute", "runs", "on.\nCall", "the", "specified", "XenAPI", "method", "on", "a", "background", "thread.\nCall", "host.call_plugin", "on", "a", "background", "thread.\nAllows", "a", "plugin", "to", "raise", "RetryableError", "so", "we", "can", "try", "again.\nStubout", "point.", "This", "can", "be", "replaced", "with", "a", "mock", "session.\nParse", "exception", "details.\nReturn", "exclusive", "session", "for", "scope", "of", "with", "statement.", "This", "is", "not", "a", "config", "option", "as", "it", "should", "only", "ever", "be\n", "changed", "in", "development", "environments.\n", "MAJOR", "VERSION:", "Incompatible", "changes", "with", "the", "plugins\n", "MINOR", "VERSION:", "Compatible", "changes,", "new", "plguins,", "etc\n", "v2.0", "is", "the", "same", "as", "v1.8,", "with", "no", "version", "bumps.", "Remove", "this", "once\n", "Ocata", "is", "released\n", "if", "user", "and", "pw", "of", "the", "master", "are", "different,", "we're", "doomed!\n", "Product", "version", "is", "only", "set", "in", "some", "cases", "(e.g.", "XCP,", "XenServer)", "and\n", "not", "in", "others", "(e.g.", "xenserver-core,", "XAPI-XCP).\n", "In", "these", "cases,", "the", "platform", "version", "is", "the", "best", "number", "to", "use.\n", "NOTE(armando):", "pass", "the", "host", "uuid", "along", "with", "the", "args", "so", "that\n", "the", "plugin", "gets", "executed", "on", "the", "right", "host", "when", "using", "XS", "pools\n", "TODO(sfinucan):", "Once", "the", "required", "plugin", "version", "is", "bumped", "to", "v2.0,\n", "we", "can", "assume", "that", "all", "files", "will", "have", "a", "'.py'", "extension.", "Until", "then,\n", "handle", "hosts", "without", "this", "extension", "by", "rewriting", "all", "calls", "to", "plugins\n", "to", "exclude", "the", "'.py'", "extension.", "This", "is", "made", "possible", "through", "the\n", "temporary", "inclusion", "of", "symlinks", "to", "plugins.\n", "NOTE(sfinucan):", "'partition_utils.py'", "was", "the", "only", "plugin", "with", "a", "'.py'\n", "extension", "before", "this", "change", "was", "enacted,", "hence", "this", "plugin", "is\n", "excluded"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/agent.py": ["CONF", "Exception", "False", "LOG", "None", "RuntimeError", "SKIP_FILES_AT_BOOT_KEY", "SKIP_FILES_AT_BOOT_SM_KEY", "SKIP_SSH_KEY", "SKIP_SSH_SM_KEY", "SimpleDH", "True", "TypeError", "USE_AGENT_KEY", "USE_AGENT_SM_KEY", "ValueError", "_", "_LE", "_LI", "_LW", "__name__", "_call_agent", "_wait_for_new_dom_id", "addl_args", "agent_build", "agent_path", "agent_pub", "agent_rel_path", "args", "available", "available_version", "b64_contents", "b64_path", "base64", "base_dir", "binascii", "cmd", "compute_utils", "contents", "context", "crypto", "ctxt", "current", "current_version", "decrypt", "dh", "dict", "dom_id", "e", "enc", "enc_pass", "encodeutils", "err", "err_msg", "error", "exc", "exc_info", "exception", "expiration", "ignore_errors", "injected_files", "instance", "int", "is_upgrade_required", "isinstance", "jsonutils", "key", "key_data", "keyfile", "logging", "method", "new_pass", "nova", "object", "objects", "old_dom_id", "os", "other", "out", "password", "path", "pow", "raw_value", "resp", "ret", "self", "session", "sshkey", "str", "strutils", "success_codes", "sys", "sys_meta", "text", "time", "timeout", "use_agent_raw", "utils", "uuidutils", "version", "virtapi", "vm_ref", "xe_daemon_filename", "Abstracts", "out", "the", "interaction", "with", "the", "agent", "xenapi", "plugin.", "always", "fetch", "domid", "because", "VM", "may", "have", "rebooted\n", "Some", "old", "versions", "of", "the", "Windows", "agent", "have", "a", "trailing", "\\\\r\\\\n\n", "(ie", "CRLF", "escaped)", "for", "some", "reason.", "Strip", "that", "off.\n", "NOTE(johngarbutt):", "agent", "version", "numbers", "are", "four", "part,\n", "so", "we", "need", "to", "use", "the", "loose", "version", "to", "compare", "them\n", "The", "agent", "can", "be", "slow", "to", "start", "for", "a", "variety", "of", "reasons.", "On", "Windows,\n", "it", "will", "generally", "perform", "a", "setup", "process", "on", "first", "boot", "that", "can\n", "take", "a", "couple", "of", "minutes", "and", "then", "reboot.", "On", "Linux,", "the", "system", "can\n", "also", "take", "a", "while", "to", "boot.\n", "NOTE(johngarbutt):", "we", "can't", "use", "the", "xapi", "plugin\n", "timeout,", "because", "the", "domid", "may", "change", "when\n", "the", "server", "is", "rebooted\n", "Silently", "fail", "for", "agent", "upgrades\n", "Some", "old", "versions", "of", "Linux", "and", "Windows", "agent", "expect", "trailing", "\\n\n", "on", "password", "to", "work", "correctly.\n", "The", "following", "ssh", "key", "was", "injected", "by", "Nova',\n", "Files/paths", "must", "be", "base64-encoded", "for", "transmission", "to", "agent\n", "NOTE(johngarbutt)", "old", "FreeBSD", "and", "Gentoo", "agents", "return", "500", "on", "success\n", "The", "presence", "of", "the", "guest", "agent\n", "file", "indicates", "that", "this", "instance", "can\n", "reconfigure", "the", "network", "from", "xenstore", "data,\n", "so", "manipulation", "of", "files", "in", "/etc", "is", "not\n", "required"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/295_add_virtual_interfaces_uuid_index.py": ["INDEX_COLUMNS", "INDEX_NAME", "Index", "LOG", "MetaData", "None", "Table", "True", "_LI", "__name__", "_get_table_index", "col_name", "columns", "getattr", "idx", "index", "logging", "meta", "migrate_engine", "table"], "/Users/mehranhassani/repos/nova/nova/conf/ephemeral_storage.py": ["False", "cfg", "conf", "ephemeral_storage_encryption_group", "ephemeral_storage_encryption_opts"], "/Users/mehranhassani/repos/nova/nova/conf/base.py": ["False", "base_options", "cfg", "conf"], "/Users/mehranhassani/repos/nova/nova/test.py": ["AttributeError", "CELL1_NAME", "CONF", "Exception", "False", "KeyError", "NoDBTestCase", "None", "REQUIRES_LOCKING", "SampleNetworks", "TIMEOUT_SCALING_FACTOR", "TestCase", "TimeOverride", "True", "TypeError", "USES_DB", "USES_DB_SELF", "_TRUE_VALUES", "_patch_mock_to_raise_for_invalid_assert_calls", "_self", "api_methods", "args", "baseargs", "baseclass", "baseinst", "basemethods", "bridge_interface", "c", "c0", "c1", "cache", "cell", "celldbs", "cfg", "cm", "condition", "conf_fixture", "config_fixture", "context", "contextlib", "contexts", "copy", "cover_api", "ctxt", "datetime", "db", "dict", "dir", "e", "eventlet", "expected", "expected_keys", "expected_name", "expected_values_iter", "extranames", "fake_transport", "findmethods", "fixtures", "func", "func_or_cls", "get_public_apis", "getattr", "group", "hasattr", "hm", "host", "i", "implargs", "implmethods", "inner", "inner_mismatch", "inspect", "inst", "isinstance", "items", "iter", "jsonutils", "k", "key", "kw", "kwargs", "len", "list", "lock_path", "lockutils", "log_fixture", "logging", "methods", "mock", "mox_fixture", "moxstubout", "name", "nested", "net", "network", "network_manager", "new", "new_func", "next", "nova_fixtures", "object", "objects", "objects_base", "observed", "observed_keys", "observed_values_iter", "old", "openstack_driver", "orig_func", "os", "other", "ovo_fixture", "policy_fixture", "raise_for_invalid_assert_calls", "range", "reason", "self", "set", "six", "sort_key", "sorted", "stack", "str", "super", "svc", "test_methods", "testtools", "timeutils", "tuple", "type", "utils", "uuids", "v", "valid_asserts", "value", "want_obj", "wantkey", "wanttype", "wantvalue", "wrapped", "wrapper", "x", "Create", "sample", "networks", "in", "the", "database.\nRun", "before", "each", "test", "method", "to", "initialize", "test", "environment.\nOverride", "flag", "variables", "for", "a", "test.\nFixture", "to", "start", "and", "remove", "time", "override.\nMatches", "objects", "with", "equal", "primitives.", "NOTE(gibi):", "needs", "to", "be", "called", "only", "once", "at", "import", "time\n", "to", "patch", "the", "mock", "lib\n", "USES_DB", "is", "set", "to", "False", "for", "tests", "that", "inherit", "from", "NoDBTestCase.\n", "USES_DB_SELF", "is", "set", "to", "True", "in", "tests", "that", "specifically", "want", "to", "use", "the\n", "database", "but", "need", "to", "configure", "it", "themselves,", "for", "example", "to", "setup", "the\n", "API", "DB", "but", "not", "the", "cell", "DB.", "In", "those", "cases", "the", "test", "will", "override\n", "USES_DB_SELF", "=", "True", "but", "inherit", "from", "the", "NoDBTestCase", "class", "so", "it", "does\n", "not", "get", "the", "default", "fixture", "setup", "when", "using", "a", "database", "(which", "is", "the\n", "API", "and", "cell", "DBs,", "and", "adding", "the", "default", "flavors).\n", "NOTE(sdague):", "because", "of", "the", "way", "we", "were", "using", "the", "lock\n", "wrapper", "we", "ended", "up", "with", "a", "lot", "of", "tests", "that", "started\n", "relying", "on", "global", "external", "locking", "being", "set", "up", "for", "them.", "We\n", "consider", "all", "of", "these", "to", "be", "*bugs*.", "Tests", "should", "not", "require\n", "global", "external", "locking,", "or", "if", "they", "do,", "they", "should\n", "explicitly", "set", "it", "up", "themselves.\n\n", "The", "following", "REQUIRES_LOCKING", "class", "parameter", "is", "provided\n", "as", "a", "bridge", "to", "get", "us", "there.", "No", "new", "tests", "should", "be", "added\n", "that", "require", "it,", "and", "existing", "classes", "and", "tests", "should", "be\n", "fixed", "to", "not", "need", "it.\n", "NOTE(danms):", "Make", "sure", "to", "reset", "us", "back", "to", "non-remote", "objects\n", "for", "each", "test", "to", "avoid", "interactions.", "Also,", "backup", "the", "object\n", "registry.\n", "NOTE(danms):", "If", "the", "test", "claims", "to", "want", "to", "set", "up", "the", "database\n", "itself,", "then", "it", "is", "responsible", "for", "all", "the", "mapping", "stuff", "too.\n", "NOTE(danms):", "Full", "database", "setup", "involves", "a", "cell0,", "cell1,\n", "and", "the", "relevant", "mappings.\n", "NOTE(danms):", "If", "not", "using", "the", "database,", "we", "mock", "out", "the\n", "mapping", "stuff", "and", "effectively", "collapse", "everything", "to", "a\n", "single", "cell.\n", "NOTE(blk-u):", "WarningsFixture", "must", "be", "after", "the", "Database", "fixture\n", "because", "sqlalchemy-migrate", "messes", "with", "the", "warnings", "filters.\n", "NOTE(mnaser):", "All", "calls", "to", "utils.is_neutron()", "are", "cached", "in\n", "nova.utils._IS_NEUTRON.", "We", "set", "it", "to", "None", "to", "avoid", "any\n", "caching", "of", "that", "value.\n", "Delete", "attributes", "that", "don't", "start", "with", "_", "so", "they", "don't", "pin\n", "memory", "around", "unnecessarily", "for", "the", "duration", "of", "the", "test\n", "suite\n", "NOTE(gmann):", "Skip", "attribute", "'id'", "because", "if", "tests", "are", "being\n", "generated", "using", "testscenarios", "then,", "'id'", "attribute", "is", "being\n", "added", "during", "cloning", "the", "tests.", "And", "later", "that", "'id'", "attribute\n", "is", "being", "used", "by", "test", "suite", "to", "generate", "the", "results", "for", "each\n", "newly", "generated", "tests", "by", "testscenarios.\n", "inverting", "the", "observed", "/", "expected", "because", "testtools\n", "error", "messages", "assume", "expected", "is", "second.", "Possibly", "makes\n", "reading", "the", "error", "messages", "less", "confusing."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/266_add_instance_tags.py": ["False", "True", "meta", "migrate_engine", "sa", "tags"], "/Users/mehranhassani/repos/nova/nova/objects/dns_domain.py": ["True", "VERSION", "base", "cls", "context", "db", "db_dnsd", "db_domains", "db_vif", "domain", "field", "fields", "objects", "project", "setattr", "staticmethod", "vif", "zone", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/plugins/test_nova_plugin_version.py": ["NovaPluginVersion", "expected_value", "plugin_test", "return_value", "self", "session", "super"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_migration.py": ["False", "MigrationMonitorTestCase", "None", "True", "active_migrations", "addr", "addrs", "bdm", "conf", "connection_info", "data", "deque", "doc", "etree", "fakelibvirt", "flavor", "get_volume_config", "host", "info", "instance", "len", "libvirt_guest", "matchers", "mig", "migration", "mock", "mock_active", "mock_dt", "mock_graphics", "mock_guest", "mock_isave", "mock_msave", "mock_pause", "mock_perf_events_xml", "mock_postcopy", "mock_ps", "mock_resume", "mock_serial", "mock_tostring", "mock_volume", "new_xml", "newdt", "objects", "on_migration_failure", "ports", "power_state", "res", "self", "steps", "super", "tasks", "test", "units", "vconfig", "xml", "This", "test", "is", "for", "backwards", "compatibility", "when", "we", "don't\n", "get", "the", "serial", "ports", "from", "the", "target", "node.\n", "m1.small\n", "Progress", "time", "exceeds", "progress", "timeout\n", "Progress", "timeout", "is", "disabled\n", "Progress", "time", "is", "less", "than", "progress", "timeout\n", "Elapsed", "time", "is", "over", "completion", "timeout\n", "Completion", "timeout", "is", "disabled\n", "Elapsed", "time", "is", "less", "than", "completion", "timeout\n", "Migration", "progress", "is", "not", "fast", "enough\n", "Migration", "already", "running", "in", "postcopy", "mode\n", "First", "memory", "iteration", "not", "completed", "yet\n", "Migration", "progress", "is", "good\n", "We", "shouldn't", "change", "downtime", "since", "haven't", "hit", "first", "time\n", "We", "should", "pick", "the", "first", "downtime", "entry\n", "We", "shouldn't", "change", "downtime,", "since", "its", "already", "set\n", "Test", "to", "ensure", "unknown", "tasks", "are", "ignored\n", "Test", "to", "ensure", "unknown", "tasks", "are", "ignored"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/volume.py": ["CONF", "False", "LOG", "LibvirtBaseVolumeDriver", "LibvirtFakeVolumeDriver", "LibvirtVolumeDriver", "SHOULD_LOG_DISCARD_WARNING", "True", "_LE", "_LW", "__name__", "access_mode", "conf", "connection_info", "data", "dict", "disk_dev", "disk_info", "exception", "host", "is_block_dev", "isinstance", "k", "libvirt_utils", "logging", "min_qemu", "new_key", "nova", "object", "self", "setattr", "six", "specs", "super", "tune_opts", "v", "vconfig", "Volume", "drivers", "for", "libvirt.\nBase", "class", "for", "volume", "drivers.\nReturns", "xml", "for", "libvirt.\nConnect", "the", "volume.\nDisconnect", "the", "volume.\nClass", "for", "volumes", "backed", "by", "local", "file.\nReturns", "xml", "for", "libvirt.\nDriver", "to", "attach", "fake", "volumes", "to", "libvirt.\nReturns", "xml", "for", "libvirt.", "Support", "for", "block", "size", "tuning\n", "Extract", "rate_limit", "control", "parameters\n", "Extract", "access_mode", "control", "parameters\n", "Configure", "usage", "of", "discard"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/monitors/test_monitors.py": ["FakeExt", "None", "_mock_ext_manager", "ept", "ext_cpu_mon1", "ext_cpu_mon2", "handler", "mock", "monitors", "name", "object", "self", "test", "Tests", "for", "resource", "monitors.\nTest", "case", "for", "monitors.", "We", "check", "to", "ensure", "only", "one", "CPU", "monitor", "is", "loaded...\n", "We", "check", "to", "ensure", "that", "the", "auto-prefixing", "of", "the", "CPU\n", "namespace", "is", "handled", "properly..."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_iptables_network.py": ["False", "IptablesManagerTestCase", "binary_name", "chain", "current_lines", "last_postrouting_line", "len", "line", "linux_net", "list", "mock", "mock_apply", "new_lines", "num_removed", "num_rules", "regex", "sample_filter", "sample_nat", "seen_lines", "self", "set", "six", "super", "table", "test", "Unit", "Tests", "for", "network", "code.Generated", "by", "iptables-save", "on", "Fri", "Feb", "18", "15:17:05", "2011',\n", "Completed", "on", "Fri", "Feb", "18", "15:17:05", "2011']\n", "Generated", "by", "iptables-save", "on", "Fri", "Feb", "18", "15:17:05", "2011',\n", "Completed", "on", "Fri", "Feb", "18", "15:17:05", "2011']\nGenerated", "by", "nova\"", "==", "new_lines[0]", "and\nCompleted", "by", "nova\"", "==", "new_lines[-1],\n", "Test", "iptables_top_regex\n", "Test", "iptables_bottom_regex\n", "Test", "both", "iptables_top_regex", "and", "iptables_bottom_regex"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/ironic_fakes.py": ["COMPUTE_NODES", "False", "None", "SERVICES", "True", "dict", "host", "objects", "service", "services", "Broken", "entry"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/filters/test_json_filters.py": ["False", "KeyError", "None", "TestJsonFilter", "True", "args", "capabilities", "dict", "expected", "fakes", "host", "json_filter", "json_query", "jsonutils", "objects", "op", "ops_to_test", "raw", "self", "service", "spec_obj", "super", "test", "Test", "json", "filter", "more", "thoroughly.\n", "Passes\n", "Passes\n", "Fails", "due", "to", "capabilities", "being", "disabled\n", "Fails", "due", "to", "being", "exact", "memory/disk", "we", "don't", "want\n", "Fails", "due", "to", "memory", "lower", "but", "disk", "higher\n", "Fails", "due", "to", "capabilities", "'opt1'", "not", "equal\n", "(operator,", "arguments,", "expected_result)\n", "Nested", "((True", "or", "False)", "and", "(2", ">", "1))", "==", "Passes\n", "This", "results", "in", "[False,", "True,", "False,", "True]", "and", "if", "any", "are", "True\n", "then", "it", "passes...\n", "This", "results", "in", "[False,", "False,", "False]", "and", "if", "any", "are", "True\n", "then", "it", "passes...which", "this", "doesn't"], "/Users/mehranhassani/repos/nova/nova/network/neutronv2/api.py": ["API", "BINDING_HOST_ID", "BINDING_PROFILE", "CONF", "ClientWrapper", "DEFAULT_SECGROUP", "Exception", "False", "LOG", "MIGRATING_ATTR", "None", "NotImplementedError", "True", "_", "_ADMIN_AUTH", "_LE", "_LI", "_LW", "_SESSION", "__name__", "_ensure_no_port_binding_failure", "_ensure_requested_network_ordering", "_filter_hypervisor_macs", "_id", "_is_not_duplicate", "_load_auth_plugin", "_release_floating_ip_and_refresh_cache", "accessor", "address", "admin", "admin_client", "affect_auto_assigned", "args", "auth_plugin", "auto_allocate", "availability_zone", "available_macs", "base_api", "base_client", "base_policies", "bind_host_id", "binding_profile", "binding_vif_type", "bridge", "callable", "client", "clientv20", "compute_utils", "conf", "constants", "context", "created_port", "created_port_id", "created_port_ids", "created_vifs", "current_neutron_port", "current_neutron_port_map", "current_neutron_ports", "data", "deferred_ip", "dev", "dev_spec", "dev_type", "devname", "dhcp_opts", "dhcp_ports", "dict", "dns", "dns_type", "domain", "e", "err_msg", "ex", "exc", "exception", "exceptions", "excutils", "existing_ports", "ext", "extensions_list", "fields", "fip", "fips", "fixed", "fixed_address", "fixed_ip", "fixed_ips", "flavor", "floating", "floating_address", "floating_ip", "floats", "free_ports", "get_client", "has_port_binding_extension", "host", "host_id", "hypervisor_macs", "i", "i_uuid", "id", "id_str", "iface", "ifaces", "index", "instance", "instance_uuid", "ip", "ip_pair", "ipam_subnets", "isinstance", "item", "items", "items_list_name", "k", "ks_loading", "kwargs", "len", "logging", "lostid_set", "mac", "mac_address", "message", "migration", "migration_context", "msg", "msg_dict", "n", "name", "name_match", "name_or_id", "net", "net_id", "net_ids", "net_ids_requested", "net_info", "net_obj", "nets", "nets_in_requested_order", "network", "network_IPs", "network_id", "network_model", "network_mtu", "network_name", "network_objs", "network_uuid", "networks", "networks_ids", "neutron", "neutron_client", "neutron_client_exc", "new", "new_dev", "new_fixed_ips", "new_pci_devices", "nova", "num_instances", "nw_info", "nw_info_refresh", "obj", "obj_fields", "object", "objects", "old", "old_pci_devices", "ordered_nets", "ordered_networks", "ordered_ports", "orig_instance", "orig_instance_uuid", "ovs_interfaceid", "p", "param", "params", "pci_dev", "pci_devs", "pci_manager", "pci_mapping", "pci_request", "pci_request_id", "pci_requests", "pci_slot", "pci_utils", "pci_whitelist", "phynet_name", "physical_network", "pool", "pool_dict", "pool_id", "pools", "port", "port_binding", "port_client", "port_details", "port_dict", "port_id", "port_ids", "port_migrating", "port_profile", "port_req_body", "port_response", "port_security_enabled", "port_updates", "ports", "ports_in_requested_order", "ports_needed", "ports_needed_per_instance", "ports_to_skip", "preexisting_port_ids", "preexisting_ports", "preferred", "present", "preserve_on_delete", "profile", "project", "project_id", "quotas", "raise_if_associated", "raise_if_fail", "refresh_cache", "request", "request_net", "requested_ip", "requested_netid_set", "requested_networks", "requests_and_created_ports", "result", "ret", "returned_netid_set", "route", "rxtx_factor", "search_opts", "security_group", "security_group_ids", "security_groups", "self", "set", "should_create_bridge", "six", "spec", "staticmethod", "str", "subnet", "subnet_dict", "subnet_object", "subnets", "super", "teardown", "tenant_id", "time", "topology", "tuple", "unordered", "updated_port", "updates", "user_security_group", "user_security_groups", "uuid_maps", "uuid_match", "uuidutils", "v", "vif", "vif_active", "vif_type", "vifobj", "vnic_type", "wrapper", "x", "zone", "API", "for", "interacting", "with", "the", "neutron", "2.x", "API.\nSetup", "or", "teardown", "the", "network", "structures.\nCheck", "if", "attaching", "to", "external", "network", "is", "permitted.\nRefresh", "the", "neutron", "extensions", "cache", "when", "necessary.\nDeallocate", "all", "network", "resources", "related", "to", "the", "instance.\nAllocate", "a", "port", "for", "the", "instance.\nList", "ports", "for", "the", "client", "based", "on", "search", "options.\nReturn", "an", "instance's", "complete", "list", "of", "port_ids", "and", "networks.\nAdd", "a", "fixed", "IP", "to", "the", "instance", "from", "specified", "network.\nRemove", "a", "fixed", "IP", "from", "the", "instance.\nReturn", "port_id", "from", "a", "fixed", "address.\nAssociate", "a", "floating", "IP", "with", "a", "fixed", "IP.\nGet", "all", "networks", "for", "client.\nGet", "specific", "network", "for", "client.\nDelete", "a", "network", "for", "client.\nDisassociate", "a", "network", "for", "client.\nAssociate", "a", "network", "for", "client.\nGet", "a", "fixed", "IP", "from", "the", "id.\nReturn", "instance", "uuids", "given", "an", "address.\nReturn", "floating", "IP", "object", "given", "the", "floating", "IP", "id.\nReturn", "floating", "IP", "pool", "names.\nReturn", "a", "floating", "IP", "given", "an", "address.\nReturn", "the", "instance", "id", "a", "floating", "IP's", "fixed", "IP", "is", "allocated", "to.\nAdd", "a", "floating", "IP", "to", "a", "project", "from", "a", "pool.\nGet", "floating", "IP", "gracefully", "handling", "404", "from", "Neutron.\nGet", "floating", "IP", "from", "floating", "IP", "address.\nGet", "floating", "IPs", "from", "fixed", "IP", "and", "port.\nRemove", "a", "floating", "IP", "with", "the", "given", "address", "from", "a", "project.\nDisassociate", "a", "floating", "IP", "from", "the", "instance.\nStart", "to", "migrate", "the", "network", "of", "an", "instance.\nFinish", "migrating", "the", "network", "of", "an", "instance.\nForce", "add", "a", "network", "to", "the", "project.\nReturn", "the", "subnets", "for", "a", "given", "port.\nCreate", "specified", "DNS", "entry", "for", "address.\nCreate", "specified", "DNS", "entry", "for", "address.\nDelete", "the", "specified", "dns", "entry.\nDelete", "the", "specified", "dns", "domain.\nGet", "entries", "for", "address", "and", "domain.\nGet", "entries", "for", "name", "and", "domain.\nCreate", "a", "private", "DNS", "domain", "with", "nova", "availability", "zone.\nCreate", "a", "private", "DNS", "domain", "with", "optional", "nova", "project.\nSetup", "network", "for", "specified", "instance", "on", "host.\nCleanup", "network", "for", "specified", "instance", "on", "host.\nSort", "a", "list", "with", "respect", "to", "the", "preferred", "network", "ordering.", "Expose", "all", "attributes", "from", "the", "base_client", "instance\n", "Token", "is", "expired", "so", "Neutron", "is", "raising", "a\n", "unauthorized", "exception,", "we", "should", "convert", "it", "to\n", "raise", "a", "401", "to", "make", "client", "to", "handle", "a", "retry", "by\n", "renegerating", "a", "valid", "token", "and", "trying", "a", "new\n", "attempt.\n", "In", "admin", "context", "if", "token", "is", "invalid", "Neutron", "client\n", "should", "be", "able", "to", "regenerate", "a", "valid", "by", "using", "the\n", "Neutron", "admin", "credential", "configuration", "located", "in\n", "nova.conf.\n", "NOTE(dprince):", "In", "the", "case", "where", "no", "auth_token", "is", "present", "we", "allow", "use", "of\n", "neutron", "admin", "tenant", "credentials", "if", "it", "is", "an", "admin", "context.", "This", "is", "to\n", "support", "some", "services", "(metadata", "API)", "where", "an", "admin", "context", "is", "used\n", "without", "an", "auth", "token.\n", "We", "did", "not", "get", "a", "user", "token", "and", "we", "should", "not", "be", "using\n", "an", "admin", "token", "so", "log", "an", "error\n", "The", "expectation", "from", "this", "function's", "perspective", "is", "that", "the\n", "item", "is", "not", "part", "of", "the", "items", "list", "so", "if", "it", "is", "part", "of", "it\n", "we", "should", "at", "least", "log", "it", "as", "a", "warning\n", "Make", "a", "copy", "we", "can", "mutate:", "records", "macs", "that", "have", "not", "been", "used\n", "to", "create", "a", "port", "on", "a", "network.", "If", "we", "find", "a", "mac", "with", "a\n", "pre-allocated", "port", "we", "also", "remove", "it", "from", "this", "set.\n", "Don't", "try", "to", "use", "this", "MAC", "if", "we", "need", "to", "create", "a\n", "port", "on", "the", "fly", "later.", "Identical", "MACs", "may", "be\n", "configured", "by", "users", "into", "multiple", "ports", "so", "we\n", "discard", "rather", "than", "popping.\n", "If", "the", "port", "already", "has", "a", "migration", "profile", "and", "if\n", "it", "is", "to", "be", "torn", "down,", "then", "we", "need", "to", "clean", "up\n", "the", "migration", "profile.\n", "Migrating", "to", "a", "new", "host\n", "If", "the", "host", "hasn't", "changed,", "there", "is", "nothing", "to", "do.\n", "But", "if", "the", "destination", "host", "is", "different", "than", "the\n", "current", "one,", "please", "update", "the", "port_profile", "with\n", "the", "'migrating_to'(MIGRATING_ATTR)", "key", "pointing", "to\n", "the", "given", "'host'.\n", "Check", "if", "the", "instance", "is", "migrating", "to", "a", "new", "host.\n", "If", "the", "port", "is", "migrating", "to", "a", "new", "host", "or", "if", "it", "is", "a\n", "teardown", "on", "the", "original", "host,", "then", "proceed.\n", "Now", "get", "the", "port", "details", "to", "process", "the", "ports\n", "binding", "profile", "info.\n", "Reset", "the", "port", "profile\n", "Setup", "the", "port", "profile\n", "If", "user", "has", "specified", "to", "attach", "instance", "only", "to", "specific\n", "networks", "then", "only", "add", "these", "to", "**search_opts.", "This", "search", "will\n", "also", "include", "'shared'", "networks.\n", "(1)", "Retrieve", "non-public", "network", "list", "owned", "by", "the", "tenant.\n", "The", "auto-allocated-topology", "extension", "may", "create", "complex\n", "network", "topologies", "and", "it", "does", "so", "in", "a", "non-transactional\n", "fashion.", "Therefore", "API", "users", "may", "be", "exposed", "to", "resources", "that\n", "are", "transient", "or", "partially", "built.", "A", "client", "should", "use\n", "resources", "that", "are", "meant", "to", "be", "ready", "and", "this", "can", "be", "done", "by\n", "checking", "their", "admin_state_up", "flag.\n", "(2)", "Retrieve", "public", "network", "list.\n", "NOTE(johngarbutt)", "On", "port_update,", "this", "will", "cause", "us", "to", "override\n", "any", "previous", "mac", "address", "the", "port", "may", "have", "had.\n", "Perform", "this", "check", "here", "rather", "than", "in", "validate_networks", "to\n", "ensure", "the", "check", "is", "performed", "every", "time\n", "allocate_for_instance", "is", "invoked\n", "Requires", "admin", "creds", "to", "set", "port", "bindings\n", "A", "port_id", "is", "optional", "in", "the", "NetworkRequest", "object", "so", "check", "here\n", "in", "case", "the", "caller", "forgot", "to", "filter", "the", "list.\n", "If", "we're", "asked", "to", "auto-allocate", "the", "network", "then", "there", "won't", "be", "any\n", "ports", "or", "real", "neutron", "networks", "to", "lookup,", "so", "just", "return", "empty\n", "results.\n", "Process", "a", "request", "to", "use", "a", "pre-existing", "neutron", "port.\n", "Make", "sure", "the", "port", "exists.\n", "Make", "sure", "the", "instance", "has", "access", "to", "the", "port.\n", "Make", "sure", "the", "port", "isn't", "already", "attached", "to", "another\n", "instance.\n", "Make", "sure", "that", "if", "the", "user", "assigned", "a", "value", "to", "the", "port's\n", "dns_name", "attribute,", "it", "is", "equal", "to", "the", "instance's\n", "hostname\n", "Make", "sure", "the", "port", "is", "usable\n", "If", "requesting", "a", "specific", "port,", "automatically", "process\n", "the", "network", "for", "that", "port", "as", "if", "it", "were", "explicitly\n", "requested.\n", "Process", "a", "request", "to", "use", "a", "specific", "neutron", "network.\n", "TODO(arosen)", "Should", "optimize", "more", "to", "do", "direct", "query", "for", "security\n", "group", "if", "len(security_groups)", "==", "1\n", "If", "there", "was", "a", "name", "match", "in", "a", "previous", "iteration\n", "of", "the", "loop,", "we", "have", "a", "conflict.\n", "If", "a", "user", "names", "the", "security", "group", "the", "same", "as\n", "another's", "security", "groups", "uuid,", "the", "name", "takes", "priority.\n", "Get", "networks", "from", "Neutron\n", "If", "net_ids", "is", "empty,", "this", "actually", "returns", "all", "available", "nets\n", "There", "are", "no", "networks", "available", "for", "the", "project", "to", "use", "and\n", "none", "specifically", "requested,", "so", "check", "to", "see", "if", "we're", "asked\n", "to", "auto-allocate", "the", "network.\n", "During", "validate_networks", "we", "checked", "to", "see", "if\n", "auto-allocation", "is", "available", "so", "we", "don't", "need", "to", "do", "that\n", "again", "here.\n", "NOTE(chaochin):", "If", "user", "specifies", "a", "network", "id", "and", "the\n", "network", "can", "not", "be", "found,", "raise", "NetworkNotFound", "error.\n", "no", "requested", "nets", "and", "user", "has", "no", "available", "nets\n", "if", "this", "function", "is", "directly", "called", "without", "a", "requested_network", "param\n", "or", "if", "it", "is", "indirectly", "called", "through", "allocate_port_for_instance()\n", "with", "None", "params=(network_id=None,", "requested_ip=None,", "port_id=None,\n", "pci_request_id=None):\n", "If", "no", "networks", "were", "requested", "and", "none", "are", "available,", "consider\n", "it", "a", "bad", "request.\n", "bug/1267723", "-", "if", "no", "network", "is", "requested", "and", "more\n", "than", "one", "is", "available", "then", "raise", "NetworkAmbiguous", "Exception\n", "NOTE(melwitt):", "check", "external", "net", "attach", "permission", "after", "the\n", "check", "for", "ambiguity,", "there", "could", "be", "another\n", "available", "net", "which", "is", "permitted", "bug/1364344\n", "if", "network_id", "did", "not", "pass", "validate_networks()", "and", "not", "available\n", "here", "then", "skip", "it", "safely", "not", "continuing", "with", "a", "None", "Network\n", "Neutron", "can't", "apply", "security", "groups", "to", "a", "port\n", "for", "a", "network", "without", "L3", "assignments.\n", "We", "don't", "want", "to", "apply", "security", "groups", "on", "port\n", "for", "a", "network", "defined", "with\n", "'port_security_enabled=False'.\n", "create", "minimal", "port,", "if", "port", "not", "already", "created", "by", "user\n", "We", "do", "not", "want", "to", "create", "a", "new", "neutron", "session", "for", "each", "call\n\n", "Validate", "ports", "and", "networks", "with", "neutron\n\n\n", "Create", "any", "ports", "that", "might", "be", "required,\n", "after", "validating", "requested", "security", "groups\n\n\n", "Update", "existing", "and", "newly", "created", "ports\n\n", "We", "always", "need", "admin_client", "to", "build", "nw_info,\n", "we", "sometimes", "need", "it", "when", "updating", "ports\n\n", "Perform", "a", "full", "update", "of", "the", "network_info_cache,\n", "including", "re-fetching", "lots", "of", "the", "required", "data", "from", "neutron\n\n", "NOTE(danms):", "Only", "return", "info", "about", "ports", "we", "created", "in", "this", "run.\n", "In", "the", "initial", "allocation", "case,", "this", "will", "be", "everything", "we", "created,\n", "and", "in", "later", "runs", "will", "only", "be", "what", "was", "created", "that", "time.", "Thus,\n", "this", "only", "affects", "the", "attach", "case,", "not", "the", "original", "use", "for", "this\n", "method.\n", "The", "neutron", "client", "and", "port_client", "(either", "the", "admin", "context", "or\n", "tenant", "context)", "are", "read", "here.", "The", "reason", "for", "this", "is", "that", "there", "are\n", "a", "number", "of", "different", "calls", "for", "the", "instance", "allocation.\n", "We", "require", "admin", "creds", "to", "set", "port", "bindings.\n", "this", "list", "is", "for", "cleanups", "if", "we", "fail\n", "if", "network_id", "did", "not", "pass", "validate_networks()", "and", "not", "available\n", "here", "then", "skip", "it", "safely", "not", "continuing", "with", "a", "None", "Network\n", "After", "port", "is", "created,", "update", "other", "bits\n", "NOTE(danms):", "The", "virtual_interfaces", "table", "enforces", "global\n", "uniqueness", "on", "MAC", "addresses,", "which", "clearly", "does", "not", "match\n", "with", "neutron's", "view", "of", "the", "world.", "Since", "address", "is", "a", "255-char\n", "string", "we", "can", "namespace", "it", "with", "our", "port", "id.", "Using", "'/'", "should\n", "be", "safely", "excluded", "from", "MAC", "address", "notations", "as", "well", "as\n", "UUIDs.", "We", "could", "stop", "doing", "this", "when", "we", "remove\n", "nova-network,", "but", "we'd", "need", "to", "leave", "the", "read", "translation", "in\n", "for", "longer", "than", "that", "of", "course.\n", "only", "add", "if", "update", "worked", "and", "port", "create", "not", "called\n", "NOTE(ndipanov):", "We", "shouldn't", "ever", "get", "here", "since\n", "InstancePCIRequest", "instances", "built", "from", "network", "requests\n", "only", "ever", "index", "a", "single", "device,", "which", "needs", "to", "be\n", "successfully", "claimed", "for", "this", "to", "be", "called", "as", "part", "of\n", "allocate_networks", "method\n", "If", "the", "DNS", "integration", "extension", "is", "enabled", "in", "Neutron,", "most\n", "ports", "will", "get", "their", "dns_name", "attribute", "set", "in", "the", "port", "create", "or\n", "update", "requests", "in", "allocate_for_instance.", "So", "we", "just", "add", "the\n", "dns_name", "attribute", "to", "the", "payload", "of", "those", "requests.", "The\n", "exception", "is", "when", "the", "port", "binding", "extension", "is", "enabled", "in\n", "Neutron", "and", "the", "port", "is", "on", "a", "network", "that", "has", "a", "non-blank\n", "dns_domain", "attribute.", "This", "case", "requires", "to", "be", "processed", "by\n", "method", "_update_port_dns_name\n", "NOTE(danms):", "Temporary", "and", "transitional\n", "NOTE(boden):", "requested_networks", "only", "passed", "in", "when", "deallocating\n", "from", "a", "failed", "build", "/", "spawn", "call.", "Therefore", "we", "need", "to", "include\n", "preexisting", "ports", "when", "deallocating", "from", "a", "standard", "delete", "op\n", "in", "which", "case", "requested_networks", "is", "not", "provided.\n", "Reset", "device_id", "and", "device_owner", "for", "the", "ports", "that", "are", "skipped\n", "Delete", "the", "rest", "of", "the", "ports\n", "deallocate", "vifs", "(mac", "addresses)\n", "NOTE(arosen):", "This", "clears", "out", "the", "network_cache", "only", "if", "the", "instance\n", "hasn't", "already", "been", "deleted.", "This", "is", "needed", "when", "an", "instance", "fails", "to\n", "launch", "and", "is", "rescheduled", "onto", "another", "compute", "node.", "If", "the", "instance\n", "has", "already", "been", "deleted", "this", "call", "does", "nothing.\n", "Delete", "the", "VirtualInterface", "for", "the", "given", "port_id.\n", "NOTE(danms):", "This", "is", "an", "inner", "method", "intended", "to", "be", "called\n", "by", "other", "code", "that", "updates", "instance", "nwinfo.", "It", "*must*", "be\n", "called", "with", "the", "refresh_cache-%(instance_uuid)", "lock", "held!\n", "Ensure", "that", "we", "have", "an", "up", "to", "date", "copy", "of", "the", "instance", "info", "cache.\n", "Otherwise", "multiple", "requests", "could", "collide", "and", "cause", "cache\n", "corruption.\n", "This", "code", "path", "is", "only", "done", "when", "refreshing", "the", "network_cache\n", "an", "interface", "was", "added/removed", "from", "instance.\n", "Prepare", "the", "network", "ids", "list", "for", "validation", "purposes\n", "Validate", "that", "interface", "networks", "doesn't", "exist", "in", "networks.\n", "Though", "this", "issue", "can", "and", "should", "be", "solved", "in", "methods\n", "that", "prepare", "the", "networks", "list,", "this", "method", "should", "have", "this\n", "ignore-duplicate-networks/port-ids", "mechanism", "to", "reduce", "the\n", "probability", "of", "failing", "to", "boot", "the", "VM.\n", "Include", "existing", "interfaces", "so", "they", "are", "not", "removed", "from", "the", "db.\n", "Validate", "that", "the", "interface", "id", "is", "not", "in", "the", "port_ids\n", "Add", "pci_request_id", "into", "the", "requested", "network\n", "check", "that", "the", "auto-allocated-topology", "extension", "is", "available\n", "run", "the", "dry-run", "validation,", "which", "will", "raise", "a", "409", "if", "not", "ready\n", "This", "shouldn't", "happen", "since", "we", "just", "created", "the", "network,", "but\n", "handle", "it", "anyway.\n", "TODO(danms):", "Remove", "me", "when", "all", "callers", "pass", "an", "object\n", "Attaching", "to", "more", "than", "one", "network", "by", "default", "doesn't\n", "make", "sense,", "as", "the", "order", "will", "be", "arbitrary", "and", "the", "guest", "OS\n", "won't", "know", "which", "to", "configure\n", "If", "there", "are", "no", "networks", "available", "to", "this", "project", "and", "we\n", "were", "asked", "to", "auto-allocate", "a", "network,", "check", "to", "see", "that", "we\n", "can", "do", "that", "first.\n", "NOTE(carl_baldwin)", "A", "deferred", "IP", "port", "doesn't", "have", "an\n", "address", "here.", "If", "it", "fails", "to", "get", "one", "later", "when", "nova\n", "updates", "it", "with", "host", "info,", "Neutron", "will", "error", "which\n", "raises", "an", "exception.\n", "NOTE(jecarey)", "There", "is", "currently", "a", "race", "condition.\n", "That", "is,", "if", "you", "have", "more", "than", "one", "request", "for", "a", "specific\n", "fixed", "IP", "at", "the", "same", "time", "then", "only", "one", "will", "be", "allocated\n", "the", "ip.", "The", "fixed", "IP", "will", "be", "allocated", "to", "only", "one", "of", "the\n", "instances", "that", "will", "run.", "The", "second", "instance", "will", "fail", "on\n", "spawn.", "That", "instance", "will", "go", "into", "error", "state.\n", "TODO(jecarey)", "Need", "to", "address", "this", "race", "condition", "once", "we\n", "have", "the", "ability", "to", "update", "mac", "addresses", "in", "Neutron.\n", "TODO(jecarey)", "Need", "to", "look", "at", "consolidating", "list_port\n", "calls", "once", "able", "to", "OR", "filters.\n", "Now", "check", "to", "see", "if", "all", "requested", "networks", "exist\n", "Note(PhilD):", "Ideally", "Nova", "would", "create", "all", "required", "ports", "as", "part", "of\n", "network", "validation,", "but", "port", "creation", "requires", "some", "details\n", "from", "the", "hypervisor.", "So", "we", "just", "check", "the", "quota", "and", "return\n", "how", "many", "of", "the", "requested", "number", "of", "instances", "can", "be", "created\n", "Unlimited", "Port", "Quota\n", "We", "only", "need", "the", "port", "count", "so", "only", "ask", "for", "ids", "back.\n", "Note(amotoki):", "'affect_auto_assigned'", "is", "not", "respected\n", "since", "it", "is", "not", "used", "anywhere", "in", "nova", "code", "and", "I", "could\n", "find", "why", "this", "parameter", "exists.\n", "purge", "cached", "nw", "info", "for", "the", "original", "instance\n", "Note(salv-orlando):", "Return", "a", "list", "of", "names", "to", "be", "consistent", "with\n", "nova.network.api.get_floating_ip_pools\n", "NOTE(danms):", "Don't", "give", "these", "objects", "a", "context,", "since", "they're\n", "not", "lazy-loadable", "anyway\n", "In", "Neutron", "v2", "API", "fixed_ip_address", "and", "instance", "uuid\n", "(=", "device_id)", "are", "known", "here,", "so", "pass", "it", "as", "a", "result.\n", "NOTE(danms):", "This", "could", "be", ".refresh()d,", "so", "give", "it", "context\n", "NOTE:", "Here", "is", "a", "potential", "race", "condition", "between", "_show_port()", "and\n", "_get_floating_ip_by_address().", "fip['port_id']", "shows", "a", "port", "which\n", "is", "the", "server", "instance's.", "At", "_get_floating_ip_by_address(),\n", "Neutron", "returns", "the", "list", "which", "includes", "the", "instance.", "Just", "after\n", "that,", "the", "deletion", "of", "the", "instance", "happens", "and", "Neutron", "returns\n", "404", "on", "_show_port().\n", "If", "a", "neutron", "plugin", "does", "not", "implement", "the", "L3", "API", "a", "404", "from\n", "list_floatingips", "will", "be", "raised.\n", "bug/1513879", "neutron", "client", "is", "currently", "using\n", "NeutronClientException", "when", "there", "is", "no", "L3", "API\n", "Note(amotoki):", "We", "cannot", "handle", "a", "case", "where", "multiple", "pools\n", "have", "overlapping", "IP", "address", "range.", "In", "this", "case", "we", "cannot", "use\n", "'address'", "as", "a", "unique", "key.\n", "This", "is", "a", "limitation", "of", "the", "current", "nova.\n", "Note(amotoki):", "'affect_auto_assigned'", "is", "not", "respected\n", "since", "it", "is", "not", "used", "anywhere", "in", "nova", "code", "and", "I", "could\n", "find", "why", "this", "parameter", "exists.\n", "Note(amotoki):", "'affect_auto_assigned'", "is", "not", "respected\n", "since", "it", "is", "not", "used", "anywhere", "in", "nova", "code", "and", "I", "could\n", "find", "why", "this", "parameter", "exists.\n", "NOTE(wenjianhn):", "just", "pass", "to", "make", "migrate", "instance", "doesn't\n", "raise", "for", "now.\n", "Network", "model", "metadata\n", "The", "name", "of", "the", "DVS", "port", "group", "will", "contain", "the", "neutron\n", "network", "id\n", "Prune", "the", "bridge", "name", "if", "necessary.", "For", "the", "DVS", "this", "is", "not", "done\n", "as", "the", "bridge", "is", "a", "'<network-name>-<network-UUID>'.\n", "No", "fixed_ips", "for", "the", "port", "means", "there", "is", "no", "subnet", "associated\n", "with", "the", "network", "the", "port", "is", "created", "on.\n", "Since", "list_subnets(id=[])", "returns", "all", "subnets", "visible", "for", "the\n", "current", "tenant,", "returned", "subnets", "may", "contain", "subnets", "which", "is", "not\n", "related", "to", "the", "port.", "To", "avoid", "this,", "the", "method", "returns", "here.\n", "attempt", "to", "populate", "DHCP", "server", "field\n", "In", "case", "of", "revert,", "swap", "old", "and", "new", "devices", "to\n", "update", "the", "ports", "back", "to", "the", "original", "devices.\n", "If", "the", "host", "hasn't", "changed,", "like", "in", "the", "case", "of", "resizing", "to", "the\n", "same", "host,", "there", "is", "nothing", "to", "do.\n", "NOTE:", "Before", "updating", "the", "port", "binding", "make", "sure", "we\n", "remove", "the", "pre-migration", "status", "from", "the", "binding", "profile\n", "Update", "port", "with", "newly", "allocated", "PCI", "devices.", "Even", "if", "the\n", "resize", "is", "happening", "on", "the", "same", "host,", "a", "new", "PCI", "device", "can", "be\n", "allocated.\n", "Avoid", "rolling", "back", "updates", "if", "we", "catch", "an", "error", "above.\n", "TODO(lbeliveau):", "Batch", "up", "the", "port", "updates", "in", "one", "neutron", "call."], "/Users/mehranhassani/repos/nova/nova/api/metadata/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_filters.py": ["False", "Filter1", "Filter2", "FilterA", "FilterB", "FiltersTestCase", "LOG", "None", "True", "_fake_base_loader_init", "all_filters", "base_filter", "cargs", "exp_output", "fake_uuid", "filt1_mock", "filt2_mock", "filt_props", "filter_a", "filter_b", "filter_handler", "filter_mocks", "filter_obj_list", "filter_objs_initial", "filter_objs_last", "filter_objs_second", "filters", "hosts", "inspect", "iter", "list", "list_objs", "loadables", "mock", "mock_filter_one", "mock_load", "mock_log", "mock_results", "objects", "objs", "range", "result", "self", "spec_obj", "super", "test", "total_iterations", "uuids", "x", "Test", "Filter", "class", "#1.\nTest", "Filter", "class", "#2.1.\"\"\"\n2.\"\"\"\n", "Test", "filter_all()", "allows", "generators", "from", "previous", "filter_all()s.\n", "filter_all()", "yields", "results.", "We", "want", "to", "make", "sure", "that", "we", "can\n", "call", "filter_all()", "with", "generators", "returned", "from", "previous", "calls\n", "to", "filter_all().\n", "The", "order", "that", "_filter_one", "is", "going", "to", "get", "called", "gets\n", "confusing", "because", "we", "will", "be", "recursively", "yielding", "things..\n", "We", "are", "going", "to", "simulate", "the", "first", "call", "to", "filter_all()\n", "returning", "False", "for", "'obj2'.", "So,", "'obj1'", "will", "get", "yielded\n", "'total_iterations'", "number", "of", "times", "before", "the", "first", "filter_all()\n", "call", "gets", "to", "processing", "'obj2'.", "We", "then", "return", "'False'", "for", "it.\n", "After", "that,", "'obj3'", "gets", "yielded", "'total_iterations'", "number", "of\n", "times.\n", "Pass", "in", "generators", "returned", "from", "previous", "calls.\n", "return", "all", "but", "the", "first", "object\n", "return", "an", "empty", "list\n", "FilterA", "should", "leave", "Host1", "and", "Host2;", "FilterB", "should", "leave", "None.\n", "return", "all", "but", "the", "first", "object\n", "return", "an", "empty", "list\n", "FilterA", "should", "leave", "Host1", "and", "Host2;", "FilterB", "should", "leave", "None.\n", "return", "all", "but", "the", "first", "object\n", "return", "an", "empty", "list\n", "FilterA", "should", "leave", "Host1", "and", "Host2;", "FilterB", "should", "leave", "None."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_virtual_interface.py": ["None", "_TestVirtualInterface", "_TestVirtualInterfaceList", "create", "db", "delete", "dict", "fake_vif", "field", "get", "getattr", "len", "mock", "obj", "object", "primitive", "self", "staticmethod", "test", "test_objects", "update", "uuids", "value", "vif", "vif_obj", "vifs", "NOTE(danms):", "The", "actual", "vif", "should", "now", "have", "the", "namespace\n", "stripped", "out"], "/Users/mehranhassani/repos/nova/nova/conf/xvp.py": ["cfg", "conf", "paths", "xvp_group", "xvp_opts"], "/Users/mehranhassani/repos/nova/nova/compute/claims.py": ["Claim", "False", "LOG", "MoveClaim", "None", "NopClaim", "_", "_LI", "__name__", "context", "dict", "disk_gb_limit", "exc_tb", "exc_type", "exc_val", "exception", "free", "hardware", "host_topology", "image_meta", "instance", "instance_topology", "instance_type", "isinstance", "kwargs", "len", "limit", "limits", "logging", "memory_mb_limit", "numa_topology_limit", "object", "objects", "overhead", "pci_requests", "pci_stats", "property", "r", "reasons", "requested", "requested_topology", "resources", "self", "stats", "super", "total", "tracker", "type_", "unit", "used", "vcpus_limit", "For", "use", "with", "compute", "drivers", "that", "do", "not", "support", "resource", "tracking.", "Stash", "a", "copy", "of", "the", "instance", "at", "the", "current", "point", "of", "time\n", "Check", "claim", "at", "constructor", "to", "avoid", "mess", "code\n", "Raise", "exception", "ComputeResourcesUnavailable", "if", "claim", "failed\n", "If", "an", "individual", "limit", "is", "None,", "the", "resource", "will", "be", "considered\n", "unlimited:\n", "treat", "resource", "as", "unlimited:\n", "Oversubscribed", "resource", "policy", "info:"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/322_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/image/download/__init__.py": ["False", "LOG", "_LE", "__name__", "ex", "logging", "mgr", "module_dictionary", "module_name", "scheme", "schemes_list", "stevedore"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/273_sqlite_foreign_keys.py": ["FKEYS", "ForeignKeyConstraint", "MetaData", "Table", "True", "UNIQUES", "UniqueConstraint", "c", "column_names", "dst_column", "dst_table", "fk", "fkey", "isinstance", "meta", "migrate_engine", "name", "schema", "set", "src_column", "src_table", "table", "table_name", "uc", "utils", "SQLite", "is", "also", "missing", "this", "one", "index\n", "SQLAlchemy", "versions", "<", "1.0.0", "don't", "reflect", "unique", "constraints\n", "for", "SQLite", "correctly", "causing", "sqlalchemy-migrate", "to", "recreate\n", "some", "tables", "with", "missing", "unique", "constraints.", "Re-add", "some\n", "potentially", "missing", "unique", "constraints", "as", "a", "workaround."], "/Users/mehranhassani/repos/nova/nova/tests/unit/db/test_models.py": ["api_models", "base", "column", "columns", "models", "self", "sorted", "table", "table_name", "tables", "test", "whitelist", "Soft", "deletes", "are", "deprecated.", "Whitelist", "the", "tables", "that", "currently\n", "allow", "soft", "deletes.", "No", "new", "tables", "should", "be", "added", "to", "this", "whitelist."], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/vif.py": ["CONF", "False", "LOG", "None", "True", "_", "_LI", "_LW", "__name__", "_check_ovs_supported_version", "_get_associated_vswitch_for_interface", "_get_neutron_network", "_get_pg_info", "bridge", "cluster", "constants", "create_vlan", "device", "ensure_vlan_bridge", "exception", "get_network_ref", "get_vif_dict", "hardware_devices", "hasattr", "interface", "is_neutron", "logging", "mac", "mac_address", "min_version", "model", "name", "net_id", "network_id", "network_info", "network_ref", "network_type", "network_util", "nova", "pg_vlanid", "pg_vswitch", "reason", "ref", "session", "use_external_id", "vc_version", "versionutils", "vif", "vif_infos", "vif_model", "vim_util", "vlan_interface", "vlan_num", "vm_util", "vswitch_associated", "VIF", "drivers", "for", "VMware.\nCreate", "a", "vlan", "and", "bridge", "unless", "they", "already", "exist.\nReturn", "the", "network", "device", "with", "MAC", "'mac_address'.", "Check", "if", "the", "physical", "network", "adapter", "exists", "on", "the", "host.\n", "Get", "the", "vSwitch", "associated", "with", "the", "Physical", "Adapter\n", "Create", "a", "port", "group", "on", "the", "vSwitch", "associated", "with", "the\n", "vlan_interface", "corresponding", "physical", "network", "adapter", "on", "the", "ESX\n", "host.\n", "Get", "the", "vSwitch", "associated", "with", "the", "Physical", "Adapter\n", "Get", "the", "vlan", "id", "and", "vswitch", "corresponding", "to", "the", "port", "group\n", "Check", "if", "the", "vswitch", "associated", "is", "proper\n", "Check", "if", "the", "vlan", "id", "is", "proper", "for", "the", "port", "group\n", "The", "port", "type", "'ovs'", "is", "only", "support", "by", "the", "VC", "version", "5.5", "onwards\n", "Check", "if", "this", "is", "the", "NSX-MH", "plugin", "is", "used\n", "The", "NSX|V3", "plugin", "will", "pass", "the", "nsx-logical-switch-id", "as", "part\n", "of", "the", "port", "details.", "This", "will", "enable", "the", "VC", "to", "connect", "to\n", "that", "specific", "opaque", "network\n", "Make", "use", "of", "the", "original", "one,", "in", "the", "event", "that", "the\n", "plugin", "does", "not", "pass", "the", "aforementioned", "id\n", "Port", "binding", "for", "DVS", "VIF", "types", "may", "pass", "the", "name\n", "of", "the", "port", "group,", "so", "use", "it", "if", "present\n", "Make", "use", "of", "the", "original", "one,", "in", "the", "event", "that", "the\n", "port", "binding", "does", "not", "provide", "this", "key", "in", "VIF", "details"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/image/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/cloudpipe/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/virt/event.py": ["EVENT_LIFECYCLE_PAUSED", "EVENT_LIFECYCLE_RESUMED", "EVENT_LIFECYCLE_STARTED", "EVENT_LIFECYCLE_STOPPED", "EVENT_LIFECYCLE_SUSPENDED", "Event", "InstanceEvent", "LifecycleEvent", "NAMES", "None", "_", "object", "self", "super", "time", "timestamp", "transition", "uuid"], "/Users/mehranhassani/repos/nova/nova/policies/lock_server.py": ["POLICY_ROOT", "base", "lock_server_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/compute_filter.py": ["False", "LOG", "True", "_LW", "__name__", "filters", "host_state", "logging", "run_filter_once_per_request", "self", "service", "servicegroup", "spec_obj", "Filter", "on", "active", "Compute", "nodes.\nReturns", "True", "for", "only", "active", "compute", "nodes.", "Host", "state", "does", "not", "change", "within", "a", "request"], "/Users/mehranhassani/repos/nova/nova/notifications/objects/base.py": ["False", "None", "NotificationObject", "NotificationPayloadBase", "SCHEMA", "True", "VERSION", "base", "classmethod", "cls", "context", "event_type", "field", "fields", "getattr", "key", "kwargs", "notifier", "notify", "obj", "payload", "publisher_id", "rpc", "s", "sample", "self", "service", "setattr", "source", "super", "wrap", "Base", "class", "for", "every", "notification", "related", "versioned", "object.\nSerialize", "the", "object", "to", "the", "wire", "format.\nBase", "class", "for", "the", "payload", "of", "versioned", "notifications.\nSend", "the", "notification.", "Version", "1.0:", "Initial", "version\n", "The", "notification", "objects", "are", "created", "on", "the", "fly", "when", "nova", "emits", "the\n", "notification.", "This", "causes", "that", "every", "object", "shows", "every", "field", "as\n", "changed.", "We", "don't", "want", "to", "send", "this", "meaningless", "information", "so", "we\n", "reset", "the", "object", "after", "creation.\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "New", "valid", "actions", "values", "are", "added", "to", "the\n", "NotificationActionField", "enum\n", "Version", "1.2:", "DELETE", "value", "is", "added", "to", "the", "NotificationActionField", "enum\n", "Version", "1.3:", "Set", "of", "new", "values", "are", "added", "to", "NotificationActionField", "enum\n", "Version", "1.4:", "Another", "set", "of", "new", "values", "are", "added", "to\n", "NotificationActionField", "enum\n", "Version", "1.5:", "Aggregate", "related", "values", "have", "been", "added", "to\n", "NotificationActionField", "enum\n", "SCHEMA", "defines", "how", "to", "populate", "the", "payload", "fields.", "It", "is", "a", "dictionary\n", "where", "every", "key", "value", "pair", "has", "the", "following", "format:\n", "<payload_field_name>:", "(<data_source_name>,\n", "<field_of_the_data_source>)\n", "The", "<payload_field_name>", "is", "the", "name", "where", "the", "data", "will", "be", "stored", "in", "the\n", "payload", "object,", "this", "field", "has", "to", "be", "defined", "as", "a", "field", "of", "the", "payload.\n", "The", "<data_source_name>", "shall", "refer", "to", "name", "of", "the", "parameter", "passed", "as\n", "kwarg", "to", "the", "payload's", "populate_schema()", "call", "and", "this", "object", "will", "be\n", "used", "as", "the", "source", "of", "the", "data.", "The", "<field_of_the_data_source>", "shall", "be\n", "a", "valid", "field", "of", "the", "passed", "argument.\n", "The", "SCHEMA", "needs", "to", "be", "applied", "with", "the", "populate_schema()", "call", "before", "the\n", "notification", "can", "be", "emitted.\n", "The", "value", "of", "the", "payload.<payload_field_name>", "field", "will", "be", "set", "by", "the\n", "<data_source_name>.<field_of_the_data_source>", "field.", "The\n", "<data_source_name>", "will", "not", "be", "part", "of", "the", "payload", "object", "internal", "or\n", "external", "representation.\n", "Payload", "fields", "that", "are", "not", "set", "by", "the", "SCHEMA", "can", "be", "filled", "in", "the", "same\n", "way", "as", "in", "any", "versioned", "object.\n", "Version", "1.0:", "Initial", "version\n", "the", "schema", "population", "will", "create", "changed", "fields", "but", "we", "don't", "need\n", "this", "information", "in", "the", "notification\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Note(gibi):", "notification", "payload", "will", "be", "a", "newly", "populated", "object\n", "therefore", "every", "field", "of", "it", "will", "look", "changed", "so", "this", "does", "not", "carry\n", "any", "extra", "information", "so", "we", "drop", "this", "from", "the", "payload."], "/Users/mehranhassani/repos/nova/nova/policies/quota_class_sets.py": ["POLICY_ROOT", "base", "policy", "quota_class_sets_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_fakelibvirt.py": ["FakeLibvirtTests", "False", "None", "True", "ValueError", "_cmp_pci_dev_addr", "address", "args", "blockstats", "cfgdev", "cmp_addr", "conn", "conn_method", "credlist", "creds", "dev_xml", "dom", "e", "elem", "etree", "fake_cb", "flags", "gen_pf", "gen_vf", "get_vm_xml", "getattr", "host_topology", "info", "int", "interface_type", "len", "libvirt", "name", "network_type", "nwfilter", "obj_fields", "pci_info", "pf_xml", "readOnly", "res", "self", "six", "source_type", "super", "test", "topology", "tree", "type", "uri", "uuid", "uuid_tag", "vconfig", "vf_xml", "x", "xml", "xmlfunc_name", "Will", "raise", "an", "exception", "if", "it's", "not", "valid", "XML\n", "create", "fake", "pci", "devices\n", "generate", "xml", "for", "the", "created", "pci", "devices\n", "parse", "the", "generated", "xml", "with", "a", "libvirt", "config", "class", "and", "compare\n", "device", "address"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/fping.py": ["ALIAS", "CONF", "False", "FpingController", "MAX_PROXY_API_SUPPORT_VERSION", "None", "_", "alias", "alive_ips", "all_ips", "bool", "common", "compute", "context", "dict", "exc", "exclude", "extensions", "fping_policies", "fping_ret", "id", "include", "instance", "instance_ips", "instance_list", "instance_projects", "instance_uuid", "ip", "ip_list", "ips", "itertools", "line", "name", "network", "network_api", "nova", "os", "req", "res", "ret", "search_opts", "self", "set", "staticmethod", "str", "utils", "uuid", "version", "wsgi", "Fping", "Management", "Extension."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavor_disabled.py": ["FlavorDisabledTestV21", "base_url", "body", "content_type", "disabled", "fake_get_db_flavor", "fakes", "flavor", "flavorid", "flavors", "jsonutils", "prefix", "req", "res", "self", "super", "test", "url"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_evacuate.py": ["CONF", "EvacuatePolicyEnforcementv21", "EvacuateTestV21", "EvacuateTestV214", "EvacuateTestV229", "False", "None", "True", "_method", "_methods", "admin_pass", "base_json_load", "body", "compute_api", "context", "controller", "enable_pass", "evacuate_mock", "evacuate_v21", "exc", "exception", "fake_compute_api", "fake_compute_api_get", "fake_evacuate", "fake_get_instance", "fake_instance", "fake_service_get_by_compute_host", "fakes", "force", "host", "id", "instance_id", "json_load", "len", "mock", "mock_evacuate", "mock_save", "nova", "on_shared_storage", "req", "req_context", "res", "response", "rule_name", "self", "super", "test", "testtools", "uuid", "uuids", "validation_error", "vm_states", "webob", "BAD_UUID", "is", "something", "that", "does", "not", "exist\n'\n", "NOTE:", "The", "hostname", "grammar", "in", "RFC952", "does", "not", "allow", "for\n", "underscores", "in", "hostnames.", "However,", "we", "should", "test", "that", "it\n", "is", "supported", "because", "it", "sometimes", "occurs", "in", "real", "systems.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "NOTE:", "The", "hostname", "grammar", "in", "RFC952", "does", "not", "allow", "for\n", "underscores", "in", "hostnames.", "However,", "we", "should", "test", "that", "it\n", "is", "supported", "because", "it", "sometimes", "occurs", "in", "real", "systems."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_vif.py": ["CONF", "False", "LibvirtVifTestCase", "MIN_LIBVIRT_VHOSTUSER_MQ", "None", "True", "_create_veth_pair", "actualXmlstr", "addr_type", "address", "attr", "bandwidth", "br_name", "br_want", "calls", "cfg", "cmd", "conf", "create_fp_dev", "create_ivs_vif_port", "create_ovs_vif_port", "d", "delete", "delete_fp_dev", "delete_ivs_vif_port", "delete_ovs_port", "delete_ovs_vif_port", "details", "dev_prefix", "device_exists", "dict", "dns_bridge_4", "doc", "driver", "driver_want", "e", "ensure_vlan_mock", "etree", "exception", "execute", "exit_code", "expectedXmlstr", "fail", "fake_execute", "fakelibosinfo", "fakelibvirt", "fixtures", "flavor", "gateway_bridge_4", "gateway_bridge_6", "has_min_version", "host", "hostimpl", "iface_id", "iface_id_found", "image_meta", "inbound", "instance", "instance_id", "instance_id_found", "ips_bridge_4", "kw", "len", "libvirt_version", "linux_net", "mac", "manager_id", "manager_id_found", "matchers", "mock", "mock_convert_inst", "mock_convert_vif", "mock_create_fp_dev", "mock_create_tap_dev", "mock_delete_fp_dev", "mock_execute", "mock_get_ifname", "mock_get_vf_num", "mock_plug", "mock_set", "mock_uname", "mock_unplug", "model", "model_want", "network_8021", "network_bridge", "network_bridge_neutron", "network_ivs", "network_midonet", "network_model", "network_ovs", "network_vrouter", "nic", "nic_conf", "nics", "node", "objects", "op", "os", "os_vif", "osv_exception", "osv_objects", "outbound", "p_elem", "path", "path_exists", "pci_slot", "pci_slot_want", "pci_utils", "port_state", "prefix", "processutils", "profile_id", "profile_id_found", "queues", "ret", "script", "self", "six", "size", "source", "subnet_bridge_4", "subnet_bridge_6", "super", "supported", "test", "type", "type_id", "type_id_found", "typeversion_id", "typeversion_id_found", "utils", "vconfig", "vcpus", "vif", "vif_8021qbg", "vif_8021qbh", "vif_bridge", "vif_bridge_neutron", "vif_hostdev_physical", "vif_hw_veb", "vif_hw_veb_macvtap", "vif_ib_hostdev", "vif_iovisor", "vif_ivs", "vif_ivs_filter_direct", "vif_ivs_filter_hybrid", "vif_ivs_legacy", "vif_macvtap_exception", "vif_macvtap_flat", "vif_macvtap_vlan", "vif_midonet", "vif_none", "vif_obj", "vif_objs", "vif_ovs", "vif_ovs_filter_cap", "vif_ovs_hybrid", "vif_ovs_legacy", "vif_tap", "vif_vhostuser", "vif_vhostuser_fp", "vif_vhostuser_no_path", "vif_vhostuser_ovs", "vif_vhostuser_ovs_fp", "vif_vhostuser_ovs_fp_hybrid", "vif_vrouter", "virt", "vlan", "vp", "want_iface_id", "want_queues", "wantparams", "xml", "os_vif.initialize", "is", "typically", "done", "in", "nova-compute", "startup\n", "Tests", "multiple", "nic", "configuration", "and", "that", "target_dev", "is\n", "set", "for", "each"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/341_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/test_scheduler.py": ["False", "None", "SchedulerManagerTestCase", "SchedulerTestCase", "True", "ValueError", "caching_scheduler", "calls", "chance", "context", "delete_aggregate", "driver", "driver_cls", "driver_plugin_name", "fake_server_actions", "fake_spec", "fakes", "filter_scheduler", "from_primitives", "host_manager", "ironic_host_manager", "manager", "manager_cls", "mock", "mock_delete", "mock_get_by_topic", "mock_init_agg", "mock_init_inst", "mock_service_is_up", "mock_sync", "mock_update", "objects", "result", "select_destinations", "self", "service1", "service2", "servicegroup", "services", "super", "test", "testtools", "update_aggregates", "Test", "case", "for", "scheduler", "manager", "initiation.\nTest", "case", "for", "scheduler", "manager.\nTest", "case", "for", "base", "scheduler", "driver", "initiation.\nTest", "case", "for", "base", "scheduler", "driver", "class.", "Correct", "scheduler", "driver\n", "TODO(sbauza):", "Remove", "that", "test", "once", "the", "API", "v4", "is", "removed\n", "So", "we", "can", "subclass", "this", "test", "and", "re-use", "tests", "if", "we", "need."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handler.py": ["Exception", "LOG", "None", "ROUTE_DECLARATIONS", "_", "_LE", "__name__", "_methods", "aggregate", "allocation", "allowed_methods", "context", "declarations", "dict", "dispatch", "environ", "exc", "exception", "handle_405", "handler", "headers", "inventory", "logging", "make_map", "mapper", "method", "object", "policy", "request_method", "resource_class", "resource_provider", "result", "root", "route", "routes", "self", "start_response", "str", "targets", "usage", "util", "webob", "Process", "route", "declarations", "to", "create", "a", "Route", "Mapper.", "URLs", "and", "Handlers\n", "NOTE(cdent):", "When", "adding", "URLs", "here,", "do", "not", "use", "regex", "patterns", "in\n", "the", "path", "parameters", "(e.g.", "{uuid:[0-9a-zA-Z-]+})", "as", "that", "will", "lead\n", "to", "404s", "that", "are", "controlled", "outside", "of", "the", "individual", "resources\n", "and", "thus", "do", "not", "include", "specific", "information", "on", "the", "why", "of", "the", "404.\n", "NOTE(cdent):", "This", "allows", "'/placement/'", "and", "'/placement'", "to\n", "both", "work", "as", "the", "root", "of", "the", "service,", "which", "we", "probably", "want\n", "for", "those", "situations", "where", "the", "service", "is", "mounted", "under", "a\n", "prefix", "(as", "it", "is", "in", "devstack).", "While", "weird,", "an", "empty", "string", "is\n", "a", "legit", "key", "in", "a", "dictionary", "and", "matches", "as", "desired", "in", "Routes.\n", "We", "can't", "reach", "this", "code", "without", "action", "being", "present.\n", "Ensure", "allow", "header", "is", "a", "python", "2", "or", "3", "native", "string", "(thus\n", "not", "unicode", "in", "python", "2", "but", "stay", "a", "string", "in", "python", "3)\n", "In", "the", "process", "done", "by", "Routes", "to", "save", "the", "allowed", "methods\n", "to", "its", "routing", "table", "they", "become", "unicode", "in", "py2.\n", "NOTE(cdent):", "Local", "config", "currently", "unused.\n", "All", "requests", "but", "'/'", "require", "admin.\n", "TODO(cdent):", "Using", "is_admin", "everywhere", "(except", "/)", "is\n", "insufficiently", "flexible", "for", "future", "use", "case", "but", "is\n", "convenient", "for", "initial", "exploration.\n", "Check", "that", "an", "incoming", "write-oriented", "request", "method", "has\n", "the", "required", "content-type", "header.", "If", "not", "raise", "a", "400.", "If\n", "this", "doesn't", "happen", "here", "then", "webob.dec.wsgify", "(elsewhere\n", "in", "the", "stack)", "will", "raise", "an", "uncaught", "KeyError.", "Since", "that\n", "is", "such", "a", "generic", "exception", "we", "cannot", "merely", "catch", "it\n", "here,", "we", "need", "to", "avoid", "it", "ever", "happening.\n", "TODO(cdent):", "Move", "this", "and", "the", "auth", "checking", "above", "into\n", "middleware.", "It", "shouldn't", "be", "here.", "This", "is", "for", "dispatch", "not\n", "validation", "or", "authorization.\n", "Trap", "the", "NotFound", "exceptions", "raised", "by", "the", "objects", "used\n", "with", "the", "API", "and", "transform", "them", "into", "webob.exc.HTTPNotFound.\n", "Trap", "the", "HTTPNotFound", "that", "can", "be", "raised", "by", "dispatch()\n", "when", "no", "route", "is", "found.", "The", "exception", "is", "passed", "through", "to\n", "the", "FaultWrap", "middleware", "without", "causing", "an", "alarming", "log\n", "message."], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1522536.py": ["REQUIRES_LOCKING", "TestServerGet", "True", "api_fixture", "cast_as_call", "client", "dict", "nova", "nova_fixtures", "policy_fixture", "self", "server", "super", "test", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n1522536."], "/Users/mehranhassani/repos/nova/nova/virt/vmwareapi/ds_util.py": ["ALL_SUPPORTED_DS_TYPES", "DcInfo", "False", "LOG", "None", "True", "_", "_DS_DC_MAPPING", "_LE", "_LI", "__name__", "_filter_datastores_matching_storage_policy", "_get_allowed_datastores", "_is_datastore_valid", "_select_datastore", "_update_datacenter_cache_from_objects", "allowed", "allowed_ds_types", "best_match", "client_factory", "cluster", "collections", "connected_hosts", "constants", "copy_disk_task", "copy_task", "data_store_mors", "data_stores", "datastore", "datastore_refs", "datastore_regex", "datastore_ret", "dc_info", "dc_path", "dc_ref", "dco", "dcs", "delete_disk_task", "disk_type", "ds", "ds_browser", "ds_mors", "ds_obj", "ds_path", "ds_ref", "ds_refs", "ds_types", "dst_dc_ref", "dst_file", "exception", "factory", "file", "file_delete_task", "file_exists", "file_name", "file_path", "frozenset", "getattr", "hasattr", "host_mount", "host_mounts", "hubs", "logging", "matching_ds", "matching_hubs", "move_task", "name", "new_ds", "obj_content", "object_contents", "oc", "pbm", "profile_id", "prop_dict", "propdict", "search_datastore_spec", "search_spec", "search_task", "session", "set", "src_dc_ref", "src_file", "storage_policy", "str", "task_info", "vexc", "vim", "vim_util", "vmFolder", "vm_util", "vutil", "Get", "the", "datastore", "list", "and", "choose", "the", "most", "preferable", "one.\nGet", "the", "datastore", "list", "and", "choose", "the", "first", "local", "storage.\nCopies", "the", "source", "virtual", "disk", "to", "the", "destination.\nDeletes", "a", "virtual", "disk.\nBuilds", "the", "datastore", "search", "spec.\nCheck", "if", "the", "file", "exists", "on", "the", "datastore.\nReturns", "the", "size", "of", "the", "specified", "file.\nUpdates", "the", "datastore/datacenter", "cache.\nGet", "the", "datacenter", "name", "and", "the", "reference.", "A", "cache", "for", "datastore/datacenter", "mappings.", "The", "key", "will", "be\n", "the", "datastore", "moref.", "The", "value", "will", "be", "the", "DcInfo", "object.\n", "data_stores", "is", "actually", "a", "RetrieveResult", "object", "from", "vSphere", "API", "call\n", "the", "propset", "attribute", "\"need", "not", "be", "set\"", "by", "returning", "API\n", "favor", "datastores", "with", "more", "free", "space\n", "Local", "storage", "identifier", "vSphere", "doesn't", "support", "CIFS", "or\n", "vfat", "for", "datastores,", "therefore", "filtered\n", "If", "there", "are", "no", "hosts", "in", "the", "cluster", "then", "an", "empty", "string", "is\n", "returned\n", "the", "propset", "attribute", "\"need", "not", "be", "set\"", "by", "returning", "API\n", "NOTE(garyk):", "use", "utility", "method", "to", "retrieve", "remote", "objects\n", "populate", "the", "folder", "entries"], "/Users/mehranhassani/repos/nova/nova/virt/imagecache.py": ["CONF", "None", "NotImplementedError", "all_instances", "base_dir", "bdms", "context", "driver_block_device", "getattr", "image_key", "image_ref_str", "instance", "instance_bdms", "instance_names", "insts", "local", "nova", "object", "objects", "remote", "self", "set", "str", "swap", "swap_image", "task_states", "used_images", "used_swap_images", "vm_states", "Returns", "the", "base", "directory", "of", "the", "cached", "images.\nAges", "and", "verifies", "cached", "images.", "NOTE(mikal):", "\"instance", "name\"", "here", "means", "\"the", "name", "of", "a", "directory\n", "which", "might", "contain", "an", "instance\"", "and", "therefore", "needs", "to", "include\n", "historical", "permutations", "as", "well", "as", "the", "current", "one."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/admin_password.py": ["False", "change_password", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/cmd/__init__.py": ["False", "debugger", "eventlet", "turn", "off", "thread", "patching", "to", "enable", "the", "remote", "debugger"], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/test_aggregate.py": ["aggregate", "aggregate_req", "fake_notifier", "len", "notification_sample_base", "self", "The", "uuid", "hasn't", "been", "exposed", "on", "the", "REST", "API", "yet", "so", "we", "have", "no", "way", "to\n", "match", "it", "here,", "now."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/298_mysql_extra_specs_binary_collation.py": ["migrate_engine"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/networks_associate.py": ["False", "associate_host", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_servers.py": ["False", "None", "ServersSampleBase", "ServersSampleJsonTest", "True", "action", "addresses", "api_sample_base", "api_version", "avr", "base64", "code", "common_req_names", "count", "fake", "fakes", "fixed_address", "image", "ip", "ips", "max", "microversion", "min", "name", "network", "orig_value", "params", "req_tpl", "resp", "resp_tpl", "response", "sample_dir", "scenarios", "self", "server", "six", "status", "subs", "super", "time", "use_common", "use_common_server_api_samples", "user_data", "user_data_contents", "uuid", "!/bin/bash\\n/bin/su\\necho", "\"I", "am", "in", "you!\"\\n')\n", "param", "use_common_server_api_samples:", "Boolean", "to", "set", "whether", "tests", "use\n", "common", "sample", "files", "for", "server", "post", "request", "and", "response.\n", "Default", "is", "True", "which", "means", "_get_sample_path", "method", "will", "fetch", "the\n", "common", "server", "sample", "files", "from", "'servers'", "directory.\n", "Set", "False", "if", "tests", "need", "to", "use", "extension", "specific", "sample", "files\n", "config", "drive", "can", "be", "a", "string", "for", "True", "or", "empty", "value", "for", "False\n", "config", "drive", "can", "be", "a", "string", "for", "True", "or", "empty", "value", "for", "False\n", "NOTE(gmann):", "microversion", "tests", "do", "not", "need", "to", "run", "for", "v2", "API\n", "so", "defining", "scenarios", "only", "for", "v2.9", "which", "will", "run", "the", "original", "tests\n", "by", "appending", "'(v2_9)'", "in", "test_id.\n", "Get", "the", "server", "details", "so", "we", "can", "find", "a", "fixed", "IP", "to", "use", "in", "the\n", "addFloatingIp", "request.\n", "Find", "a", "fixed", "IP.\n", "This", "is", "gross,", "but", "we", "need", "to", "stub", "out", "the", "associate_floating_ip\n", "call", "in", "the", "FloatingIPActionController", "since", "we", "don't", "have", "a", "real\n", "networking", "service", "backing", "this", "up,", "just", "the", "fake", "nova-network", "stubs."], "/Users/mehranhassani/repos/nova/nova/virt/ironic/driver.py": ["AssertionError", "CONF", "Exception", "False", "IronicDriver", "KeyError", "LOG", "None", "True", "TypeError", "ValueError", "_", "_CONSOLE_STATE_CHECKING_INTERVAL", "_LE", "_LI", "_LW", "_NODE_FIELDS", "_POWER_STATE_MAP", "_UNPROVISION_STATES", "__name__", "_enable_console", "_get_console", "_get_nodes_supported_instances", "_log_ironic_polling", "_wait_for_provision_state", "_wait_state", "admin_password", "attach_block_devices", "bad_power_states", "bad_volumes_callback", "base64", "bdms", "block_device_info", "cache_age", "capabilities", "capability", "cdb", "client_wrapper", "compressed", "configdrive", "configdrive_value", "console", "console_info", "console_type", "context", "cpu_arch", "ctxt", "data", "destroy_disks", "detach_block_devices", "dic", "dict", "e", "exception", "excutils", "extra_md", "files", "firewall", "flavor", "getattr", "good_provision_states", "gzip", "gzipped", "hardware", "hasattr", "hash_ring", "host", "hostname", "i", "i_meta", "image_meta", "importutils", "injected_files", "instance", "instance_info", "instance_metadata", "instances", "int", "ironic", "ironic_states", "is_up", "kwargs", "len", "list", "local_gb", "local_gb_used", "logging", "loopingcall", "map_power_state", "memory_kib", "memory_mb", "memory_mb_used", "message", "migrate_data", "mode", "msg", "n", "network_info", "network_info_str", "node", "node_cache", "node_list", "node_obj", "node_uuid", "node_uuids", "nodename", "nodes_extra_specs", "nova", "nova_context", "num_cpu", "obj_fields", "objects", "original", "p", "parts", "patch", "patcher", "pif", "port", "port_id", "ports", "power_state", "preserve_ephemeral", "prop", "properties", "props", "prov_state", "raw_cpu_arch", "read_only", "reboot_type", "recreate", "refresh", "result", "retry_interval", "scheme", "security_group_id", "self", "service_list", "servicegroup", "services", "set", "shutil", "six", "state", "str", "super", "svc", "task_states", "tempfile", "tgt_power_state", "tgt_prov_state", "time", "timeout", "timer", "uncompressed", "url", "urlparse", "validate_chk", "vcpus", "vcpus_used", "vif", "virt_driver", "virtapi", "vm_states", "what", "Return", "supported", "instances", "for", "a", "node.\nHypervisor", "driver", "for", "Ironic", "-", "bare", "metal", "provisioning.\nGet", "a", "node", "by", "its", "UUID.\nHelper", "method", "to", "parse", "the", "node's", "properties.\nHelper", "method", "to", "create", "resource", "dict", "from", "node", "stats.\nWait", "for", "the", "node", "to", "be", "marked", "as", "ACTIVE", "in", "Ironic.\nWait", "for", "the", "node", "to", "complete", "a", "power", "state", "change.\nGet", "hypervisor", "type.\nReturns", "the", "version", "of", "the", "Ironic", "API", "service", "endpoint.\nRequest", "ironicclient", "to", "acquire", "node", "console.\nWait", "for", "the", "expected", "console", "mode", "to", "be", "set", "on", "node.\nRequest", "ironicclient", "to", "enable/disable", "node", "console.", "Console", "state", "checking", "interval", "in", "seconds\n", "NOTE(deva):", "work", "around", "a", "lack", "of", "symbols", "in", "the", "current", "version.\n", "keep", "NOSTATE", "around", "for", "compatibility\n", "add", "this", "key", "because", "it's", "different", "in", "instance_info", "for", "some", "reason\n", "NOTE(deva):", "In", "Havana", "and", "Icehouse,", "the", "flavor", "was", "required", "to", "link\n", "to", "an", "arch-specific", "deploy", "kernel", "and", "ramdisk", "pair,", "and", "so", "the", "flavor\n", "also", "had", "to", "have", "extra_specs['cpu_arch'],", "which", "was", "matched", "against\n", "the", "ironic", "node.properties['cpu_arch'].\n", "With", "Juno,", "the", "deploy", "image(s)", "may", "be", "referenced", "directly", "by", "the\n", "node.driver_info,", "and", "a", "flavor", "no", "longer", "needs", "to", "contain", "any", "of\n", "these", "three", "extra", "specs,", "though", "the", "cpu_arch", "may", "still", "be", "used\n", "in", "a", "heterogeneous", "environment,", "if", "so", "desired.\n", "NOTE(dprince):", "we", "use", "the", "raw", "cpu_arch", "here", "because", "extra_specs\n", "filters", "aren't", "canonicalized\n", "NOTE(gilliard):", "To", "assist", "with", "more", "precise", "scheduling,", "if", "the\n", "node.properties", "contains", "a", "key", "'capabilities',", "we", "expect", "the", "value\n", "to", "be", "of", "the", "form", "\"k1:v1,k2:v2,etc..\"", "which", "we", "add", "directly", "as\n", "key/value", "pairs", "into", "the", "node_extra_specs", "to", "be", "used", "by", "the\n", "ComputeCapabilitiesFilter\n", "Node", "is", "in", "the", "process", "of", "deploying,", "is", "deployed,", "or", "is", "in\n", "the", "process", "of", "cleaning", "up", "from", "a", "deploy.", "Report", "all", "of", "its\n", "resources", "as", "in", "use.\n", "Use", "instance_info", "instead", "of", "properties", "here", "is", "because", "the\n", "properties", "of", "a", "deployed", "node", "can", "be", "changed", "which", "will", "count\n", "as", "available", "resources.\n", "Always", "checking", "allows", "us", "to", "catch", "the", "case", "where", "Nova", "thinks", "there\n", "are", "available", "resources", "on", "the", "Node,", "but", "Ironic", "does", "not", "(because", "it\n", "is", "not", "in", "a", "usable", "state):", "https://launchpad.net/bugs/1503453\n", "The", "node's", "current", "state", "is", "such", "that", "it", "should", "not", "present", "any\n", "of", "its", "resources", "to", "Nova\n", "The", "Ironic", "driver", "manages", "multiple", "hosts,", "so", "there", "are\n", "likely", "many", "different", "CPU", "models", "in", "use.", "As", "such", "it", "is\n", "impossible", "to", "provide", "any", "meaningful", "info", "on", "the", "CPU\n", "model", "of", "the", "\"host\"\n", "Associate", "the", "node", "with", "an", "instance\n", "FIXME(lucasagomes):", "The", "\"retry_on_conflict\"", "parameter", "was", "added\n", "to", "basically", "causes", "the", "deployment", "to", "fail", "faster", "in", "case", "the\n", "node", "picked", "by", "the", "scheduler", "is", "already", "associated", "with", "another\n", "instance", "due", "bug", "#1341420.\n", "job", "is", "done\n", "ironic", "is", "trying", "to", "delete", "it", "now\n", "ironic", "already", "deleted", "it\n", "ironic", "failed", "to", "deploy\n", "NOTE(lucasagomes):", "limit", "==", "0", "is", "an", "indicator", "to", "continue\n", "pagination", "until", "there're", "no", "more", "values", "to", "be", "returned.\n", "NOTE(lucasagomes):", "limit", "==", "0", "is", "an", "indicator", "to", "continue\n", "pagination", "until", "there're", "no", "more", "values", "to", "be", "returned.\n", "NOTE(comstud):", "We", "can", "cheat", "and", "use", "caching", "here.", "This", "method\n", "just", "needs", "to", "return", "True", "for", "nodes", "that", "exist.", "It", "doesn't\n", "matter", "if", "the", "data", "is", "stale.", "Sure,", "it's", "possible", "that", "removing\n", "node", "from", "Ironic", "will", "cause", "this", "method", "to", "return", "True", "until\n", "the", "next", "call", "to", "'get_available_nodes',", "but", "there", "shouldn't\n", "be", "much", "harm.", "There's", "already", "somewhat", "of", "a", "race.\n", "Empty", "cache,", "try", "to", "populate", "it.\n", "NOTE(comstud):", "Fallback", "and", "check", "Ironic.", "This", "case", "should", "be\n", "rare.\n", "NOTE(jroll):", "always", "make", "sure", "this", "service", "is", "in", "the", "list,", "because\n", "only", "services", "that", "have", "something", "registered", "in", "the", "compute_nodes\n", "table", "will", "be", "here", "so", "far,", "and", "we", "might", "be", "brand", "new.\n", "NOTE(lucasagomes):", "limit", "==", "0", "is", "an", "indicator", "to", "continue\n", "pagination", "until", "there're", "no", "more", "values", "to", "be", "returned.\n", "NOTE(jroll):", "we", "always", "manage", "the", "nodes", "for", "instances", "we", "manage\n", "NOTE(jroll):", "check", "if", "the", "node", "matches", "us", "in", "the", "hash", "ring,", "and\n", "does", "not", "have", "an", "instance_uuid", "(which", "would", "imply", "the", "node", "has\n", "an", "instance", "managed", "by", "another", "compute", "service).\n", "Note", "that", "this", "means", "nodes", "with", "an", "instance", "that", "was", "deleted", "in\n", "nova", "while", "the", "service", "was", "down,", "and", "not", "yet", "reaped,", "will", "not", "be\n", "reported", "until", "the", "periodic", "task", "cleans", "it", "up.\n", "NOTE(jroll)", "we", "refresh", "the", "cache", "every", "time", "this", "is", "called\n", "because", "it", "needs", "to", "happen", "in", "the", "resource", "tracker\n", "periodic", "task.", "This", "task", "doesn't", "pass", "refresh=True,\n", "unfortunately.\n", "NOTE(comstud):", "We", "can", "cheat", "and", "use", "caching", "here.", "This", "method", "is\n", "only", "called", "from", "a", "periodic", "task", "and", "right", "after", "the", "above\n", "get_available_nodes()", "call", "is", "called.\n", "Well,", "it's", "also", "called", "from", "init_host(),", "so", "if", "we", "have", "empty\n", "cache,", "let's", "try", "to", "populate", "it.\n", "compress", "config", "drive\n", "base64", "encode", "config", "drive\n", "The", "compute", "manager", "is", "meant", "to", "know", "the", "node", "uuid,", "so", "missing", "uuid\n", "is", "a", "significant", "issue.", "It", "may", "mean", "we've", "been", "passed", "the", "wrong", "data.\n", "NOTE(Shrews):", "The", "default", "ephemeral", "device", "needs", "to", "be", "set", "for\n", "services", "(like", "cloud-init)", "that", "depend", "on", "it", "being", "returned", "by", "the\n", "metadata", "server.", "Addresses", "bug", "https://launchpad.net/bugs/1324286.\n", "validate", "we", "are", "ready", "to", "do", "the", "deploy\n", "something", "is", "wrong.", "undo", "what", "we", "have", "done\n", "prepare", "for", "the", "deploy\n", "Config", "drive\n", "trigger", "the", "node", "deploy\n", "if", "the", "node", "is", "already", "in", "a", "deprovisioned", "state,", "continue\n", "This", "should", "be", "fixed", "in", "Ironic.\n", "TODO(deva):", "This", "exception", "should", "be", "added", "to\n", "python-ironicclient", "and", "matched", "directly,\n", "rather", "than", "via", "__name__.\n", "using", "a", "dict", "because", "this", "is", "modified", "in", "the", "local", "method\n", "From", "a", "user", "standpoint,", "the", "node", "is", "unprovisioned.", "If", "a", "node\n", "gets", "into", "CLEANFAIL", "state,", "it", "must", "be", "fixed", "in", "Ironic,", "but", "we\n", "can", "consider", "the", "instance", "unprovisioned.\n", "wait", "for", "the", "state", "transition", "to", "finish\n", "NOTE(deva):", "if", "nova.compute.ComputeManager._delete_instance()\n", "is", "called", "on", "a", "non-existing", "instance,", "the", "only", "way\n", "to", "delete", "it", "is", "to", "return", "from", "this", "method\n", "without", "raising", "any", "exceptions.\n", "NOTE(hshiina):", "if", "spawn()", "fails", "before", "ironic", "starts\n", "provisioning,", "instance", "information", "should", "be\n", "removed", "from", "ironic", "node.\n", "NOTE(PhilDay):", "Accessing", "network_info", "will", "block", "if", "the", "thread\n", "it", "wraps", "hasn't", "finished,", "so", "do", "this", "ahead", "of", "time", "so", "that", "we\n", "don't", "block", "while", "holding", "the", "logging", "lock.\n", "start", "by", "ensuring", "the", "ports", "are", "clear\n", "not", "needed", "if", "no", "vif", "are", "defined\n", "attach", "what", "neutron", "needs", "directly", "to", "the", "port\n", "NOTE(PhilDay):", "Accessing", "network_info", "will", "block", "if", "the", "thread\n", "it", "wraps", "hasn't", "finished,", "so", "do", "this", "ahead", "of", "time", "so", "that", "we\n", "don't", "block", "while", "holding", "the", "logging", "lock.\n", "not", "needed", "if", "no", "vif", "are", "defined\n", "we", "can", "not", "attach", "a", "dict", "directly\n", "Trigger", "the", "node", "rebuild/redeploy.\n", "Retry", "failed\n", "Validations\n", "Maintenance\n", "Although", "the", "target", "provision", "state", "is", "REBUILD,", "it", "will", "actually", "go\n", "to", "ACTIVE", "once", "the", "redeploy", "is", "finished.\n", "flat", "network,", "go", "ahead", "and", "allow", "the", "port", "to", "be", "bound\n", "Retry", "failed\n", "Validations\n", "Maintenance\n", "Return", "False", "to", "start", "backing", "off\n", "Retry", "failed\n", "Validations\n", "Maintenance\n", "Waiting", "for", "the", "console", "state", "to", "change", "(disabled/enabled)\n", "Acquire", "the", "console\n", "NOTE:", "Resetting", "console", "is", "a", "workaround", "to", "force", "acquiring\n", "console", "when", "it", "has", "already", "been", "acquired", "by", "another", "user/operator.\n", "IPMI", "serial", "console", "does", "not", "support", "multi", "session,", "so\n", "resetting", "console", "will", "deactivate", "any", "active", "one", "without\n", "warning", "the", "operator.\n", "Disable", "console\n", "Then", "re-enable", "it\n", "NOTE:", "We", "try", "to", "do", "recover", "on", "failure.\n", "But", "if", "recover", "fails,", "the", "console", "may", "remain", "in\n", "\"disabled\"", "state", "and", "cause", "any", "new", "connection\n", "will", "be", "refused.\n", "Parse", "and", "check", "the", "console", "url"], "/Users/mehranhassani/repos/nova/nova/volume/encryptors/luks.py": ["False", "LOG", "None", "True", "_LI", "_LW", "__name__", "cipher", "cmd", "context", "cryptsetup", "device", "e", "is_luks", "key", "key_size", "kwargs", "logging", "mangled_passphrase", "passphrase", "processutils", "self", "utils", "Closes", "the", "device", "(effectively", "removes", "the", "dm-crypt", "mapping).", "check", "to", "see", "if", "the", "device", "uses", "LUKS:", "exit", "status", "is", "0\n", "if", "the", "device", "is", "a", "LUKS", "partition", "and", "non-zero", "if", "not\n", "NOTE(joel-coffman):", "cryptsetup", "will", "strip", "trailing", "newlines", "from\n", "input", "specified", "on", "stdin", "unless", "--key-file=-", "is", "specified.\n1633518", "by", "first", "identifying", "if", "a", "mangled", "passphrase\n", "NOTE(lyarwood):", "Now", "that", "we", "are", "sure", "that", "the", "mangled", "passphrase", "is\n", "used", "attempt", "to", "add", "the", "correct", "passphrase", "before", "removing", "the\n", "mangled", "version", "from", "the", "volume.\n", "luksAddKey", "currently", "prompts", "for", "the", "following", "input", ":\n", "Enter", "any", "existing", "passphrase:\n", "Enter", "new", "passphrase", "for", "key", "slot:\n", "Verify", "passphrase:\n", "Verify", "that", "we", "can", "open", "the", "volume", "with", "the", "current", "passphrase\n", "before", "removing", "the", "mangled", "passphrase.\n", "luksRemoveKey", "only", "prompts", "for", "the", "key", "to", "remove.\n", "the", "device", "has", "never", "been", "formatted;", "format", "it", "and", "try", "again\n", "NOTE(lyarwood):", "Workaround", "bug#1633518", "by", "replacing", "any\n", "mangled", "passphrases", "that", "are", "found", "on", "the", "volume.\n", "TODO(lyarwood):", "Remove", "workaround", "during", "R.\n", "modify", "the", "original", "symbolic", "link", "to", "refer", "to", "the", "decrypted", "device"], "/Users/mehranhassani/repos/nova/nova/virt/disk/mount/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_signature_utils.py": ["BadPublicKey", "FakeCastellanCertificate", "FakeCryptoCertificate", "FakeKeyManager", "KeyManagerError", "None", "TEST_DSA_PRIVATE_KEY", "TEST_ECC_PRIVATE_KEY", "TEST_RSA_PRIVATE_KEY", "bad_cert_uuid", "bad_pub_key", "base64", "cert", "cert_format", "cert_uuid", "context", "crypto_exceptions", "curve", "data", "datetime", "default_backend", "dsa", "ec", "exception", "fake_cert", "hash_alg", "hash_class", "hash_dict", "hash_method", "hash_name", "img_sig_cert_uuid", "key_type_name", "mock", "mock_API", "mock_get_cert", "mock_get_certificate", "mock_get_pub_key", "mock_key_manager_API", "mock_load_cert", "not_valid_after", "not_valid_before", "object", "padding", "private_key", "property", "pub_key", "result_pub_key", "rsa", "self", "sig_format", "sig_key_type", "signature", "signature_utils", "signer", "test", "timeutils", "verifier", "warnings", "x509_cert", "Test", "methods", "of", "signature_utils", "secp521r1", "is", "assumed", "to", "be", "available", "on", "all", "supported", "platforms\n", "test", "every", "ECC", "curve\n", "Create", "a", "private", "key", "to", "use"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/flavors.py": ["ViewBuilder", "ViewBuilderV21", "_collection_name", "coll_name", "common", "dict", "flavor", "flavor_dict", "flavor_list", "flavors", "flavors_dict", "flavors_links", "func", "request", "self", "super", "Return", "the", "'index'", "view", "of", "flavors.\nReturn", "the", "'detail'", "view", "of", "flavors."], "/Users/mehranhassani/repos/nova/nova/version.py": ["Exception", "False", "LOG", "NOVA_PACKAGE", "NOVA_PRODUCT", "NOVA_VENDOR", "None", "True", "_LE", "__name__", "_load_config", "cfg", "cfgfile", "configparser", "ex", "loaded", "logging", "package_string", "pbr", "version_info", "version_string", "OS", "distro", "package", "version", "suffix\n", "Don't", "load", "in", "global", "context,", "since", "we", "can't", "assume\n", "these", "modules", "are", "accessible", "when", "distutils", "uses\n", "this", "module"], "/Users/mehranhassani/repos/nova/nova/policies/volumes.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "volumes_policies"], "/Users/mehranhassani/repos/nova/nova/conf/floating_ips.py": ["False", "True", "cfg", "conf", "floating_ip_opts"], "/Users/mehranhassani/repos/nova/nova/tests/functional/regressions/test_bug_1541691.py": ["None", "REQUIRES_LOCKING", "TestServerValidation", "True", "api_fixture", "client", "dict", "microversion", "nova", "nova_fixtures", "policy_fixture", "self", "server", "server_args", "super", "test", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n1541691."], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_instance_usage_audit_log.py": ["ADMIN_API", "False", "InstanceUsageAuditLogJsonTest", "None", "True", "api_sample_base", "context", "datetime", "fake_service_get_all", "fake_utcnow", "filters", "host", "i", "num_instances", "objects", "range", "response", "sample_dir", "self", "services", "set_zones", "super", "task_log", "urllib", "with_timezone", "It", "is", "not", "UTC", "time,", "but", "no", "effect", "for", "testing"], "/Users/mehranhassani/repos/nova/nova/compute/resource_tracker.py": ["COMPUTE_RESOURCE_SEMAPHORE", "CONF", "Exception", "False", "KeyError", "LOG", "None", "True", "_", "_LI", "_LW", "__name__", "_instance_in_resize_state", "_is_trackable_migration", "claim", "claimed_pci_devices", "claimed_pci_devices_objs", "claims", "context", "copy", "ctxt", "dev_json", "dev_pools_obj", "disk_usage", "driver", "e", "elevated", "exc", "exception", "filtered", "free", "free_disk_gb", "free_ram_mb", "free_vcpus", "frozenset", "getattr", "hardware", "host", "image_meta", "incoming", "inst", "instance", "instance_by_uuid", "instance_numa_topology", "instance_type", "instances", "is_new_instance", "is_removed", "is_removed_instance", "isinstance", "itype", "jsonutils", "k", "key", "len", "limits", "list", "logging", "max", "mem_usage", "memory_mb", "metrics", "metrics_info", "mig_context", "migration", "migration_context", "migration_obj", "migration_time", "migrations", "missing_keys", "monitor", "monitor_handler", "monitors", "move_type", "n_id", "new_instance_type", "new_pci_requests", "nodename", "notifier", "nova", "numa_topology", "obj", "obj_base", "object", "object_or_dict", "objects", "om", "orphan", "orphan_uuids", "orphans", "other_migration", "other_time", "outbound", "overhead", "pci_device", "pci_devices", "pci_manager", "pci_request", "pci_requests", "pci_stats", "prefix", "property", "reason", "record", "request", "resource", "resource_keys", "resources", "rpc", "same_node", "scheduler_client", "self", "sign", "stashed_flavors", "stats", "task", "task_states", "tcpu", "ucpu", "updated_numa_topology", "updates", "usage", "utils", "uuid", "uuids", "uuids1", "uuids2", "vcpus", "vm", "vm_states", "vuuids", "Create", "a", "claim", "for", "a", "rebuild", "operation.\nCreate", "a", "claim", "for", "a", "resize", "or", "cold-migration", "move.\nRemove", "usage", "from", "the", "given", "instance.\nRemove", "usage", "for", "an", "incoming/outgoing", "migration.\nReturns", "compute", "node", "for", "the", "host", "and", "nodename.\nCheck", "to", "see", "if", "any", "resources", "have", "changed.\nUpdate", "partial", "stats", "locally", "and", "populate", "them", "to", "Scheduler.\nUpdate", "usage", "for", "a", "single", "instance.\nInclude", "orphaned", "instances", "in", "usage.\nGet", "the", "instance", "type", "from", "instance.", "Only", "look", "at", "resize/migrate", "migration", "and", "evacuation", "records\n", "NOTE(danms):", "RT", "should", "probably", "examine", "live", "migration\n", "records", "as", "well", "and", "do", "something", "smart.", "However,", "ignore\n", "those", "for", "now", "to", "avoid", "them", "being", "included", "in", "below", "calculations.\n", "compute_driver", "doesn't", "support", "resource", "tracking,", "just\n", "set", "the", "'host'", "and", "node", "fields", "and", "continue", "the", "build:\n", "sanity", "checks:\n", "get", "the", "overhead", "required", "to", "build", "this", "instance:\n", "self._set_instance_host_and_node()", "will", "save", "instance", "to", "the", "DB\n", "so", "set", "instance.numa_topology", "first.", "We", "need", "to", "make", "sure\n", "that", "numa_topology", "is", "saved", "while", "under", "COMPUTE_RESOURCE_SEMAPHORE\n", "so", "that", "the", "resource", "audit", "knows", "about", "any", "cpus", "we've", "pinned.\n", "NOTE(jaypipes):", "ComputeNode.pci_device_pools", "is", "set", "below\n", "in", "_update_usage_from_instance().\n", "Mark", "resources", "in-use", "and", "update", "stats\n", "persist", "changes", "to", "the", "compute", "node:\n", "compute_driver", "doesn't", "support", "resource", "tracking,", "just\n", "generate", "the", "migration", "record", "and", "continue", "the", "resize:\n", "get", "memory", "overhead", "required", "to", "build", "this", "instance:\n", "TODO(moshele):", "we", "are", "recreating", "the", "pci", "requests", "even", "if\n", "there", "was", "no", "change", "on", "resize.", "This", "will", "cause", "allocating\n", "the", "old/new", "pci", "device", "in", "the", "resize", "phase.", "In", "the", "future\n", "we", "would", "like", "to", "optimise", "this.\n", "PCI", "requests", "come", "from", "two", "sources:", "instance", "flavor", "and\n", "SR-IOV", "ports.", "SR-IOV", "ports", "pci_request", "don't", "have", "an", "alias_name.\n", "On", "resize", "merge", "the", "SR-IOV", "ports", "pci_requests", "with", "the", "new\n", "instance", "flavor", "pci_requests.\n", "NOTE(jaypipes):", "ComputeNode.pci_device_pools", "is", "set", "below\n", "in", "_update_usage_from_instance().\n", "TODO(jaypipes):", "Move", "claimed_numa_topology", "out", "of", "the", "Claim's\n", "constructor", "flow", "so", "the", "Claim", "constructor", "only", "tests", "whether\n", "resources", "can", "be", "claimed,", "not", "consume", "the", "resources", "directly.\n", "Mark", "the", "resources", "in-use", "for", "the", "resize", "landing", "on", "this\n", "compute", "host:\n", "free", "old/new", "allocated", "pci", "devices\n", "don't", "update", "usage", "for", "this", "instance", "unless", "it", "submitted", "a", "resource\n", "claim", "first:\n", "if", "there", "is", "already", "a", "compute", "node", "just", "use", "resources\n", "to", "initialize\n", "now", "try", "to", "get", "the", "compute", "node", "record", "from", "the\n", "database.", "If", "we", "get", "one", "we", "use", "resources", "to", "initialize\n", "there", "was", "no", "local", "copy", "and", "none", "in", "the", "database\n", "so", "we", "need", "to", "create", "a", "new", "compute", "node.", "This", "needs\n", "to", "be", "initialized", "with", "resource", "values.\n", "purge", "old", "stats", "and", "init", "with", "anything", "passed", "in", "by", "the", "driver\n", "update", "the", "allocation", "ratios", "for", "the", "related", "ComputeNode", "object\n", "now", "copy", "rest", "to", "compute_node\n", "TODO(jaypipes):", "Remove", "this", "when", "compute_node.metrics", "doesn't", "need\n", "to", "be", "populated", "as", "a", "JSONified", "string.\n", "NOTE(jaypipes):", "The", "resources['hypervisor_hostname']", "field", "now\n", "contains", "a", "non-None", "value,", "even", "for", "non-Ironic", "nova-compute", "hosts.", "It\n", "is", "this", "value", "that", "will", "be", "populated", "in", "the", "compute_nodes", "table.\n", "We", "want", "the", "'cpu_info'", "to", "be", "None", "from", "the", "POV", "of", "the\n", "virt", "driver,", "but", "the", "DB", "requires", "it", "to", "be", "non-null", "so\n", "just", "force", "it", "to", "empty", "string\n", "NOTE(danms):", "If", "this", "happens,", "we", "don't", "set", "it", "here,", "and\n", "let", "the", "code", "either", "fail", "or", "lazy-load", "the", "instance", "later\n", "which", "is", "what", "happened", "before", "we", "added", "this", "optimization.\n", "NOTE(tdurakov)", "this", "situation", "is", "possible", "for", "resize/cold\n", "migration", "when", "migration", "is", "finished", "but", "haven't", "yet\n", "confirmed/reverted", "in", "that", "case", "instance", "already", "changed", "host\n", "to", "destination", "and", "no", "matching", "happens\n", "initialize", "the", "compute", "node", "object,", "creating", "it\n", "if", "it", "does", "not", "already", "exist.\n", "if", "we", "could", "not", "init", "the", "compute", "node", "the", "tracker", "will", "be\n", "disabled", "and", "we", "should", "quit", "now\n", "Grab", "all", "instances", "assigned", "to", "this", "node:\n", "Now", "calculate", "usage", "based", "on", "instance", "utilization:\n", "Grab", "all", "in-progress", "migrations:\n", "Detect", "and", "account", "for", "orphaned", "instances", "that", "may", "exist", "on", "the\n", "hypervisor,", "but", "are", "not", "in", "the", "DB:\n", "NOTE(yjiang5):", "Because", "pci", "device", "tracker", "status", "is", "not", "cleared", "in\n", "this", "periodic", "task,", "and", "also", "because", "the", "resource", "tracker", "is", "not\n", "notified", "when", "instances", "are", "deleted,", "we", "need", "remove", "all", "usages\n", "from", "deleted", "instances.\n", "TODO(pmurray):", "metrics", "should", "not", "be", "a", "json", "string", "in", "ComputeNode,\n", "but", "it", "is.", "This", "should", "be", "changed", "in", "ComputeNode\n", "update", "the", "compute_node\n", "Persist", "the", "stats", "to", "the", "Scheduler\n", "free", "ram", "and", "disk", "may", "be", "negative,", "depending", "on", "policy:\n", "Calculate", "the", "numa", "usage\n", "Same", "node", "resize.", "Record", "usage", "for", "the", "'new_'", "resources.", "This\n", "is", "executed", "on", "resize_claim().\n", "Allocate", "pci", "device(s)", "for", "the", "instance.\n", "The", "instance", "is", "already", "set", "to", "the", "new", "flavor", "(this", "is", "done\n", "by", "the", "compute", "manager", "on", "finish_resize()),", "hold", "space", "for", "a\n", "possible", "revert", "to", "the", "'old_'", "resources.\n", "NOTE(lbeliveau):", "When", "the", "periodic", "audit", "timer", "gets\n", "triggered,", "the", "compute", "usage", "gets", "reset.", "The", "usage", "for", "an\n", "instance", "that", "is", "migrated", "to", "the", "new", "flavor", "but", "not", "yet\n", "confirmed/reverted", "will", "first", "get", "accounted", "for", "by\n", "_update_usage_from_instances().", "This", "method", "will", "then", "be\n", "called,", "and", "we", "need", "to", "account", "for", "the", "'_old'", "resources\n", "(just", "in", "case).\n", "instance", "has", "not", "yet", "migrated", "here:\n", "Allocate", "pci", "device(s)", "for", "the", "instance.\n", "instance", "migrated,", "but", "record", "usage", "for", "a", "possible", "revert:\n", "do", "some", "defensive", "filtering", "against", "bad", "migrations", "records", "in", "the\n", "database:\n", "migration", "referencing", "deleted", "instance\n", "skip", "migration", "if", "instance", "isn't", "in", "a", "resize", "state:\n", "filter", "to", "most", "recently", "updated", "migration", "for", "each", "instance:\n", "NOTE(claudiub):", "In", "Python", "3,", "you", "cannot", "compare", "NoneTypes.\n", "NOTE(sfinucan):", "Both", "brand", "new", "instances", "as", "well", "as", "instances", "that\n", "are", "being", "unshelved", "will", "have", "is_new_instance", "==", "True\n", "if", "it's", "a", "new", "or", "deleted", "instance:\n", "new", "instance,", "update", "compute", "node", "resource", "usage:\n", "set", "some", "initial", "values,", "reserve", "room", "for", "host/hypervisor:\n", "just", "record", "memory", "usage", "for", "the", "orphan\n", "NOTE(ndipanov):", "Certain", "migration", "types", "(all", "but", "resize)\n", "do", "not", "change", "flavors", "so", "there", "is", "no", "need", "to", "stash\n", "them.", "In", "that", "case", "-", "just", "get", "the", "instance", "flavor."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_migration.py": ["False", "NOW", "None", "_TestMigrationObject", "context", "ctxt", "db", "db_instance", "db_migration", "db_migrations", "dict", "enumerate", "exception", "fake_db_migration", "fake_get", "fake_inst", "fake_instance", "fake_migration", "filters", "index", "inst", "len", "m_get_mig", "mig", "migration", "migrations", "mock", "mock_create", "mock_get", "mock_update", "object", "objects", "self", "test_objects", "timeutils", "updates", "uuidsentinel"], "/Users/mehranhassani/repos/nova/nova/policies/console_auth_tokens.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "console_auth_tokens_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/conf/novnc.py": ["False", "cfg", "conf", "novnc_opts"], "/Users/mehranhassani/repos/nova/nova/network/manager.py": ["CONF", "DHCP", "Exception", "False", "FlatDHCPManager", "FlatManager", "KeyError", "LOG", "NetworkManager", "None", "NotImplementedError", "RPCAllocateFixedIP", "SHOULD_CREATE_BRIDGE", "SHOULD_CREATE_VLAN", "True", "TypeError", "ValueError", "VlanManager", "_", "_LE", "_LI", "_LW", "__name__", "address", "addresses_by_network", "admin_context", "affect_auto_assigned", "allowed_end", "allowed_start", "args", "associations", "attempts", "available_macs", "bottom_reserved", "bridge", "bridge_interface", "call_func", "cidr", "cidr_v6", "cleanup", "collections", "context", "ctxt", "current", "datetime", "dest", "dev", "dhcp_server", "dict", "dns1", "dns2", "dns_zone", "domainref", "driver", "each_subnet_size", "elevated", "enable_dhcp", "enumerate", "exc", "exception", "excutils", "extra_reserved", "extracted_subnets", "f", "filters", "find_next", "fip", "fixed_address", "fixed_cidr", "fixed_ip", "fixed_ip_filter", "fixed_ip_list", "fixed_ip_ref", "fixed_ips", "fixed_ipv6", "fixed_net", "fixed_net_v4", "fixed_net_v6", "fixed_range", "fixnet", "fld", "floating_address", "floating_addresses", "floating_ip", "floating_ips", "functools", "gateway", "gateway_v6", "getattr", "green_threads", "group", "group_ids", "groups", "gt", "hasattr", "host", "i", "ic", "id", "importutils", "index", "index_vlan", "index_vpn", "instance", "instance_domain", "instance_host", "instance_id", "instance_uuid", "instance_zone", "int", "int_args", "ip", "ip_filter", "ips", "ips_to_strs", "ipv6", "ipv6_filter", "is_ext", "isinstance", "k", "key", "kwargs", "l3_lib", "label", "len", "list", "logging", "mac", "mac_address", "macs", "manager", "math", "messaging", "model_ip", "mtu", "multi_host", "n", "name", "net", "net_dict", "net_id", "net_info", "netaddr", "nets", "netutils", "network", "network_api", "network_dict", "network_driver", "network_id", "network_ids", "network_model", "network_ref", "network_rpcapi", "network_size", "network_uuid", "network_uuids", "networks", "networks_list", "next_subnet", "nova", "now", "num", "num_ips", "num_networks", "num_used_nets", "nw_info", "obj_base", "object", "objects", "openstack_driver", "oversize_msg", "parent_reserved", "periodic_task", "pool", "prefixlen_v4", "prefixlen_v6", "project", "project_id", "property", "quota_project", "quota_user", "quotas", "quotas_obj", "range", "re", "read_deleted_context", "request", "requested_networks", "require_disassociated", "required_create_args", "reserved", "results", "rxtx_factor", "self", "service", "servicegroup", "servicegroup_api", "set", "share_address", "shared", "six", "source", "start", "staticmethod", "str", "strutils", "subnet", "subnet_bits", "subnet_dict", "subnet_object", "subnet_v4", "subnet_v6", "subnets", "subnets_v4", "subnets_v6", "super", "tag", "tags_by_network", "target", "teardown", "time", "timeout", "timeout_fixed_ips", "timeutils", "top_reserved", "usages", "used", "used_subnet", "used_subnets", "used_vlans", "utils", "uuid", "uuidutils", "val", "value", "vif", "vif_address", "vif_id", "vifs", "vlan", "vlan_num", "vpn", "vpn_address", "x", "Calls", "allocate_fixed_ip", "once", "for", "each", "network.\nGet", "the", "proper", "dhcp", "address", "to", "listen", "on.\nBroker", "the", "request", "to", "the", "driver", "to", "fetch", "the", "dhcp", "leases.\nSafely", "sets", "the", "host", "of", "the", "network.\nDetermine", "&", "return", "which", "networks", "an", "instance", "should", "connect", "to.\nReturns", "the", "dict", "representing", "necessary", "and", "meta", "network", "fields.\nReturns", "the", "1", "or", "2", "possible", "subnets", "for", "a", "nova", "network.\nGenerates", "mac", "addresses", "and", "creates", "vif", "rows", "in", "db", "for", "them.\nAdds", "a", "fixed", "IP", "to", "an", "instance", "from", "specified", "network.\nReturn", "backdoor", "port", "for", "eventlet_backdoor.\nRemoves", "a", "fixed", "IP", "from", "an", "instance", "from", "specified", "network.\nGets", "a", "fixed", "IP", "from", "the", "pool.\nReturns", "a", "fixed", "IP", "to", "the", "pool.\nCalled", "by", "dhcp-bridge", "when", "IP", "is", "leased.\nCalled", "by", "dhcp-bridge", "when", "IP", "is", "released.\nCreate", "networks", "based", "on", "parameters.\nNumber", "of", "reserved", "IPs", "at", "the", "bottom", "of", "the", "range.\nNumber", "of", "reserved", "IPs", "at", "the", "top", "of", "the", "range.\nCreate", "all", "fixed", "IPs", "for", "network.\nCalls", "allocate_fixed_ip", "once", "for", "each", "network.\ncalls", "setup/teardown", "on", "network", "hosts", "for", "an", "instance.\nSets", "up", "network", "on", "this", "host.\nSets", "up", "network", "on", "this", "host.\nReturns", "the", "vifs", "associated", "with", "an", "instance.\nReturns", "the", "instance", "id", "a", "floating", "IP's", "fixed", "IP", "is", "allocated", "to.\nReturn", "a", "fixed", "IP.\nReturns", "the", "vifs", "record", "for", "the", "mac_address.\nUpdate", "local", "DNS", "entries", "of", "all", "networks", "on", "this", "host.\nCalled", "when", "fixed", "IP", "is", "allocated", "or", "deallocated.\nCalls", "allocate_fixed_ip", "once", "for", "each", "network.\nReturns", "a", "fixed", "IP", "to", "the", "pool.\nSetup", "Network", "on", "this", "host.\nTear", "down", "network", "on", "this", "host.\nReturns", "a", "floating", "IP", "as", "a", "dict.\nReturns", "list", "of", "floating", "pools.\nReturns", "list", "of", "floating", "IP", "pools.\nReturns", "a", "floating", "IP", "as", "a", "dict.\nReturns", "the", "floating", "IPs", "allocated", "to", "a", "project.\nReturns", "the", "floating", "IPs", "associated", "with", "a", "fixed_address.\nGets", "a", "floating", "IP", "from", "the", "pool.\nReturns", "a", "floating", "IP", "to", "the", "pool.\nCalled", "when", "fixed", "IP", "is", "allocated", "or", "deallocated.\nSets", "up", "network", "on", "this", "host.\nReturns", "the", "dict", "representing", "necessary", "and", "meta", "network", "fields.\nGets", "a", "fixed", "IP", "from", "the", "pool.\nForce", "adds", "another", "network", "to", "a", "project.\nAssociate", "or", "disassociate", "host", "or", "project", "to", "network.\nDetermine", "which", "networks", "an", "instance", "should", "connect", "to.\nCreate", "networks", "based", "on", "parameters.\nSets", "up", "network", "on", "this", "host.\nReturns", "the", "dict", "representing", "necessary", "and", "meta", "network", "fields.\nNumber", "of", "reserved", "IPs", "at", "the", "bottom", "of", "the", "range.\nNumber", "of", "reserved", "IPs", "at", "the", "top", "of", "the", "range.", "NOTE(vish):", "if", "we", "are", "not", "multi_host", "pass", "to", "the", "network", "host\n", "NOTE(tr3buchet):", "but", "if", "we", "are,", "host", "came", "from", "instance.host\n", "NOTE(vish):", "if", "there", "is", "no", "network", "host,", "set", "one\n", "need", "to", "call", "allocate_fixed_ip", "to", "correct", "network", "host\n", "i", "am", "the", "correct", "host,", "run", "here\n", "wait", "for", "all", "of", "the", "allocates", "(if", "any)", "to", "finish\n", "NOTE(vish):", "if", "we", "are", "not", "multi_host", "pass", "to", "the", "network", "host\n", "NOTE(tr3buchet):", "but", "if", "we", "are,", "host", "came", "from", "instance.host\n", "NOTE(vish):", "deallocate", "the", "fixed", "ip", "locally\n", "NOTE(vish):", "deallocate", "the", "fixed", "ip", "locally", "but", "don't\n", "teardown", "network", "devices\n", "If", "True,", "this", "manager", "requires", "VIF", "to", "create", "a", "bridge.\n", "If", "True,", "this", "manager", "requires", "VIF", "to", "create", "VLAN", "tag.\n", "if", "True,", "this", "manager", "leverages", "DHCP\n", "NOTE(vish):", "If", "we", "are", "sharing", "the", "dhcp_address", "then", "we", "can", "just\n", "return", "the", "dhcp_server", "from", "the", "database.\n", "NOTE(vish):", "Set", "up", "networks", "for", "which", "this", "host", "already", "has\n", "an", "ip", "address.\n", "TODO(mriedem):", "Remove", "this", "compat", "shim", "when", "network", "RPC", "API", "version\n", "1.0", "is", "dropped.\n", "NOTE(francois.charlier):", "the", "instance", "may", "have", "been", "deleted", "already\n", "thus", "enabling", "`read_deleted`\n", "NOTE(vish):", "We", "need", "to", "make", "sure", "the", "instance", "info", "cache", "has", "been\n", "updated", "with", "new", "ip", "info", "before", "we", "trigger", "the\n", "security", "group", "refresh.", "This", "is", "somewhat", "inefficient\n", "but", "avoids", "doing", "some", "dangerous", "refactoring", "for", "a\n", "bug", "fix.\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "in", "version", "2.0", "of", "the", "RPC", "API\n", "NOTE(jkoelker)", "Should", "probably", "figure", "out", "a", "better", "way", "to", "do\n", "this.", "But", "for", "now", "it", "\"works\",", "this", "could", "suck", "on\n", "large", "installs.\n", "TODO(tr3buchet)", "maybe", "this", "needs", "to", "be", "updated", "in", "the", "future", "if\n", "there", "is", "a", "better", "way", "to", "determine", "which", "networks\n", "a", "non-vlan", "instance", "should", "connect", "to\n", "return", "only", "networks", "which", "are", "not", "vlan", "networks\n", "If", "we", "fail", "to", "allocate", "any", "one", "mac", "address,", "clean", "up", "all\n", "allocated", "VIFs\n", "NOTE(francois.charlier):", "in", "some", "cases", "the", "instance", "might", "be\n", "deleted", "before", "the", "IPs", "are", "released,", "so", "we", "need", "to", "get", "deleted\n", "instances", "too\n", "NOTE(russellb)", "in", "case", "instance_id", "was", "an", "ID", "and", "not", "UUID\n", "NOTE(obondarev):", "Temporary", "and", "transitional\n", "deallocate", "fixed", "ips\n", "deallocate", "vifs", "(mac", "addresses)\n", "NOTE(vish):", "I", "strongly", "suspect", "the", "v6", "subnet", "is", "not", "used\n", "anywhere,", "but", "support", "it", "just", "in", "case\n", "add", "the", "v6", "address", "to", "the", "v6", "subnet\n", "add", "the", "v4", "address", "to", "the", "v4", "subnet\n", "get", "generic", "network", "fields\n", "get", "extra", "information\n", "TODO(tr3buchet):", "I'm", "noticing", "we've", "assumed", "here", "that", "all", "dns", "is", "v4.\n", "this", "is", "probably", "bad", "as", "there", "is", "no", "way", "to", "add", "v6\n", "dns", "to", "nova\n", "deal", "with", "dhcp\n", "add", "dns", "info\n", "make", "a", "copy", "we", "can", "mutate\n", "Try", "again", "up", "to", "max", "number", "of", "attempts\n", "NOTE(russellb)", "This", "method", "can", "be", "removed", "in", "2.0", "of", "this", "API.", "It", "is\n", "deprecated", "in", "favor", "of", "the", "method", "in", "the", "base", "API.\n", "NOTE(vish):", "this", "probably", "isn't", "a", "dhcp", "ip", "so", "just\n", "deallocate", "it", "now.", "In", "the", "extremely", "rare\n", "case", "that", "this", "is", "a", "race", "condition,", "we\n", "will", "just", "get", "a", "warn", "in", "lease", "or", "release.\n", "TODO(vish):", "when", "this", "is", "called", "by", "compute,", "we", "can", "associate", "compute\n", "with", "a", "network,", "or", "a", "cluster", "of", "computes", "with", "a", "network\n", "and", "use", "that", "network", "here", "with", "a", "method", "like\n", "network_get_by_compute_host\n", "NOTE(vish)", "This", "db", "query", "could", "be", "removed", "if", "we", "pass", "az", "and", "name\n", "(or", "the", "whole", "instance", "object).\n", "A", "list", "of", "cleanup", "functions", "to", "call", "on", "error\n", "Check", "the", "quota;", "can't", "put", "this", "in", "the", "API", "because", "we", "get\n", "called", "into", "from", "other", "places\n", "NOTE(mriedem):", "allocate", "the", "vif", "before", "associating", "the\n", "instance", "to", "reduce", "a", "race", "window", "where", "a", "previous", "instance\n", "was", "associated", "with", "the", "fixed", "IP", "and", "has", "released", "it,", "because\n", "release_fixed_ip", "will", "disassociate", "if", "allocated", "is", "False.\n", "noqa\n", "TODO(mriedem):", "should", "_setup_network_on_host", "return", "the", "addr?\n", "NOTE(vish)", "This", "db", "query", "could", "be", "removed", "if", "we", "pass", "az", "and", "name\n", "(or", "the", "whole", "instance", "object).\n", "NOTE(danms)", "We", "can't", "use", "fixed_ip_ref.instance", "because\n", "instance", "may", "be", "deleted", "and", "the", "relationship\n", "doesn't", "extend", "to", "deleted", "instances\n", "NOTE(vish):", "The", "below", "errors", "should", "never", "happen,", "but\n", "there", "may", "be", "a", "race", "condition", "that", "is", "causing\n", "them", "per\n", "https://code.launchpad.net/bugs/968457,\n", "so", "we", "log", "a", "message", "to", "help", "track", "down\n", "the", "possible", "race.\n", "NOTE(cfb):", "Call", "teardown", "before", "release_dhcp", "to", "ensure\n", "that", "the", "IP", "can't", "be", "re-leased", "after", "a", "release\n", "packet", "is", "sent.\n", "NOTE(vish):", "This", "forces", "a", "packet", "so", "that", "the\n", "release_fixed_ip", "callback", "will\n", "get", "called", "by", "nova-dhcpbridge.\n", "Fall", "back", "on", "previous", "behaviour", "of", "calling\n", "release_dhcp", "on", "the", "local", "driver\n", "NOTE(yufang521247):", "This", "is", "probably", "a", "failed", "dhcp", "fixed\n", "ip.", "DHCPRELEASE", "packet", "sent", "to", "dnsmasq", "would", "not", "trigger\n", "dhcp-bridge", "to", "run.", "Thus", "it", "is", "better", "to", "disassociate\n", "such", "fixed", "ip", "here.\n", "We", "can't", "try", "to", "free", "the", "IP", "address", "so", "just", "call", "teardown\n", "Commit", "the", "reservations\n", "NOTE(mriedem):", "Sometimes", "allocate_fixed_ip", "will", "associate", "the\n", "fixed", "IP", "to", "a", "new", "instance", "while", "an", "old", "associated", "instance", "is\n", "being", "deallocated.", "So", "we", "check", "to", "see", "if", "the", "mac", "is", "for", "the", "VIF\n", "that", "is", "associated", "to", "the", "instance", "that", "is", "currently", "associated\n", "with", "the", "fixed", "IP", "because", "if", "it's", "not,", "we", "hit", "this", "race", "and\n", "should", "ignore", "the", "request", "so", "we", "don't", "disassociate", "the", "fixed", "IP\n", "from", "the", "wrong", "instance.\n", "NOTE(vish):", "just", "for", "validation\n", "Subnet", "of", "fixed", "IPs", "must", "fall", "within", "fixed", "range\n", "NOTE(jkoelker):", "these", "are", "dummy", "values", "to", "make", "sure", "iter", "works\n", "TODO(tr3buchet):", "disallow", "carving", "up", "networks\n", "smallest", "subnet", "in", "IPv6", "ethernet", "network", "is", "/64\n", "NOTE(jkoelker):", "This", "replaces", "the", "_validate_cidrs", "call", "and\n", "prevents", "looping", "multiple", "times\n", "use", "a", "pre-defined", "gateway", "if", "one", "is", "provided\n", "That", "vlan", "is", "used,", "try", "to", "get", "another", "one\n", "NOTE(vish):", "This", "makes", "ports", "unique", "across", "the", "cloud,", "a", "more\n", "robust", "solution", "would", "be", "to", "make", "them", "uniq", "per", "ip\n", "NOTE(danms):", "Remove", "this", "in", "RPC", "API", "v2.0\n", "Prefer", "uuid", "but", "we'll", "also", "take", "cidr", "for", "backwards", "compatibility\n", "network,", "gateway\n", "broadcast\n", "NOTE", "(tr3buchet):", "if", "using", "multi_host,", "host", "is", "instance.host\n", "at", "this", "point", "i", "am", "the", "correct", "host,", "or", "host", "doesn't\n", "matter", "->", "FlatManager\n", "i'm", "not", "the", "right", "host,", "run", "call", "on", "correct", "host\n", "wait", "for", "all", "of", "the", "setups", "(if", "any)", "to", "finish\n", "subcall", "from", "original", "setup_networks_on_host\n", "check", "if", "the", "fixed", "IP", "address", "is", "valid", "and\n", "it", "actually", "belongs", "to", "the", "network\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(russellb)", "No", "need", "to", "object-ify", "this", "since\n", "get_vifs_by_instance()", "is", "unused", "and", "set", "to", "be", "removed.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "used", "locally\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(russellb)", "No", "need", "to", "object-ify", "this", "since\n", "get_vifs_by_instance()", "is", "unused", "and", "set", "to", "be", "removed.\n", "NOTE(tr3buchet):", "this", "does", "not", "need", "to", "happen", "on", "every", "ip\n", "allocation,", "this", "functionality", "makes", "more", "sense", "in", "create_network\n", "but", "we'd", "have", "to", "move", "the", "flat_injected", "flag", "to", "compute\n", "NOTE(justinsb):", "The", "floating", "ip", "functions", "are", "stub-implemented.\n", "We", "were", "throwing", "an", "exception,", "but", "this", "was", "messing", "up", "horizon.\n", "Timing", "makes", "it", "difficult", "to", "implement", "floating", "ips", "here,", "in", "Essex.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(maurosr)", "This", "method", "should", "be", "removed", "in", "future,", "replaced", "by\n", "get_floating_ip_pools.", "See", "bug", "#1091668\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "in", "version", "2.0", "of", "the", "RPC", "API\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "in", "version", "2.0", "of", "the", "RPC", "API\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "in", "version", "2.0", "of", "the", "RPC", "API\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "in", "version", "2.0", "of", "the", "RPC", "API\n", "NOTE(vish):", "if", "dhcp", "server", "is", "not", "set", "then", "don't", "dhcp\n", "NOTE(dprince):", "dhcp", "DB", "queries", "require", "elevated", "context\n", "NOTE(vish):", "if", "dhcp", "server", "is", "not", "set", "then", "don't", "dhcp\n", "NOTE(dprince):", "dhcp", "DB", "queries", "require", "elevated", "context\n", "get", "generic", "network", "fields\n", "get", "flat", "dhcp", "specific", "fields\n", "NOTE(cfb)", "VlanManager", "doesn't", "enforce", "quotas", "on", "fixed", "IP", "addresses\n", "because", "a", "project", "is", "assigned", "an", "entire", "network.\n", "NOTE(mriedem):", "allocate", "the", "vif", "before", "associating", "the\n", "instance", "to", "reduce", "a", "race", "window", "where", "a", "previous", "instance\n", "was", "associated", "with", "the", "fixed", "IP", "and", "has", "released", "it,", "because\n", "release_fixed_ip", "will", "disassociate", "if", "allocated", "is", "False.\n", "NOTE(vish)", "This", "db", "query", "could", "be", "removed", "if", "we", "pass", "az", "and", "name\n", "(or", "the", "whole", "instance", "object).\n", "NOTE(vish):", "This", "is", "no", "longer", "used", "but", "can't", "be", "removed", "until\n", "we", "major", "version", "the", "network_rpcapi", "to", "2.0.\n", "NOTE(vish):", "Don't", "allow", "access", "to", "networks", "with", "project_id=None", "as\n", "these", "are", "networks", "that", "haven't", "been", "allocated", "to", "a\n", "project", "yet.\n", "NOTE(vish):", "Don't", "allow", "access", "to", "networks", "with", "project_id=None", "as\n", "these", "are", "networks", "that", "haven't", "been", "allocated", "to", "a\n", "project", "yet.\n", "get", "networks", "associated", "with", "project\n", "NOTE(vish):", "Allocates", "network", "on", "demand", "so", "requires", "admin.\n", "Check", "that", "num_networks", "+", "vlan_start", "is", "not", ">", "4094,", "fixes", "lp708025\n", "Check", "that", "vlan", "is", "not", "greater", "than", "4094", "or", "less", "then", "1\n", "check", "that", "num", "networks", "and", "network", "size", "fits", "in", "fixed_net\n", "NOTE(vish):", "only", "ensure", "this", "forward", "if", "the", "address", "hasn't", "been", "set\n", "manually.\n", "NOTE(dprince):", "dhcp", "DB", "queries", "require", "elevated", "context\n", "NOTE(ethuleau):", "For", "multi", "hosted", "networks,", "if", "the", "network", "is", "no\n", "more", "used", "on", "this", "host", "and", "if", "VPN", "forwarding", "rule", "aren't", "handed\n", "by", "the", "host,", "we", "delete", "the", "network", "gateway.\n", "NOTE(vish):", "if", "dhcp", "server", "is", "not", "set", "then", "don't", "dhcp\n", "NOTE(dprince):", "dhcp", "DB", "queries", "require", "elevated", "context\n", "get", "generic", "network", "fields\n", "get", "vlan", "specific", "network", "fields\n", "vpn", "server"], "/Users/mehranhassani/repos/nova/nova/virt/disk/mount/nbd.py": ["CONF", "False", "LOG", "NBD_DEVICE_RE", "None", "True", "_", "_LE", "_LI", "_LW", "__name__", "_i", "_out", "api", "device", "devices", "err", "filter", "logging", "mode", "nova", "os", "pidfile", "random", "range", "re", "self", "time", "utils", "Support", "for", "mounting", "images", "with", "qemu-nbd.\nqemu-nbd", "support", "disk", "images.\nDetect", "nbd", "device", "files.\nRetry", "requests", "for", "NBD", "devices.\nflush", "NBD", "block", "device", "buffer.", "really", "want", "to", "log", "this", "info,", "not", "raise\n", "NOTE(mikal):", "qemu-nbd", "will", "return", "an", "error", "if", "the", "device", "file", "is\n", "already", "in", "use.\n", "NOTE(vish):", "this", "forks", "into", "another", "process,", "so", "give", "it", "a", "chance\n", "to", "set", "up", "before", "continuing\n", "Cleanup\n", "Perform", "an", "explicit", "BLKFLSBUF", "to", "support", "older", "qemu-nbd(s).\n", "Without", "this", "flush,", "when", "a", "nbd", "device", "gets", "re-used", "the\n", "qemu-nbd", "intermittently", "hangs."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/test_api_version_request.py": ["TypeError", "ValueError", "_test_string", "api_version_request", "exception", "exp_major", "exp_minor", "fakes", "req", "self", "test", "v", "v_null", "vers1", "vers1_string", "vers2", "vers3", "vers4", "vers5", "vers6", "vers7", "vers8", "version"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_matchers.py": ["False", "None", "OrderedDict", "True", "describe_examples", "helpers", "matchers", "matches_dict", "matches_matcher", "matches_matches", "matches_mismatches", "pprint", "sorted", "str", "str_examples", "testtools"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_vmops.py": ["CONF", "FAKE_CONFIG_DRIVE_ISO", "FAKE_CONFIG_DRIVE_VHD", "FAKE_DIR", "FAKE_LOG", "FAKE_ROOT_PATH", "FAKE_SIZE", "FAKE_UUID", "False", "ISO9660", "None", "True", "VMOpsTestCase", "_FAKE_CONFIGDRIVE_PATH", "_FAKE_TIMEOUT", "_WIN_VERSION_10", "_WIN_VERSION_6_3", "_context_user", "attr", "block_device_info", "boot_from_volume", "calls", "cfg", "config_drive_cdrom", "config_drive_format", "configdrive_required", "constants", "dict", "differencing_vhd", "disk_format", "disk_name", "disk_path", "enable_instance_metrics", "enable_secure_boot", "ephemerals", "etimeout", "events", "exception", "exists", "expected", "expected_call", "expected_calls", "expected_exc", "expected_exception", "expected_get_configdrive_path_calls", "expected_metadata", "expected_pipe", "expected_result", "expected_specs", "extra_specs", "fail", "fake_check_win_vers", "fake_config_drive_path", "fake_ephemerals", "fake_get_configdrive_path", "fake_info", "fake_instance", "fake_instance_dir", "fake_instance_disks", "fake_local_disks", "fake_network_info", "fake_paths", "fake_root_path", "fake_total_bytes_sec", "fake_total_iops_sec", "fake_uuid", "fake_vhd_path", "fake_vif", "fake_vm", "fake_vm_gen", "fields", "fileutils", "flavor", "flavor_obj", "flavor_secure_boot", "get_size", "getattr", "getitem", "hardware", "image_meta", "image_prop_os_type", "image_prop_secure_boot", "image_vm_gen", "inst", "instance", "instance_info", "instance_name", "instance_path", "int", "is_neutron", "is_rescue_configdrive", "is_rescue_vhd", "key", "mock", "mock_ConfigDriveBuilder", "mock_InstanceDeviceMetadata", "mock_InstanceMetadata", "mock_NetworkInterfaceMetadata", "mock_PCIDevBus", "mock_attach_config_drive", "mock_attach_configdrive", "mock_attach_drive", "mock_attach_ephemerals", "mock_attach_root_device", "mock_attach_volume", "mock_attach_volumes", "mock_bytes_per_sec_to_iops", "mock_check_hotplug", "mock_check_hotplug_available", "mock_check_vm_image_type", "mock_configdrive_required", "mock_configure_remotefx", "mock_copy", "mock_create_config_drive", "mock_create_dynamic_vhd", "mock_create_ephemeral_disk", "mock_create_ephemerals", "mock_create_instance", "mock_create_pipes", "mock_create_root_device", "mock_create_root_vhd", "mock_create_scsi_ctrl", "mock_delete_disk_files", "mock_delete_if_exists", "mock_destroy", "mock_detach_config_drive", "mock_disconnect_volumes", "mock_enable", "mock_enable_remotefx", "mock_ephemeral_info", "mock_execute", "mock_fix_instance_vol_paths", "mock_get_boot_order", "mock_get_by_inst_uuid", "mock_get_cached_image", "mock_get_configdrive_path", "mock_get_dvd_disk_paths", "mock_get_events", "mock_get_image_vm_gen", "mock_get_instance_dir", "mock_get_local_disks", "mock_get_neutron_events", "mock_get_scoped_specs", "mock_get_state", "mock_get_storage_paths", "mock_get_summary_info", "mock_get_vif_metadata", "mock_get_vm_state", "mock_image_meta", "mock_import_object", "mock_info", "mock_instance", "mock_is_neutron", "mock_list_notes", "mock_local_disks", "mock_lookup_configdrive", "mock_make_drive", "mock_power_off", "mock_power_on", "mock_requires_certificate", "mock_requires_secure_boot", "mock_root_disk_info", "mock_save_device_metadata", "mock_serial_ports", "mock_set_boot_order", "mock_set_conn", "mock_set_qos_specs", "mock_set_state", "mock_set_vm_state", "mock_shutdown_vm", "mock_sleep", "mock_soft_shutdown", "mock_unrescue", "mock_validate_and_update_bdi", "mock_vif", "mock_vif_driver", "mock_vm_gen", "mock_wait_for_power_off", "mock_with_timeout", "network_info", "objects", "os", "os_type", "os_win_const", "os_win_exc", "overhead", "path", "path_iso", "path_vhd", "port_number", "port_type", "processutils", "reboot_type", "requires_sb", "rescue", "rescue_image_id", "response", "result", "ret_val", "root_device_info", "root_vhd_internal_size", "self", "serialops", "set_state_expected", "side_effect", "state", "summary_info", "super", "test_base", "test_flavor", "test_virtual_interface", "timeout", "units", "use_cow_images", "vhd_format", "vhd_size", "vif_metadata", "vm_exists", "vm_gen", "vm_state", "vm_states", "vmops", "volumeops", "windows_version", "wrong_vm_gen", "Unit", "tests", "for", "the", "Hyper-V", "VMOps", "class.", "Test", "the", "case", "when", "the", "rescue", "image", "requires", "a", "different\n", "vm", "generation", "than", "the", "actual", "rescued", "instance.\n", "Rescuing", "instances", "booted", "from", "volume", "is", "not", "supported.\n", "The", "flavor", "extra", "spect", "dict", "contains", "only", "string", "values."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/317_add_aggregate_uuid.py": ["Column", "Index", "MetaData", "String", "Table", "aggregates", "hasattr", "index", "meta", "migrate_engine", "table_prefix", "uuid_column", "Database", "migrations", "for", "resource-providers."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_livemigrationops.py": ["CONF", "False", "LiveMigrationOpsTestCase", "None", "True", "bdman", "cfg", "check_config", "fake_dest", "fake_instance", "len", "livemigrationops", "livemigrutils", "migr_data", "migrate_data", "migrate_data_arg", "migrate_data_obj", "migrate_data_received", "migrate_data_version", "mock", "mock_check_shared_inst_dir", "mock_copy_dvd_disk", "mock_copy_logs", "mock_disconnect_volumes", "mock_get_cached_image", "mock_get_disk_path_mapping", "mock_get_inst_dir", "mock_initialize_connection", "mock_instance", "mock_is_boot_from_vol", "mock_live_migr", "mock_migr_data_cls", "mock_post", "mock_recover", "mock_stop_console_handler", "os_win_exc", "phys_disks_attached", "post_call_args", "post_call_args_list", "self", "serialconsoleops", "shared_storage", "side_effect", "super", "test_base", "Unit", "tests", "for", "the", "Hyper-V", "LiveMigrationOps", "class.", "The", "last", "argument,", "the", "migrate_data", "object,", "should", "be", "created\n", "by", "the", "callee", "if", "not", "received."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/manage.py": ["__name__", "main"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/319_add_instances_deleted_created_at_index.py": ["INDEX_COLUMNS", "INDEX_NAME", "Index", "LOG", "MetaData", "None", "Table", "True", "_LI", "__name__", "_get_table_index", "col_name", "columns", "getattr", "idx", "index", "logging", "meta", "migrate_engine", "table"], "/Users/mehranhassani/repos/nova/nova/policies/image_metadata.py": ["POLICY_ROOT", "base", "image_metadata_policies", "policy"], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/nova_plugin_version.py": ["PLUGIN_VERSION", "__name__", "get_version", "session", "utils", "Returns", "the", "version", "of", "the", "nova", "plugins", "Copyright", "(c)", "2013", "OpenStack", "Foundation\n", "Copyright", "(c)", "2013", "Citrix", "Systems,", "Inc.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "MAJOR", "VERSION:", "Incompatible", "changes\n", "MINOR", "VERSION:", "Compatible", "changes,", "new", "plugins,", "etc\n", "NOTE(sfinucan):", "2.0", "will", "be", "equivalent", "to", "the", "last", "in", "the", "1.x", "stream\n", "1.0", "-", "Initial", "version.\n", "1.1", "-", "New", "call", "to", "check", "GC", "status\n", "1.2", "-", "Added", "support", "for", "pci", "passthrough", "devices\n", "1.3", "-", "Add", "vhd2", "functions", "for", "doing", "glance", "operations", "by", "url\n", "1.4", "-", "Add", "support", "of", "Glance", "v2", "api\n", "1.5", "-", "Added", "function", "for", "network", "configuration", "on", "ovs", "bridge\n", "1.6", "-", "Add", "function", "for", "network", "configuration", "on", "Linux", "bridge\n", "1.7", "-", "Add", "Partition", "utilities", "plugin\n", "1.8", "-", "Add", "support", "for", "calling", "plug-ins", "with", "the", ".py", "suffix"], "/Users/mehranhassani/repos/nova/nova/scheduler/filters/utils.py": ["LOG", "None", "_LI", "__name__", "aggr", "aggrlist", "based_on", "bool", "cast_to", "collections", "default", "host_instances", "host_state", "host_types", "host_uuids", "inst", "inst_set", "instance_type_id", "int", "isinstance", "k", "key", "key_name", "len", "logging", "metadata", "min", "num_values", "set", "set_uuids", "six", "uuids", "v", "val", "vals", "x", "Bench", "of", "utility", "methods", "used", "by", "filters.\nReturns", "a", "set", "of", "values", "based", "on", "a", "metadata", "key", "for", "a", "specific", "host.", "host_state.instances", "is", "a", "dict", "whose", "keys", "are", "the", "instance", "uuids"], "/Users/mehranhassani/repos/nova/nova/cells/rpcapi.py": ["CONF", "CellsAPI", "Exception", "False", "LOG", "None", "True", "VERSION_ALIASES", "_LE", "__name__", "action_id", "admin_state_reset", "args", "backup_type", "bdm", "bdm_p", "bdms", "binary", "block_device_info", "block_migration", "build_inst_kwargs", "bw_in", "bw_out", "bw_update_info", "call", "cast", "cctxt", "cell_name", "cell_service_id", "cells_utils", "clean_shutdown", "compute_id", "console_port", "console_type", "context", "create", "ctxt", "delete_type", "deleted", "device_name", "disk_over_commit", "do_cast", "exception", "expected_task_state", "expected_vm_state", "extra_instance_updates", "filter_properties", "filters", "flavor", "flavor_p", "host", "host_name", "hypervisor_match", "image_id", "image_ref", "injected_files", "inst", "instance", "instance_fault", "instance_fault_p", "instance_info_cache", "instance_uuid", "instances", "instances_p", "jsonutils", "keypair", "kwargs", "last_ctr_in", "last_ctr_out", "last_refreshed", "logging", "mac", "messaging", "method", "method_info", "migration", "msg_args", "msg_kwargs", "name", "new_pass", "nova", "object", "objects", "objects_base", "on_shared_storage", "orig_image_ref", "orig_sys_metadata", "params_to_update", "period_beginning", "period_ending", "preserve_ephemeral", "project_id", "reboot_type", "recreate", "request_id", "request_spec", "reservations", "rotation", "rpc", "rpc_message", "scheduler_hint", "self", "serializer", "start_period", "state", "super", "target", "task_name", "timeout", "topic", "updated_since", "user_id", "uuid", "values", "version", "version_cap", "volume_id", "Make", "a", "cast", "to", "a", "compute", "API", "method", "in", "a", "certain", "cell.\nMake", "a", "call", "to", "a", "compute", "API", "method", "in", "a", "certain", "cell.\nBuild", "instances.\nUpdate", "instance", "at", "API", "level.\nDestroy", "instance", "at", "API", "level.\nCreate", "an", "instance", "fault", "at", "the", "top.\nBroadcast", "upwards", "that", "bw_usage", "was", "updated.\nBroadcast", "up", "that", "an", "instance's", "info_cache", "has", "changed.\nGet", "information", "about", "our", "neighbor", "cells", "from", "the", "manager.\nAsk", "all", "cells", "to", "sync", "instance", "data.\nAsk", "all", "cells", "for", "their", "list", "of", "services.\nDeletes", "the", "specified", "service.\nGet", "the", "task", "logs", "from", "the", "DB", "in", "child", "cells.\nGet", "a", "compute", "node", "by", "ID", "in", "a", "specific", "cell.\nReturn", "compute", "node", "stats", "from", "all", "cells.\nDelete", "consoleauth", "tokens", "for", "an", "instance", "in", "API", "cells.\nValidate", "console", "port", "with", "child", "cell", "compute", "node.\nGet", "all", "migrations", "applying", "the", "filters.\nReset", "networking", "for", "an", "instance.\nInject", "networking", "for", "an", "instance.", "NOTE(sbauza):", "Yes,", "this", "is", "ugly", "but", "cells_utils", "is", "calling", "cells.db\n", "which", "itself", "calls", "cells.rpcapi...", "You", "meant", "import", "cycling", "?", "Gah.\n", "NOTE(sbauza):", "Since", "Cells", "v1", "is", "quite", "feature-frozen,", "we", "don't", "want\n", "to", "pass", "down", "request_spec", "to", "the", "manager", "and", "rather", "keep", "the\n", "cell", "conductor", "providing", "a", "new", "RequestSpec", "like", "the", "original\n", "behaviour\n", "NOTE(sbauza):", "Since", "Cells", "v1", "is", "quite", "feature-freeze,", "we", "don't", "want\n", "to", "pass", "down", "request_spec", "to", "the", "manager", "and", "rather", "keep", "the\n", "cell", "conductor", "providing", "a", "new", "RequestSpec", "like", "the", "original\n", "behaviour\n", "NOTE(comstud):", "This", "is", "only", "used", "in", "the", "API", "cell", "where", "we", "should\n", "always", "cast", "and", "ignore", "the", "'cast'", "kwarg.\n", "Also,", "the", "compute", "api", "method", "normally", "takes", "an", "optional\n", "'migration_ref'", "argument.", "But", "this", "is", "only", "used", "from", "the", "manager\n", "back", "to", "the", "API...", "which", "would", "happen", "in", "the", "child", "cell.\n", "NOTE(sbauza):", "Since", "Cells", "v1", "is", "quite", "feature-freeze,", "we", "don't", "want\n", "to", "pass", "down", "request_spec", "to", "the", "manager", "and", "rather", "keep", "the\n", "cell", "conductor", "providing", "a", "new", "RequestSpec", "like", "the", "original\n", "behaviour"], "/Users/mehranhassani/repos/nova/nova/conf/database.py": ["False", "True", "_DEFAULT_SQL_CONNECTION", "alt_db_opt", "alt_db_opts", "api_db_group", "api_db_opts", "cfg", "conf", "db_driver_opt", "db_opt", "db_opts", "enrich_help_text", "get_db_opts", "group_name", "oslo_db_options", "paths", "placement_db_group", "placement_db_opts", "NOTE(sdague):", "we", "know", "of", "at", "least", "1", "instance", "of", "out", "of", "tree", "usage\n", "for", "this", "config", "in", "RAX.", "They", "used", "this", "because", "of", "performance", "issues\n", "with", "some", "queries.", "We", "think", "the", "right", "path", "forward", "is", "fixing", "the\n", "SQLA", "queries", "to", "be", "more", "performant", "for", "everyone.\n", "NOTE(markus_z):", "We", "cannot", "simply", "do:\n", "conf.register_opts(oslo_db_options.database_opts,", "'api_database')\n", "If", "we", "reuse", "a", "db", "config", "option", "for", "two", "different", "groups", "(\"api_database\"\n", "and", "\"database\")", "and", "deprecate", "or", "rename", "a", "config", "option", "in", "one", "of", "these\n", "groups,", "\"oslo.config\"", "cannot", "correctly", "determine", "which", "one", "to", "update.\n", "That's", "why", "we", "copied", "&", "pasted", "these", "config", "options", "for", "the", "\"api_database\"\n", "group", "here.", "See", "commit", "ba407e3", "(\"Add", "support", "for", "multiple", "database", "engines\")\n", "for", "more", "details.\n", "TODO(markus_z):", "This", "should", "probably", "have", "a", "required=True", "attribute\n", "TODO(markus_z):", "We", "should", "probably", "default", "this", "to", "5", "to", "not", "rely", "on", "the\n", "SQLAlchemy", "default.", "Otherwise", "we", "wouldn't", "provide", "a", "stable", "default.\n", "TODO(markus_z):", "This", "should", "have", "a", "minimum", "attribute", "of", "0\n", "TODO(markus_z):", "We", "should", "probably", "default", "this", "to", "10", "to", "not", "rely", "on", "the\n", "SQLAlchemy", "default.", "Otherwise", "we", "wouldn't", "provide", "a", "stable", "default.\n", "TODO(markus_z):", "This", "should", "probably", "make", "use", "of", "the", "\"choices\"", "attribute.\n", "\"oslo.db\"", "uses", "only", "the", "values", "[<0,", "0,", "50,", "100]", "see", "module\n", "/oslo_db/sqlalchemy/engines.py", "method", "\"_setup_logging\"\n", "TODO(markus_z):", "We", "should", "probably", "default", "this", "to", "30", "to", "not", "rely", "on", "the\n", "SQLAlchemy", "default.", "Otherwise", "we", "wouldn't", "provide", "a", "stable", "default.\n", "noqa\n", "NOTE(markus_z):", "We", "can", "append", "alternative", "DB", "specific", "help\n", "texts", "here", "if", "needed.\n", "NOTE(cdent):", "See", "the", "note", "above", "on", "api_db_opts.", "The", "same", "issues\n", "apply", "here.\n", "TODO(rpodolyaka):", "see", "the", "notes", "on", "help", "messages", "on", "api_db_opts", "above,", "those\n", "also", "apply", "here\n", "noqa\n", "NOTE(markus_z):", "2016-04-04:", "If", "we", "list", "the", "oslo_db_options", "here,", "they\n", "get", "emitted", "twice(!)", "in", "the", "\"sample.conf\"", "file.", "First", "under", "the\n", "namespace", "\"nova.conf\"", "and", "second", "under", "the", "namespace", "\"oslo.db\".", "This\n", "is", "due", "to", "the", "setting", "in", "file", "\"etc/nova/nova-config-generator.conf\".\n", "As", "I", "think", "it", "is", "useful", "to", "have", "the", "\"oslo.db\"", "namespace", "information\n", "in", "the", "\"sample.conf\"", "file,", "I", "omit", "the", "listing", "of", "the", "\"oslo_db_options\"\n", "here."], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_hosts.py": ["HOST_LIST", "HOST_LIST_NOVA_ZONE", "OS_API_HOST_LIST", "SERVICES_LIST", "dict", "service_base", "test_service"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/242_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/migration.py": ["Exception", "False", "LOG", "None", "True", "_", "_LI", "_LW", "__name__", "_update_graphics_xml", "_update_perf_events_xml", "_update_serial_xml", "_update_volume_xml", "active_migrations", "bdm_info", "bdm_info_by_serial", "cnt", "completion_timeout", "conf", "current_data_remaining", "deque", "dev", "device", "disk_dev", "disk_nodes", "downtime_steps", "e", "elapsed", "enumerate", "etree", "event", "ex", "get_volume_config", "gr_type", "graphics_listen_addrs", "guest", "host", "info", "instance", "int", "is_post_copy_enabled", "item_dst", "item_src", "len", "libvirt", "list", "listen_addr", "listen_addrs", "listen_ports", "listen_tag", "logging", "memory_iteration", "migrate_bdm_info", "migrate_data", "migration", "migration_status", "new_event", "now", "old_xml_has_perf", "olddowntime", "on_migration_failure", "parser", "perf_events", "port_index", "ports", "pos", "power_state", "previous_data_remaining", "progress_percentage", "progress_time", "progress_timeout", "remaining", "round", "serial_dest", "serial_listen_addr", "serial_listen_ports", "serial_source", "set_listen_addr_and_port", "source", "state", "step", "str", "supported_perf_events", "target", "task", "tasks", "thisstep", "trigger_postcopy_switch", "x", "xml_doc", "xml_doc2", "Returns", "listen", "addresses", "of", "vnc/spice", "from", "a", "LibvirtLiveMigrateData\nReturns", "listen", "address", "serial", "from", "a", "LibvirtLiveMigrateData\nReturns", "ports", "serial", "from", "a", "LibvirtLiveMigrateData\nUpdate", "XML", "using", "device", "information", "of", "destination", "host.\nUpdate", "XML", "by", "the", "supported", "events", "of", "destination", "host.", "TODO(berrange):", "hack", "to", "avoid", "a", "\"import", "libvirt\"", "in", "this", "file.\n", "Remove", "this", "and", "similar", "hacks", "in", "guest.py,", "driver.py,", "host.py\n", "etc", "in", "Ocata.\n", "NOTE", "(markus_z/dansmith):", "Our", "own", "from_legacy_dict()", "code", "can", "return\n", "an", "object", "with", "nothing", "set", "here.", "That", "can", "happen", "based", "on", "the\n", "compute", "RPC", "version", "pin.", "Until", "we", "can", "bump", "that", "major", "(which", "we\n", "can", "do", "just", "before", "Ocata", "releases),", "we", "may", "still", "get", "a", "legacy\n", "dict", "over", "the", "wire,", "converted", "to", "an", "object,", "and", "thus", "is", "may", "be", "unset\n", "here.\n", "NOTE", "(markus_z):", "The", "value", "of", "'serial_listen_addr'", "is", "either\n", "an", "IP", "address", "(as", "string", "type)", "or", "None.", "There's", "no", "need", "of", "a\n", "conversion,", "in", "fact,", "doing", "a", "string", "conversion", "of", "None", "leads", "to\n", "'None',", "which", "is", "an", "invalid", "(string", "type)", "value", "here.\n", "TODO(sahid):", "remove", "me", "for", "Q*\n", "change", "over", "listen", "addresses\n", "The", "XML", "nodes", "can", "be", "empty,", "which", "would", "make", "checks", "like\n", "\"if", "source.get('host'):\"", "different", "to", "an", "explicit", "check", "for\n", "None.", "That's", "why", "we", "have", "to", "check", "for", "None", "in", "this", "method.\n", "NOTE", "(markus_z):", "Previous", "releases", "might", "not", "give", "us", "the\n", "ports", "yet,", "that's", "why", "we", "have", "this", "check", "here.\n", "This", "updates", "all", "\"LibvirtConfigGuestSerial\"", "devices\n", "This", "updates", "all", "\"LibvirtConfigGuestConsole\"", "devices\n", "Update", "volume", "xml\n", "Compare", "source", "serial", "and", "destination", "serial", "number.\n", "If", "these", "serial", "numbers", "match,", "continue", "the", "process.\n", "If", "source", "and", "destination", "have", "same", "item,", "update\n", "the", "item", "using", "destination", "value.\n", "If", "destination", "has", "additional", "items,", "thses", "items", "should", "be\n", "added", "here.\n", "remove", "perf", "events", "from", "xml\n", "add", "supported", "perf", "events\n", "If", "migration", "progress", "is", "less", "than", "10%", "per", "iteration", "after", "the\n", "first", "memory", "page", "copying", "pass,", "the", "migration", "is", "switched", "to\n", "postcopy", "mode\n", "The", "fully", "detailed", "stats\n", "The", "coarse", "%", "completion", "stats\n", "NOTE(ltomas):", "Change", "the", "migration", "status", "to", "indicate", "that\n", "it", "is", "in", "post-copy", "active", "mode,", "i.e.,", "the", "VM", "at\n", "destination", "is", "the", "active", "one\n", "NOTE(tdurakov):", "there", "is", "still", "possibility", "to", "leave\n", "instance", "paused", "in", "case", "of", "live-migration", "failure.\n", "This", "check", "guarantee", "that", "instance", "will", "be", "resumed\n", "in", "this", "case"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/234_add_expire_reservations_index.py": ["Index", "LOG", "MetaData", "Table", "True", "_LI", "__name__", "_get_deleted_expire_index", "idx", "index", "logging", "members", "meta", "migrate_engine", "reservations", "sorted", "table", "Based", "on", "expire_reservations", "query\n", "from:", "nova/db/sqlalchemy/api.py"], "/Users/mehranhassani/repos/nova/tools/xenserver/populate_other_config.py": ["CONF", "False", "__name__", "cfg", "cli_opts", "config", "instance", "instance_uuid", "main", "name_label", "os", "other_config", "possible_topdir", "session", "sys", "uuidutils", "vdi_rec", "vdi_ref", "vdi_refs", "vdi_type", "virtapi", "vm_utils", "xenapi", "xenapi_driver", "Copyright", "2013", "OpenStack", "Foundation\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");\n", "you", "may", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.\n", "You", "may", "obtain", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,\n", "WITHOUT", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.\n", "See", "the", "License", "for", "the", "specific", "language", "governing", "permissions", "and\n", "limitations", "under", "the", "License.\n", "Already", "set...\n", "We", "only", "want", "name-labels", "of", "form", "instance-<UUID>-[optional-suffix]\n", "Parse", "out", "UUID\n", "We", "don't", "need", "a", "full", "instance", "record,", "just", "the", "UUID"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_migrations.py": ["ADMIN_API", "False", "INSTANCE_UUID_1", "INSTANCE_UUID_2", "MigrationsSamplesJsonTest", "MigrationsSamplesJsonTestV2_23", "None", "True", "_stub_migrations", "api_sample_base", "context", "datetime", "fake_context", "fake_migrations", "filters", "microversion", "mig", "mig_obj", "objects", "response", "sample_dir", "scenarios", "self", "stub_self", "super", "NOTE(ShaoHe", "Feng)", "here", "I", "can", "not", "use", "uuidsentinel,", "it", "generate", "a", "random\n", "UUID.", "The", "uuid", "in", "doc/api_samples", "files", "is", "fixed.\n", "in-progress", "live-migration.\n", "non", "in-progress", "live-migration.\n", "non", "in-progress", "resize.\n", "in-progress", "resize."], "/Users/mehranhassani/repos/nova/nova/api/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_floating_ip_dns.py": ["ADMIN_API", "True", "api_sample_base", "dns_type", "domain", "ip", "name", "project", "response", "sample_dir", "scope", "self", "subs"], "/Users/mehranhassani/repos/nova/nova/conf/image_file_url.py": ["ALL_OPTS", "True", "cfg", "conf", "filesystem_opts", "filesystems", "fs", "group_name", "image_file_url_group", "NOTE(jbresnah)", "because", "the", "group", "under", "which", "these", "options", "are", "added", "is\n", "dynamically", "determined", "these", "options", "need", "to", "stay", "out", "of", "global", "space\n", "or", "they", "will", "confuse", "generate_sample.sh\n", "NOTE(markus_z):", "As", "the", "\"filesystem\"", "opt", "has", "an", "empty", "list", "as", "a", "default\n", "value", "and", "this", "value", "is", "necessary", "for", "a", "correct", "group", "name,", "we", "cannot\n", "list", "the", "\"filesystem_opts\"", "for", "the", "\"nova.conf.sample\"", "file", "here.", "A\n", "follow", "up", "patch", "will", "deprecate", "those.", "Due", "to", "their", "dynamic", "creation\n", "they", "never", "got", "shown", "in", "\"nova.conf.sample\"", "nor", "the", "config", "reference\n", "manual.", "I", "see", "no", "need", "to", "change", "this", "here", "with", "a", "dummy", "group", "or", "something\n", "like", "that."], "/Users/mehranhassani/repos/nova/nova/cells/filters/__init__.py": ["BaseCellFilter", "CellFilterHandler", "False", "NotImplementedError", "cell", "ctxt", "filter_properties", "filters", "name", "self", "super", "Base", "class", "for", "cell", "filters."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/305_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Liberty", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Mitaka", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/volume/encryptors/base.py": ["abc", "connection_info", "context", "keymgr", "kwargs", "object", "self", "six"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_smbfs.py": ["False", "LibvirtSMBFSVolumeDriverTestCase", "None", "conf", "connection_info", "expected_commands", "export_mnt_base", "export_string", "file_path", "libvirt_driver", "libvirt_utils", "mock", "mock_is_mounted", "options", "os", "self", "smbfs", "super", "test_volume", "tree", "utils", "Tests", "the", "libvirt", "SMBFS", "volume", "driver."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extended_hypervisors.py": ["DETAIL_HYPERS_DICTS", "ExtendedHypervisorsTestV21", "None", "True", "classmethod", "cls", "compute_id", "context", "copy", "dict", "exception", "fake_compute_node_get", "fake_compute_node_get_all", "fake_service_get_by_compute_host", "fakes", "host", "hyper", "hypervisors_v21", "int", "limit", "marker", "mock", "objects", "req", "result", "self", "service", "super", "test", "test_hypervisors"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_block_device_mapping_v1.py": ["BlockDeviceMappingTestV21", "CONF", "False", "None", "True", "args", "bdm", "bdm_v2", "block_device_mapping", "body", "both_controllers", "cfg", "compute_api", "controller", "create", "db", "exc", "exception", "expected_bdm", "expected_legacy_flag", "ext_info", "extension_info", "fake", "fake_bdm_meta", "fakes", "image_href", "jsonutils", "kwargs", "legacy_bdm", "mock", "mock_bdm_image_metadata", "mock_create", "mock_get_bdm_image_metadata", "mock_validate_bdm", "no_image", "objects", "old_create", "override_controller", "params", "req", "self", "servers_v21", "size", "super", "test", "uuids", "validation_error", "volume"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/011_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api/client.py": ["APIResponse", "Exception", "False", "LOG", "None", "OpenStackApiAuthenticationException", "OpenStackApiAuthorizationException", "OpenStackApiException", "OpenStackApiNotFoundException", "TestOpenStackClient", "True", "__name__", "_body", "_headers", "_status", "aggregate", "aggregate_id", "all_projects", "attachment_id", "auth_key", "auth_result", "auth_uri", "auth_user", "base_uri", "body", "check_response_status", "content", "data", "detail", "flavor", "flavor_id", "full_uri", "group", "group_id", "headers", "http_status", "image", "image_id", "jsonutils", "key", "kwargs", "logging", "message", "metadata", "method", "object", "opt", "parse", "post_body", "project_id", "qparams", "query_string", "rel_url", "relative_uri", "requests", "resp", "response", "search_opts", "self", "server", "server_id", "six", "snap_id", "snapshot", "spec", "status", "strip_version", "super", "url", "val", "volume", "volume_attachment", "volume_id", "The", "HTTP", "status", "code", "as", "an", "int\nThe", "Raw", "HTTP", "response", "body", "as", "a", "string\nThe", "decoded", "json", "body", "as", "a", "dictionary\nResponse", "headers", "as", "a", "dictionary", "because", "__str__", "falls", "back", "to", "__repr__", "we", "can", "still", "use", "repr\n", "on", "self", "but", "add", "in", "the", "other", "attributes.\n", "NOTE(justinsb):", "httplib", "'helpfully'", "converts", "headers", "to", "lower", "case\n", "NOTE(vish):", "cut", "out", "version", "number", "and", "tenant_id\n####################################\n\n", "Convenience", "methods\n\n", "The", "following", "are", "a", "set", "of", "convenience", "methods", "to", "get", "well", "known\n", "resources,", "they", "can", "be", "helpful", "in", "setting", "up", "resources", "in\n", "tests.", "All", "of", "these", "convenience", "methods", "throw", "exceptions", "if", "they\n", "get", "a", "non", "20x", "status", "code,", "so", "will", "appropriately", "abort", "tests", "if\n", "they", "fail.\n\n", "They", "all", "return", "the", "most", "relevant", "part", "of", "their", "response", "body", "as\n", "decoded", "data", "structure.\n\n####################################"], "/Users/mehranhassani/repos/nova/nova/objects/pci_device.py": ["False", "LOG", "None", "PciDevice", "PciDeviceList", "True", "VERSION", "__name__", "added_statuses", "all", "args", "base", "classmethod", "cls", "compare_pci_device_attributes", "compute_node_id", "context", "copy", "db", "db_dev", "db_dev_list", "db_pci", "dependants_ok_statuses", "dev", "dev_addr", "dev_dict", "dev_list", "dict", "exception", "existed", "extra_info", "fields", "free_devs", "getattr", "id", "instance", "instance_uuid", "is_set_a", "is_set_b", "isinstance", "jsonutils", "k", "key", "kwargs", "logging", "name", "next", "no_changes", "node_id", "obj_a", "obj_b", "objects", "ok_statuses", "old_status", "other", "parent", "parent_addr", "parent_ok_statuses", "pci_device", "pci_ignore_fields", "primitive", "self", "setattr", "staticmethod", "status", "super", "target_version", "updates", "uuid", "v", "versionutils", "vf", "vfs_list", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "added", "request_id", "field\n", "Version", "1.3:", "Added", "field", "to", "represent", "PCI", "device", "NUMA", "node\n", "Version", "1.4:", "Added", "parent_addr", "field\n", "Version", "1.5:", "Added", "2", "new", "device", "statuses:", "UNCLAIMABLE", "and", "UNAVAILABLE\n", "Note(yjiang5):", "the", "compute_node_id", "may", "be", "None", "because", "the", "pci\n", "device", "objects", "are", "created", "before", "the", "compute", "node", "is", "created", "in", "DB\n", "Note(yjiang5):", "status/instance_uuid", "should", "only", "be", "updated", "by\n", "functions", "like", "claim/allocate", "etc.", "The", "id", "is", "allocated", "by\n", "database.", "The", "extra_info", "is", "created", "by", "the", "object.\n", "NOTE(ndipanov):", "This", "needs", "to", "be", "set", "as", "it's", "accessed", "when", "matching\n", "Note", "(yjiang5)", "extra_info.update", "does", "not", "update\n", "obj_what_changed,", "set", "it", "explicitly\n", "NOTE(ndipanov):", "These", "are", "required", "to", "build", "an", "in-memory", "device", "tree\n", "but", "don't", "need", "to", "be", "proper", "fields", "(and", "can't", "easily", "be", "as", "they", "would\n", "hold", "circular", "references)\n", "Update", "PF", "status", "to", "CLAIMED", "if", "all", "of", "it", "dependants", "are", "free\n", "and", "set", "their", "status", "to", "UNCLAIMABLE\n", "Update", "VF", "status", "to", "CLAIMED", "if", "it's", "parent", "has", "not", "been\n", "previously", "allocated", "or", "claimed\n", "When", "claiming/allocating", "a", "VF,", "it's", "parent", "PF", "becomes\n", "unclaimable/unavailable.", "Therefore,", "it", "is", "expected", "to", "find", "the\n", "parent", "PF", "in", "an", "unclaimable/unavailable", "state", "for", "any", "following\n", "claims", "to", "a", "sibling", "VF\n", "Set", "PF", "status\n", "Set", "PF", "status\n", "Notes(yjiang5):", "remove", "this", "check", "when", "instance", "object", "for\n", "compute", "manager", "is", "finished\n", "Set", "all", "PF", "dependants", "status", "to", "AVAILABLE\n", "Set", "PF", "status", "to", "AVAILABLE", "if", "all", "of", "it's", "VFs", "are", "free\n", "Notes(yjiang5):", "remove", "this", "check", "when", "instance", "object", "for\n", "compute", "manager", "is", "finished\n", "Version", "1.0:", "Initial", "version\n", "PciDevice", "<=", "1.1\n", "Version", "1.1:", "PciDevice", "1.2\n", "Version", "1.2:", "PciDevice", "1.3\n", "Version", "1.3:", "Adds", "get_by_parent_address"], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/__init__.py": ["HyperVDriver", "driver"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_flavorextradata.py": ["FlavorExtraDataTestV21", "base_url", "body", "enumerate", "expected", "fakes", "flavor", "i", "jsonutils", "key", "property", "req", "res", "self", "super", "test", "url"], "/Users/mehranhassani/repos/nova/nova/virt/images.py": ["CONF", "False", "IMAGE_API", "LOG", "None", "QEMU_IMG_LIMITS", "RuntimeError", "_", "__name__", "_convert_image", "backing_file", "cmd", "context", "convert_image", "data", "dest", "err", "exception", "exp", "fetch", "fileutils", "fmt", "format", "image", "image_href", "imageutils", "in_format", "logging", "msg", "nova", "os", "out", "out_format", "path", "path_tmp", "processutils", "qemu_img_info", "run_as_root", "source", "staged", "units", "utils", "Return", "an", "object", "containing", "the", "parsed", "output", "from", "qemu-img", "info.\nConvert", "image", "to", "other", "format.", "TODO(mikal):", "this", "code", "should", "not", "be", "referring", "to", "a", "libvirt", "specific\n", "flag.\n", "The", "following", "check", "is", "about", "ploop", "images", "that", "reside", "within\n", "directories", "and", "always", "have", "DiskDescriptor.xml", "file", "beside", "them\n", "this", "means", "we", "hit", "prlimits,", "make", "the", "exception", "more", "specific\n", "NOTE:", "there", "is", "only", "1", "caller", "of", "this", "function:\n", "imagebackend.Lvm.create_image.", "It", "is", "not", "easy", "to", "fix", "that", "without", "a\n", "larger", "refactor,", "so", "for", "the", "moment", "it", "has", "been", "manually", "audited", "and\n", "allowed", "to", "continue.", "Remove", "this", "function", "when", "Lvm.create_image", "has\n", "been", "fixed.\n", "re-raise", "to", "include", "image_href"], "/Users/mehranhassani/repos/nova/nova/tests/unit/pci/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/quota_sets.py": ["ALIAS", "CONF", "FILTERED_QUOTAS", "False", "MAX_PROXY_API_SUPPORT_VERSION", "MIN_WITHOUT_PROXY_API_SUPPORT_VERSION", "None", "QUOTAS", "QuotaSetsController", "True", "_", "alias", "body", "context", "conv_inf", "dict", "exception", "extensions", "filtered_quotas", "float", "force_update", "id", "int", "k", "key", "limit", "maximum", "minimum", "msg", "name", "nova", "objects", "params", "project_id", "qs_policies", "quota", "quota_set", "quota_sets", "req", "res", "resource", "resources", "result", "self", "settable_quotas", "str", "strutils", "urlparse", "usages", "user_id", "v", "valid_quotas", "validation", "value", "values", "version", "webob", "wsgi", "Convert", "the", "quota", "object", "to", "a", "result", "dict.\nQuotas", "management", "support.", "noqa\n", "noqa\n", "noqa\n", "NOTE(alex_xu):", "The", "CONF.enable_network_quota", "was", "deprecated\n", "due", "to", "it", "is", "only", "used", "by", "nova-network,", "and", "nova-network", "will", "be\n", "deprecated", "also.", "So", "when", "CONF.enable_newtork_quota", "is", "removed,\n", "the", "networks", "quota", "will", "disappeare", "also.\n", "NOTE(dims):", "Pass", "#1", "-", "In", "this", "loop", "for", "quota_set.items(),", "we", "validate\n", "min/max", "values", "and", "bail", "out", "if", "any", "of", "the", "items", "in", "the", "set", "is", "bad.\n", "validate", "whether", "already", "used", "and", "reserved", "exceeds", "the", "new\n", "quota,", "this", "check", "will", "be", "ignored", "if", "admin", "want", "to", "force\n", "update\n", "NOTE(dims):", "Pass", "#2", "-", "At", "this", "point", "we", "know", "that", "all", "the\n", "values", "are", "correct", "and", "we", "can", "iterate", "and", "update", "them", "all", "in", "one\n", "shot", "without", "having", "to", "worry", "about", "rolling", "back", "etc", "as", "we", "have", "done\n", "the", "validation", "up", "front", "in", "the", "loop", "above.\n", "Note(gmann):", "Removed", "'id'", "from", "update's", "response", "to", "make", "it", "same\n", "as", "V2.", "If", "needed", "it", "can", "be", "added", "with", "microversion.\n", "noqa\n", "TODO(oomichi):", "Here", "should", "be", "204(No", "Content)", "instead", "of", "202", "by", "v2.1\n", "+microversions", "because", "the", "resource", "quota-set", "has", "been", "deleted", "completely\n", "when", "returning", "a", "response."], "/Users/mehranhassani/repos/nova/nova/tests/unit/scheduler/client/test_report.py": ["AttributeError", "CONF", "False", "None", "SafeConnectedTestCase", "SchedulerReportClientTestCase", "True", "_auth_mock", "_sess_mock", "cn", "compute_node", "context", "create_rp_mock", "exception", "exp_url", "expected", "expected_calls", "expected_inv_data", "expected_payload", "expected_provider", "expected_url", "fake_allocations", "fault_text", "get_rp_mock", "in_use_exc", "inst", "inst1", "inst2", "inst3", "inv_data", "json_data", "ks_exc", "ks_sess_mock", "load_auth_mock", "logging_mock", "mock", "mock_a", "mock_delete", "mock_ensure", "mock_erp", "mock_error", "mock_extract", "mock_get", "mock_log", "mock_put", "mock_response", "mock_save", "mock_sleep", "mock_ui", "mock_update", "mock_vbi", "mock_warn", "name", "new_gen", "nova", "obj_base", "objects", "rc_str", "report", "req", "resp_mock", "result", "rp", "self", "six", "super", "test", "uuid", "uuids", "Test", "the", "safe_connect", "decorator", "for", "the", "scheduler", "client.", "noqa\n", "reset", "the", "call", "count", "to", "demonstrate", "that", "future", "calls", "don't\n", "work\n", "reset", "the", "call", "count", "to", "demonstrate", "that", "future", "calls", "don't\n", "work\n", "reset", "the", "call", "count", "to", "demonstrate", "that", "future", "calls", "don't\n", "work\n", "reset", "the", "call", "count", "to", "demonstrate", "that", "future", "calls", "do\n", "work\n", "Override", "the", "client", "object's", "cache", "to", "contain", "a", "resource", "provider\n", "object", "for", "the", "compute", "host", "and", "check", "that\n", "_ensure_resource_provider()", "doesn't", "call", "_get_resource_provider()", "or\n", "_create_resource_provider()\n", "No", "resource", "provider", "exists", "in", "the", "client's", "cache,", "so", "validate", "that\n", "if", "we", "get", "the", "resource", "provider", "from", "the", "placement", "API", "that", "we", "don't\n", "try", "to", "create", "the", "resource", "provider.\n", "No", "resource", "provider", "exists", "in", "the", "client's", "cache,", "and\n", "_create_provider", "returns", "None,", "indicating", "there", "was", "an", "error", "with", "the\n", "create", "call.", "Ensure", "we", "don't", "populate", "the", "resource", "provider", "cache\n", "with", "a", "None", "value.\n", "No", "resource", "provider", "exists", "in", "the", "client's", "cache", "and", "no", "resource\n", "provider", "was", "returned", "from", "the", "placement", "API,", "so", "verify", "that", "in", "this\n", "case", "we", "try", "to", "create", "the", "resource", "provider", "via", "the", "placement", "API.\n", "name", "param", "defaults", "to", "UUID", "if", "None\n", "Ensure", "_get_resource_provider()", "returns", "a", "ResourceProvider", "object", "if\n", "it", "finds", "a", "resource", "provider", "record", "from", "the", "placement", "API\n", "Ensure", "_get_resource_provider()", "just", "returns", "None", "when", "the", "placement\n", "API", "doesn't", "find", "a", "resource", "provider", "matching", "a", "UUID\n", "Ensure", "_get_resource_provider()", "sets", "the", "error", "flag", "when", "trying", "to\n", "communicate", "with", "the", "placement", "API", "and", "not", "getting", "an", "error", "we", "can\n", "deal", "with\n", "A", "503", "Service", "Unavailable", "should", "trigger", "an", "error", "logged", "and\n", "return", "None", "from", "_get_resource_provider()\n", "Ensure", "_create_resource_provider()", "returns", "a", "ResourceProvider", "object\n", "constructed", "after", "creating", "a", "resource", "provider", "record", "in", "the\n", "placement", "API\n", "Ensure", "_create_resource_provider()", "returns", "a", "ResourceProvider", "object\n", "gotten", "from", "_get_resource_provider()", "if", "the", "call", "to", "create", "the\n", "resource", "provider", "in", "the", "placement", "API", "returned", "a", "409", "Conflict,\n", "indicating", "another", "thread", "concurrently", "created", "the", "resource", "provider\n", "record.\n", "Ensure", "_create_resource_provider()", "sets", "the", "error", "flag", "when", "trying", "to\n", "communicate", "with", "the", "placement", "API", "and", "not", "getting", "an", "error", "we", "can\n", "deal", "with\n", "A", "503", "Service", "Unavailable", "should", "log", "an", "error", "and\n", "_create_resource_provider()", "should", "return", "None\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Ensure", "_update_inventory()", "returns", "a", "list", "of", "Inventories", "objects\n", "after", "creating", "or", "updating", "the", "existing", "values\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Updated", "with", "the", "new", "inventory", "from", "the", "PUT", "call\n", "Called", "with", "the", "newly-found", "generation", "from", "the", "existing\n", "inventory\n", "No", "update", "so", "put", "should", "not", "be", "called\n", "Make", "sure", "we", "updated", "the", "generation", "from", "the", "inventory", "records\n", "Ensure", "_update_inventory()", "returns", "a", "list", "of", "Inventories", "objects\n", "after", "creating", "or", "updating", "the", "existing", "values\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Invalidated", "the", "cache\n", "Refreshed", "our", "resource", "provider\n", "Ensure", "_update_inventory()", "returns", "a", "list", "of", "Inventories", "objects\n", "after", "creating", "or", "updating", "the", "existing", "values\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "No", "cache", "invalidation\n", "Ensure", "_update_inventory()", "returns", "a", "list", "of", "Inventories", "objects\n", "after", "creating", "or", "updating", "the", "existing", "values\n", "Make", "sure", "the", "ResourceProvider", "exists", "for", "preventing", "to", "call", "the", "API\n", "Thanks", "py3\n", "No", "cache", "invalidation\n", "Ensure", "_update_inventory()", "fails", "if", "we", "have", "a", "conflict", "when", "updating\n", "but", "retries", "correctly.\n", "Only", "slept", "once\n", "but", "retries", "correctly.\n", "Slept", "three", "times\n", "Three", "attempts", "to", "update\n", "Slept", "three", "times\n", "NOTE(danms):", "LOL", "@", "py3\n", "NOTE(danms):", "LOL", "@", "py3\n", "One", "instance", "still", "on", "the", "node,", "dict", "form", "as", "the\n", "RT", "tracks", "it\n", "py3", "uses", "__bool__\n", "make", "sure", "we", "didn't", "screw", "up", "the", "logic", "or", "the", "mock\n", "make", "sure", "warning", "wasn't", "called", "for", "the", "404"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/baremetal_nodes.py": ["ALIAS", "BareMetalNodeController", "CONF", "MAX_PROXY_API_SUPPORT_VERSION", "None", "True", "_", "_check_ironic_client_enabled", "_get_ironic_client", "_no_ironic_proxy", "alias", "bn_policies", "body", "cmd", "common", "context", "d", "extensions", "f", "icli", "id", "importutils", "inode", "interface_fields", "iports", "ironic_client", "ironic_exc", "ironic_nodes", "kwargs", "msg", "name", "node", "node_ext_fields", "node_fields", "node_ref", "nodes", "nova", "port", "req", "resource", "self", "version", "webob", "wsgi", "The", "bare-metal", "admin", "extension.\nCheck", "whether", "Ironic", "is", "installed", "or", "not.\nreturn", "an", "Ironic", "client.\nThe", "Bare-Metal", "Node", "API", "controller", "for", "the", "OpenStack", "API.\nAdmin-only", "bare-metal", "node", "administration.", "TODO(NobodyCam):", "Fix", "insecure", "setting\n", "NOTE(mriedem):", "The", "1", "api_version", "arg", "here", "is", "the", "only", "valid", "value", "for\n", "the", "client,", "but", "it's", "not", "even", "used", "so", "it", "doesn't", "really", "matter.", "The\n", "ironic", "client", "wrapper", "in", "the", "virt", "driver", "actually", "uses", "a", "hard-coded\n", "microversion", "via", "the", "os_ironic_api_version", "kwarg.\n", "proxy", "command", "to", "Ironic\n", "proxy", "command", "to", "Ironic"], "/Users/mehranhassani/repos/nova/nova/objects/agent.py": ["None", "True", "VERSION", "agent", "architecture", "base", "cls", "context", "db", "db_agent", "db_agents", "exception", "fields", "hypervisor", "name", "objects", "os", "self", "setattr", "staticmethod", "updates"], "/Users/mehranhassani/repos/nova/nova/tests/unit/servicegroup/test_api.py": ["False", "None", "ServiceGroupApiTestCase", "True", "driver", "group", "member", "mock", "result", "retval", "self", "servicegroup", "super", "test", "\n"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_scheduler_hints.py": ["CONF", "None", "SchedulerHintsTestCaseV21", "ServersControllerCreateTestV21", "UUID", "args", "body", "cfg", "compute", "context", "create", "datetime", "def_image_ref", "dict", "ext_info", "extension_info", "fake", "fake_create", "fake_instance", "fakes", "flavors", "hint", "hints", "image_uuid", "inst", "inst_type", "instance", "instance_create", "jsonutils", "kwargs", "nova", "old_create", "param", "params", "req", "res", "self", "server", "servers_v21", "super", "test", "Shared", "implementation", "for", "tests", "below", "that", "create", "instance."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/256_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Juno", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Kilo", "work.", "New", "Kilo", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-kilo\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/volume/remotefs.py": ["CONF", "LOG", "None", "RemoteFilesystemDriver", "RsyncDriver", "True", "_LE", "_LW", "__name__", "abc", "args", "cls_name", "compression", "create_tmp_dir", "decorated_function", "dir_path", "dst", "dst_path", "exc", "export_path", "export_type", "file_name", "function", "functools", "host", "importutils", "kwargs", "local_tmp_dir", "local_tmp_file", "logging", "mount_cmd", "mount_path", "nova", "object", "on_completion", "on_execute", "options", "os", "processutils", "relative_tmp_file_path", "self", "six", "src", "staticmethod", "tempfile", "tmp_dir_path", "transport", "utils", "Represents", "actions", "that", "can", "be", "taken", "on", "a", "remote", "host's", "filesystem.", "As", "far", "as", "ploop", "disks", "are", "in", "fact", "directories", "we", "add", "'-r'", "argument\n", "Create", "directory\n", "Remove", "directory\n", "Create", "target", "dir", "inside", "temporary", "directory\n", "Create", "file", "in", "directory\n", "Delete", "file\n", "Create", "target", "dir", "inside", "temporary", "directory\n", "Remove", "remote", "directory's", "content\n", "Delete", "empty", "directory\n", "For", "creating", "path", "on", "the", "remote", "host", "rsync", "--relative", "path", "must\n", "be", "used.", "With", "a", "modern", "rsync", "on", "the", "sending", "side", "(beginning", "with\n", "2.6.7),", "you", "can", "insert", "a", "dot", "and", "a", "slash", "into", "the", "source", "path,\n", "like", "this:\n", "rsync", "-avR", "/foo/./bar/baz.c", "remote:/tmp/\n", "That", "would", "create", "/tmp/bar/baz.c", "on", "the", "remote", "machine.\n", "(Note", "that", "the", "dot", "must", "be", "followed", "by", "a", "slash,", "so", "\"/foo/.\"\n", "would", "not", "be", "abbreviated.)\n", "Do", "relative", "rsync", "local", "directory", "with", "remote", "root", "directory\n", "As", "far", "as", "ploop", "disks", "are", "in", "fact", "directories", "we", "add", "'-r'", "argument"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_device_metadata.py": ["None", "_TestInstanceDeviceMetadata", "context", "db_meta", "dev_meta", "dict", "fake_db_metadata", "fake_devices_metadata", "fake_meta", "fake_net_interface_meta", "fake_obj_devices_metadata", "fake_obj_devices_metadata_cpy", "fake_old_db_metadata", "fake_pci_disk_meta", "inst_meta", "isinstance", "jsonutils", "metadata", "mock", "mock_get", "obj_meta", "object", "objects", "self", "test_objects", "zip", "copy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_service.py": ["False", "NOW", "None", "OPTIONAL", "TestServiceVersion", "True", "_TestServiceObject", "_fake_service", "agg", "aggregate", "args", "binaries", "calculated", "compute_manager", "context", "current", "data", "db", "db_exception", "db_method", "db_mock", "dict", "exception", "expected", "fake_compute_node", "fake_compute_obj", "fake_different_service", "fake_service", "fake_service_dict", "fake_version", "get_all_by_host", "getattr", "inst", "kwargs", "len", "minimum", "mock", "mock_get", "mock_get_all", "mock_gmv", "mock_log", "obj", "obj_method", "obj_val", "object", "objects", "orig_service_destroy", "ovo_base", "ovo_exc", "repr", "self", "service", "service_obj", "services", "set", "setattr", "super", "test", "test_compute_node", "test_objects", "timeutils", "versions", "The", "test", "harness", "needs", "db.service_destroy", "to", "work,\n", "so", "avoid", "leaving", "it", "broken", "here", "after", "we're", "done\n", "Make", "sure", "it", "doesn't", "re-fetch", "this"], "/Users/mehranhassani/repos/nova/doc/ext/versioned_notifications.py": ["Directive", "SAMPLE_ROOT", "TOGGLE_SCRIPT", "VersionedNotificationDirective", "_", "app", "base", "body", "cls", "col", "col_name", "cols", "content", "event_type", "f", "group", "head", "html_str", "issubclass", "len", "name", "nodes", "notification", "notifications", "open", "ovos", "payload", "payload_cls", "payload_name", "raw", "row", "sample", "sample_content", "sample_file", "self", "sorted", "table", "text", "Make", "sure", "that", "all", "the", "notification", "classes", "are", "defined", "so", "the\n", "registration", "mechanism", "can", "pick", "them", "up", "later.\n%s-div').toggle('show');\n%s-hideshow').on('click',", "function(event)", "{\n%s-div').toggle('show');\n", "fill", "the", "table", "header\n", "fill", "the", "table", "content,", "one", "notification", "per", "row"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_ipv6.py": ["IPv6AccountIdentiferTestCase", "IPv6RFC2462TestCase", "TypeError", "addr", "bad_mac", "bad_prefix", "err", "expected_msg", "ipv6", "mac", "self", "str", "super", "test", "Test", "suite", "for", "IPv6.\nUnit", "tests", "for", "IPv6", "rfc2462", "backend", "operations.\nUnit", "tests", "for", "IPv6", "account_identifier", "backend", "operations."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/265_remove_duplicated_index.py": ["INDEXES", "MetaData", "Table", "True", "index", "index_name", "meta", "migrate_engine", "table", "table_name", "Remove", "index", "that", "are", "subsets", "of", "other", "indexes.", "subset", "of", "instances_host_deleted_cleaned_idx\n", "subset", "of", "iscsi_targets_host_volume_id_deleted_idx"], "/Users/mehranhassani/repos/nova/nova/tests/functional/test_metadata.py": ["False", "LOG", "MetadataTest", "True", "__name__", "address", "context", "ctxt", "fake_get_fixed_ip_by_address", "fake_get_ip_info_for_instance_from_nw_info", "fake_request", "fake_result", "fixtures", "flavor", "instance", "j", "jsonutils", "kwargs", "logging", "method", "nova_fixtures", "nw_info", "object", "objects", "real_request", "requests", "res", "result", "self", "super", "test", "url", "uuidutils", "NOTE(mikal):", "We", "could", "create", "a", "network", "and", "a", "fixed", "IP", "here,", "but", "it\n", "turns", "out", "to", "be", "heaps", "of", "fiddly", "boiler", "plate", "code,", "so", "let's", "just\n", "fake", "it", "and", "hope", "mriedem", "doesn't", "notice.\n", "TODO(mriedem):", "Make", "this", "all", "work", "with", "the", "Neutron", "fixture.\n", "Much", "of", "the", "data", "we", "pass", "to", "the", "REST", "service", "is", "missing", "because", "of\n", "the", "way", "we've", "created", "the", "fake", "instance,", "but", "we", "should", "at", "least", "try\n", "and", "ensure", "we're", "passing", "_some_", "data", "through", "to", "the", "external", "REST\n", "service."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/313_add_parent_id_column.py": ["Column", "Index", "MetaData", "String", "Table", "True", "hasattr", "meta", "migrate_engine", "parent_addr", "parent_index", "pci_devices", "shadow_pci_devices", "\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html\n", "Add", "a", "new", "column", "to", "store", "PCI", "device", "parent", "address\n", "Create", "index"], "/Users/mehranhassani/repos/nova/nova/objects/service.py": ["Exception", "False", "LOG", "None", "SERVICE_VERSION", "SERVICE_VERSION_HISTORY", "Service", "True", "VERSION", "_LW", "_MIN_VERSION_CACHE", "_SERVICE_VERSION_CACHING", "__name__", "_target_version", "all", "allow_missing", "any", "args", "attrname", "availability_zones", "base", "binaries", "binary", "classmethod", "cls", "compute", "compute_nodes", "context", "db", "db_service", "db_services", "disabled", "exception", "fields", "host", "hv_type", "include_disabled", "int", "key", "kwargs", "logging", "min", "min_versions", "minver", "notification", "objects", "payload", "primitive", "self", "service", "service_id", "service_notification", "set", "set_zones", "setattr", "staticmethod", "super", "target_version", "topic", "updates", "use_slave", "version", "version_manifest", "versionutils", "NOTE(danms):", "This", "is", "the", "global", "service", "version", "counter\n", "NOTE(danms):", "This", "is", "our", "SERVICE_VERSION", "history.", "The", "idea", "is", "that", "any\n", "time", "we", "bump", "the", "version,", "we", "will", "put", "an", "entry", "here", "to", "record", "the", "change,\n", "along", "with", "any", "pertinent", "data.", "For", "things", "that", "we", "can", "programatically\n", "detect", "that", "need", "a", "bump,", "we", "put", "something", "in", "_collect_things()", "below", "to\n", "assemble", "a", "dict", "of", "things", "we", "can", "check.", "For", "example,", "we", "pretty", "much", "always\n", "want", "to", "consider", "the", "compute", "RPC", "API", "version", "a", "thing", "that", "requires", "a", "service\n", "bump", "so", "that", "we", "can", "drive", "version", "pins", "from", "it.", "We", "could", "include", "other\n", "service", "RPC", "versions", "at", "some", "point,", "minimum", "object", "versions,", "etc.\n\n", "The", "TestServiceVersion", "test", "will", "fail", "if", "the", "calculated", "set", "of\n", "things", "differs", "from", "the", "value", "in", "the", "last", "item", "of", "the", "list", "below,\n", "indicating", "that", "a", "version", "bump", "is", "needed.\n\n", "Also", "note", "that", "there", "are", "other", "reasons", "we", "may", "want", "to", "bump", "this,\n", "which", "will", "not", "be", "caught", "by", "the", "test.", "An", "example", "of", "this", "would", "be\n", "triggering", "(or", "disabling)", "an", "online", "data", "migration", "once", "all", "services\n", "in", "the", "cluster", "are", "at", "the", "same", "level.\n\n", "If", "a", "version", "bump", "is", "required", "for", "something", "mechanical,", "just", "document\n", "that", "generic", "thing", "here", "(like", "compute", "RPC", "version", "bumps).", "No", "need", "to\n", "replicate", "the", "details", "from", "compute/rpcapi.py", "here.", "However,", "for", "more\n", "complex", "service", "interactions,", "extra", "detail", "should", "be", "provided\n", "Version", "0:", "Pre-history\n", "Version", "1:", "Introduction", "of", "SERVICE_VERSION\n", "Version", "2:", "Compute", "RPC", "version", "4.5\n", "Version", "3:", "Compute", "RPC", "version", "4.6\n", "Version", "4:", "Add", "PciDevice.parent_addr", "(data", "migration", "needed)\n", "Version", "5:", "Compute", "RPC", "version", "4.7\n", "Version", "6:", "Compute", "RPC", "version", "4.8\n", "Version", "7:", "Compute", "RPC", "version", "4.9\n", "Version", "8:", "Compute", "RPC", "version", "4.10\n", "Version", "9:", "Compute", "RPC", "version", "4.11\n", "Version", "10:", "Compute", "node", "conversion", "to", "Inventories\n", "Version", "11:", "Compute", "RPC", "version", "4.12\n", "Version", "12:", "The", "network", "APIs", "and", "compute", "manager", "support", "a", "NetworkRequest\n", "object", "where", "the", "network_id", "value", "is", "'auto'", "or", "'none'.", "BuildRequest\n", "objects", "are", "populated", "by", "nova-api", "during", "instance", "boot.\n", "Version", "13:", "Compute", "RPC", "version", "4.13\n", "Version", "14:", "The", "compute", "manager", "supports", "setting", "device", "tags.\n", "Version", "15:", "Indicate", "that", "nova-conductor", "will", "stop", "a", "boot", "if", "BuildRequest\n", "is", "deleted", "before", "RPC", "to", "nova-compute.\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "compute_node", "nested", "object\n", "Version", "1.2:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.3:", "ComputeNode", "version", "1.5\n", "Version", "1.4:", "Added", "use_slave", "to", "get_by_compute_host\n", "Version", "1.5:", "ComputeNode", "version", "1.6\n", "Version", "1.6:", "ComputeNode", "version", "1.7\n", "Version", "1.7:", "ComputeNode", "version", "1.8\n", "Version", "1.8:", "ComputeNode", "version", "1.9\n", "Version", "1.9:", "ComputeNode", "version", "1.10\n", "Version", "1.10:", "Changes", "behaviour", "of", "loading", "compute_node\n", "Version", "1.11:", "Added", "get_by_host_and_binary\n", "Version", "1.12:", "ComputeNode", "version", "1.11\n", "Version", "1.13:", "Added", "last_seen_up\n", "Version", "1.14:", "Added", "forced_down\n", "Version", "1.15:", "ComputeNode", "version", "1.12\n", "Version", "1.16:", "Added", "version\n", "Version", "1.17:", "ComputeNode", "version", "1.13\n", "Version", "1.18:", "ComputeNode", "version", "1.14\n", "Version", "1.19:", "Added", "get_minimum_version()\n", "Version", "1.20:", "Added", "get_minimum_version_multi()\n", "NOTE(danms):", "We're", "going", "against", "the", "rules", "here", "and", "overriding\n", "init.", "The", "reason", "is", "that", "we", "want", "to", "*ensure*", "that", "we're", "always\n", "setting", "the", "current", "service", "version", "on", "our", "objects,", "overriding\n", "whatever", "else", "might", "be", "set", "in", "the", "database,", "or", "otherwise", "(which\n", "is", "the", "normal", "reason", "not", "to", "override", "init).\n\n", "We", "also", "need", "to", "do", "this", "here", "so", "that", "it's", "set", "on", "the", "client", "side\n", "all", "the", "time,", "such", "that", "create()", "and", "save()", "operations", "will\n", "include", "the", "current", "service", "version.\n", "service.compute_node", "was", "not", "lazy-loaded,", "we", "need", "to", "provide", "it\n", "when", "called\n", "NOTE(sbauza):", "Some", "drivers", "(VMware,", "Ironic)", "can", "have", "multiple\n", "nodes", "for", "the", "same", "service,", "but", "for", "keeping", "same", "behaviour,\n", "returning", "only", "the", "first", "elem", "of", "the", "list\n", "NOTE(sbauza);", "We", "want", "to", "only", "lazy-load", "compute_node\n", "NOTE(danms):", "Special", "handling", "of", "the", "version", "field,", "since\n", "it", "is", "read_only", "and", "set", "in", "our", "init.\n", "Only", "n-cpu", "services", "have", "attached", "compute_node(s)\n", "NOTE(sbauza);", "Previous", "behaviour", "was", "raising", "a", "ServiceNotFound,\n", "we", "keep", "it", "for", "backwards", "compatibility\n", "NOTE(sbauza):", "Some", "drivers", "(VMware,", "Ironic)", "can", "have", "multiple", "nodes\n", "for", "the", "same", "service,", "but", "for", "keeping", "same", "behaviour,", "returning", "only\n", "the", "first", "elem", "of", "the", "list\n", "NOTE(ndipanov):", "This", "is", "deprecated", "and", "should", "be", "removed", "on", "the", "next\n", "major", "version", "bump\n", "Note(gibi):", "We", "do", "not", "trigger", "notification", "on", "version", "as", "that", "field\n", "is", "always", "dirty,", "which", "would", "cause", "that", "nova", "sends", "notification", "on\n", "every", "other", "field", "change.", "See", "the", "comment", "in", "save()", "too.\n", "NOTE(danms):", "Since", "our", "return", "value", "is", "not", "controlled", "by", "object\n", "schema,", "be", "explicit", "here.\n", "Version", "1.0:", "Initial", "version\n", "Service", "<=", "version", "1.2\n", "Version", "1.1", "Service", "version", "1.3\n", "Version", "1.2:", "Service", "version", "1.4\n", "Version", "1.3:", "Service", "version", "1.5\n", "Version", "1.4:", "Service", "version", "1.6\n", "Version", "1.5:", "Service", "version", "1.7\n", "Version", "1.6:", "Service", "version", "1.8\n", "Version", "1.7:", "Service", "version", "1.9\n", "Version", "1.8:", "Service", "version", "1.10\n", "Version", "1.9:", "Added", "get_by_binary()", "and", "Service", "version", "1.11\n", "Version", "1.10:", "Service", "version", "1.12\n", "Version", "1.11:", "Service", "version", "1.13\n", "Version", "1.12:", "Service", "version", "1.14\n", "Version", "1.13:", "Service", "version", "1.15\n", "Version", "1.14:", "Service", "version", "1.16\n", "Version", "1.15:", "Service", "version", "1.17\n", "Version", "1.16:", "Service", "version", "1.18\n", "Version", "1.17:", "Service", "version", "1.19\n", "Version", "1.18:", "Added", "include_disabled", "parameter", "to", "get_by_binary()\n", "Version", "1.19:", "Added", "get_all_computes_by_hv_type()\n", "NOTE(paul-carlton2):", "In", "v2.0", "of", "the", "object", "the", "include_disabled", "flag\n", "will", "be", "removed", "so", "both", "enabled", "and", "disabled", "hosts", "are", "returned"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/block_device_mapping.py": ["block_device_mapping", "block_device_mapping_new_item", "block_device_mapping_v1", "block_device_mapping_v232", "block_device_mapping_v232_new_item", "copy", "parameter_types", "server_create", "server_create_v232", "defined", "in", "nova/block_device.py:from_api()\n", "NOTE:", "Client", "can", "specify", "the", "Id", "with", "the", "combination", "of\n", "source_type", "and", "uuid,", "or", "a", "single", "attribute", "like", "volume_id/\n", "image_id/snapshot_id.\n", "Defined", "as", "varchar(255)", "in", "column", "\"guest_format\"", "in", "table\n", "\"block_device_mapping\"\n", "Defined", "as", "varchar(255)", "in", "column", "\"device_type\"", "in", "table\n", "\"block_device_mapping\"\n", "Defined", "as", "varchar(255)", "in", "column", "\"disk_bus\"", "in", "table\n", "\"block_device_mapping\"\n", "Defined", "as", "integer", "in", "nova/block_device.py:from_api()"], "/Users/mehranhassani/repos/nova/nova/tests/functional/wsgi/test_servers.py": ["False", "None", "ServersPreSchedulingTestCase", "api_fixture", "api_major_version", "body", "create_resp", "fake_image", "get_resp", "image_ref", "inst1", "inst2", "len", "list_resp", "nova_fixtures", "policy_fixture", "self", "server", "super", "test", "Validate", "a", "few", "things\n", "Just", "validate", "some", "basics\n", "Default", "sort", "is", "created_at", "desc,", "so", "last", "created", "is", "first\n", "Change", "the", "sort", "order"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_loadables/__init__.py": ["FakeLoadable", "FakeLoader", "loadables", "object", "self", "super"], "/Users/mehranhassani/repos/nova/nova/tests/functional/db/test_flavor.py": ["False", "FlavorMigrationTestCase", "FlavorObjectTestCase", "ForcedFlavor", "None", "True", "USES_DB_SELF", "_create_main_flavor", "api_models", "context", "ctxt", "db", "db_api", "db_flavor_ids", "db_flavors", "dict", "done", "exception", "expect_len", "fake_api_flavor", "fake_flavor2", "fields", "fixtures", "flavor", "flavor2", "flavor_obj", "flavors", "len", "limit", "list", "main_flavors", "marker", "match", "objects", "projects", "result", "result_flavorids", "self", "set", "specs", "staticmethod", "super", "test", "updates", "values", "x", "Make", "sure", "we", "find", "this", "in", "the", "API", "database\n", "Make", "sure", "we", "don't", "find", "it", "in", "the", "main", "database\n", "create", "a", "flavor", "in", "the", "main", "database", "that", "will", "be", "migrated\n", "NOTE(danms):", "Not", "much", "we", "can", "do", "here", "other", "than", "just", "make\n", "sure", "that", "the", "non-postgres", "case", "does", "not", "explode."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_block_device_mapping.py": ["BlockDeviceMappingTestV21", "CONF", "False", "None", "True", "_instance_destroy", "_unused", "_validate", "_validate_bdm", "args", "bdm", "bdm_1st", "bdm_2nd", "bdm_exceptions", "bdm_expected", "block_device", "block_device_mapping", "body", "cfg", "compute_api", "create", "destination_type", "ex", "ex_iter", "exc", "exception", "expected", "ext_info", "extension_info", "fake", "fake_bdm_meta", "fakes", "image_href", "iter", "jsonutils", "kargs", "kwargs", "len", "matchers", "mock", "mock_bdm_image_metadata", "mock_create", "mock_validate_bdm", "mox", "next", "no_image", "objects", "old_create", "override_controller", "params", "range", "received", "req", "self", "servers_v21", "super", "test", "validation_error", "zip"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_firewall.py": ["False", "None", "TestIptablesFirewallDriver", "True", "_FN_ADD_FILTERS", "_FN_DO_BASIC_RULES", "_FN_DO_DHCP_RULES", "_FN_INSTANCE_RULES", "_IPT_DRIVER_CLS", "_do_basic_mock", "_do_dhcp_mock", "_iptm_mock", "add_filters_mock", "chain_name", "ctx_mock", "dao_mock", "dict", "driver", "exception", "expected", "fake_instance", "ffi_mock", "filter", "firewall", "get_nw_info_mock", "gi_mock", "i_mock", "i_obj_list_mock", "i_obj_mock", "i_rules_mock", "icmp_rule", "icn_mock", "ii_mock", "ins_list_mock", "ins_obj_cls_mock", "instance", "instance_chain_name", "ips", "ipt_mock", "iptm_mock", "ipv4_add_chain_mock", "ipv4_rules", "ipv6_add_chain_mock", "ipv6_rules", "mock", "network_info", "ni_mock", "nw_info_mock", "objects", "rfii_mock", "rule", "sec_grp_list_mock", "sec_grp_rule_list_mock", "self", "subnet1", "subnet2", "subnet3", "subnets", "super", "test", "tu_rule", "v4_rules", "v6_rules", "version", "NOTE(jaypipes):", "Here", "we", "are", "not", "testing", "the", "IptablesManager\n", "constructor.", "We", "are", "only", "testing", "the", "calls", "made", "against", "the\n", "IptablesManager", "singleton", "during", "initialization", "of", "the\n", "IptablesFirewallDriver.\n", "NOTE(chenli)", "The", "IptablesFirewallDriver", "init", "method", "calls", "the\n", "iptables", "manager,", "so", "we", "must", "reset", "here.\n", "When", "DHCP", "created", "flag", "is", "False,", "make", "sure", "we", "don't", "set", "any", "filters\n", "add", "rules", "when", "DHCP", "create", "is", "set\n", "add", "rules", "when", "DHCP", "create", "is", "set", "and", "create", "the", "rule\n", "Check", "we", "don't", "recreate", "the", "DHCP", "rules", "if", "we've", "already\n", "done", "so", "(there", "is", "a", "dhcp_created", "flag", "on", "the", "driver", "that", "is\n", "set", "when", "prepare_instance_filters()", "first", "creates", "them)\n", "invalid", "icmp", "type\n", "version", "4", "invalid", "icmp", "code\n", "version", "6", "valid", "icmp", "code\n", "equal", "from", "and", "to", "port\n", "different", "from", "and", "to", "port\n", "Simple", "unit", "test", "that", "verifies", "that", "the", "fallback", "jump\n", "is", "the", "only", "rule", "added", "to", "the", "returned", "list", "of", "rules", "if\n", "no", "secgroups", "are", "found", "(we", "ignore", "the", "basic", "and", "DHCP\n", "rule", "additions", "here)\n", "Tests", "that", "sec", "group", "rules", "that", "contain", "a", "CIDR", "(i.e.", "the\n", "rule", "does", "not", "contain", "a", "grantee", "group", "of", "instances)", "populates\n", "the", "returned", "iptables", "rules", "with", "appropriate", "ingress", "and\n", "egress", "filters.\n", "'-j", "ACCEPT", "-p", "tcp", "--dport", "22", "-s", "192.168.1.0/24',\n", "Tests", "that", "sec", "group", "rules", "that", "DO", "NOT", "contain", "a", "CIDR", "(i.e.", "the\n", "rule", "contains", "a", "grantee", "group", "of", "instances)", "populates\n", "the", "returned", "iptables", "rules", "with", "appropriate", "ingress", "and\n", "egress", "filters", "after", "calling", "out", "to", "the", "network", "API", "for", "information\n", "about", "the", "instances", "in", "the", "grantee", "group.\n", "Emulate", "one", "of", "the", "instances", "in", "the", "grantee", "group", "being", "deleted\n", "in", "between", "when", "the", "spawn", "of", "this", "instance", "and", "when", "we", "set", "up\n", "network", "for", "that", "instance,", "and", "ensure", "that", "we", "do", "not", "crash", "and\n", "burn", "but", "just", "skip", "the", "deleted", "instance", "from", "the", "iptables", "filters"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/evacuate.py": ["False", "copy", "evacuate", "evacuate_v214", "evacuate_v2_29", "parameter_types"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_serversV21.py": ["CONF", "ControllerTest", "FAKE_UUID", "FIELDS", "False", "INSTANCE_IDS", "IPsPolicyEnforcementV21", "KeyError", "None", "ServerStatusTest", "ServersActionsJsonTestV239", "ServersAllExtensionsTestCase", "ServersControllerCreateTest", "ServersControllerCreateTestV232", "ServersControllerCreateTestV237", "ServersControllerCreateTestWithMock", "ServersControllerDeleteTest", "ServersControllerRebuildInstanceTest", "ServersControllerRebuildTestV219", "ServersControllerTest", "ServersControllerTestV219", "ServersControllerTestV29", "ServersControllerTriggerCrashDumpTest", "ServersControllerUpdateTest", "ServersControllerUpdateTestV219", "ServersInvalidRequestTestCase", "ServersPolicyEnforcementV21", "ServersViewBuilderTest", "True", "UnicodeDecodeError", "_api_mock", "_get_instance_mock", "_ip", "_self", "a", "addr", "address", "alias", "allowed", "api", "api_version_request", "arg", "args", "availability_zones", "base64", "body", "changes_since", "cls", "codec", "collections", "columns_to_join", "common", "compute", "compute_api", "compute_self", "constraint", "content", "context", "create", "create_kwargs", "create_mock", "ctrl", "ctxt", "datetime", "db", "db_inst", "db_list", "def_image_ref", "deleted_at", "desc", "description", "dict", "e", "encodeutils", "end_position", "enumerate", "ex", "exc", "exception", "expected", "expected_attrs", "expected_fault", "expected_flavor", "expected_image", "expected_links", "expected_msg", "expected_params", "expected_search_opts", "expected_server", "ext_info", "extension_info", "extensions", "fake", "fake_count", "fake_create", "fake_delete", "fake_gen_uuid", "fake_get", "fake_get_all", "fake_get_image", "fake_get_server", "fake_group", "fake_instance", "fake_instance_destroy", "fake_instance_get", "fake_instance_get_all_with_description", "fake_instance_get_all_with_locked", "fake_instance_get_by_uuid_not_found", "fake_keypair_server_create", "fake_limit_check", "fake_method", "fake_network", "fake_rebuild", "fake_schema", "fake_server", "fake_start_stop_invalid_state", "fake_start_stop_not_ready", "fake_update", "fakes", "fault", "filter_name", "fixed_ipv4", "fixed_ipv6", "fixtures", "flavor", "flavor_bookmark", "flavor_id", "flavor_ref", "flavors", "func", "get_all_mock", "get_flavor", "get_instance_mock", "get_min_ver", "get_mock", "glance", "group", "host_ids", "href_parts", "i", "id", "image", "image_bookmark", "image_href", "image_id", "image_ref", "image_service", "image_uuid", "index", "inst", "inst_dict", "inst_type", "instance", "instance_create", "instance_destroy_mock", "instance_get", "instance_id", "instance_obj", "instance_update", "instance_update_and_get_original", "instance_uuid", "ip", "ips", "is_admin", "iso8601", "jsonutils", "k", "key", "keypairs", "kw", "kwarg", "kwargs", "label", "labels", "len", "limit", "list_desc", "list_locked", "locked", "locked_by", "manager", "marker", "matchers", "metadata", "mock", "mock_check_quotas", "mock_create", "mock_get", "mock_get_all", "mock_get_flavor_by_flavor_id", "mock_get_instance", "mock_get_server", "mock_get_uuidi", "mock_get_ver", "mock_im", "mock_is_vol_back", "mock_numa", "mock_rebuild", "mock_save", "mock_trigger_crash_dump", "mock_update_instance", "models", "mox", "msg", "name", "net_uuid", "network", "networks", "new_return_server", "new_size", "next", "no_image", "nova", "nova_fixtures", "nova_utils", "num_servers", "numa_constraints_mock", "nw_cache", "nw_cache_info", "nw_info", "obj_list", "object", "objects", "old_create", "orig_size", "os_wsgi", "oslo_policy", "output", "params", "password", "policy", "port", "port_id", "priv0", "privates", "progress", "project_get_networks", "project_id", "pub0", "pub1", "pub2", "public6s", "public_network_uuid", "publics", "query_str", "quota", "range", "rebuild_mock", "req", "req_nets", "request", "requested_networks", "res", "res_dict", "resize_mock", "resource", "response", "result", "return_instance_with_host", "return_server", "return_servers", "return_servers_empty", "return_servers_with_host", "robj", "rule", "rule_name", "rules", "s", "s1_desc", "s1_locked", "s2_desc", "s2_locked", "s_id", "search_opts", "self", "selfhref", "server", "server1", "server2", "server_dict", "server_id", "server_list", "server_update_and_get_original", "server_uuid", "servers", "servers_links", "servers_list", "set_desc", "show_mock", "six", "size", "soft_delete_mock", "sort_dirs", "sort_keys", "start_position", "status", "str", "super", "tag", "tag_list", "tags", "task_state", "task_states", "test", "test_group", "testtools", "timeutils", "trigger_crash_dump_mock", "update_instance_mock", "url", "urlparse", "use_admin_context", "use_slave", "user_id", "uuid", "uuids", "uuidutils", "values", "version", "view_show_mock", "views", "vif", "vm_state", "vm_states", "webob", "wsgi_api_version", "Test", "getting", "servers", "by", "ip.\nShared", "implementation", "for", "tests", "below", "that", "create", "instance.\nutility", "function", "-", "check", "server_dict", "for", "admin_password", "length.\nutility", "function", "-", "check", "server_dict", "for", "admin_password", "absence.\nNegative", "test", "to", "make", "sure", "you", "can't", "pass", "'auto'", "before", "2.37\nShared", "implementation", "for", "tests", "below", "that", "create", "instance.\nTests", "of", "places", "we", "throw", "400", "Bad", "Request", "from.", "Server", "sort", "keys", "extension", "is", "enabled", "in", "v21", "so", "sort", "data", "is", "passed\n", "to", "the", "instance", "API", "and", "the", "sorted", "DB", "API", "is", "invoked\n", "duplicate", "networks", "are", "allowed", "only", "for", "nova", "neutron", "v2.0\n", "duplicate", "networks", "are", "allowed", "only", "for", "nova", "neutron", "v2.0\n", "Make", "sure", "we", "kept", "the", "addresses", "in", "order\n", "flavor", "is", "an", "integer", "ID\n", "Test", "when", "resize", "status,", "it", "maps", "list", "of", "vm", "states.\n", "Test", "getting", "servers", "by", "invalid", "status.\n", "Assert", "that", "'deleted'", "filter", "value", "is", "converted", "to", "boolean\n", "while", "calling", "get_all()", "method.\n", "Assert", "that", "invalid", "'deleted'", "filter", "value", "is", "converted", "to", "boolean\n", "False", "while", "calling", "get_all()", "method.\n", "Allowed", "by", "user\n", "OSAPI", "converts", "status", "to", "vm_state\n", "Allowed", "only", "by", "admins", "with", "admin", "API", "on\n", "Allowed", "by", "user\n", "OSAPI", "converts", "status", "to", "vm_state\n", "Allowed", "only", "by", "admins", "with", "admin", "API", "on\n", "Check", "that", "each", "returned", "server", "has", "the", "same", "'locked'", "value\n", "and", "'id'", "as", "they", "were", "created.\n", "Check", "that", "each", "returned", "server", "has", "the", "same", "'description'", "value\n", "and", "'id'", "as", "they", "were", "created.\n", "delete()", "should", "be", "called", "for", "instance", "which", "has", "never", "been", "active,\n", "even", "if", "reclaim_instance_interval", "has", "been", "set.\n", "make", "min_ram", "larger", "than", "our", "instance", "ram", "size\n", "make", "min_disk", "larger", "than", "our", "instance", "disk", "size\n", "make", "image", "size", "larger", "than", "our", "instance", "disk", "size\n", "Invalid", "non-printable", "control", "char", "in", "the", "desc.\n", "Invalid", "non-printable", "control", "char", "in", "the", "desc.\n", "TODO(cyeoh):", "bp-v3-api-unittests\n", "This", "needs", "to", "be", "ported", "to", "the", "os-networks", "extension", "tests\n", "def", "test_create_server_with_invalid_networks_parameter(self):\n", "self.ext_mgr.extensions", "=", "{'os-networks':", "'fake'}\n", "image_href", "=", "'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'\n", "flavor_ref", "=", "'http://localhost/123/flavors/3'\n", "body", "=", "{\n", "'server':", "{\n", "'name':", "'server_test',\n", "'imageRef':", "image_href,\n", "'flavorRef':", "flavor_ref,\n", "'networks':", "{'uuid':", "'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'},\n", "}\n", "}\n", "req", "=", "fakes.HTTPRequest.blank('/fake/servers')\n", "req.method", "=", "'POST'\n", "req.body", "=", "jsonutils.dump_as_bytes(body)\n", "req.headers[\"content-type\"]", "=", "\"application/json\"\n", "self.assertRaises(webob.exc.HTTPBadRequest,\n", "self.controller.create,\n", "req,\n", "body)\n", "Get", "the", "fake", "image", "service", "so", "we", "can", "set", "the", "status", "to", "deleted\n", "Get", "the", "fake", "image", "service", "so", "we", "can", "update", "the", "size", "of", "the", "image\n", "TODO(cyeoh):", "bp-v3-api-unittests\n", "This", "needs", "to", "be", "ported", "to", "the", "os-keypairs", "extension", "tests\n", "def", "test_create_instance_with_keypairs_enabled(self):\n", "self.ext_mgr.extensions", "=", "{'os-keypairs':", "'fake'}\n", "key_name", "=", "'green'\n\n", "params", "=", "{'key_name':", "key_name}\n", "old_create", "=", "compute_api.API.create\n\n", "#", "NOTE(sdague):", "key", "pair", "goes", "back", "to", "the", "database,\n", "#", "so", "we", "need", "to", "stub", "it", "out", "for", "tests\n", "def", "key_pair_get(context,", "user_id,", "name):\n", "return", "{'public_key':", "'FAKE_KEY',\n", "'fingerprint':", "'FAKE_FINGERPRINT',\n", "'name':", "name}\n\n", "def", "create(*args,", "**kwargs):\n", "self.assertEqual(kwargs['key_name'],", "key_name)\n", "return", "old_create(*args,", "**kwargs)\n\n", "self.stub_out('nova.db.key_pair_get',", "key_pair_get)\n", "self.stubs.Set(compute_api.API,", "'create',", "create)\n", "self._test_create_extra(params)\n\n", "TODO(cyeoh):", "bp-v3-api-unittests\n", "This", "needs", "to", "be", "ported", "to", "the", "os-networks", "extension", "tests\n", "def", "test_create_instance_with_networks_enabled(self):\n", "self.ext_mgr.extensions", "=", "{'os-networks':", "'fake'}\n", "net_uuid", "=", "'76fa36fc-c930-4bf3-8c8a-ea2a2420deb6'\n", "requested_networks", "=", "[{'uuid':", "net_uuid}]\n", "params", "=", "{'networks':", "requested_networks}\n", "old_create", "=", "compute_api.API.create\n", "def", "create(*args,", "**kwargs):\n", "result", "=", "[('76fa36fc-c930-4bf3-8c8a-ea2a2420deb6',", "None)]\n", "self.assertEqual(kwargs['requested_networks'],", "result)\n", "return", "old_create(*args,", "**kwargs)\n", "self.stubs.Set(compute_api.API,", "'create',", "create)\n", "self._test_create_extra(params)\n", "test", "with", "admin", "passwords", "disabled", "See", "lp", "bug", "921814\n", "The", "fact", "that", "the", "action", "doesn't", "raise", "is", "enough", "validation\n", "Tests", "that", "PciRequestAliasNotDefined", "is", "translated", "to", "a", "400", "error.\n", "The", "fact", "that", "the", "action", "doesn't", "raise", "is", "enough", "validation\n", "The", "fact", "that", "the", "action", "doesn't", "raise", "is", "enough", "validation\n", "The", "fact", "that", "the", "action", "doesn't", "raise", "is", "enough", "validation\n", "The", "fact", "that", "the", "action", "doesn't", "raise", "is", "enough", "validation\n", "Set", "the", "use_neutron", "flag", "to", "process", "requested", "networks.\n", "Create", "the", "server", "controller.\n", "Define", "a", "basic", "server", "create", "request", "body", "which", "tests", "can", "customize.\n", "Create", "a", "fake", "request", "using", "the", "2.37", "microversion.\n", "make", "sure", "it", "was", "a", "flavor", "not", "found", "error", "and", "not", "something", "else\n", "make", "sure", "it", "was", "a", "flavor", "not", "found", "error", "and", "not", "something", "else\n", "make", "sure", "it", "was", "a", "flavor", "not", "found", "error", "and", "not", "something", "else\n", "Tests", "that", "InvalidVolume", "is", "translated", "to", "a", "400", "error.\n", "Regardless", "of", "vm_state", "deleted", "servers", "should", "be", "DELETED\n", "set", "the", "power", "state", "of", "the", "instance", "to", "running\n", "Test", "create", "with", "malformed", "body.\n", "Test", "update", "with", "malformed", "body.\n", "This", "fake", "method", "should", "return", "the", "schema", "for", "expected", "version\n", "Return", "None", "will", "make", "the", "tests", "failed,", "that", "means", "there", "is", "something\n", "in", "the", "code.\n", "TODO(alex_xu):", "There", "isn't", "specified", "file", "for", "ips", "extension.", "Most", "of\n", "unittest", "related", "to", "ips", "extension", "is", "in", "this", "file.", "So", "put", "the", "ips", "policy\n", "enforcement", "tests", "at", "here", "until", "there", "is", "specified", "file", "for", "ips", "extension.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context.\n", "'mock_get_instance'", "helps", "to", "skip", "the", "whole", "logic", "of", "the", "action,\n", "but", "to", "make", "the", "test\n", "starting", "from", "version", "2.39", "no", "quota", "checks", "on", "Nova", "side", "are", "performed\n", "for", "'createImage'", "action", "after", "removing", "'image-metadata'", "proxy", "API"], "/Users/mehranhassani/repos/nova/nova/api/openstack/extensions.py": ["AttributeError", "Exception", "ExtensionsController", "False", "KeyError", "LOG", "None", "ResourceExtension", "True", "_", "_LE", "_LW", "__name__", "_alias", "abc", "alias", "args", "attr", "body", "collection", "collection_actions", "controller", "controller_exts", "custom_routes_fn", "decorator", "dict", "errors", "exc", "exception", "ext", "ext_data", "ext_factory", "ext_mgr", "extension", "extension_info", "extension_manager", "extensions", "f", "factory", "functools", "get_ext_method", "getattr", "id", "importutils", "inherits", "int", "isinstance", "kwargs", "list", "logging", "member_actions", "member_name", "msg", "name", "object", "parent", "req", "resources", "self", "six", "sorted", "super", "t_errors", "type", "updated", "webob", "wrapped", "wsgi", "Register", "extension", "with", "the", "extension", "manager.\nReturns", "a", "list", "of", "ResourceExtension", "objects.\nReturns", "a", "list", "of", "ControllerExtension", "objects.\nChecks", "for", "required", "methods", "in", "extension", "objects.\nLoad", "extensions", "specified", "on", "the", "command", "line.\nAdd", "top", "level", "resources", "to", "the", "OpenStack", "API", "in", "nova.\nName", "of", "the", "extension.\nAlias", "for", "the", "extension.\nVersion", "of", "the", "extension.", "The", "name", "of", "the", "extension,", "e.g.,", "'Fox", "In", "Socks'\n", "The", "alias", "for", "the", "extension,", "e.g.,", "'FOXNSOX'\n", "Description", "comes", "from", "the", "docstring", "for", "the", "class\n", "The", "timestamp", "when", "the", "extension", "was", "last", "updated,", "e.g.,\n", "'2011-01-22T19:25:27Z'\n", "TODO(dprince):", "implement", "extension", "links\n", "NOTE(dprince):", "the", "extensions", "alias", "is", "used", "as", "the", "'id'", "for", "show\n", "Do", "nothing", "if", "the", "extension", "doesn't", "check", "out\n", "NOTE(dprince):", "Extension", "aren't", "required", "to", "have", "resource\n", "extensions\n", "NOTE(Vek):", "Extensions", "aren't", "required", "to", "have\n", "controller", "extensions\n", "Load", "the", "factory\n", "Call", "it\n", "Note(cyeoh):", "Special", "case", "to", "handle\n", "Forbidden", "exceptions", "so", "every\n", "extension", "method", "does", "not", "need", "to", "wrap", "authorize\n", "calls.", "ResourceExceptionHandler", "silently\n", "converts", "NotAuthorized", "to", "HTTPForbidden\n", "Note(oomichi):", "Handle", "a", "validation", "error,", "which\n", "happens", "due", "to", "invalid", "API", "parameters,", "as", "an\n", "expected", "error.\n", "Handle", "an", "authorized", "exception,", "will", "be\n", "automatically", "converted", "to", "a", "HTTP", "401,", "clients\n", "like", "python-novaclient", "handle", "this", "error", "to\n", "generate", "new", "token", "and", "do", "another", "attempt."], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_hooks.py": ["Exception", "HookTestCase", "MockEntryPoint", "MockedHookTestCase", "None", "PLUGINS", "SampleHookA", "SampleHookB", "SampleHookC", "SampleHookExceptionPost", "SampleHookExceptionPre", "True", "a", "b", "c", "called", "called_order", "cls", "exception", "f", "hook_manager", "hooks", "kwargs", "len", "mgr", "name", "object", "op", "rv", "self", "stevedore", "super", "test", "x", "Tests", "for", "hook", "customization."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/xenapi/client/test_session.py": ["ApplySessionHelpersTestCase", "CallPluginTestCase", "FakeXapiSession", "None", "True", "XenAPI", "call_plugin_serialized", "callback", "create_session", "errno", "exc", "exception", "expected_version", "fn", "mock", "mock_call_plugin", "mock_create_session", "mock_get_software_version", "mock_platform_version", "mock_ref", "mock_timeout", "mock_uuid", "mock_verify", "mock_verify_plugin_version", "mock_version", "num_retries", "plugin", "retry_cb", "self", "sess", "session", "socket", "stubs", "super", "version", "xenapi_fake", "xenapi_sess", "First", "login", "fails,", "second", "login", "in", "except", "block", "succeeds,\n", "third", "login", "for", "the", "pool", "succeeds\n", "mark", "relax-xsm-sr-check=True", "in", "/etc/xapi.conf\n", "mark", "no", "relax-xsm-sr-check", "setting", "in", "/etc/xapi.conf\n", "mark", "no", "relax-xsm-sr-check", "in", "/etc/xapi.conf"], "/Users/mehranhassani/repos/nova/nova/policies/floating_ips_bulk.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "floating_ips_bulk_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/virt/xenapi/client/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/certificates.py": ["ALIAS", "CertificatesController", "None", "_", "_translate_certificate_view", "alias", "body", "cert", "cert_policies", "certificate", "common", "context", "e", "exception", "extensions", "id", "msg", "name", "nova", "pk", "private_key", "req", "resources", "self", "super", "version", "webob", "wsgi", "The", "x509", "Certificates", "API", "controller", "for", "the", "OpenStack", "API.\nReturn", "certificate", "information.\nCreate", "a", "certificate.\nCertificates", "support.", "TODO(oomichi):", "This", "seems", "a", "HTTPBadRequest", "case", "because", "of", "the\n", "above", "message.", "This", "will", "be", "changed", "with", "a", "microversion", "in", "the\n", "future.\n", "NOTE(gmann):", "Here", "should", "be", "201", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "resource", "certificate", "has", "been", "created\n", "completely", "when", "returning", "a", "response."], "/Users/mehranhassani/repos/nova/nova/virt/hyperv/rdpconsoleops.py": ["LOG", "__name__", "ctype", "host", "hostops", "instance", "logging", "object", "port", "self", "utilsfactory", "vm_id"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_pause_server.py": ["PauseServerPolicyEnforcementV21", "PauseServerTestsV21", "_api_version", "_fake_controller", "action", "admin_only_action_common", "controller_name", "exc", "exception", "fake_instance", "fakes", "get_instance_mock", "getattr", "instance", "mock", "pause_mock", "pause_server", "pause_server_v21", "rule_name", "self", "super", "test", "Re-mock", "this.\n", "Change", "the", "project_id", "in", "request", "context.\n", "Change", "the", "user_id", "in", "request", "context."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_compute_node.py": ["False", "NOW", "None", "ValueError", "_TestComputeNodeObject", "another_node", "base", "cls", "cn_get_all_by_host", "cn_get_by_h_and_n", "cn_get_by_svc_id", "compute", "compute_dict", "compute_node", "computes", "copy", "db", "db_mock", "exception", "expected", "fake_compute_node", "fake_compute_node_with_no_host", "fake_compute_node_with_svc_id", "fake_compute_with_resources", "fake_get_by_pagination", "fake_host_ip", "fake_hv_spec", "fake_numa_topology", "fake_numa_topology_db_format", "fake_old_compute_node", "fake_pci", "fake_pci_device_pools", "fake_resources", "fake_service", "fake_stats", "fake_stats_db_format", "fake_supported_hv_specs", "fake_supported_hv_specs_db_format", "fake_supported_instances", "get_mock", "host", "hv_spec", "inst", "jsonutils", "len", "mock", "mock_cn_get", "mock_create", "mock_delete", "mock_get", "mock_get_all", "mock_gu", "mock_obj_svc_get", "mock_search", "mock_update", "netaddr", "obj", "obj_val", "object", "objects", "ovo_base", "ovo_exc", "param_dict", "primitive", "resources", "self", "service", "set", "setattr", "test_objects", "timeutils", "uuidsentinel", "versions", "host_ip", "is", "coerced", "from", "a", "string", "to", "an", "IPAddress\n", "but", "needs", "to", "be", "converted", "to", "a", "string", "for", "the", "database", "format\n", "for", "backward", "compatibility,", "each", "supported", "instance", "object\n", "is", "stored", "as", "a", "list", "in", "the", "database\n", "FIXME(sbauza)", ":", "For", "compatibility", "checking,", "to", "be", "removed", "once", "we", "are", "sure\n", "that", "all", "computes", "are", "running", "latest", "DB", "version", "with", "host", "field", "in", "it.\n", "resources", "are", "passed", "from", "the", "virt", "drivers", "and", "copied", "into", "the", "compute_node\n", "NOTE", "(pmurray):", "host_ip", "is", "coerced", "to", "an", "IPAddress\n", "NOTE", "(pmurray):", "host_ip", "is", "coerced", "to", "an", "IPAddress\n", "copy", "in", "case", "the", "update", "has", "a", "side", "effect\n", "NOTE(pmurray):", "update_from_virt_driver", "does", "not", "require\n", "all", "fields", "to", "be", "present", "in", "resources.", "Validation", "of", "the\n", "resources", "data", "structure", "would", "be", "done", "in", "a", "different", "method.\n", "copy", "in", "case", "the", "update", "has", "a", "side", "effect\n", "copy", "in", "case", "the", "update", "has", "a", "side", "effect\n", "old", "computes", "don't", "provide", "allocation", "ratios", "to", "the", "table\n", "new", "computes", "provide", "allocation", "ratios", "defaulted", "to", "0.0\n", "old", "computes", "don't", "provide", "allocation", "ratios", "to", "the", "table"], "/Users/mehranhassani/repos/nova/tools/xenserver/destroy_cached_images.py": ["CONF", "False", "POSSIBLE_TOPDIR", "__name__", "_session", "cfg", "config", "destroy_opts", "destroyed", "eventlet", "len", "main", "nova", "os", "session", "sr_ref", "sys", "utils", "vm_utils", "If", "../nova/__init__.py", "exists,", "add", "../", "to", "Python", "search", "path,", "so", "that\n", "it", "will", "override", "what", "happens", "to", "be", "installed", "in", "/usr/(local/)lib/python..."], "/Users/mehranhassani/repos/nova/nova/hooks.py": ["Exception", "False", "FatalHookException", "HookManager", "LOG", "NS", "None", "True", "ValueError", "_", "_HOOKS", "_LE", "_LW", "__name__", "args", "e", "f", "func", "function", "functools", "getattr", "hook_method", "inner", "kwargs", "logging", "manager", "method_type", "msg", "name", "obj", "outer", "pass_function", "rv", "self", "stevedore", "super", "Clear", "loaded", "hooks.", "do", "stuff", "before", "wrapped", "callable", "runs\n", "do", "stuff", "after", "wrapped", "callable", "runs\n", "do", "stuff", "with", "wrapped", "function", "info\n", "do", "stuff", "with", "wrapped", "function", "info\n", "hook", "name", "=>", "hook", "manager"], "/Users/mehranhassani/repos/nova/nova/tests/unit/compute/test_virtapi.py": ["Exception", "FakeCompute", "False", "NotImplementedError", "TestException", "True", "VirtAPIBaseTest", "_failer", "and_i_ran", "args", "callback", "compute_manager", "context", "cover_api", "db", "do_test", "e_args", "event", "event_1_tag", "event_2_tag", "event_name", "events", "exception", "fake", "getattr", "instance", "kwargs", "len", "list", "m", "method", "mock", "mock_call", "object", "objects", "result", "run", "self", "super", "test", "timeout", "tuple", "virtapi", "NOTE(danms):", "FakeVirtAPI", "will", "convert", "the", "first", "argument", "to\n", "argument['id'],", "so", "expect", "that", "in", "the", "actual", "db", "call"], "/Users/mehranhassani/repos/nova/nova/conf/quota.py": ["True", "cfg", "conf", "quota_group", "quota_opts", "TODO(pumaranikar):", "Add", "a", "new", "config", "to", "select", "between", "the", "db_driver", "and\n", "the", "no_op", "driver", "using", "stevedore."], "/Users/mehranhassani/repos/nova/plugins/xenserver/xenapi/etc/xapi.d/plugins/migration.py": ["True", "__name__", "_rsync_vhds", "dest_path", "host", "imported_vhds", "instance_uuid", "ip_cmd", "logging", "move_vhds_into_sr", "output", "pluginlib_nova", "rsync_cmd", "rsync_proc", "rsync_progress", "seq_num", "session", "sr_path", "ssh_cmd", "staging_path", "transfer_vhd", "user", "utils", "uuid_stack", "vdi_uuid", "Moves", "the", "VHDs", "from", "their", "copied", "location", "to", "the", "SR.\nRsyncs", "a", "VHD", "to", "an", "adjacent", "host.", "Copyright", "2010", "OpenStack", "Foundation\n", "All", "Rights", "Reserved.\n\n", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "NOTE:", "XenServer", "still", "only", "supports", "Python", "2.4", "in", "it's", "dom0", "userspace\n", "which", "means", "the", "Nova", "xenapi", "plugins", "must", "use", "only", "Python", "2.4", "features\n", "If", "copying", "to", "localhost,", "don't", "use", "SSH\n", "NOTE(hillad):", "rsync's", "progress", "is", "carriage", "returned,", "requiring\n", "universal_newlines", "for", "real-time", "output."], "/Users/mehranhassani/repos/nova/nova/tests/unit/keymgr/test_conf_key_mgr.py": ["CONF", "ConfKeyManagerTestCase", "KeyError", "None", "ValueError", "_key", "actual_key", "args", "binascii", "bytes", "codecs", "conf_key_mgr", "context", "decode_hex", "encoded_key", "exception", "key", "key_bytes", "key_id", "key_id_1", "key_id_2", "key_manager", "kwargs", "len", "nova", "self", "super", "test", "ensure", "that", "the", "UUIDs", "are", "the", "same\n", "key", "won't", "actually", "be", "deleted"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api_migrations/migrate_repo/versions/003_host_mapping.py": ["Column", "DateTime", "False", "ForeignKeyConstraint", "Index", "Integer", "MetaData", "String", "Table", "True", "UniqueConstraint", "cell_mappings", "host_mappings", "meta", "migrate_engine"], "/Users/mehranhassani/repos/nova/nova/policies/services.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "services_policies"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/schemas/keypairs.py": ["False", "True", "copy", "create", "create_v20", "create_v210", "create_v22", "delete_query_schema_v20", "delete_query_schema_v210", "index_query_schema_v20", "index_query_schema_v210", "index_query_schema_v235", "parameter_types", "server_create", "server_create_v20", "show_query_schema_v20", "show_query_schema_v210"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_pci.py": ["ADMIN_API", "ExtendedHyervisorPciSampleJsonTest", "False", "None", "True", "api_sample_base", "collections", "context", "cpu_info", "fake_db_dev_1", "fake_db_dev_2", "fields", "hypervisor_id", "id", "jsonutils", "mock", "mock_obj", "mock_service", "mock_svc_get", "objects", "pci_device_pool", "response", "sample_dir", "self", "skip_msg", "subs", "super", "test_servers", "testtools", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/test_driver.py": ["AnyEventletEvent", "AssertionError", "AttributeError", "CONF", "CacheConcurrencyTestCase", "DiagFakeDomain", "EXPECT_ABORT", "EXPECT_FAILURE", "EXPECT_SUCCESS", "Exception", "FakeConfigGuest", "FakeConfigGuestDisk", "FakeExceptionDomain", "FakeLibvirtDriver", "FakeLibvirtPciDevice", "FakeLoopingCall", "FakeNetdiskDomain", "FakeNetworkInfo", "FakeNodeDevice", "FakeTime", "FakeVirtDomain", "False", "HostStateTestCase", "ImageBackend", "LXCSnapshotTests", "LibvirtConnTestCase", "LibvirtDriverTestCase", "LibvirtNonblockingTestCase", "LibvirtSnapshotTests", "LibvirtVolumeSnapshotTestCase", "LibvirtVolumeUsageTestCase", "None", "OSError", "OrderedDict", "REQUIRES_LOCKING", "StatResult", "True", "ValueError", "_", "_BaseSnapshotTests", "_EPHEMERAL_20_DEFAULT", "_attach_pci_devices", "_bandwidth", "_concurrency", "_connect_volume_side_effect", "_create_domain_and_network", "_create_test_instance", "_disconnect_volume", "_fake_NodeDevXml", "_fake_append_to_file", "_fake_convert_image", "_fake_cpu_info", "_fake_flush", "_fake_network_info", "_get", "_get_domain", "_get_existing_domain_xml", "_get_logd_output", "_get_memory_mb_total", "_get_memory_mb_used", "_get_prefix", "_handler", "_path_qcow", "_path_raw", "_supports_direct_io", "_test", "_test_consoles", "_to_obj", "_undefine_domain", "a", "acquire_port", "actjson", "actual", "actual_diska_xml", "actual_diskb_xml", "actualvf", "actualvfs", "address", "addresses", "admin_pass", "agent_enabled", "all_volumes", "allnodes", "apply_instance_filter", "arch", "arch_to_mock", "architecture", "args", "b", "backend", "backfile_path", "backing_file", "backup_made", "bandwidth", "base", "base_dir", "base_firewall", "basedir", "baseinst", "bckfile", "bd_info", "bdi", "bdi_size", "bdm", "bdm_mock", "bdmi", "bdms", "block_device_info", "block_device_info_get_mapping", "block_device_mapping", "block_device_obj", "block_migrate", "block_migration", "blockinfo", "bm_expected", "bool", "brick_exception", "builtins", "bus", "bytes_to_read", "c", "c1", "cache", "cache_name", "call", "call1", "call2", "called", "calls", "can_quiesce", "caps", "cell", "cell_mempages", "cellid", "cells_per_host", "cfg", "check", "check_instance_dir", "check_list", "check_setup_container", "checks", "choice_mock", "chown_side_effect", "cleanup", "cntx", "common_checks", "compression", "compute_info", "compute_ref", "conf", "conf_mock", "config", "config_disk", "conn", "conn_info", "connect_volume", "connection", "connection_info", "connection_supports_direct_io_stub", "connector", "console_device", "console_dir", "console_log", "container_dir", "context", "contextlib", "convert_calls", "copy", "copy_image_mock", "cores_per_socket", "count", "cpu", "cpu_arch", "cpu_info", "create", "create_args", "create_domain", "create_ephemeral_mock", "create_image_kwargs", "create_image_mock", "create_images_and_backing", "create_kwargs", "create_mock", "ct_instance", "ctxt", "current_mig_status", "d", "data", "data_gb", "datetime", "db", "db_mock", "ddt", "debug_mock", "default", "del_inst_failed", "delattr", "delete_instance_files", "deque", "dest", "dest_check_data", "dest_check_data_ret", "destroy_side_effect", "detach_encrypted_volumes", "dev", "dev_name", "device", "device_index", "device_type", "devices", "diags_time", "dict", "directio_supported", "dirpath", "disconnect_volume", "disk", "disk_api", "disk_available_mb", "disk_format", "disk_found", "disk_images", "disk_info", "disk_info_byname", "disk_info_json", "disk_info_path", "disk_info_text", "disk_inject_data", "disk_mapping", "disk_mock", "disk_params", "disk_paths", "disk_size_mock", "disk_type", "diska_xml", "diskb_xml", "diskconfig", "disks", "disks_created", "disks_to_copy", "disks_xml", "dltfile", "dmcrypt", "doc", "dom", "dom_mock", "dom_xml", "domain", "domain_disk_paths", "domain_info_records", "domain_xml", "done", "done1", "done2", "downtime_steps", "driver", "driver_block_device", "driver_discard", "drv", "drvr", "dsk", "dst_disk_info_path", "dstfile", "dummyxml", "e", "einval", "encodeutils", "encrypted", "encryption", "enumerate", "eph_default_ext", "eph_gb", "eph_name", "ephemeral_backing", "ephemeral_file_name", "ephemerals", "errno", "error", "etree", "event", "event_name", "eventlet", "events", "ex", "exc", "exception", "exception_class", "exe", "execute_mock", "exists", "expec_val", "expect", "expect_hpet", "expect_kernel", "expect_ramdisk", "expect_result", "expect_vf", "expect_xen_hvm", "expected", "expected_arg", "expected_config_drive_path", "expected_dev", "expected_device_cls", "expected_device_type", "expected_domain_disk_paths", "expected_exc", "expected_flags", "expected_kernel_ramdisk_paths", "expected_key", "expected_mig_status", "expected_pci_device_obj", "expected_properties", "expected_result", "expected_serial", "expected_switch", "expected_topo_dict", "expected_uri", "expected_usage", "expected_value", "expected_vcpus", "expected_xml", "expectvfs", "expeted_pci_slot", "extra_properties", "extra_specs", "f", "fake", "fake_arch", "fake_backend", "fake_baselineCPU", "fake_bdm", "fake_bdms", "fake_block_device", "fake_block_stats", "fake_conf", "fake_connector", "fake_copy_image", "fake_createWithFlags", "fake_create_domain", "fake_create_domain_and_network", "fake_debug", "fake_defineXML", "fake_delete_instance_files", "fake_destroy", "fake_disk_info_byname", "fake_disk_info_json", "fake_disks", "fake_dom", "fake_domXML1_with_pci", "fake_domXML1_without_pci", "fake_dom_xml", "fake_domain", "fake_enable_hairpin", "fake_error", "fake_execute", "fake_exists", "fake_extend", "fake_getCapabilities", "fake_getLibVersion", "fake_get_connector", "fake_get_domain", "fake_get_error_code", "fake_get_guest_xml", "fake_get_host_capabilities", "fake_get_host_ip_addr", "fake_get_info", "fake_get_instance_disk_info", "fake_get_interfaces", "fake_getitem", "fake_hard_reboot", "fake_has_min_version", "fake_image_meta", "fake_imagebackend", "fake_initialize_connection", "fake_inj_network", "fake_inst", "fake_instance", "fake_instance_path", "fake_is_storage_shared", "fake_job_info", "fake_lib_version", "fake_libvirt_utils", "fake_lookup", "fake_lxc_disk_handler", "fake_net", "fake_network", "fake_nodeDeviceLookupByName", "fake_node_device_lookup_by_name", "fake_none", "fake_open", "fake_os_path_exists", "fake_plug_vifs", "fake_post", "fake_post_method", "fake_prepare", "fake_pty", "fake_recover", "fake_recover_method", "fake_registerErrorHandler", "fake_safe_decode", "fake_sleep", "fake_stat", "fake_time", "fake_timer", "fake_times", "fake_to_xml", "fake_type", "fake_version", "fake_volume_id", "fake_xml", "fakeargs", "fakelibvirt", "fakelistDevices", "fakexml", "fallback_from_host", "feature", "feature1", "feature2", "feature_1", "features", "fetch_func", "fetch_image_mock", "field", "fields", "filename", "files", "fileutils", "filterref", "filters", "finish_event", "firewall", "firewall_driver", "fixtures", "flag", "flags", "flavor", "flavor_obj", "flavor_size", "fname", "forced_uri", "fpath", "fs", "func", "fw", "fw_driver", "generated_events", "get_by_volume_and_instance", "get_caps", "get_config", "get_cpu_count", "get_disk_info", "get_domain", "get_encryption_metadata", "get_guest", "get_host_cap_mock", "get_host_capabilities", "get_host_capabilities_stub", "get_host_ip_addr", "get_image", "get_image_metadata", "get_info", "get_info_from_bdm", "get_info_mock", "get_injection_info", "get_instance_path", "get_instance_pci_devs", "get_online_cpus", "get_online_cpus_mock", "get_vcpu_pin_set_mock", "get_volume_config", "get_volume_connector", "get_volume_encryptor", "getitem", "getsize_sideeffect", "glob", "got", "gotFiles", "got_dev", "got_device_bus", "got_device_dev", "got_device_type", "got_disk_targets", "got_disks", "got_topo", "got_topo_dict", "greenthread", "guest", "guest_arch", "guest_cfg", "guest_disk", "guest_numa_config", "guestarch", "h", "had_pci", "hardware", "has_min_version", "has_min_version_mock", "hasattr", "host", "host_cpu_arch", "host_cpu_archs", "host_topology", "hpet_map", "hv_type", "hv_ver", "hw_running", "hyp", "hyperv", "hypervisor_type", "hypervisor_uri_map", "hypervisors_to_check", "i", "id", "id_maps", "idmap", "idmaps", "ignored_states", "image", "image_backend", "image_disk_info", "image_id", "image_meta", "image_ref", "imagebackend", "imagecache", "images", "img_fmt", "imgmodel", "in_format", "index", "inf_exception", "info", "info_tuple", "initial_xml", "initialize_connection", "initiator", "inj_network", "injection_info", "ins_ref", "inst", "inst_base", "inst_info", "inst_obj", "inst_ref", "inst_sys_meta", "inst_topology", "instance", "instance_base", "instance_caps", "instance_cell", "instance_data", "instance_dict", "instance_dir", "instance_domains", "instance_filter_name", "instance_info", "instance_metadata", "instance_name", "instance_path", "instance_ref", "instance_topology", "instance_type", "instance_uuid", "instance_uuids", "instance_xml", "instances", "int", "interfaces", "ip", "is_able", "is_block_dev", "is_neutron", "is_same", "is_share_block", "is_shared_block_storage", "is_shared_instance_path", "isdir_sideeffect", "isinstance", "iter", "job_info_records", "jsonutils", "kb_mem", "kernel_fname", "kernel_id", "kernel_path", "kernel_ramdisk", "kernel_ramdisk_paths", "key", "kill", "klass", "kwargs", "launch_flags", "legacy", "len", "libvirt_driver", "libvirt_guest", "libvirt_migrate", "libvirt_utils", "libvirt_volume_drivers_copy", "libvirt_xml_path", "list", "listlvs", "live_snapshot", "lm_expected", "lockutils", "log_data", "log_file_device", "lookup", "loopingcall", "lt", "lv_ver", "lvm", "m", "manager", "map", "mappings", "matchers", "membacking", "memnode", "mempages", "mempages_0", "mempages_1", "metadata", "metadata_obj", "method", "method_name", "mget_domain", "mget_info", "migrate_data", "migrate_data_obj", "migrate_data_set", "migration", "min", "mkdir", "mkfs", "mock", "mock_ID", "mock_abort", "mock_acquire_port", "mock_apply_instance_filter", "mock_arch", "mock_attachDevice", "mock_backend", "mock_backing", "mock_bdms", "mock_block_device_info", "mock_build_device_metadata", "mock_cache", "mock_caps", "mock_cdn", "mock_check", "mock_check_discard", "mock_chown", "mock_clean", "mock_cleanup", "mock_close", "mock_compare", "mock_conf", "mock_config", "mock_conn", "mock_connect", "mock_connect_volume", "mock_connection", "mock_convert", "mock_convert_image", "mock_copy", "mock_copy_disk_path", "mock_copy_file", "mock_copy_image", "mock_cpu", "mock_create", "mock_create_cow", "mock_create_domain", "mock_create_domain_and_network", "mock_create_domand_and_network", "mock_create_images_and_backing", "mock_debug", "mock_define", "mock_del", "mock_delete_instance_files", "mock_delete_volume", "mock_destroy", "mock_destroy_volume", "mock_detach", "mock_detachDeviceFlags", "mock_detach_direct_passthrough_ports", "mock_detach_pci", "mock_detach_pci_devices", "mock_disconnect", "mock_disconnect_volume", "mock_disk_check", "mock_disk_info", "mock_dom", "mock_domain", "mock_domain_destroy", "mock_downtime_steps", "mock_driver", "mock_encryption_meta", "mock_encryptor", "mock_enough", "mock_ensure_tree", "mock_exec", "mock_execuate", "mock_execute", "mock_exist", "mock_exists", "mock_fetch_image", "mock_find_disk", "mock_flat_image", "mock_fsfreeze", "mock_fsthaw", "mock_fw", "mock_get", "mock_get_arch", "mock_get_bdi", "mock_get_by_uuid", "mock_get_by_volume_and_instance", "mock_get_caps", "mock_get_disk_info", "mock_get_domain", "mock_get_encryptor", "mock_get_ext", "mock_get_guest", "mock_get_guest_config", "mock_get_guest_xml", "mock_get_image_metadata", "mock_get_info", "mock_get_inst_path", "mock_get_instance", "mock_get_instance_disk_info", "mock_get_instance_path", "mock_get_instance_pci_devs", "mock_get_libversion", "mock_get_number_serial_ports", "mock_get_path", "mock_get_port_number", "mock_get_serial_ports_from_guest", "mock_get_size", "mock_get_volume_config", "mock_get_volume_size", "mock_get_xml", "mock_get_xml_desc", "mock_getlibver", "mock_getsize", "mock_getver", "mock_ggx", "mock_glob", "mock_guest", "mock_guest_time", "mock_hard_reboot", "mock_has_min_version", "mock_has_version", "mock_host", "mock_host_has_min_version", "mock_hostname", "mock_hp", "mock_ignored", "mock_image", "mock_image_backend", "mock_info", "mock_inject", "mock_inject_data", "mock_inst_obj_load_attr", "mock_inst_save", "mock_instance", "mock_instance_metadata", "mock_ips", "mock_is_booted_from_volume", "mock_is_shared_storage", "mock_isdir", "mock_job_info", "mock_lib_version", "mock_libv", "mock_list", "mock_list_domains", "mock_lm", "mock_load_file", "mock_lock", "mock_log", "mock_lookup", "mock_lookup_side_effect", "mock_loop", "mock_looping_call", "mock_loopingcall", "mock_lvm_disks", "mock_make_drive", "mock_managedSave", "mock_mapping", "mock_mig_save", "mock_migrate", "mock_migrateToURI3", "mock_min_version", "mock_mkdir", "mock_mkisofs", "mock_mkstemp", "mock_monitor", "mock_new_xml", "mock_numa", "mock_old_xml", "mock_open", "mock_order", "mock_orig_libvirt", "mock_path", "mock_path_exists", "mock_paths", "mock_pause", "mock_plug", "mock_plug_vifs", "mock_ports", "mock_postcopy_enabled", "mock_postcopy_switch", "mock_prepare_instance_filter", "mock_prepare_pci_devices_for_use", "mock_qemu", "mock_qemu_img_info", "mock_quiesce", "mock_rados", "mock_raw_to_qcow2", "mock_rbd", "mock_rbd_image", "mock_rebase", "mock_refresh", "mock_refresh_connection_info", "mock_release_port", "mock_rem_fs_create", "mock_rem_fs_remove", "mock_remove", "mock_remove_volumes", "mock_required_by", "mock_resolve", "mock_rmtree", "mock_running", "mock_save", "mock_serial", "mock_set_cache_mode", "mock_set_downtime", "mock_set_host_enabled", "mock_setup_basic_filtering", "mock_setup_container", "mock_shared", "mock_shared_block", "mock_should_switch", "mock_shutil", "mock_size", "mock_sleep", "mock_snap_create", "mock_snapshot", "mock_stat", "mock_storage", "mock_support", "mock_supports_direct_io", "mock_suspend", "mock_svc", "mock_sync_time", "mock_teardown", "mock_teardown_container", "mock_test_file", "mock_thread", "mock_time", "mock_type", "mock_undef", "mock_undefine", "mock_undefine_domain", "mock_unfilter", "mock_unlink", "mock_unplug", "mock_unplug_vifs", "mock_utime", "mock_uuid", "mock_vconfig", "mock_vcpu_to_cpu", "mock_version", "mock_verson", "mock_virDomain", "mock_vol_api", "mock_volume", "mock_volume_info", "mock_wait", "mock_walk", "mock_warn", "mock_warning", "mock_write", "mock_write_instance_config", "mock_write_to_file", "mock_xml", "mock_xml_with_disk", "mock_xml_without_disk", "mock_xmldesc", "mocked_get_xml_desc", "mocked_path_exists", "mode", "mox", "msg", "mupdate", "name", "names", "network_info", "network_info_inst", "network_model", "neutron_failure", "new_bdm", "new_connection_info", "new_file", "nic_id", "no_exist", "not_supported_exc", "nova", "numa_cfg_cell", "numa_topology", "numa_tune", "numatune", "nw_info", "obj_vif", "object", "objects", "old_connection_info", "old_virt", "on_completion", "on_execute", "open", "open_behavior", "opt", "os", "os_mach_type", "os_open", "os_open_stub", "os_type", "os_vif", "other", "other_exc", "out", "out_format", "output", "p", "pagesize", "params", "params_for_instance", "parser", "path", "paths", "pattern", "pause", "pci_device", "pci_device2", "pci_device_info", "pci_devices", "pci_list", "pci_manager", "pci_mock", "pci_utils", "plug_mock", "plug_vifs", "popen", "post_xml_callback", "power_on", "power_state", "powered_on", "prefix", "prepare", "prepare_instance_filter", "prev_max", "processutils", "properties", "property", "props", "pty_file", "quiesce", "raise_open", "raise_write", "ramdisk_fname", "ramdisk_id", "ramdisk_path", "random", "range", "rbd", "rbd_utils", "re", "real_exists", "real_open", "reboot", "rec", "receive", "recv_meta", "register_error_handler", "remove_args", "remove_kwargs", "require_quiesce", "res", "res_data", "rescue", "rescue_data", "rescue_dir", "rescue_file", "rescue_password", "resize_instance", "result", "ret", "retry_countdown", "retry_interval", "return_infos", "return_list", "return_shutdowns", "return_value", "return_values", "root_backing", "root_bdm", "root_disk", "rules_mock", "run_as_root", "save", "save_mock", "scheduled_action", "scheduled_action_executed", "second_call", "seconds_to_shutdown", "self", "sent_meta", "serial", "serial_enabled", "service_info", "service_mock", "service_ref", "set", "set_cache_mode", "setattr", "setitem", "setup_basic_filtering", "setup_container_call", "shared_storage", "should_log", "shutdown_attempts", "shutdown_count", "shutil", "side_effect", "sig1", "sig2", "signal", "six", "size", "snap_flags", "snap_flags_q", "snap_xml_src", "snapshot", "snapshot_id", "snp_name", "sockets_per_cell", "sorted", "source", "source_type", "spice_dict", "spice_enabled", "src", "src_disk_info_path", "srcfile", "start", "state", "staticmethod", "stats", "steps", "storage_ip", "str", "string_ver", "succeeds", "suffix", "super", "supported_fs", "suspend", "svc", "swap", "swap_mb", "swap_volume", "switch_values", "t", "tablet", "target", "target_connect_addr", "target_ret", "target_xml", "task_states", "teardown_call", "temp_dir", "temp_file", "terminal_device", "test", "test_create", "test_image_meta", "test_init_host", "test_instance", "test_mock", "test_pci_device", "test_power_state", "test_vcpu_model", "testuri", "text", "the_test", "theuuid", "thr1", "thr2", "threading", "threads_per_core", "time", "time_mock", "time_records", "timeout", "tmp_dir", "tmpdir", "tmpfile_path", "top", "topo", "topology", "tree", "tries", "type", "type_disk_map", "type_uri_map", "undefine", "unfilter_instance", "units", "unplug", "unrescue_xml_path", "uri", "use_cow", "utils", "utils_fixture", "uuid", "uuids", "uuidstr", "uuidutils", "v", "val", "value", "vconfig", "vcpu_model", "vcpu_model_1", "vcpus", "vdmock", "ver", "verify_base_size_mock", "version", "version_arg_found", "versionutils", "vif", "vif1", "vif2", "vif3", "vif_driver", "vif_type", "vifs", "vifs_already_plugged", "virt_type", "virtapi", "vm1", "vm2", "vm3", "vm4", "vm_states", "vmmode", "vnc_dict", "vnc_enabled", "vol", "vol_usage", "volume", "volume_drivers", "volume_fail", "volume_id", "volume_save", "wait", "wait1", "wait2", "wait_timeout", "want", "wantConfig", "wantFiles", "want_device_bus", "want_device_dev", "want_device_type", "write_bahavior", "write_to_file", "wwnns", "wwpns", "x", "xen_only", "xen_vm_mode", "xml", "xml_tmpl", "xmldoc", "xpath", "zip", "Defining", "mocks", "for", "LibvirtDriver(libvirt", "is", "not", "used).\nTest", "that", "unencrypted", "volumes", "are", "not", "disconnected", "with", "dmcrypt.\nTests", "that", "the", "xml", "is", "logged", "when", "defining", "the", "domain", "fails.\nFake", "connection", "object.\nTest", "for", "nova.virt.libvirt.libvirt_driver.LibvirtDriver.\nCreate", "a", "test", "instance.\nTest", "for", "LibvirtDriver.get_all_volume_usage.\nTest", "libvirtd", "calls", "are", "nonblocking.\nTests", "for", "libvirtDriver.volume_snapshot_create/delete.\nTest", "snapshot", "creation", "with", "file-based", "disk.\nTest", "snapshot", "creation", "with", "libgfapi", "network", "disk.\nDeleting", "newest", "snapshot", "--", "blockRebase.\nDeleting", "newest", "snapshot", "--", "blockRebase", "using", "relative", "flag\nDeleting", "older", "snapshot", "--", "blockCommit.\nDeleting", "older", "snapshot", "--", "blockCommit", "using", "relative", "flag\nDelete", "newest", "snapshot", "--", "blockRebase", "for", "libgfapi/network", "disk.\nDelete", "newest", "snapshot", "--", "blockRebase", "for", "libgfapi/network", "disk.\nDelete", "older", "snapshot", "--", "blockCommit", "for", "libgfapi/network", "disk.\nDelete", "older", "snapshot", "--", "blockCommit", "for", "libgfapi/network", "disk.\nRepeat", "all", "of", "the", "Libvirt", "snapshot", "tests,", "but", "with", "LXC", "enabled", "libvirt", ">=", "1.3.0", "nodedev-dumpxml\n", "root", "disk\n", "utils.synchronized()", "will", "create", "the", "lock_path", "for", "us", "if", "it\n", "doesn't", "already", "exist.", "It", "will", "also", "delete", "it", "when", "it's", "done,\n", "which", "can", "cause", "race", "conditions", "with", "the", "multiple", "threads", "we\n", "use", "for", "tests.", "So,", "create", "the", "path", "here", "so", "utils.synchronized()\n", "won't", "delete", "it", "out", "from", "under", "one", "of", "the", "threads.\n", "Ensures", "that", "the", "same", "fname", "cache", "runs", "at", "a", "sequentially.\n", "Thread", "1", "should", "run", "before", "thread", "2.\n", "Wait", "on", "greenthreads", "to", "assert", "they", "didn't", "raise", "exceptions\n", "during", "execution\n", "Ensures", "that", "two", "different", "fname", "caches", "are", "concurrent.\n", "Thread", "1", "should", "run", "before", "thread", "2.\n", "Wait", "for", "thread", "2", "to", "start.\n", "Wait", "on", "greenthreads", "to", "assert", "they", "didn't", "raise", "exceptions\n", "during", "execution\n", "m1.small\n", "normally", "loaded", "during", "nova-compute", "startup\n", "A", "fake", "libvirt.virConnect\n", "Creating", "mocks\n", "Customizing", "above", "fake", "if", "necessary\n", "Skip", "test", "if", "there's", "no", "currently", "planned", "new", "min", "version\n", "Test", "that", "a", "warning", "is", "logged", "if", "the", "libvirt", "version", "is", "less", "than\n", "the", "next", "required", "minimum", "version.\n", "assert", "that", "the", "next", "min", "version", "is", "in", "a", "warning", "message\n", "Skip", "test", "if", "there's", "no", "currently", "planned", "new", "min", "version\n", "Test", "that", "a", "warning", "is", "logged", "if", "the", "libvirt", "version", "is", "less", "than\n", "the", "next", "required", "minimum", "version.\n", "assert", "that", "the", "next", "min", "version", "is", "in", "a", "warning", "message\n", "Skip", "test", "if", "there's", "no", "currently", "planned", "new", "min", "version\n", "Test", "that", "a", "warning", "is", "not", "logged", "if", "the", "libvirt", "version", "is", "greater\n", "than", "or", "equal", "to", "NEXT_MIN_LIBVIRT_VERSION.\n", "assert", "that", "the", "next", "min", "version", "is", "in", "a", "warning", "message\n", "Skip", "test", "if", "there's", "no", "currently", "planned", "new", "min", "version\n", "Test", "that", "a", "warning", "is", "not", "logged", "if", "the", "libvirt", "version", "is", "greater\n", "than", "or", "equal", "to", "NEXT_MIN_QEMU_VERSION.\n", "assert", "that", "the", "next", "min", "version", "is", "in", "a", "warning", "message\n", "Tests", "disabling", "an", "enabled", "host.\n", "Tests", "enabling", "a", "disabled", "host.\n", "since", "disabled_reason", "is", "not", "set", "and", "not", "prefixed", "with", "\"AUTO:\",\n", "service", "should", "not", "be", "enabled.\n", "Tests", "enabling", "an", "enabled", "host.\n", "Tests", "disabling", "a", "disabled", "host.\n", "Tests", "that", "set_host_enabled", "will", "swallow", "exceptions", "coming", "from", "the\n", "db_api", "code", "so", "they", "don't", "break", "anything", "calling", "it,", "e.g.", "the\n", "_get_new_connection", "method.\n", "Make", "db.service_get_by_compute_host", "raise", "NovaException;", "this\n", "is", "more", "robust", "than", "just", "raising", "ComputeHostNotFound.\n", "TODO(walter-boring)", "add", "the", "fake", "in", "os-brick\n", "TODO(walter-boring)", "add", "the", "fake", "in", "os-brick\n", "NOTE(dkliban):", "Will", "fail", "if", "get_host_capabilities", "is", "called", "before\n", "registerErrorHandler\n", "setup", "fake", "data\n", "Tests", "that", "the", "parameters", "to", "the", "_get_guest_xml", "method\n", "are", "sanitized", "for", "passwords", "when", "logged.\n", "we", "don't", "care", "what", "the", "log", "message", "is,", "we", "just", "want", "to", "make", "sure\n", "our", "stub", "method", "is", "called", "which", "asserts", "the", "password", "is", "scrubbed\n", "Tests", "that", "a", "warning", "is", "logged", "once", "and", "only", "once", "when", "there", "is", "a", "bad\n", "BAD_LIBVIRT_NUMA_VERSIONS", "detected.\n", "assert", "the", "version", "is", "logged", "properly\n", "NOTE(ndipanov):", "we", "make", "sure", "that", "pin_set", "was", "taken", "into", "account\n", "when", "choosing", "viable", "cells\n", "Test", "that", "the", "pinning", "is", "correct", "and", "limited", "to", "allowed", "only\n", "Test", "that", "the", "pinning", "is", "correct", "and", "limited", "to", "allowed", "only\n", "Test", "that", "the", "pinning", "is", "correct", "and", "limited", "to", "allowed", "only\n", "Emulator", "must", "be", "pinned", "to", "union", "of", "cfg.cputune.vcpupin[*].cpuset\n", "Ensure", "vCPUs", "0-1", "are", "pinned", "on", "host", "CPUs", "4-5", "and", "2-3", "are\n", "set", "on", "host", "CPUs", "6-7", "according", "the", "realtime", "mask", "^0-1\n", "We", "ensure", "that", "emulator", "threads", "are", "pinned", "on", "host", "CPUs\n", "4-5", "which", "are", "\"normal\"", "vCPUs\n", "We", "ensure", "that", "the", "vCPUs", "RT", "are", "2-3", "set", "to", "the", "host", "CPUs\n", "which", "are", "6,", "7\n", "NOTE(jdg):", "For", "this", "specific", "test", "leave", "this", "blank\n", "This", "will", "exercise", "the", "failed", "code", "path", "still,\n", "and", "won't", "require", "fakes", "and", "stubs", "of", "the", "iscsi", "discovery\n", "It's", "necessary", "to", "check", "if", "the", "architecture", "is", "power,", "because\n", "power", "doesn't", "have", "support", "to", "ide,", "and", "so", "libvirt", "translate\n", "all", "ide", "calls", "to", "scsi\n", "make", "configdrive.required_by()", "return", "True\n", "Pick", "the", "first", "drive", "letter", "on", "the", "bus", "that", "is", "available\n", "as", "the", "config", "drive.", "Delete", "the", "last", "device", "hardcode", "as\n", "the", "config", "drive", "here.\n", "size", "doesn't", "matter\n", "encrypted\n", "care", "only", "about", "the", "PCI", "devices\n", "care", "only", "about", "the", "PCI", "devices\n", "the", "instance", "has", "'root=/dev/vda", "console=tty0", "console=ttyS0'", "set", "by\n", "default,", "so", "testing", "an", "empty", "string", "and", "None", "value", "in", "the\n", "os_command_line", "image", "property", "must", "pass\n", "Make", "sure", "the", "host", "arch", "is", "mocked", "as", "x86_64\n", "It's", "necessary", "to", "check", "if", "the", "architecture", "is", "power,", "because\n", "power", "doesn't", "have", "support", "to", "ide,", "and", "so", "libvirt", "translate\n", "all", "ide", "calls", "to", "scsi\n", "It's", "necessary", "to", "check", "if", "the", "architecture", "is", "power,", "because\n", "power", "doesn't", "have", "support", "to", "ide,", "and", "so", "libvirt", "translate\n", "all", "ide", "calls", "to", "scsi\n", "simulate", "an", "instance", "with", "os_type", "field", "defined\n", "disk", "format", "equals", "to", "ami\n", "container", "format", "not", "equals", "to", "bare\n", "Second", "time", "don't", "return", "anything", "about", "disk", "vdc", "so", "it", "looks", "removed\n", "Doubling", "the", "size", "of", "return", "list", "because", "we", "test", "with", "two", "guest", "power\n", "states\n", "ensure", "unlink(filepath)", "will", "actually", "remove", "the", "file", "by", "deleting\n", "the", "remaining", "link", "to", "it", "in", "close(fd)\n", "O_DIRECT", "is", "not", "supported", "on", "all", "Python", "runtimes,", "so", "on", "platforms\n", "where", "it's", "not", "supported", "(e.g.", "Mac),", "we", "can", "still", "test", "the", "code-path\n", "by", "stubbing", "out", "the", "value.\n", "`mock`", "seems", "to", "have", "trouble", "stubbing", "an", "attr", "that", "doesn't\n", "originally", "exist,", "so", "falling", "back", "to", "stubbing", "out", "the", "attribute\n", "directly.\n", "The", "O_DIRECT", "availability", "is", "cached", "on", "first", "use", "in\n", "LibvirtDriver,", "hence", "we", "re-create", "it", "here\n", "Hypervisors", "that", "only", "support", "vm_mode.HVM", "and", "Xen\n", "should", "not", "produce", "configuration", "that", "results", "in", "kernel\n", "arguments\n", "NOTE(sirp):", "empty", "strings", "don't", "roundtrip", "in", "lxml", "(they", "are\n", "converted", "to", "None),", "so", "we", "need", "an", "`or", "''`", "to", "correct", "for", "that\n", "This", "test", "is", "supposed", "to", "make", "sure", "we", "don't\n", "override", "a", "specifically", "set", "uri\n\n", "Deliberately", "not", "just", "assigning", "this", "string", "to", "CONF.connection_uri\n", "and", "checking", "against", "that", "later", "on.", "This", "way", "we", "make", "sure", "the\n", "implementation", "doesn't", "fiddle", "around", "with", "the", "CONF.\n", "ensure_filtering_fules_for_instance()", "finishes", "with", "timeout.\n", "Preparing", "mocks\n", "_fake_network_info", "must", "be", "called", "before", "create_fake_libvirt_mock(),\n", "as", "_fake_network_info", "calls", "importutils.import_class()", "and\n", "create_fake_libvirt_mock()", "mocks", "importutils.import_class().\n", "Start", "test\n", "_check_cpu_match\n", "mounted_on_same_shared_storage\n", "No", "need", "for", "the", "src_compute_info\n", "_check_cpu_match\n", "mounted_on_same_shared_storage\n", "No", "need", "for", "the", "src_compute_info\n", "Tests", "that", "check_can_live_migrate_destination", "returns", "the", "listen\n", "addresses", "required", "by", "check_can_live_migrate_source.\n", "Tests", "that", "when", "instance.vcpu_model.model", "is", "None,", "the", "host", "cpu\n", "model", "is", "used", "for", "live", "migration.\n", "_check_cpu_match\n", "mounted_on_same_shared_storage\n", "NOTE(danms):", "Compute", "manager", "would", "have", "set", "this,", "so", "set", "it", "here\n", "Test", "data\n", "Preparing", "mocks\n", "Preparing", "mocks\n", "start", "test\n", "start", "test\n", "start", "test\n", "anything", "else", "will", "return", "None\n", "Preparing", "mocks\n", "start", "test\n", "Preparing", "mocks\n", "start", "test\n", "Preparing", "mocks\n", "Start", "test\n", "Preparing", "mocks\n", "Start", "test\n", "Confirms", "recover", "method", "is", "called", "when", "exceptions", "are", "raised.\n", "Preparing", "data\n", "Preparing", "mocks\n", "start", "test\n", "destroy", "method", "may", "raise", "InstanceTerminationFailure", "or\n", "InstancePowerOffFailure,", "here", "use", "their", "base", "class", "Invalid.\n", "Expecting", "2", "GB", "for", "RAM,", "plus", "10", "GB", "for", "disk.root\n", "and", "1.5", "GB", "rounded", "to", "2", "GB", "for", "somevol,", "so", "14", "GB\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "in", "between", "VIR_DOMAIN_JOB_UNBOUNDED\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_NONE", "and", "finish_event", "is\n", "not", "ready", "yet\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_NONE", "and", "finish_event", "is\n", "ready\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_CANCELLED\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_FAILED\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "postcopy\n", "switch", "scheduled", "in", "between", "VIR_DOMAIN_JOB_UNBOUNDED\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "postcopy\n", "switch", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_NONE", "and\n", "finish_event", "is", "not", "ready", "yet\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "postcopy\n", "switch", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_NONE", "and\n", "finish_event", "is", "ready\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "postcopy\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_CANCELLED\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "after", "migration", "switched", "to", "postcopy\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "pause\n", "scheduled", "after", "migration", "switched", "to", "postcopy\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states,", "and", "postcopy\n", "scheduled", "in", "case", "of", "job", "type", "VIR_DOMAIN_JOB_FAILED\n", "A", "normalish", "sequence", "but", "we're", "too", "slow", "to", "see", "the\n", "completed", "job", "state\n", "A", "failed", "sequence", "where", "we", "see", "all", "the", "expected", "events\n", "A", "failed", "sequence", "where", "we", "are", "too", "slow", "to", "see", "the\n", "failed", "event\n", "A", "cancelled", "sequence", "where", "we", "see", "all", "the", "events\n", "We've", "setup", "4", "fake", "downtime", "steps", "-", "first", "value", "is", "the\n", "time", "delay,", "second", "is", "the", "downtime", "value\n", "Each", "one", "of", "these", "fake", "times", "is", "used", "for", "time.time()\n", "when", "a", "new", "domain_info_records", "entry", "is", "consumed.\n", "Times", "are", "chosen", "so", "that", "only", "the", "first", "3", "downtime\n", "steps", "are", "needed.\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states\n", "Each", "one", "of", "these", "fake", "times", "is", "used", "for", "time.time()\n", "when", "a", "new", "domain_info_records", "entry", "is", "consumed.\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states\n", "Each", "one", "of", "these", "fake", "times", "is", "used", "for", "time.time()\n", "when", "a", "new", "domain_info_records", "entry", "is", "consumed.\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states\n", "Each", "one", "of", "these", "fake", "times", "is", "used", "for", "time.time()\n", "when", "a", "new", "domain_info_records", "entry", "is", "consumed.\n", "A", "normal", "sequence", "where", "see", "all", "the", "normal", "job", "states\n", "A", "normal", "sequence", "where", "migration", "is", "switched", "to", "postcopy", "mode\n", "Assert", "that", "we", "did", "nothing\n", "Creating", "testdata\n", "Creating", "mocks\n", "Creating", "testdata\n", "Creating", "testdata,", "using", "temp", "dir.\n", "Creating", "mocks\n", "creating", "mocks\n", "creating", "mocks\n", "Test", "data\n", "Preparing", "mocks\n", "Set", "up", "the", "mock", "expectations\n", "Test", "data\n", "Preparing", "mocks\n", "NOTE(ndipanov):", "_get_disk_overcomitted_size_total", "calls", "this", "method\n", "without", "access", "to", "Nova's", "block", "device", "information.", "We", "want", "to", "make\n", "sure", "that", "we", "guess", "volumes", "mostly", "correctly", "in", "that", "case", "as", "well\n", "Preparing", "mocks\n", "_fake_network_info", "must", "be", "called", "before", "create_fake_libvirt_mock(),\n", "as", "_fake_network_info", "calls", "importutils.import_class()", "and\n", "create_fake_libvirt_mock()", "mocks", "importutils.import_class().\n", "Methods", "called", "directly", "by", "spawn()\n", "Methods", "called", "by", "_create_configdrive", "via", "post_xml_callback\n", "The", "config", "disk", "should", "be", "created", "by", "this", "callback,", "so", "we", "need\n", "to", "execute", "it.\n", "We", "should", "have", "imported", "'disk.config'\n", "We", "should", "have", "created", "a", "root", "disk", "and", "an", "ephemeral", "disk\n", "Volume-backed", "instance", "created", "without", "image\n", "Return", "a", "sorted", "list", "of", "created", "disks\n", "We", "should", "have", "created", "the", "ephemeral", "disk,", "and", "nothing", "else\n", "We", "should", "have", "created", "the", "ephemeral", "disk,", "and", "nothing", "else\n", "We", "should", "have", "created", "the", "root", "and", "ephemeral", "disks\n", "Volume-backed", "instance", "created", "without", "image\n", "Assert", "that", "kernel", "and", "ramdisk", "were", "fetched", "with", "fetch_raw_image\n", "and", "no", "size\n", "Test", "the", "precedence", "of", "swap", "disk", "size", "specified", "in", "both", "the", "bdm", "and\n", "the", "flavor.\n", "call", "copy_from_host", "ourselves", "because", "we", "mocked", "image.cache()\n", "further", "calls", "have", "no", "side", "effect\n", "raise", "an", "error", "only", "the", "first", "call\n", "Assert", "we", "called", "create_snap", "on", "the", "root", "disk\n", "span", "across", "only", "1", "file", "(with", "remaining", "bytes)\n", "span", "across", "only", "1", "file", "(exact", "bytes)\n", "span", "across", "2", "files", "(with", "remaining", "bytes)\n", "span", "across", "all", "files", "(exact", "bytes)\n", "span", "across", "all", "files", "with", "more", "bytes", "than", "available\n", "files", "are", "not", "available\n", "reset", "the", "file", "for", "other", "tests\n", "verify", "that", "the", "driver", "registers", "for", "the", "close", "callback\n", "and", "re-connects", "after", "receiving", "the", "callback\n", "Mock", "domain\n", "Mock", "domain\n", "Tests", "that", "a", "hard", "reboot", "is", "performed", "when", "a", "soft", "reboot", "results\n", "in", "raising", "a", "libvirtError.\n", "setup", "mocks\n", "any", "non-None", "value", "will", "suffice\n", "NOTE(mdbooth):", "_create_images_and_backing()", "passes", "a", "full", "path", "in\n", "'disk_name'", "when", "creating", "a", "disk.", "This", "is", "wrong,", "but", "happens", "to\n", "work", "due", "to", "handling", "by", "each", "individual", "backend.", "This", "will", "be\n", "fixed", "in", "a", "subsequent", "commit.\n\n", "We", "translate", "all", "the", "full", "paths", "into", "disk", "names", "here", "to", "make", "the\n", "test", "readable\n", "We", "should", "have", "called", "cache()", "on", "the", "root", "and", "ephemeral", "disks\n", "Check", "the", "structure", "of", "disk_info", "passed", "to\n", "_create_domain_and_network,", "but", "we", "don't", "care", "about", "any", "of", "the", "values\n", "Mock", "domain\n", "some", "more", "adjustments", "for", "the", "fake", "network_info", "so", "that\n", "the", "correct", "get_config", "function", "will", "be", "executed", "(vif's\n", "get_config_hw_veb", "-", "which", "is", "according", "to", "the", "real", "SRIOV", "vif)\n", "and", "most", "importantly", "the", "pci_slot", "which", "is", "translated", "to\n", "cfg.source_dev,", "then", "to", "PciDevice.address", "and", "sent", "to\n", "_detach_pci_devices\n", "fill", "the", "pci_devices", "of", "the", "instance", "so", "that\n", "pci_manager.get_instance_pci_devs", "will", "not", "return", "an", "empty", "list\n", "which", "will", "eventually", "fail", "the", "assertion", "for", "detachDeviceFlags\n", "Note:", "test", "detach_direct_passthrough_ports", "method", "for", "vif", "with", "config\n", "LibvirtConfigGuestInterface\n", "Note:", "test", "detach_direct_passthrough_ports", "method", "for", "vif", "with", "config\n", "LibvirtConfigGuestHostdevPCI\n", "fill", "the", "pci_devices", "of", "the", "instance", "so", "that\n", "pci_manager.get_instance_pci_devs", "will", "not", "return", "an", "empty", "list\n", "which", "will", "eventually", "fail", "the", "assertion", "for", "detachDeviceFlags\n", "NOTE(vish):", "verifies", "destroy", "doesn't", "raise", "if", "the", "instance", "disappears\n", "Tests", "that", "_destroy", "will", "retry", "3", "times", "to", "destroy", "the", "guest", "when", "an\n", "EBUSY", "is", "raised,", "but", "eventually", "times", "out", "and", "raises", "the", "libvirtError\n", "Tests", "that", "the", "_destroy", "attempt", "loop", "is", "broken", "when", "EBUSY", "is", "no\n", "longer", "raised.\n", "NOTE(wenjianhn):", "verifies", "undefine", "doesn't", "raise", "if", "the\n", "instance", "disappears\n", "Ensure", "destroy", "calls", "managedSaveRemove", "for", "saved", "instance.\n", "Ensure", "destroy", "calls", "managedSaveRemove", "for", "saved", "instance.\n", "NOTE(danms):", "We", "need", "to", "have", "found", "bdms", "for", "our", "instances,\n", "but", "we", "don't", "really", "need", "them", "to", "be", "complete", "as", "we", "just", "need\n", "to", "make", "it", "to", "our", "side_effect", "above.", "Exclude", "the", "last", "domain\n", "to", "simulate", "the", "case", "where", "we", "have", "an", "instance", "with", "no", "BDMs.\n", "Tests", "that", "we", "handle", "VolumeBDMPathNotFound", "gracefully.\n", "Handle", "just", "the", "NO_SUPPORT", "error\n", "We", "cache", "not", "supported", "status", "to", "avoid", "emitting", "too", "many", "logging\n", "messages.", "Clear", "this", "value", "to", "test", "the", "other", "exception", "case.\n", "Other", "errors", "should", "not", "be", "caught\n", "Generate", "mempages", "list", "per", "cell\n", "cells", "0\n", "cells", "1\n", "Guest.enable_hairpin", "is", "only", "called", "for", "nova-network.\n", "Test", "that", "detach_volume()", "method", "does", "not", "raise", "exception,\n", "if", "the", "instance", "does", "not", "exist.\n", "Ephemeral", "device", "name", "was", "correct", "so", "no", "changes\n", "Swap", "device", "name", "was", "incorrect", "so", "it", "was", "changed\n", "Volume", "device", "name", "was", "changed", "too,", "taking", "the", "bus", "into", "account\n", "Tests", "that", "we", "don't", "wait", "for", "events", "if", "we", "don't", "start", "the", "instance.\n", "NOTE(danms):", "Make", "unplug", "cause", "us", "to", "bail", "early,", "since\n", "we", "only", "care", "about", "how", "it", "was", "called\n", "Tests", "the", "cleanup", "method", "when", "migrate_data", "has\n", "is_shared_block_storage=True", "and", "destroy_disks=False.\n", "New", "config", "drives", "are", "stored", "in", "rbd", "but", "existing", "instances", "have\n", "config", "drives", "in", "the", "old", "location", "under", "the", "instances", "path.\n", "Test", "that", "the", "driver", "falls", "back", "to", "'flat'", "for", "config", "drive", "if", "it\n", "doesn't", "exist", "in", "rbd.\n", "Ensure", "that", "suspend()", "is", "only", "called", "on", "RUNNING", "or", "PAUSED", "instances\n", "Ensure", "that", "suspend()", "is", "never", "called", "with", "LXC\n", "Ensure", "that", "suspend()", "is", "never", "called", "for", "live", "snapshots\n", "Attributes", "which", "we", "need", "to", "be", "set", "so", "they", "don't", "touch", "the", "db,\n", "but", "it's", "not", "worth", "the", "effort", "to", "fake", "properly\n", "dest", "is", "different", "host", "case\n", "dest", "is", "same", "host", "case\n", "Note(Mike_D):", "The", "size", "of", "instance's", "ephemeral_gb", "is", "0", "gb.\n", "Such", "instance", "has", "not", "empty", "image_ref,", "but", "must", "be", "considered", "as\n", "booted", "from", "volume.\n", "Original", "instance", "config\n", "disk.swap", "should", "not", "be", "touched", "since", "it", "is", "skipped", "over\n", "disk.swap", "should", "not", "be", "touched", "since", "it", "is", "skipped", "over\n", "Re-size", "fake", "instance", "to", "20G", "root", "and", "1024M", "swap", "disk\n", "Destination", "is", "same", "host\n", "Migration", "is", "not", "implemented", "for", "LVM", "backed", "instances\n", "Check", "error", "on", "resize", "root", "disk", "down", "for", "rbd.\n", "The", "difference", "is", "that", "get_instance_disk_info", "always", "returns\n", "an", "emply", "list", "for", "rbd.\n", "Ephemeral", "size", "is", "not", "changed", "in", "this", "case", "(otherwise", "other", "check\n", "will", "raise", "the", "same", "error).\n", "Note(Mike_D):", "The", "size", "of", "this", "instance's", "ephemeral_gb", "is", "20", "gb.\n", "Old", "flavor,", "eph", "is", "20,", "real", "disk", "is", "3,", "target", "is", "2,", "fail\n", "Old", "flavor,", "eph", "is", "20,", "real", "disk", "is", "3,", "target", "is", "4\n", "disk.info", "exists", "on", "the", "source\n", "instance", "not", "found", "case\n", "instance", "is", "running", "case\n", "else", "case\n", "Don't", "write", "libvirt", "xml", "to", "disk\n", "NOTE(mdbooth):", "The", "following", "4", "mocks", "are", "required", "to", "execute\n", "get_guest_xml().\n", "Source", "disks", "are", "raw", "to", "test", "conversion\n", "Assert", "that", "we", "converted", "the", "root,", "ephemeral,", "and", "swap", "disks\n", "Implicitly", "assert", "that", "we", "did", "not", "convert", "the", "config", "disk\n", "Assert", "that", "we", "called", "cache()", "on", "kernel,", "ramdisk,", "disk,\n", "and", "disk.local.\n", "This", "results", "in", "creation", "of", "kernel,", "ramdisk,", "and", "disk.swap.\n", "This", "results", "in", "backing", "file", "check", "and", "resize", "of", "disk", "and", "disk.local.\n", "Assert", "that", "we", "created", "a", "snapshot", "for", "the", "root", "disk\n", "Assert", "that", "we", "didn't", "import", "a", "config", "disk\n", "Note", "that", "some", "path", "currently", "creates", "a", "config", "disk", "object,\n", "but", "only", "uses", "it", "for", "an", "exists()", "check.", "Therefore", "the", "object", "may\n", "exist,", "but", "shouldn't", "have", "been", "imported.\n", "We", "shouldn't", "be", "injecting", "data", "during", "migration\n", "NOTE(mdbooth):", "If", "we", "wanted", "to", "check", "the", "generated", "xml,", "we", "could\n", "insert", "a", "hook", "here\n", "config_drive", "is", "True", "by", "default,", "configdrive.required_by()\n", "returns", "True\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "Test", "with", "the", "configuration", "setted", "to", "false.\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "Test", "with", "the", "configuration", "setted", "to", "false.\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "key\n", "net\n", "metadata\n", "admin_pass\n", "files\n", "Asserts", "that", "we", "don't", "log", "an", "error", "when", "the", "interface", "device", "is", "not\n", "found", "on", "the", "guest", "after", "a", "libvirt", "error", "during", "detach.\n", "mock", "out", "that", "get_interface_by_cfg", "doesn't", "find", "the", "interface\n", "an", "error", "shouldn't", "be", "logged,", "but", "a", "warning", "should", "be", "logged\n", "NOTE(mdbooth):", "The", "following", "4", "mocks", "are", "required", "to", "execute\n", "get_guest_xml().\n", "Assert", "that", "we", "created", "the", "expected", "set", "of", "disks,", "and", "no", "others\n", "Assert", "that", "kernel", "and", "ramdisk", "were", "both", "created", "as", "raw\n", "Assert", "that", "the", "root", "rescue", "disk", "was", "created", "as", "the", "default", "type\n", "We", "expect", "the", "generated", "domain", "to", "contain", "disk.rescue", "and\n", "disk,", "in", "that", "order\n", "The", "generated", "domain", "xml", "should", "contain", "the", "rescue", "kernel\n", "and", "ramdisk\n", "Assert", "that", "we", "created", "the", "expected", "set", "of", "disks,", "and", "no", "others\n", "Assert", "that", "we", "imported", "the", "config", "disk\n", "Assert", "that", "the", "config", "disk,", "kernel", "and", "ramdisk", "were", "created", "as", "raw\n", "Assert", "that", "the", "root", "rescue", "disk", "was", "created", "as", "the", "default", "type\n", "We", "expect", "the", "generated", "domain", "to", "contain", "disk.rescue,", "disk,", "and\n", "disk.config.rescue", "in", "that", "order\n", "The", "generated", "domain", "xml", "should", "contain", "the", "rescue", "kernel\n", "and", "ramdisk\n", "NOTE(gcb):", "etree.tostring(node)", "returns", "an", "extra", "line", "with\n", "some", "white", "spaces,", "need", "to", "strip", "it.\n", "make", "a", "copy", "of", "the", "normal", "list", "and", "add", "a", "volume", "driver", "that", "raises\n", "the", "handled", "os-brick", "exception", "when", "imported.\n", "make", "sure", "we", "didn't", "register", "the", "invalid", "volume", "driver\n", "make", "sure", "we", "logged", "something\n", "verify", "bootable", "volume", "device", "path", "also\n", "Test", "bug", "962840.\n", "creating", "instance\n", "create", "domain", "info\n", "alternate", "domain", "info", "with", "network-backed", "snapshot", "chain\n", "XML", "with", "netdisk", "attached,", "and", "1", "snapshot", "taken\n", "Older", "versions", "of", "libvirt", "may", "be", "missing", "these.\n", "Older", "versions", "of", "libvirt", "may", "be", "missing", "these.\n", "libvirt", "lib", "doesn't", "have", "VIR_DOMAIN_BLOCK_REBASE_RELATIVE", "flag\n", "libvirt", "lib", "doesn't", "have", "VIR_DOMAIN_BLOCK_COMMIT_RELATIVE\n", "Deleting", "newest", "and", "last", "snapshot", "of", "a", "volume\n", "with", "blockRebase.", "So", "base", "of", "the", "new", "image", "will", "be", "null.\n", "See", "virDomainBlockJobType", "enum\n", "Deleting", "newest", "and", "last", "snapshot", "of", "a", "network", "attached", "volume\n", "with", "blockRebase.", "So", "base", "of", "the", "new", "image", "will", "be", "null.\n", "libvirt", "lib", "doesn't", "have", "VIR_DOMAIN_BLOCK_REBASE_RELATIVE\n", "libvirt", "lib", "doesn't", "have", "VIR_DOMAIN_BLOCK_COMMIT_RELATIVE\n", "Create", "new", "image.", "It", "will", "be", "updated", "in", "snapshot", "method\n", "To", "work", "with", "it", "from", "snapshot,", "the", "single", "image_service", "is", "needed\n", "Assign", "different", "image_ref", "from", "nova/images/fakes", "for", "testing", "ami\n", "Assign", "an", "image", "with", "an", "architecture", "defined", "(x86_64)\n", "Ensure", "that", "the", "direct_snapshot", "attempt", "was", "cleaned", "up\n", "Ensure", "that", "the", "direct_snapshot", "attempt", "was", "cleaned", "up"], "/Users/mehranhassani/repos/nova/nova/pci/manager.py": ["CONF", "LOG", "None", "PciDevTracker", "_LW", "__name__", "all_devs", "any", "cfg", "collections", "context", "dev", "dev_obj", "device", "devices", "devices_json", "devs", "e", "exception", "exist_addrs", "existed", "fields", "freed_devs", "inst", "instance", "instance_cells", "instance_numa_topology", "instance_uuid", "instances", "jsonutils", "len", "list", "logging", "mig", "migrations", "new_addrs", "new_value", "next", "node_id", "object", "objects", "orphans", "parents", "pci_dev", "pci_device", "pci_devices", "pci_mapping", "pci_requests", "property", "request_id", "self", "set", "sign", "stale", "staticmethod", "stats", "super", "uuid", "whitelist", "x", "Ensures", "that", "devices", "are", "ordered", "in", "ASC", "so", "VFs", "will", "come\n", "after", "their", "PFs.\n", "NOTE(ndipanov):", "Removed", "devs", "are", "pruned", "from\n", "self.pci_devs", "on", "save()", "so", "we", "need", "to", "make", "sure", "we\n", "are", "not", "looking", "at", "removed", "ones", "as", "we", "may", "build", "up\n", "the", "tree", "sooner", "than", "they", "are", "pruned.\n", "Note(yjiang5):", "remove", "the", "device", "by", "force", "so", "that\n", "db", "entry", "is", "cleaned", "in", "next", "sync.\n", "Note(yjiang5):", "no", "need", "to", "update", "stats", "if", "an", "assigned\n", "device", "is", "hot", "removed.\n", "Pci", "properties", "may", "change", "while", "assigned", "because", "of\n", "hotplug", "or", "config", "changes.", "Although", "normally", "this", "should\n", "not", "happen.\n", "As", "the", "devices", "have", "been", "assigned", "to", "an", "instance,\n", "we", "defer", "the", "change", "till", "the", "instance", "is", "destroyed.\n", "We", "will", "not", "sync", "the", "new", "properties", "with", "database\n", "before", "that.\n", "TODO(yjiang5):", "Not", "sure", "if", "this", "is", "a", "right", "policy,", "but\n", "at", "least", "it", "avoids", "some", "confusion", "and,", "if", "needed,\n", "we", "can", "add", "more", "action", "like", "killing", "the", "instance\n", "by", "force", "in", "future.\n", "Find", "the", "matching", "pci", "device", "in", "the", "pci", "resource", "tracker.\n", "Once", "found,", "free", "it.\n", "Note(yjiang5):", "When", "an", "instance", "is", "resized,", "the", "devices", "in", "the\n", "destination", "node", "are", "claimed", "to", "the", "instance", "in", "prep_resize", "stage.\n", "However,", "the", "instance", "contains", "only", "allocated", "devices\n", "information,", "not", "the", "claimed", "one.", "So", "we", "can't", "use\n", "instance['pci_devices']", "to", "check", "the", "devices", "to", "be", "freed.\n", "need", "to", "copy", "keys,", "because", "the", "dict", "is", "modified", "in", "the", "loop", "body\n", "need", "to", "copy", "keys,", "because", "the", "dict", "is", "modified", "in", "the", "loop", "body"], "/Users/mehranhassani/repos/nova/nova/tests/unit/monkey_patch_example/__init__.py": ["CALLED_FUNCTION", "args", "function", "kwarg", "name", "wrapped_func", "Example", "Module", "for", "testing", "utils.monkey_patch()."], "/Users/mehranhassani/repos/nova/nova/policies/flavor_access.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "flavor_access_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/test_fake.py": ["None", "True", "baseinst", "driver", "fake", "inst", "self", "test"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/libvirt/volume/test_scaleio.py": ["None", "brick_conn_vol", "conf", "conn", "connector", "data", "disk_info", "libvirt_driver", "mock", "scaleio", "self", "sio", "test_volume"], "/Users/mehranhassani/repos/nova/nova/virt/libvirt/imagecache.py": ["CONF", "False", "ImageCacheManager", "LOG", "OSError", "True", "_LE", "_LI", "_LW", "__name__", "_inner_remove_old_enough_file", "age", "all_instances", "backing_file", "backing_path", "base_dir", "base_file", "base_path", "context", "digest_size", "disk_path", "e", "encodeutils", "ent", "entpath", "error_image", "error_images", "exists", "fingerprint", "get_info_filename", "hashlib", "image_id", "image_in_use", "image_resized", "image_small", "imagecache", "img", "img_id", "instances", "inuse_backing_images", "inuse_images", "is_valid_info_file", "len", "libvirt_utils", "local", "lock_file", "lockutils", "logging", "m", "maxage", "mtime", "names", "nova", "original", "os", "path", "processutils", "re", "regexp", "remote", "remove_lock", "resize_re", "result", "running", "self", "set", "signature", "six", "staticmethod", "super", "time", "utils", "Test", "if", "a", "given", "path", "matches", "the", "pattern", "for", "info", "files.\nReset", "state", "variables", "used", "for", "each", "pass.\nStore", "a", "base", "image", "for", "later", "examination.\nStore", "base", "swap", "images", "for", "later", "examination.\nList", "the", "backing", "images", "currently", "in", "use.\nRemove", "a", "single", "swap", "or", "base", "file", "if", "it", "is", "old", "enough.\nRemove", "a", "single", "swap", "base", "file", "if", "it", "is", "old", "enough.\nRemove", "a", "single", "base", "file", "if", "it", "is", "old", "enough.\nHandle", "the", "checks", "for", "a", "single", "base", "image.", "TODO(mdbooth):", "In", "Newton", "we", "ignore", "these", "files,", "because", "if\n", "we're", "on", "shared", "storage", "they", "may", "be", "in", "use", "by", "a", "pre-Newton\n", "compute", "host.", "However,", "we", "have", "already", "removed", "all", "uses", "of\n", "these", "files", "in", "Newton,", "so", "once", "we", "can", "be", "sure", "that", "all\n", "compute", "hosts", "are", "running", "at", "least", "Newton", "(i.e.", "in", "Ocata),\n", "we", "can", "be", "sure", "that", "nothing", "is", "using", "info", "files", "any", "more.\n", "Therefore", "in", "Ocata,", "we", "should", "update", "this", "to", "simply", "delete\n", "these", "files", "here,", "i.e.:\n", "os.unlink(path)\n\n", "This", "will", "obsolete", "the", "code", "to", "cleanup", "these", "files", "in\n", "_remove_old_enough_file,", "so", "when", "updating", "this", "code", "to\n", "delete", "immediately,", "the", "cleanup", "code", "in\n", "_remove_old_enough_file", "can", "be", "removed.\n\n", "This", "cleanup", "code", "will", "delete", "all", "info", "files", "the", "first\n", "time", "it", "runs", "in", "Ocata,", "which", "means", "we", "can", "delete", "this\n", "block", "entirely", "in", "P.\n", "(for", "bug", "1261442)\n", "The", "original", "file", "from", "glance\n", "An", "older", "naming", "style", "which", "can", "be", "removed", "sometime", "after", "Folsom\n", "Resized", "images\n", "NOTE(mikal):", "recheck", "that", "the", "file", "is", "old", "enough,", "as", "a", "new\n", "user", "of", "the", "file", "might", "have", "come", "along", "while", "we", "were", "waiting\n", "for", "the", "lock\n", "TODO(mdbooth):", "We", "have", "removed", "all", "uses", "of", "info", "files", "in\n", "Newton", "and", "we", "no", "longer", "create", "them,", "but", "they", "may", "still\n", "exist", "from", "before", "we", "upgraded,", "and", "they", "may", "still", "be\n", "created", "by", "older", "compute", "hosts", "if", "we're", "on", "shared", "storage.\n", "While", "there", "may", "still", "be", "pre-Newton", "computes", "writing", "here,\n", "the", "only", "safe", "place", "to", "delete", "info", "files", "is", "here,\n", "when", "deleting", "the", "cache", "entry.", "Once", "we", "can", "be", "sure", "that\n", "all", "computes", "are", "running", "at", "least", "Newton", "(i.e.", "in", "Ocata),\n", "we", "can", "delete", "these", "files", "unconditionally", "during", "the\n", "periodic", "task,", "which", "will", "make", "this", "code", "obsolete.\n", "NOTE(jichenjc)", "The", "lock", "file", "will", "be", "constructed", "first\n", "time", "the", "image", "file", "was", "accessed.", "the", "lock", "file", "looks\n", "like", "nova-9e881789030568a317fad9daae82c5b1c65e0d4a\n", "or", "nova-03d8e206-6500-4d91-b47d-ee74897f9b4e\n", "according", "to", "the", "original", "file", "name\n", "Determine", "what", "images", "are", "on", "disk", "because", "they're", "in", "use\n", "Elements", "remaining", "in", "unexplained_images", "might", "be", "in", "use\n", "Anything", "left", "is", "an", "unknown", "base", "image\n", "Dump", "these", "lists\n", "That's", "it\n", "NOTE(mikal):", "The", "new", "scheme", "for", "base", "images", "is", "as", "follows", "--", "an\n", "image", "is", "streamed", "from", "the", "image", "service", "to", "_base", "(filename", "is", "the\n", "sha1", "hash", "of", "the", "image", "id).", "If", "CoW", "is", "enabled,", "that", "file", "is", "then\n", "resized", "to", "be", "the", "correct", "size", "for", "the", "instance", "(filename", "is", "the\n", "same", "as", "the", "original,", "but", "with", "an", "underscore", "and", "the", "resized", "size\n", "in", "bytes).", "This", "second", "file", "is", "then", "CoW'd", "to", "the", "instance", "disk.", "If\n", "CoW", "is", "disabled,", "the", "resize", "occurs", "as", "part", "of", "the", "copy", "from", "the\n", "cache", "to", "the", "instance", "directory.", "Files", "ending", "in", "_sm", "are", "no", "longer\n", "created,", "but", "may", "remain", "from", "previous", "versions.\n", "reset", "the", "local", "statistics\n", "read", "the", "cached", "images\n", "read", "running", "instances", "data\n", "perform", "the", "aging", "and", "image", "verification"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_consoles.py": ["ConsolesSamplesJsonTest", "response", "sample_dir", "self", "server_uuid", "super", "test_servers", "uuid", "noqa", "-", "only", "for", "cfg"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/api.py": ["AttributeError", "CONF", "Constraint", "DeleteFromSelect", "EqualityCondition", "Exception", "False", "InequalityCondition", "LOG", "MetaData", "NoSuchTableError", "None", "PER_PROJECT_QUOTAS", "QUOTA_SYNC_FUNCTIONS", "Table", "True", "UpdateBase", "ValueError", "_", "_DEFAULT_QUOTA_NAME", "_LE", "_LI", "_LW", "_SHADOW_TABLE_PREFIX", "__name__", "_action_get_by_request_id", "_action_get_last_created_by_instance_uuid", "_aggregate_get_query", "_aggregate_metadata_get_query", "_archive_deleted_rows_for_table", "_archive_if_instance_deleted", "_block_device_mapping_get_query", "_build_instance_get", "_calculate_overquota", "_cell_get_by_name_query", "_check_instance_exists_in_project", "_compute_node_fetchall", "_compute_node_select", "_context_manager_from_context", "_create_quota_usage_if_missing", "_db_connection_type", "_dict_with_extra_specs", "_dnsdomain_get_or_create", "_ec2_instance_get_query", "_ec2_snapshot_get_query", "_ec2_volume_get_query", "_exact_instance_filter", "_fixed_ip_count_by_project", "_fixed_ip_get_by_address", "_flavor_access_query", "_flavor_extra_specs_get_query", "_flavor_get_id_from_flavor", "_flavor_get_id_from_flavor_query", "_flavor_get_query", "_floating_ip_count_by_project", "_floating_ip_get_all", "_floating_ip_get_by_address", "_from_legacy_values", "_get_associated_fixed_ips_query", "_get_db_conf", "_get_project_user_quota_usages", "_get_regexp_ops", "_get_sec_group_models", "_handle_objects_related_type_conversions", "_instance_data_get_for_user", "_instance_extra_create", "_instance_get_all_query", "_instance_get_all_uuids_by_host", "_instance_get_by_uuid", "_instance_group_count_by_project_and_user", "_instance_group_get_query", "_instance_group_id", "_instance_group_members_add", "_instance_group_model_get_query", "_instance_group_policies_add", "_instance_metadata_get_multi", "_instance_metadata_get_query", "_instance_metadata_update_in_place", "_instance_pcidevs_get_multi", "_instance_system_metadata_get_multi", "_instance_system_metadata_get_query", "_instance_update", "_instances_fill_metadata", "_ip_range_splitter", "_is_quota_refresh_needed", "_manual_join_columns", "_metadata_refs", "_network_get", "_network_get_query", "_network_ips_query", "_project_usages", "_quota_reservations_query", "_quota_usage_create", "_quota_usage_get_all", "_refresh_quota_usages", "_refresh_quota_usages_if_needed", "_regex_instance_filter", "_reservation_create", "_retry_instance_update", "_safe_regex_mysql", "_scrub_empty_str_values", "_security_group_count_by_project_and_user", "_security_group_ensure_default", "_security_group_get_by_names", "_security_group_get_query", "_security_group_rule_create", "_security_group_rule_get_default_query", "_security_group_rule_get_query", "_sort_key", "_sync_fixed_ips", "_sync_floating_ips", "_sync_instances", "_sync_security_groups", "_sync_server_groups", "_tag_instance_filter", "_task_log_get_query", "_to_list", "_validate_unique_server_name", "_virtual_interface_query", "access_ref", "access_refs", "action", "action_id", "action_ref", "actions", "actual", "address", "agent_build_id", "agent_build_ref", "agg", "agg_cols", "aggregate", "aggregate_by_name", "aggregate_get", "aggregate_id", "aggregate_metadata_add", "aliased", "all_keys", "all_members", "allow_updates", "allpols", "already_existing", "already_existing_keys", "and_", "api_context_manager", "architecture", "args", "asc", "associate", "attempt", "auto_assigned", "availability_zone", "az", "base_query", "bdm_id", "bdm_ref", "begin", "binaries", "binary", "block_device", "block_size", "bw_in", "bw_out", "bw_usage", "bwusage", "c", "candidates", "cell", "cell_name", "cell_query", "certificate_ref", "changes_since", "cidr", "class_name", "clause", "cleaned", "cn_tbl", "col", "collections", "column", "column_attr", "columns", "columns_to_join", "columns_to_join_new", "compare", "compiler", "compiles", "compute_host", "compute_id", "compute_node_get", "compute_node_get_model", "compute_node_ref", "compute_ref", "condemned", "condition", "conditions", "conf", "conf_group", "confirm_window", "conflict_task_state", "conflicts_actual", "conflicts_expected", "conn", "connection", "console", "console_id", "console_type", "constraint", "contains_eager", "context", "convert_objects_related_datetimes", "copy", "count", "count_all", "count_hit", "create_values", "created", "ctxt", "ctxt_mgr", "current_time", "current_usage", "data", "datetime", "datetime_keys", "datum", "db_agg", "db_connection", "db_exc", "db_regexp_op", "db_string", "db_type", "dct", "default_dir", "default_dir_value", "default_group", "default_keys", "default_rule", "default_rules", "delete", "delete_statement", "deleted", "deleted_actions", "deleted_column", "deleted_instances", "delta", "deltas", "desc", "dest_compute", "dev_addr", "device", "device_name", "dict", "disabled", "disassociate_host", "disassociate_project", "dns_ref", "dnsdomain_get", "domain_ref", "e", "ec2_id", "ec2_instance_create", "ec2_instance_get_by_id", "ec2_instance_ref", "ec2_snapshot_ref", "ec2_volume_ref", "element", "elevated", "end", "engine", "enginefacade", "enumerate", "errors", "event", "event_id", "event_ref", "events", "ex", "exact_match_filter_names", "exc", "exc_props", "exception", "exception_checker", "excutils", "existing", "existing_keys", "expected", "expected_field", "expected_values", "expire", "extra", "extra_specs", "f", "false", "fault_ref", "faults_tbl", "field", "fields", "filled_instances", "filter_block", "filter_dict", "filter_kwargs", "filter_name", "filter_val", "filters", "fip", "first_tag", "fixed_address", "fixed_host_filter", "fixed_ip_id", "fixed_ip_ids", "fixed_ip_query", "fixed_ip_ref", "flavor_id", "float_ip_ref", "floating_address", "floating_ip", "floating_ip_ref", "floating_ip_refs", "floating_ips", "force", "force_refresh", "fqdomain", "frozenset", "func", "functools", "fw_rule_ref", "get_context_manager", "get_engine", "get_network", "getattr", "group", "group_id", "group_ids", "group_member", "group_name", "group_names", "group_names_from_models", "group_uuid", "hidden", "host", "host_filter", "host_id", "host_ref", "hv_type", "hyp_hostname", "hypervisor", "hypervisor_match", "i", "ia", "id", "id_field", "idx", "image_id", "image_uuid", "in_use", "inactive", "include_disabled", "info_cache", "inner_sel", "insert", "inspect", "inst", "inst_and", "inst_assoc", "inst_extra_ref", "inst_type_dict", "inst_type_query", "inst_types", "instance", "instance_actions", "instance_extra", "instance_get_all_by_filters_sort", "instance_get_by_uuid", "instance_group_get", "instance_id", "instance_models", "instance_ref", "instance_type_id", "instance_type_id_subq", "instance_type_ref", "instance_uuid", "instance_uuids", "instance_with_same_name", "instances", "int", "ip", "ip_block", "ips", "isinstance", "item", "j", "join_rules", "joinedload", "joinedload_all", "joins", "k", "key", "key_pair_ref", "keyed_args", "keys", "keys_to_scrub", "keyvalue", "kv", "kw", "kwargs", "last_ctr_in", "last_ctr_out", "last_refreshed", "latest", "latest_faults", "legacy", "legal_keys", "len", "limit", "list", "logging", "lowername", "mac", "main_context_manager", "manual_joins", "marker", "marker_row", "max_age", "max_count", "max_retries", "max_rows", "member_ref", "members", "message", "meta", "meta_class", "meta_ref", "meta_refs", "metadata", "metadata_dict", "metadata_ref", "metadata_refs", "metadata_type", "migration", "migration_get", "migration_type", "migtype", "min_versions", "model", "model_class", "model_metadata", "model_query", "model_uuid", "models", "msg", "name", "needs_create", "net_update", "network", "network_associate", "network_id", "network_or_none", "network_query", "network_ref", "network_update", "network_uuid", "network_uuids", "new_entries", "new_keys", "new_usage", "newitem", "node", "node_id", "nodename", "noload", "not_soft_deleted", "nova", "null", "num_instances", "object", "or_", "or_query", "original", "os", "oslo_db_api", "out", "output", "overs", "params", "parent_addr", "pci_dev_ref", "pcidevs", "per_user", "period_beginning", "period_ending", "pick_context_manager_reader", "pick_context_manager_reader_allow_async", "pick_context_manager_writer", "policies", "policy", "policy_ref", "pool", "pool_id", "pools", "process_sort_params", "proj_result", "project", "project_filter", "project_id", "project_id_to_quota_count", "project_only", "project_quotas", "project_usages", "projects", "q", "query", "query_delete", "query_insert", "query_kwargs", "query_prefix", "quota", "quota_class_ref", "quota_ref", "quota_usage", "quota_usage_ref", "r", "range", "raw_string", "rd_bytes", "rd_req", "read_deleted", "reader_mode", "reboot_window", "ref", "refresh", "refreshed", "regex_safe_filters", "regexp_op_map", "request_id", "require_aggregate_exists", "require_context", "require_instance_exists_using_uuid", "res", "reservation", "reservation_query", "reservation_ref", "reservations", "reserved", "resource", "resources", "result", "result_delete", "result_dirs", "result_keys", "results", "reversed", "row", "rows", "rows_affected", "rows_archived", "rows_update", "rows_updated", "rule", "rule_id", "rule_values", "s3_image_ref", "sa", "safe_regex_filter", "safe_utils", "sec_group_ref", "security_group_create", "security_group_default_rule_ref", "security_group_ensure_default", "security_group_get_by_name", "security_group_id", "security_group_ref", "security_group_rule_default_id", "security_group_rule_id", "security_group_rule_ref", "security_groups", "select", "self", "service", "service_get", "service_id", "service_ref", "services_tbl", "session", "set", "set_delete", "sg_models", "shadow_table", "shadow_tablename", "six", "snapshot_uuid", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "sorted", "spec_ref", "spec_refs", "specs", "specs_ref", "specs_refs", "sql", "sqlalchemyutils", "start_period", "state", "status", "str", "subq", "subq_and", "sync", "sys", "sys_meta", "system_metadata", "tab", "table", "table_to_rows_archived", "tablename", "tag", "tag_alias", "tag_name", "tag_ref", "tag_val", "tags", "task", "task_items", "task_name", "task_states", "the_filter", "time", "timeutils", "to_add", "to_delete", "token_hash", "token_ref", "topic", "total_rows_archived", "true", "ts_keys", "ts_values", "tuple", "type", "type_id", "undefer", "unders", "until_refresh", "update_match", "update_statement", "update_totals", "updates", "usage", "usage_ref", "usages", "use_slave", "user_id", "user_id_to_use", "user_quota", "user_quotas", "user_result", "user_usages", "uuid", "uuids", "uuidutils", "v", "val", "value", "values", "vif_and", "vif_id", "vif_ref", "vif_refs", "vif_uuid", "virtual_interface_get_by_address", "virtual_interface_id", "vm_states", "vol_usage", "volume_id", "volume_uuid", "want_result", "work", "wr_bytes", "wr_req", "wrapped", "wrapped_func", "wrapper", "x", "zip", "zone", "Implementation", "of", "SQLAlchemy", "backend.\nThe", "backend", "is", "this", "module", "itself.\nUpdates", "the", "ComputeNode", "record", "with", "the", "most", "recent", "data.\nDelete", "a", "ComputeNode", "record.\nCompute", "statistics", "over", "all", "compute", "nodes.\nYields", "blocks", "of", "IPs", "no", "more", "than", "block_size", "elements", "long.\nGets", "virtual", "interface", "for", "instance", "that's", "associated", "with", "network.\nGet", "all", "vifs.\nReturn", "safety", "filter", "and", "db", "opts", "for", "regex.\nReturn", "instances", "and", "joins", "that", "were", "active", "during", "window.\nAssociate", "the", "given", "security", "group", "with", "the", "given", "instance.\nDisassociate", "the", "given", "security", "group", "from", "the", "given", "instance.\nReturn", "the", "relevant", "reservations.\nCreate", "ec2", "compatible", "volume", "by", "provided", "uuid.\nCreate", "ec2", "compatible", "snapshot", "by", "provided", "uuid.\nEnsure", "default", "security", "group", "exists", "for", "a", "project_id.\nReturns", "a", "dict", "describing", "specific", "flavor.\nReturns", "a", "dict", "describing", "specific", "flavor.\nReturns", "a", "dict", "describing", "specific", "flavor_id.\nMarks", "specific", "flavor", "as", "deleted.\nGet", "flavor", "access", "list", "by", "flavor", "id.\nAdd", "given", "tenant", "to", "the", "flavor", "access", "list.\nRemove", "given", "tenant", "from", "the", "flavor", "access", "list.\nReturn", "volumes", "usage", "that", "have", "been", "updated", "after", "a", "specified", "time.\nFind", "local", "s3", "image", "represented", "by", "the", "provided", "id.\nFind", "local", "s3", "image", "represented", "by", "the", "provided", "uuid.\nCreate", "local", "s3", "image", "represented", "by", "provided", "uuid.\nCreate", "a", "new", "InstanceFault.\nGet", "all", "instance", "actions", "for", "the", "provided", "uuid.\nGet", "the", "action", "by", "request_id", "and", "given", "instance.\nStart", "an", "event", "on", "an", "instance", "action.\nFinish", "an", "event", "on", "an", "instance", "action.\nCreate", "ec2", "compatible", "instance", "by", "provided", "uuid.\nCreate", "a", "new", "group.\nGet", "a", "specific", "group", "by", "uuid.\nDelete", "a", "group.\nGet", "all", "groups.\nGet", "all", "groups.\nReturns", "the", "group", "database", "ID", "for", "the", "group", "UUID.", "We", "can't", "use", "oslo.db", "model_query's", "project_id", "here,", "as", "it", "doesn't", "allow\n", "us", "to", "return", "both", "our", "projects", "and", "unowned", "projects.\n", "Try", "alternate", "parsing", "since", "parse_strtime", "will", "fail\n", "with", "say", "converting", "'2015-05-28T19:59:38+00:00'\n", "NOTE(danms):", "Strip", "UTC", "timezones", "from", "datetimes,", "since", "they're\n", "stored", "that", "way", "in", "the", "database\n##################\n", "method", "signature", "requires", "us", "to", "return", "an", "iterable", "even", "if", "for", "OR\n", "operator", "this", "will", "actually", "be", "a", "single", "clause\n", "NOTE(guochbo):", "some", "versions", "of", "MySQL", "doesn't", "yet", "support", "subquery", "with\n", "'LIMIT", "&", "IN/ALL/ANY/SOME'", "We", "need", "work", "around", "this", "with", "nesting", "select", ".\n##################\n", "TODO(sbauza):", "Remove", "the", "service_id", "filter", "in", "a", "later", "release\n", "once", "we", "are", "sure", "that", "all", "compute", "nodes", "report", "the", "host", "field\n", "Only", "servicegroup.drivers.db.DbDriver._report_state()", "updates\n", "'report_count',", "so", "if", "that", "value", "changes", "then", "store", "the", "timestamp\n", "as", "the", "last", "time", "we", "got", "a", "state", "report.\n##################\n", "Explicitly", "order", "by", "id,", "so", "we're", "not", "dependent", "on", "the", "native", "sort\n", "order", "of", "the", "underlying", "DB.\n", "Callers", "expect", "dict-like", "objects,", "not", "SQLAlchemy", "RowProxy", "objects...\n", "TODO(edleafe):", "remove", "once", "the", "compute", "node", "resource", "provider", "migration\n", "is", "complete,", "and", "this", "distinction", "is", "no", "longer", "necessary.\n", "Always", "update", "this,", "even", "if", "there's", "going", "to", "be", "no", "other\n", "changes", "in", "data.", "This", "ensures", "that", "we", "invalidate", "the\n", "scheduler", "cache", "of", "compute", "node", "data", "in", "case", "of", "races.\n", "TODO(sbauza):", "Remove", "the", "service_id", "filter", "in", "a", "later", "release\n", "once", "we", "are", "sure", "that", "all", "compute", "nodes", "report", "the", "host", "field\n", "NOTE(jaypipes):", "This", "COALESCE()", "stuff", "is", "temporary", "while", "the", "data\n", "migration", "to", "the", "new", "resource", "providers", "inventories", "and", "allocations\n", "tables", "is", "completed.\n", "Build", "a", "dict", "of", "the", "info--making", "no", "assumptions", "about", "result\n##################\n##################\n", "Find", "any", "floating", "IPs", "that", "were", "not", "auto_assigned", "and\n", "thus", "need", "quota", "released.\n", "The", "count", "is", "negative", "since", "we", "release", "quota", "by\n", "reserving", "negative", "quota.\n", "Delete", "the", "floating", "IPs.\n", "Delete", "the", "quotas,", "if", "needed.\n", "Quota", "update", "happens", "in", "a", "separate", "transaction,", "so", "previous", "must", "have\n", "been", "committed", "first.\n", "TODO(tr3buchet):", "why", "leave", "auto_assigned", "floating", "IPs", "out?\n", "TODO(tr3buchet):", "why", "do", "we", "not", "want", "auto_assigned", "floating", "IPs", "here?\n", "if", "address", "string", "is", "empty", "explicitly", "set", "it", "to", "None\n", "If", "the", "floating", "IP", "has", "a", "project", "ID", "set,", "check", "to", "make", "sure\n", "the", "non-admin", "user", "has", "access.\n##################\n##################\n", "NOTE(vish):", "only", "update", "fixed", "ips", "that", "\"belong\"", "to", "this\n", "host;", "i.e.", "the", "network", "host", "or", "the", "instance\n", "host", "matches.", "Two", "queries", "necessary", "because\n", "join", "with", "update", "doesn't", "work.\n", "FIXME(sirp):", "shouldn't", "we", "just", "use", "project_only", "here", "to", "restrict", "the\n", "results?\n", "NOTE(sirp):", "shouldn't", "we", "just", "use", "project_only", "here", "to", "restrict", "the\n", "results?\n", "NOTE(tr3buchet)", "please", "don't", "invent", "an", "exception", "here,", "None", "is", "fine\n##################\n##################\n", "NOTE(danms):", "Make", "sure", "IP", "addresses", "are", "passed", "as", "strings", "to\n", "the", "database", "engine\n", "Generate", "a", "new", "list,", "so", "we", "don't", "modify", "the", "original\n", "create", "the", "instance", "uuid", "to", "ec2_id", "mapping", "entry", "for", "instance\n", "NOTE(vish):", "convert", "None", "to", "0\n", "NOTE(snikitin):", "We", "can't", "use", "model_query", "here,", "because", "there", "is", "no\n", "column", "'deleted'", "in", "'tags'", "table.\n", "NOTE(sdague):", "catch", "all", "in", "case", "the", "db", "engine", "chokes", "on", "the\n", "id", "because", "it's", "too", "long", "of", "an", "int", "to", "store.\n", "Already", "always", "joined", "above\n", "NOTE(alaski)", "Stop", "lazy", "loading", "of", "columns", "not", "needed.\n", "If", "we're", "not", "admin", "context,", "add", "appropriate", "filter..\n", "Invoke", "the", "API", "with", "the", "multiple", "sort", "keys", "and", "directions", "using", "the\n", "single", "sort", "key/direction\n", "NOTE(mriedem):", "If", "the", "limit", "is", "0", "there", "is", "no", "point", "in", "even", "going\n", "to", "the", "database", "since", "nothing", "is", "going", "to", "be", "returned", "anyway.\n", "Note:", "order_by", "is", "done", "in", "the", "sqlalchemy.utils.py", "paginate_query(),\n", "no", "need", "to", "do", "it", "here", "as", "well\n", "Make", "a", "copy", "of", "the", "filters", "dictionary", "to", "use", "going", "forward,", "as", "we'll\n", "be", "modifying", "it", "and", "we", "shouldn't", "affect", "the", "caller's", "use", "of", "it.\n", "Instances", "can", "be", "soft", "or", "hard", "deleted", "and", "the", "query", "needs", "to\n", "include", "or", "exclude", "both\n", "It", "would", "be", "better", "to", "have", "vm_state", "not", "be", "nullable\n", "but", "until", "then", "we", "test", "it", "explicitly", "as", "a", "workaround.\n", "We", "build", "a", "JOIN", "ladder", "expression", "for", "each", "tag,", "JOIN'ing\n", "the", "first", "tag", "to", "the", "instances", "table,", "and", "each", "subsequent\n", "tag", "to", "the", "last", "JOIN'd", "tags", "table\n", "If", "we're", "not", "admin", "context,", "add", "appropriate", "filter..\n", "Filters", "for", "exact", "matches", "that", "we", "can", "do", "along", "with", "the", "SQL", "query...\n", "For", "other", "filters", "that", "don't", "match", "this,", "we", "will", "do", "regexp", "matching\n", "Filter", "the", "query\n", "paginate", "query\n", "Sometimes", "the", "REGEX", "filter", "value", "is", "not", "a", "string\n", "Walk", "through", "all", "the", "keys\n", "Skip", "ones", "we're", "not", "filtering", "on\n", "OK,", "filtering", "on", "this", "key;", "what", "value", "do", "we", "search", "for?\n", "empty", "IN-predicate;", "short", "circuit\n", "Looking", "for", "values", "in", "a", "list;", "apply", "to", "query", "directly\n", "OK,", "simple", "exact", "match;", "save", "for", "later\n", "Apply", "simple", "exact", "matches\n", "Determine", "direction", "to", "use", "for", "when", "adding", "default", "keys\n", "Create", "list", "of", "keys", "(do", "not", "modify", "the", "input", "list)\n", "If", "a", "list", "of", "directions", "is", "not", "provided,", "use", "the", "default", "sort", "direction\n", "for", "all", "provided", "keys\n", "Verify", "sort", "direction\n", "Ensure", "that", "the", "key", "and", "direction", "length", "match\n", "Unless", "more", "direction", "are", "specified,", "which", "is", "an", "error\n", "Ensure", "defaults", "are", "included\n", "NOTE(hanlind):", "This", "method", "can", "be", "removed", "as", "conductor", "RPC", "API", "moves", "to", "v2.0.\n", "NOTE(danms):", "this", "is", "only", "used", "in", "the", "_poll_rebooting_instances()\n", "call", "in", "compute/manager,", "so", "we", "can", "avoid", "the", "metadata", "lookups\n", "explicitly\n", "NOTE(danms):", "This", "updates", "the", "instance's", "metadata", "list", "in-place", "and", "in\n", "the", "database", "to", "avoid", "stale", "data", "and", "refresh", "issues.", "It", "assumes", "the\n", "delete=True", "behavior", "of", "instance_metadata_update(...)\n", "NOTE:", "we", "have", "to", "hard_delete", "here", "otherwise", "we", "will", "get", "more", "than", "one\n", "system_metadata", "record", "when", "we", "read", "deleted", "for", "an", "instance;\n", "regular", "metadata", "doesn't", "have", "the", "same", "problem", "because", "we", "don't\n", "allow", "reading", "deleted", "regular", "metadata", "anywhere.\n", "Coerce", "all", "single", "values", "to", "singleton", "lists\n", "Extract", "'expected_'", "values", "from", "values", "dict,", "as", "these", "aren't", "actually\n", "updates\n", "Coerce", "all", "single", "values", "to", "singleton", "lists\n", "Values", "which", "need", "to", "be", "updated", "separately\n", "Hostname", "is", "potentially", "unique,", "but", "this", "is", "enforced", "in", "code", "rather\n", "than", "the", "DB.", "The", "query", "below", "races,", "but", "the", "number", "of", "users", "of\n", "osapi_compute_unique_server_name_scope", "is", "small,", "and", "a", "robust", "fix\n", "will", "be", "complex.", "This", "is", "intentionally", "left", "as", "is", "for", "the", "moment.\n", "Update", "failed.", "Try", "to", "find", "why", "and", "raise", "a", "specific", "error.\n", "We", "should", "get", "here", "only", "because", "our", "expected", "values", "were", "not", "current\n", "when", "update_on_match", "executed.", "Having", "failed,", "we", "now", "have", "a", "hint", "that\n", "the", "values", "are", "out", "of", "date", "and", "should", "check", "them.\n", "This", "code", "is", "made", "more", "complex", "because", "we", "are", "using", "repeatable", "reads.\n", "If", "we", "have", "previously", "read", "the", "original", "instance", "in", "the", "current\n", "transaction,", "reading", "it", "again", "will", "return", "the", "same", "data,", "even", "though\n", "the", "above", "update", "failed", "because", "it", "has", "changed:", "it", "is", "not", "possible", "to\n", "determine", "what", "has", "changed", "in", "this", "transaction.", "In", "this", "case", "we", "raise\n", "UnknownInstanceUpdateConflict,", "which", "will", "cause", "the", "operation", "to", "be\n", "retried", "in", "a", "new", "transaction.\n", "Because", "of", "the", "above,", "if", "we", "have", "previously", "read", "the", "instance", "in", "the\n", "current", "transaction", "it", "will", "have", "been", "passed", "as", "'original',", "and", "there\n", "is", "no", "point", "refreshing", "it.", "If", "we", "have", "not", "previously", "read", "the\n", "instance,", "we", "can", "fetch", "it", "here", "and", "we", "will", "get", "fresh", "data.\n", "Exception", "properties\n", "There", "was", "a", "conflict,", "but", "something", "(probably", "the", "MySQL", "read", "view,\n", "but", "possibly", "an", "exceptionally", "unlikely", "second", "race)", "is", "preventing", "us\n", "from", "seeing", "what", "it", "is.", "When", "we", "go", "round", "again", "we'll", "get", "a", "fresh\n", "transaction", "and", "a", "fresh", "read", "view.\n", "Task", "state", "gets", "special", "handling", "for", "convenience.", "We", "raise", "the\n", "specific", "error", "UnexpectedDeletingTaskStateError", "or\n", "UnexpectedTaskStateError", "as", "appropriate\n", "Everything", "else", "is", "an", "InstanceUpdateConflict\n##################\n", "NOTE(tr3buchet):", "just", "in", "case", "someone", "blows", "away", "an", "instance's\n", "cache", "entry,", "re-create", "it.\n", "NOTE(sirp):", "Possible", "race", "if", "two", "greenthreads", "attempt", "to\n", "recreate", "the", "instance", "cache", "entry", "at", "the", "same", "time.", "First", "one\n", "wins.\n##################\n##################\n##################\n", "find", "out", "if", "project", "has", "a", "network\n", "in", "force", "mode", "or", "project", "doesn't", "have", "a", "network", "so", "associate\n", "with", "a", "new", "network\n", "get", "new", "network\n", "associate", "with", "network\n", "NOTE(vish):", "if", "with_lockmode", "isn't", "supported,", "as", "in", "sqlite,\n", "then", "this", "has", "concurrency", "issues\n", "check", "if", "the", "result", "contains", "all", "the", "networks\n", "we", "are", "looking", "for\n", "NOTE(vish):", "The", "ugly", "joins", "here", "are", "to", "solve", "a", "performance", "issue", "and\n", "should", "be", "removed", "once", "we", "can", "add", "and", "remove", "leases\n", "without", "regenerating", "the", "whole", "list\n", "NOTE(vish):", "This", "subquery", "left", "joins", "the", "minimum", "interface", "id", "for", "each\n", "instance.", "If", "the", "join", "succeeds", "(i.e.", "the", "11th", "column", "is", "not\n", "null),", "then", "the", "fixed", "ip", "is", "on", "the", "first", "interface.\n", "FIXME(sirp):", "since", "this", "returns", "fixed_ips,", "this", "would", "be", "better", "named\n", "fixed_ip_get_all_by_network.\n", "NOTE(vish):", "default_route", "is", "True", "if", "this", "fixed", "ip", "is", "on", "the", "first\n", "interface", "its", "instance.\n", "NOTE(vish):", "return", "networks", "that", "have", "host", "set\n", "or", "that", "have", "a", "fixed", "ip", "with", "host", "set\n", "or", "that", "have", "an", "instance", "with", "host", "set\n##################\n##################\n##################\n", "updated_at", "is", "needed", "for", "judgement", "of", "max_age\n##################\n##################\n", "NOTE(johannes):", "The", "quota", "code", "uses", "SQL", "locking", "to", "ensure", "races", "don't\n", "cause", "under", "or", "over", "counting", "of", "resources.", "To", "avoid", "deadlocks,", "this\n", "code", "always", "acquires", "the", "lock", "on", "quota_usages", "before", "acquiring", "the", "lock\n", "on", "reservations.\n", "Get", "the", "total", "count", "of", "in_use,reserved\n", "Negative", "in_use", "count", "indicates", "a", "desync,", "so", "try", "to\n", "heal", "from", "that...\n", "Update", "the", "usage\n", "Handle", "usage", "refresh\n", "Do", "we", "need", "to", "refresh", "the", "usage?\n", "OK,", "refresh", "the", "usage\n", "Grab", "the", "sync", "routine\n", "Make", "sure", "we", "have", "a", "destination", "for", "the", "usage!\n", "Because", "more", "than", "one", "resource", "may", "be", "refreshed\n", "by", "the", "call", "to", "the", "sync", "routine,", "and", "we", "don't\n", "want", "to", "double-sync,", "we", "make", "sure", "all", "refreshed\n", "resources", "are", "dropped", "from", "the", "work", "set.\n", "NOTE(Vek):", "We", "make", "the", "assumption", "that", "the", "sync\n", "routine", "actually", "refreshes", "the\n", "resources", "that", "it", "is", "the", "sync", "routine\n", "for.", "We", "don't", "check,", "because", "this", "is\n", "a", "best-effort", "mechanism.\n", "We", "can't", "go", "over-quota", "if", "we're", "not", "reserving", "anything.\n", "We", "can't", "go", "over-quota", "if", "we", "have", "unlimited", "quotas.\n", "over", "if", "the", "project", "usage", "+", "delta", "is", "more", "than", "project", "quota\n", "We", "can't", "go", "over-quota", "if", "we", "have", "unlimited", "quotas.\n", "over", "if", "the", "user", "usage", "+", "delta", "is", "more", "than", "user", "quota\n", "Get", "the", "current", "usages\n", "Force", "refresh", "of", "the", "usages\n", "Get", "the", "current", "usages\n", "Check", "for", "deltas", "that", "would", "go", "negative\n", "Now,", "let's", "check", "the", "quotas\n", "NOTE(Vek):", "We're", "only", "concerned", "about", "positive", "increments.\n", "If", "a", "project", "has", "gone", "over", "quota,", "we", "want", "them", "to\n", "be", "able", "to", "reduce", "their", "usage", "without", "any\n", "problems.\n", "NOTE(Vek):", "The", "quota", "check", "needs", "to", "be", "in", "the", "transaction,\n", "but", "the", "transaction", "doesn't", "fail", "just", "because\n", "we're", "over", "quota,", "so", "the", "OverQuota", "raise", "is\n", "outside", "the", "transaction.", "If", "we", "did", "the", "raise\n", "here,", "our", "usage", "updates", "would", "be", "discarded,", "but\n", "they're", "not", "invalidated", "by", "being", "over-quota.\n", "Create", "the", "reservations\n", "Also", "update", "the", "reserved", "quantity\n", "NOTE(Vek):", "Again,", "we", "are", "only", "concerned", "here", "about\n", "positive", "increments.", "Here,", "though,", "we're\n", "worried", "about", "the", "following", "scenario:\n\n", "1)", "User", "initiates", "resize", "down.\n", "2)", "User", "allocates", "a", "new", "instance.\n", "3)", "Resize", "down", "fails", "or", "is", "reverted.\n", "4)", "User", "is", "now", "over", "quota.\n\n", "To", "prevent", "this,", "we", "only", "update", "the\n", "reserved", "value", "if", "the", "delta", "is", "positive.\n", "Apply", "updates", "to", "the", "usages", "table\n", "NOTE(mriedem):", "user_usages", "is", "a", "dict", "of", "resource", "keys", "to\n", "QuotaUsage", "sqlalchemy", "dict-like", "objects", "and", "doesn't", "log", "well\n", "so", "convert", "the", "user_usages", "values", "to", "something", "useful", "for\n", "logging.", "Remove", "this", "if", "we", "ever", "change", "how\n", "_get_project_user_quota_usages", "returns", "the", "user_usages", "values.\n", "Get", "the", "listed", "reservations\n##################\n##################\n", "NOTE(xqueralt):", "Only", "update", "a", "BDM", "when", "device_name", "was", "provided.", "We\n", "allow", "empty", "device", "names", "so", "they", "will", "be", "set", "later", "by", "the", "manager.\n", "Either", "the", "device_name", "doesn't", "exist", "in", "the", "database", "yet,", "or", "no\n", "device_name", "was", "provided.", "Both", "cases", "mean", "creating", "a", "new", "BDM.\n", "NOTE(xqueralt):", "Prevent", "from", "having", "multiple", "swap", "devices", "for", "the\n", "same", "instance.", "This", "will", "delete", "all", "the", "existing", "ones.\n##################\n", "FIXME(devcamcar):", "Unless", "I", "do", "this,", "rules", "fails", "with", "lazy", "load", "exception\n", "once", "save()", "is", "called.", "This", "will", "get", "cleaned", "up", "in", "next", "orm", "pass.\n", "Find", "the", "first", "one", "missing", "and", "raise\n", "Not", "Reached\n", "Are", "there", "any", "instances", "that", "haven't", "been", "deleted\n", "that", "include", "this", "group?\n", "NOTE(rpodolyaka):", "create", "the", "default", "security", "group,", "if", "it", "doesn't\n", "exist.", "This", "must", "be", "done", "in", "a", "separate", "transaction,", "so", "that\n", "this", "one", "is", "not", "aborted", "in", "case", "a", "concurrent", "one", "succeeds", "first\n", "and", "the", "unique", "constraint", "for", "security", "group", "names", "is", "violated\n", "by", "a", "concurrent", "INSERT\n", "NOTE(rpodolyaka):", "a", "concurrent", "transaction", "has", "succeeded", "first,\n", "suppress", "the", "error", "and", "proceed\n", "Create", "quota", "usage", "for", "auto", "created", "default", "security", "group\n", "This", "is", "suboptimal,", "it", "should", "be", "programmatic", "to", "know\n", "the", "values", "of", "the", "default_rule\n##################\n##################\n##################\n##################\n", "NOTE(tr3buchet):", "as", "before", "this", "function", "will", "associate\n", "a", "project", "with", "a", "network", "if", "it", "doesn't", "have", "one", "and\n", "associate", "is", "true\n##################\n", "TODO(Shaohe", "Feng)", "we", "should", "share", "the", "in-progress", "list.\n", "TODO(Shaohe", "Feng)", "will", "also", "summarize", "all", "status", "to", "a", "new\n", "MigrationStatus", "class.\n#################\n#################\n", "NOTE(mdragon):", "consoles", "are", "meant", "to", "be", "transient.\n#################\n", "FIXME(sirp):", "now", "that", "we", "have", "the", "`disabled`", "field", "for", "flavors,", "we\n", "should", "probably", "remove", "the", "use", "of", "`deleted`", "to", "mark", "inactive.", "`deleted`\n", "should", "mean", "truly", "deleted,", "e.g.", "we", "can", "safely", "purge", "the", "record", "out", "of", "the\n", "database.\n", "did", "not", "find", "the", "extra", "spec\n", "a", "concurrent", "transaction", "has", "been", "committed,\n", "try", "again", "unless", "this", "was", "the", "last", "attempt\n###################\n#######################\n", "User-provided", "metadata\n######################\n", "System-owned", "metadata\n###################\n###################\n", "NOTE(comstud):", "More", "often", "than", "not,", "we'll", "be", "updating", "records", "vs\n", "creating", "records.", "Optimize", "accordingly,", "trying", "to", "update", "existing\n", "records.", "Fall", "back", "to", "creation", "when", "no", "rows", "are", "updated.\n", "NOTE(pkholkin):", "order_by()", "is", "needed", "here", "to", "ensure", "that", "the\n", "same", "record", "is", "updated", "every", "time.", "It", "can", "be", "removed", "after", "adding\n", "unique", "constraint", "to", "this", "model.\n###################\n", "NOTE(dricco):", "We", "will", "be", "mostly", "updating", "current", "usage", "records", "vs\n", "updating", "total", "or", "creating", "records.", "Optimize", "accordingly.\n###################\n###################\n", "We", "don't", "want", "these", "to", "be", "lazy", "loaded", "later.", "We", "know", "there", "is\n", "nothing", "here", "since", "we", "just", "created", "this", "aggregate.\n", "NOTE(pkholkin):", "'_metadata'", "attribute", "was", "updated", "during\n", "'aggregate_metadata_add'", "method,", "so", "it", "should", "be", "expired", "and\n", "read", "from", "db\n", "there", "is", "another", "aggregate", "with", "the", "new", "name\n", "Delete", "Metadata\n", "a", "concurrent", "transaction", "has", "been", "committed,\n", "try", "again", "unless", "this", "was", "the", "last", "attempt\n###############\n", "NOTE(rpodolyaka):", "filtering", "by", "instance_uuids", "is", "performed", "in", "both\n", "code", "branches", "below", "for", "the", "sake", "of", "a", "better", "query", "plan.", "On", "change,\n", "make", "sure", "to", "update", "the", "other", "one", "as", "well.\n", "NOTE(jaypipes):", "We", "join", "instance_faults", "to", "a", "derived", "table", "of", "the\n", "latest", "faults", "per", "instance", "UUID.", "The", "SQL", "produced", "below", "looks", "like\n", "this:\n\n", "SELECT", "instance_faults.*\n", "FROM", "instance_faults\n", "JOIN", "(\n", "SELECT", "instance_uuid,", "MAX(id)", "AS", "max_id\n", "FROM", "instance_faults\n", "WHERE", "instance_uuid", "IN", "(", "...", ")\n", "AND", "deleted", "=", "0\n", "GROUP", "BY", "instance_uuid\n", ")", "AS", "latest_faults\n", "ON", "instance_faults.id", "=", "latest_faults.max_id;\n#################\n", "When", "nova-compute", "restarts,", "the", "context", "is", "generated", "again", "in\n", "init_host", "workflow,", "the", "request_id", "was", "different", "with", "the", "request_id\n", "recorded", "in", "InstanceAction,", "so", "we", "can't", "get", "the", "original", "record\n", "according", "to", "request_id.", "Try", "to", "get", "the", "last", "created", "action", "so", "that\n", "init_instance", "can", "continue", "to", "finish", "the", "recovery", "action,", "like:\n", "powering_off,", "unpausing,", "and", "so", "on.\n", "When", "nova-compute", "restarts,", "the", "context", "is", "generated", "again", "in\n", "init_host", "workflow,", "the", "request_id", "was", "different", "with", "the", "request_id\n", "recorded", "in", "InstanceAction,", "so", "we", "can't", "get", "the", "original", "record\n", "according", "to", "request_id.", "Try", "to", "get", "the", "last", "created", "action", "so", "that\n", "init_instance", "can", "continue", "to", "finish", "the", "recovery", "action,", "like:\n", "powering_off,", "unpausing,", "and", "so", "on.\n#################\n#################\n", "It's", "not", "running!\n#################\n", "NOTE(tdurakov):", "table", "metadata", "should", "be", "received\n", "from", "models,", "not", "db", "tables.", "Default", "value", "specified", "by", "SoftDeleteMixin\n", "is", "known", "only", "by", "models,", "not", "DB", "layer.\n", "IMPORTANT:", "please", "do", "not", "change", "source", "of", "metadata", "information", "for", "table.\n", "No", "corresponding", "shadow", "table;", "skip", "it.\n", "We", "have", "one", "table", "(dns_domains)", "where", "the", "key", "is", "called\n", "\"domain\"", "rather", "than", "\"id\"\n", "NOTE(guochbo):", "Use", "DeleteFromSelect", "to", "avoid\n", "database's", "limit", "of", "maximum", "parameter", "in", "one", "SQL", "statement.\n", "NOTE(clecomte):", "Tables", "instance_actions", "and", "instances_actions_events\n", "have", "to", "be", "manage", "differently", "so", "we", "soft-delete", "them", "here", "to", "let\n", "the", "archive", "work", "the", "same", "for", "all", "tables\n", "NOTE(takashin):", "The", "record", "in", "table", "migrations", "should", "be\n", "soft", "deleted", "when", "the", "instance", "is", "deleted.\n", "This", "is", "just", "for", "upgrading.\n", "NOTE(clecomte):", "we", "have", "to", "grab", "all", "the", "relation", "from\n", "instances", "because", "instance_actions_events", "rely", "on\n", "action_id", "and", "not", "uuid\n", "Group", "the", "insert", "and", "delete", "in", "a", "transaction.\n", "A", "foreign", "key", "constraint", "keeps", "us", "from", "deleting", "some", "of\n", "these", "rows", "until", "we", "clean", "up", "a", "dependent", "table.", "Just\n", "skip", "this", "table", "for", "now;", "we'll", "come", "back", "to", "it", "later.\n", "Reverse", "sort", "the", "tables", "so", "we", "get", "the", "leaf", "nodes", "first", "for", "processing.\n", "skip", "the", "special", "sqlalchemy-migrate", "migrate_version", "table", "and", "any\n", "shadow", "tables\n", "Only", "report", "results", "for", "tables", "that", "had", "updates.\n###################\n", "We", "don't", "want", "'_policies'", "and", "'_members'", "attributes", "to", "be", "lazy", "loaded\n", "later.", "We", "know", "there", "is", "nothing", "here", "since", "we", "just", "created", "this\n", "instance", "group.\n", "Delete", "policies,", "metadata", "and", "members\n###################\n###################\n", "NOTE(snikitin):", "We", "should", "ignore", "tags", "duplicates\n###################"], "/Users/mehranhassani/repos/nova/nova/api/validation/__init__.py": ["False", "None", "True", "_schema_validation_helper", "_strip_additional_query_parameters", "add_validator", "additional_properties", "api_version", "args", "func", "functools", "is_body", "kwargs", "legacy_v2", "max_ver", "max_version", "min_ver", "min_version", "param", "query_params_schema", "req", "request_body_schema", "schema", "schema_validator", "set", "target", "validators", "ver", "wrapper", "The", "request", "object", "is", "always", "the", "second", "argument.\n", "However", "numerous", "unittests", "pass", "in", "the", "request", "object\n", "via", "kwargs", "instead", "so", "we", "handle", "that", "as", "well.\n", "TODO(cyeoh):", "cleanup", "unittests", "so", "we", "don't", "have", "to\n", "to", "do", "this\n", "NOTE:", "For", "v2.0", "compatible", "API,", "here", "should", "work", "like\n", "client", "|", "schema", "min_version", "|", "schema\n", "-----------+--------------------+--------\n", "legacy_v2", "|", "None", "|", "work\n", "legacy_v2", "|", "2.0", "|", "work\n", "legacy_v2", "|", "2.1+", "|", "don't\n", "Only", "validate", "against", "the", "schema", "if", "it", "lies", "within\n", "the", "version", "range", "specified.", "Note", "that", "if", "both", "min\n", "and", "max", "are", "not", "specified", "the", "validator", "will", "always\n", "be", "run.\n", "`req.GET.keys`", "will", "return", "duplicated", "keys", "for", "multiple", "values\n", "parameters.", "To", "get", "rid", "of", "duplicated", "keys,", "convert", "it", "to", "set.\n", "The", "request", "object", "is", "always", "the", "second", "argument.\n", "However", "numerous", "unittests", "pass", "in", "the", "request", "object\n", "via", "kwargs", "instead", "so", "we", "handle", "that", "as", "well.\n", "TODO(cyeoh):", "cleanup", "unittests", "so", "we", "don't", "have", "to\n", "to", "do", "this\n", "NOTE(alex_xu):", "The", "additional", "query", "parameters", "were", "stripped\n", "out", "when", "`additionalProperties=True`.", "This", "is", "for", "backward\n", "compatible", "with", "v2.1", "API", "and", "legacy", "v2", "API.", "But", "it", "makes", "the\n", "system", "more", "safe", "for", "no", "more", "unexpected", "parameters", "pass", "down\n", "to", "the", "system.", "In", "the", "future,", "we", "may", "block", "all", "of", "those\n", "additional", "parameters", "by", "Microversion."], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/fixed_ips.py": ["ALIAS", "False", "FixedIPController", "MAX_PROXY_API_SUPPORT_VERSION", "None", "True", "_", "address", "alias", "attrs", "body", "context", "ex", "exception", "extensions", "fi_policies", "fixed_ip", "fixed_ip_info", "fixed_ips", "id", "member_actions", "msg", "name", "objects", "req", "reserved", "resources", "self", "str", "validation", "version", "webob", "wsgi", "Return", "data", "about", "the", "given", "fixed", "IP.\nFixed", "IPs", "support.", "NOTE(mriedem):", "To", "be", "backwards", "compatible,", "<", "2.4", "version", "does", "not\n", "show", "anything", "about", "reserved", "status.\n", "noqa"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/agents.py": ["ALIAS", "AgentController", "None", "agent", "agent_build", "agent_obj", "agents", "agents_policies", "alias", "architecture", "body", "builds", "context", "ex", "exc", "exception", "extensions", "hypervisor", "id", "md5hash", "name", "objects", "os", "para", "req", "resource", "schema", "self", "url", "utils", "validation", "version", "webob", "wsgi", "Return", "a", "list", "of", "all", "agent", "builds.", "Filter", "by", "hypervisor.\nUpdate", "an", "existing", "agent", "build.\nDeletes", "an", "existing", "agent", "build.\nCreates", "a", "new", "agent", "build.\nAgents", "support.", "TODO(oomichi):", "This", "parameter", "name", "\"para\"", "is", "different", "from", "the", "ones\n", "of", "the", "other", "APIs.", "Most", "other", "names", "are", "resource", "names", "like", "\"server\"\n", "etc.", "This", "name", "should", "be", "changed", "to", "\"agent\"", "for", "consistent", "naming\n", "with", "v2.1+microversions.\n", "TODO(alex_xu):", "The", "agent_id", "should", "be", "integer", "that", "consistent", "with\n", "create/index", "actions.", "But", "parameter", "'id'", "is", "string", "type", "that", "parsed\n", "from", "url.", "This", "is", "a", "bug,", "but", "because", "back-compatibility,", "it", "can't", "be\n", "fixed", "for", "v2", "API.", "This", "will", "be", "fixed", "in", "v2.1", "API", "by", "Microversions", "in\n", "the", "future.", "lp", "bug", "#1333494\n", "TODO(oomichi):", "Here", "should", "be", "204(No", "Content)", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "resource", "agent", "has", "been", "deleted", "completely\n", "when", "returning", "a", "response.\n", "TODO(oomichi):", "Here", "should", "be", "201(Created)", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "creation", "of", "a", "resource", "agent", "finishes\n", "when", "returning", "a", "response."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/336_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_baremetal_nodes.py": ["ADMIN_API", "FakeNode", "False", "NodeManager", "True", "api_sample_base", "detail", "fake_client", "id", "mock", "mock_get_irc", "node", "object", "response", "sample_dir", "self", "uuid"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/disk/mount/test_block.py": ["LoopTestCase", "b", "block", "device_path", "fixtures", "imgmodel", "self", "super", "tempdir", "test"], "/Users/mehranhassani/repos/nova/nova/api/validation/validators.py": ["False", "FormatChecker", "None", "True", "TypeError", "ValueError", "_", "_soft_validate_additional_properties", "additional_properties_value", "args", "base64", "cause", "cidr", "detail", "e", "error", "ex", "exception", "extra", "extra_properties", "float", "format", "format_checker", "func", "instance", "int", "is_body", "isinstance", "jsonschema", "jsonschema_exc", "kwargs", "len", "maximum", "minimum", "msg", "netaddr", "object", "parameter_types", "patterns", "prop", "properties", "raises", "re", "regex", "relax_additional_properties", "repr", "result", "rfc3986", "schema", "self", "set", "six", "timeutils", "uuidutils", "validator", "validator_cls", "validator_org", "validators", "value", "verb", "The", "name", "must", "be", "string", "type.", "If", "instance", "isn't", "string", "type,", "the\n", "TypeError", "will", "be", "raised", "at", "here.\n", "The", "name", "must", "be", "string", "type.", "If", "instance", "isn't", "string", "type,", "the\n", "TypeError", "will", "be", "raised", "at", "here.\n", "The", "name", "must", "be", "string", "type.", "If", "instance", "isn't", "string", "type,", "the\n", "TypeError", "will", "be", "raised", "at", "here.\n", "The", "name", "must", "be", "string", "type.", "If", "instance", "isn't", "string", "type,", "the\n", "TypeError", "will", "be", "raised", "at", "here.\n", "The", "name", "must", "be", "string", "type.", "If", "instance", "isn't", "string", "type,", "the\n", "TypeError", "will", "be", "raised", "at", "here.\n", "For", "safety", "reasons", "custom", "checkers", "can", "be", "registered", "with\n", "allowed", "exception", "types.", "Anything", "else", "will", "fall", "into", "the\n", "default", "formatter.\n", "NOTE:", "For", "whole", "OpenStack", "message", "consistency,", "this", "error\n", "message", "has", "been", "written", "as", "the", "similar", "format", "of\n", "WSME.\n", "NOTE:", "For", "whole", "OpenStack", "message", "consistency,", "this", "error\n", "message", "has", "been", "written", "as", "the", "similar", "format", "of", "WSME.\n", "NOTE:", "If", "passing", "non", "string", "value", "to", "patternProperties", "parameter,\n", "TypeError", "happens.", "Here", "is", "for", "catching", "the", "TypeError."], "/Users/mehranhassani/repos/nova/nova/tests/unit/network/test_network_info.py": ["False", "None", "TestNetworkMetadata", "True", "address", "async_wrapper", "cfg", "dict", "dns", "exception", "expected", "expected_dns", "expected_json", "expected_link", "expected_net", "fake_network_cache_model", "fixed_ip", "fixed_ip2", "fixed_ips", "floating_ips", "gateway", "gateway_address", "gateway_ip", "i", "ip", "ip1", "ip2", "ip_dict", "ips", "ipv4_subnet", "ipv6_subnet", "ipv6_subnet_dict", "labeled_ips", "libvirt_virt_type", "link", "model", "net", "net_metadata", "netutils", "network", "network1", "network2", "network_json", "ninfo", "no_route", "nwinfo", "range", "route", "route1", "route2", "self", "should_inject", "subnet", "subnet1", "subnet2", "subnet_dict", "super", "template", "test", "two_interfaces", "use_ipv4", "use_ipv6", "v4", "v4_expected", "v6", "v6_expected", "vif", "vif1", "vif2", "vif_dict", "vifs", "2nd", "one", "doesn't", "raise\n", "Test", "that", "do_raise=False", "works", "on", ".wait()\n", "Test", "we", "also", "raise", "calling", "a", "method\n", "Behave", "as", "though", "CONF.flat_injected", "is", "True\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Injected", "by", "Nova", "on", "instance", "boot\n\n", "This", "file", "describes", "the", "network", "interfaces", "available", "on", "your", "system\n", "and", "how", "to", "activate", "them.", "For", "more", "information,", "see", "interfaces(5).\n", "The", "loopback", "network", "interface\n", "Give", "this", "vif", "ipv4", "and", "ipv6", "dhcp", "subnets\n", "Physical", "Ethernet\n", "IPv4", "Network\n", "IPv4", "Network\n", "IPv6", "Network\n", "Test", "for", "no", "gateway\n", "Add", "a", "second", "NIC\n", "drop", "the", "ipv4", "subnet"], "/Users/mehranhassani/repos/nova/nova/servicegroup/api.py": ["CONF", "False", "INITIAL_REPORTING_DELAY", "LOG", "None", "_LW", "__name__", "_driver_name_class_mapping", "args", "driver_class", "group", "importutils", "int", "kwargs", "logging", "member", "new_service_down_time", "nova", "object", "report_interval", "self", "service", "Define", "APIs", "for", "the", "servicegroup", "access.\nCheck", "if", "the", "given", "member", "is", "up.", "NOTE(geekinutah):", "By", "default", "drivers", "wait", "5", "seconds", "before", "reporting\n", "Make", "sure", "report", "interval", "is", "less", "than", "service", "down", "time\n", "NOTE(johngarbutt)", "no", "logging", "in", "this", "method,\n", "so", "this", "doesn't", "slow", "down", "the", "scheduler"], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_remote_consoles.py": ["ConsolesExtensionTestV21", "ConsolesExtensionTestV26", "ConsolesExtensionTestV28", "None", "NotImplementedError", "TestRemoteConsolePolicyEnforcementV21", "_console_type", "_context", "_instance", "api_version_request", "arg", "body", "compute_api", "console_v21", "context", "controller_class", "eval", "exc", "exception", "expected_attrs", "fake_get", "fake_get_not_found", "fake_get_rdp_console", "fake_get_rdp_console_invalid_type", "fake_get_rdp_console_not_found", "fake_get_rdp_console_not_ready", "fake_get_rdp_console_type_unavailable", "fake_get_serial_console", "fake_get_spice_console", "fake_get_spice_console_invalid_type", "fake_get_spice_console_not_found", "fake_get_spice_console_not_ready", "fake_get_spice_console_type_unavailable", "fake_get_vnc_console", "fake_get_vnc_console_invalid_type", "fake_get_vnc_console_not_found", "fake_get_vnc_console_not_ready", "fake_get_vnc_console_type_unavailable", "fakes", "func", "get_serial_console", "instance", "instance_uuid", "kwarg", "mock", "mock_get", "mock_handler", "output", "req", "rule", "rule_name", "self", "super", "test", "validation_error", "webob"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_loadables.py": ["LoadablesTestCase", "class_names", "classes", "cls", "ending_path", "exception", "expected", "expected_class_names", "fake_loadables", "prefix", "self", "set", "super", "test", "test_classes", "The", "name", "that", "we", "imported", "above", "for", "testing\n", "Test", "the", "path", "of", "the", "module\n", "When", "using", "a", "method,", "no", "checking", "is", "done", "on", "valid", "classes."], "/Users/mehranhassani/repos/nova/nova/conf/virt.py": ["ALL_OPTS", "False", "None", "True", "cfg", "conf", "paths", "types", "TODO(sfinucan):", "This", "should", "be", "a", "BooleanOpt\n", "NOTE(yamahata):", "ListOpt", "won't", "work", "because", "the", "command", "may", "include", "a", "comma.\n", "For", "example:\n\n", "mkfs.ext4", "-O", "dir_index,extent", "-E", "stride=8,stripe-width=16\n", "--label", "%(fs_label)s", "%(target)s\n\n", "list", "arguments", "are", "comma", "separated", "and", "there", "is", "no", "way", "to", "escape", "such\n", "commas.\n", "TODO(sfinucan):", "This", "should", "be", "moved", "to", "a", "virt", "or", "hardware", "group"], "/Users/mehranhassani/repos/nova/nova/policies/migrate_server.py": ["POLICY_ROOT", "base", "migrate_server_policies", "policy"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_serialconsoleops.py": ["Exception", "False", "IOError", "SerialConsoleOpsTestCase", "True", "builtins", "console_handler", "exception", "fake_open", "fake_path_exists", "handler", "mock", "mock_console_handler", "mock_exists", "mock_get_instance_dir", "mock_handler", "mock_stop_handler", "raise_exception", "ret_val", "self", "serialconsolehandler", "serialconsoleops", "super", "test_base"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/versions.py": ["LINKS", "None", "VERSIONS", "Versions", "api_version_request", "args", "body", "builder", "req", "request_environment", "self", "super", "views_versions", "wsgi", "Return", "all", "versions.\nReturn", "multiple", "choices.\nParse", "dictionary", "created", "by", "routes", "library."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/300_migration_context.py": ["BASE_TABLE_NAME", "Column", "MetaData", "NEW_COLUMN_NAME", "Table", "Text", "True", "hasattr", "meta", "migrate_engine", "new_column", "prefix", "table"], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/vmwareapi/stubs.py": ["CONF", "Exception", "None", "arg", "details", "fake", "fake_is_vim_object", "fake_vim_prop", "fault_list", "fault_string", "isinstance", "module", "nova", "property", "test", "vexc", "Stubs", "out", "the", "VMwareAPISession's", "get_vim_object", "method.\nStubs", "out", "the", "VMwareAPISession's", "vim", "property", "access", "method.\nStubs", "out", "the", "VMwareAPISession's", "is_vim_object", "method.\nSet", "the", "stubs."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/323_placeholder.py": ["migrate_engine", "Licensed", "under", "the", "Apache", "License,", "Version", "2.0", "(the", "\"License\");", "you", "may\n", "not", "use", "this", "file", "except", "in", "compliance", "with", "the", "License.", "You", "may", "obtain\n", "a", "copy", "of", "the", "License", "at\n\n", "http://www.apache.org/licenses/LICENSE-2.0\n\n", "Unless", "required", "by", "applicable", "law", "or", "agreed", "to", "in", "writing,", "software\n", "distributed", "under", "the", "License", "is", "distributed", "on", "an", "\"AS", "IS\"", "BASIS,", "WITHOUT\n", "WARRANTIES", "OR", "CONDITIONS", "OF", "ANY", "KIND,", "either", "express", "or", "implied.", "See", "the\n", "License", "for", "the", "specific", "language", "governing", "permissions", "and", "limitations\n", "under", "the", "License.\n", "This", "is", "a", "placeholder", "for", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "work.", "New", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "this", "for", "more", "information:\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/objects/ec2.py": ["None", "True", "VERSION", "base", "cls", "context", "db", "db_imap", "db_s3imap", "db_smap", "db_vmap", "dict_ec2ids", "ec2_id", "ec2_ids", "ec2_image_type", "ec2ids", "ec2utils", "exception", "field", "fields", "getattr", "image_id", "image_type", "imap", "instance", "instance_uuid", "s3_id", "s3_image_uuid", "s3imap", "self", "setattr", "smap", "snapshot_uuid", "staticmethod", "vmap", "volume_uuid", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/policies/server_password.py": ["BASE_POLICY_NAME", "POLICY_ROOT", "base", "policy", "server_password_policies"], "/Users/mehranhassani/repos/nova/nova/tests/unit/fake_block_device.py": ["FakeDbBlockDeviceDict", "False", "None", "True", "anon", "bdm_dict", "block_device", "context", "db_id", "fake_db_fields", "instance_uuid", "kwargs", "objects", "self", "super", "timeutils", "uuids", "Defaults", "db", "fields", "-", "useful", "for", "mocking", "database", "calls.", "FakeDbBlockDeviceDict", "mutates", "the", "bdm_dict", "so", "make", "a", "copy", "of", "it."], "/Users/mehranhassani/repos/nova/nova/objects/flavor.py": ["DEPRECATED_FIELDS", "Exception", "False", "Flavor", "LOG", "None", "OPTIONAL_FIELDS", "True", "VERSION", "_LW", "__name__", "_adjust_autoincrement", "_destroy_flavor_hard", "_dict_with_extra_specs", "_ensure_migrated", "_flavor_add_project", "_flavor_create", "_flavor_del_project", "_flavor_destroy", "_flavor_extra_specs_add", "_flavor_extra_specs_del", "_flavor_get_all_from_db", "_get_main_db_flavor_ids", "_get_max_flavor_id", "_get_projects_from_db", "add_fn", "added_keys", "added_projects", "any", "api_db_flavors", "api_models", "args", "asc", "attempt", "attr", "attrname", "base", "changes", "classmethod", "cls", "context", "count", "count_all", "count_hit", "ctxt", "db", "db_api", "db_exc", "db_flavor", "db_flavors", "db_project", "db_projects", "db_spec", "db_specs", "del_fn", "deleted_keys", "deleted_projects", "dict", "e", "engine", "exception", "existing_keys", "expected_attrs", "extra_specs", "f", "field", "fields", "filters", "flavor", "flavor_id", "flavor_model", "flavor_values", "flavorid", "func", "getattr", "hard_delete", "i", "id", "ident", "inactive", "isinstance", "joinedload", "k", "key", "kwargs", "len", "limit", "limit_more", "list", "logging", "main_db_ids", "main_models", "marker", "marker_row", "max_id", "max_retries", "models", "name", "objects", "objver", "or_", "primitive", "project", "project_id", "projects", "property", "query", "range", "read_deleted", "recursive", "require_context", "result", "self", "set", "sort_dir", "sort_key", "spec_ref", "spec_refs", "specs", "sqlalchemyutils", "staticmethod", "str", "super", "text", "the_filter", "to_add", "to_delete", "true", "updates", "v", "value", "values", "writer", "x", "Returns", "a", "dict", "describing", "specific", "flavor.\nReturns", "a", "dict", "describing", "specific", "flavor.\nReturns", "a", "dict", "describing", "specific", "flavor_id.", "NOTE(danms):", "There", "are", "some", "issues", "with", "the", "oslo_db", "context", "manager\n", "decorators", "with", "static", "methods.", "We", "pull", "these", "out", "for", "now", "and", "can\n", "move", "them", "back", "into", "the", "actual", "staticmethods", "on", "the", "object", "when", "those\n", "issues", "are", "resolved.\n", "a", "concurrent", "transaction", "has", "been", "committed,\n", "try", "again", "unless", "this", "was", "the", "last", "attempt\n", "TODO(berrange):", "Remove", "NovaObjectDictCompat\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "save_projects(),", "save_extra_specs(),", "removed\n", "remotable", "from", "save()\n", "Fix", "us", "up", "so", "we", "can", "use", "our", "real", "id\n", "NOTE(danms):", "This", "is", "to", "support", "processing", "the", "API", "flavor\n", "model,", "which", "does", "not", "have", "these", "deprecated", "fields.", "When", "we\n", "remove", "compatibility", "with", "the", "old", "InstanceType", "model,", "we", "can\n", "remove", "this", "as", "well.\n", "NOTE(danms):", "Only", "projects", "could", "be", "lazy-loaded", "right", "now\n", "This", "call", "left", "extra_specs", "\"clean\"", "so", "update", "our", "tracker\n", "This", "call", "left", "projects", "\"clean\"", "so", "update", "our", "tracker\n", "NOTE(danms):", "Once", "we", "have", "made", "it", "past", "a", "point", "where", "we", "know\n", "all", "flavors", "have", "been", "migrated,", "we", "can", "remove", "this.", "Ideally\n", "in", "Ocata", "with", "a", "blocker", "migration", "to", "be", "sure.\n", "NOTE(danms):", "The", "first", "remotable", "method", "we", "call", "will", "reset\n", "our", "of", "the", "original", "values", "for", "projects", "and", "extra_specs.", "Thus,\n", "we", "collect", "the", "added/deleted", "lists", "for", "both", "above", "and", "/then/\n", "call", "these", "methods", "to", "update", "them.\n", "NOTE(danms):", "Historically", "the", "only", "way", "to", "delete", "a", "flavor\n", "is", "via", "name,", "which", "is", "not", "very", "precise.", "We", "need", "to", "be", "able", "to\n", "support", "the", "light", "construction", "of", "a", "flavor", "object", "and", "subsequent\n", "delete", "request", "with", "only", "our", "name", "filled", "out.", "However,", "if", "we", "have\n", "our", "id", "property,", "we", "should", "instead", "delete", "with", "that", "since", "it's\n", "far", "more", "specific.\n", "NOTE(danms):", "If", "we", "were", "asked", "for", "a", "marker", "and", "found", "it", "in\n", "results", "from", "the", "API", "DB,", "we", "must", "continue", "our", "pagination", "with\n", "just", "the", "limit", "(if", "any)", "to", "the", "main", "DB.\n", "NOTE(danms):", "We", "don't", "need", "this", "imported", "at", "runtime,", "so\n", "keep", "it", "separate", "here\n", "NOTE(danms):", "We", "don't", "need", "this", "imported", "at", "runtime,", "so\n", "keep", "it", "separate", "here\n", "NOTE(danms):", "If", "we", "migrated", "some", "flavors", "in", "the", "above", "function,\n", "then", "we", "will", "have", "confused", "postgres'", "sequence", "for", "the", "autoincrement\n", "primary", "key.", "MySQL", "does", "not", "care", "about", "this,", "but", "since", "postgres", "does,\n", "we", "need", "to", "reset", "this", "to", "avoid", "a", "failure", "on", "the", "next", "flavor", "creation."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/placement/test_requestlog.py": ["TestRequestLog", "app", "mock", "mocked_log", "req", "req_uri", "requestlog", "self", "start_response_mock", "staticmethod", "super", "test", "webob", "write_log", "Tests", "for", "the", "placement", "request", "log", "middleware.", "The", "blank", "does", "not", "include", "remote", "address,", "so", "add", "it.\n", "nor", "a", "microversion"], "/Users/mehranhassani/repos/nova/nova/api/openstack/api_version_request.py": ["APIVersionRequest", "DEFAULT_API_VERSION", "MAX_IMAGE_META_PROXY_API_VERSION", "MAX_PROXY_API_SUPPORT_VERSION", "MIN_WITHOUT_IMAGE_META_PROXY_API_VERSION", "MIN_WITHOUT_PROXY_API_SUPPORT_VERSION", "None", "REST_API_VERSION_HISTORY", "True", "TypeError", "ValueError", "_", "_MAX_API_VERSION", "_MIN_API_VERSION", "exception", "int", "isinstance", "match", "max_version", "min_version", "object", "other", "re", "req", "self", "version_string", "Debug/Logging", "representation", "of", "object.", "Define", "the", "minimum", "and", "maximum", "version", "of", "the", "API", "across", "all", "of", "the\n", "REST", "API.", "The", "format", "of", "the", "version", "is:\n", "X.Y", "where:\n\n", "-", "X", "will", "only", "be", "changed", "if", "a", "significant", "backwards", "incompatible", "API\n", "change", "is", "made", "which", "affects", "the", "API", "as", "whole.", "That", "is,", "something\n", "that", "is", "only", "very", "very", "rarely", "incremented.\n\n", "-", "Y", "when", "you", "make", "any", "change", "to", "the", "API.", "Note", "that", "this", "includes\n", "semantic", "changes", "which", "may", "not", "affect", "the", "input", "or", "output", "formats", "or\n", "even", "originate", "in", "the", "API", "code", "layer.", "We", "are", "not", "distinguishing\n", "between", "backwards", "compatible", "and", "backwards", "incompatible", "changes", "in\n", "the", "versioning", "system.", "It", "must", "be", "made", "clear", "in", "the", "documentation", "as\n", "to", "what", "is", "a", "backwards", "compatible", "change", "and", "what", "is", "a", "backwards\n", "incompatible", "one.\n\n", "You", "must", "update", "the", "API", "version", "history", "string", "below", "with", "a", "one", "or\n", "two", "line", "description", "as", "well", "as", "update", "rest_api_version_history.rst\n", "The", "minimum", "and", "maximum", "versions", "of", "the", "API", "supported\n", "The", "default", "api", "version", "request", "is", "defined", "to", "be", "the\n", "the", "minimum", "version", "of", "the", "API", "supported.\n", "Note(cyeoh):", "This", "only", "applies", "for", "the", "v2.1", "API", "once", "microversions\n", "support", "is", "fully", "merged.", "It", "does", "not", "affect", "the", "V2", "API.\n", "Almost", "all", "proxy", "APIs", "which", "related", "to", "network,", "images", "and", "baremetal\n", "were", "deprecated", "from", "2.36.\n", "Starting", "from", "microversion", "2.39", "also", "image-metadata", "proxy", "API", "is", "deprecated.\n", "NOTE(cyeoh):", "min", "and", "max", "versions", "declared", "as", "functions", "so", "we", "can\n", "mock", "them", "for", "unittests.", "Do", "not", "use", "the", "constants", "directly", "anywhere\n", "else."], "/Users/mehranhassani/repos/nova/nova/tests/unit/conductor/tasks/test_live_migrate.py": ["False", "LiveMigrationTaskTestCase", "None", "True", "another_spec", "call_livem_checks", "check_compat", "compute_rpcapi", "db_instance", "do_test", "error", "exception", "fake_instance", "fake_props", "fake_spec", "from_components", "get_image", "host1", "host2", "hypervisor_details", "live_migrate", "m_build_request_spec", "m_from_primitives", "m_get_image_from_system_metadata", "m_select_destinations", "m_setup_instance_group", "messaging", "mock", "mock_save", "objects", "power_state", "save_mock", "scheduler_client", "scheduler_utils", "select_dest", "self", "servicegroup", "setup_ig", "super", "task", "test", "utils", "uuids", "vm_states", "free_ram", "is", "bigger", "than", "instance.ram", "(512)", "but", "the", "allocation", "ratio\n", "reduces", "the", "total", "available", "RAM", "to", "410MB", "(1024", "*", "0.9", "-", "(1024", "-", "513))"], "/Users/mehranhassani/repos/nova/nova/policies/versions.py": ["POLICY_ROOT", "base", "policy", "versions_policies"], "/Users/mehranhassani/repos/nova/nova/tests/functional/api_sample_tests/test_server_migrations.py": ["ADMIN_API", "False", "None", "ServerMigrationsSampleJsonTest", "ServerMigrationsSampleJsonTestV2_24", "ServerMigrationsSamplesJsonTestV2_23", "True", "UUID_1", "UUID_2", "_live_migrate", "conductor_manager", "context", "datetime", "db", "fake_context", "fake_ins", "fake_instance", "fake_migration", "fake_migrations", "get_by_id_and_instance", "live_migration_pause_instance", "microversion", "migration", "mock", "objects", "response", "sample_dir", "scenarios", "self", "service_get_by_compute_host", "super", "test_servers", "uri", "setUp", "method", "for", "server", "usage.\nsetUp", "method", "for", "server", "usage."], "/Users/mehranhassani/repos/nova/nova/tests/unit/virt/hyperv/test_vif.py": ["HyperVNovaNetworkVIFDriverTestCase", "fake_vif", "mock", "netutils", "self", "super", "test_base", "vif"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/extended_availability_zone.py": ["ALIAS", "ExtendedAZController", "False", "PREFIX", "alias", "avail_zone", "az", "context", "controller", "db_instance", "eaz_policies", "extension", "extensions", "id", "instance", "key", "list", "name", "req", "resp_obj", "self", "server", "servers", "version", "wsgi", "The", "Extended", "Availability", "Zone", "Status", "API", "extension.\nExtended", "Availability", "Zone", "support.", "NOTE(mriedem):", "The", "OS-EXT-AZ", "prefix", "should", "not", "be", "used", "for", "new\n", "attributes", "after", "v2.1.", "They", "are", "only", "in", "v2.1", "for", "backward", "compat\n", "with", "v2.0."], "/Users/mehranhassani/repos/nova/nova/tests/unit/api/openstack/compute/test_extension_info.py": ["ExtensionInfoPolicyEnforcementV21", "ExtensionInfoTest", "ExtensionInfoV21Test", "FAKE_UPDATED_DATE", "True", "action", "alias", "args", "context", "copy", "description", "e", "exc", "exception", "expected_output", "ext_info", "extension_info", "fake_extension", "fake_extensions", "fake_policy_authorize_selective", "fakes", "getattr", "len", "mock", "mock_authorize", "name", "object", "patcher", "policy", "req", "res_dict", "rule_name", "self", "simulated_extension_list", "super", "target", "test", "version", "webob", "x", "NOTE(sdague):", "this", "whole", "test", "module", "is", "short", "term", "while", "we", "shift\n", "the", "extensions", "into", "main", "path", "code.", "Some", "short", "cuts", "are", "taken", "in", "the\n", "interim", "to", "keep", "these", "extension", "tests.\n", "NOTE(sdague):", "because", "of", "hardcoded", "extensions", "the", "count", "is\n", "going", "to", "grow,", "and", "that's", "fine.", "We'll", "just", "check", "that", "it's\n", "greater", "than", "the", "3", "that", "we", "inserted.\n", "NOTE(sdague):", "filter", "the", "extension", "list", "by", "only", "ones", "that\n", "are", "the", "fake", "alias", "names,", "otherwise", "we", "get", "errors", "as", "we\n", "migrate", "extensions", "into", "the", "hardcoded", "list.\n", "NOTE(sdague):", "because", "of", "hardcoded", "extensions", "the", "count", "is\n", "going", "to", "grow,", "and", "that's", "fine.", "We'll", "just", "check", "that", "it's\n", "greater", "than", "the", "2", "that", "we", "inserted.\n", "NOTE(sdague):", "filter", "the", "extension", "list", "by", "only", "ones", "that\n", "are", "the", "fake", "alias", "names,", "otherwise", "we", "get", "errors", "as", "we\n", "migrate", "extensions", "into", "the", "hardcoded", "list.\n", "NOTE(sdague):", "because", "of", "hardcoded", "extensions", "the", "count", "is\n", "going", "to", "grow,", "and", "that's", "fine.", "We'll", "just", "check", "that", "it's\n", "greater", "than", "the", "12", "that", "we", "inserted.\n", "NOTE(sdague):", "filter", "the", "extension", "list", "by", "only", "ones", "that\n", "are", "the", "fake", "alias", "names,", "otherwise", "we", "get", "errors", "as", "we\n", "migrate", "extensions", "into", "the", "hardcoded", "list."], "/Users/mehranhassani/repos/nova/nova/objects/build_request.py": ["AttributeError", "BuildRequest", "False", "LOG", "None", "True", "TypeError", "VERSION", "_LE", "__name__", "_destroy_in_db", "_get_build_requests_with_no_instance_uuid", "api_models", "base", "build_req", "build_req_list", "build_requests", "cls", "context", "count", "db", "db_bdms", "db_build_reqs", "db_instance", "db_req", "db_reqs", "dict", "done", "enumerate", "exact_filters", "exact_match_filter_names", "exc", "exception", "field", "fields", "filter_key", "filter_name", "filter_re", "filter_result", "filter_val", "filtered_build_reqs", "filters", "frozenset", "functools", "getattr", "i", "id", "instance", "instance_attr", "instance_uuid", "isinstance", "item", "jsonutils", "k", "key", "len", "len_build_reqs", "limit", "limit_index", "list", "logging", "marker", "marker_index", "null", "objects", "orphan_buildreq", "orphaned_build_requests", "ovoo_exc", "primitive", "query", "re", "regex_filters", "req", "req_id", "result", "reverse", "self", "set", "setattr", "six", "sort_attr", "sort_dir", "sort_dirs", "sort_key", "sort_keys", "sorted_build_reqs", "staticmethod", "str", "super", "target_version", "tuple", "updates", "v", "value", "versionutils", "zip", "Returns", "up", "to", "$limit", "build_requests", "where", "instance_uuid", "is", "null", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "block_device_mappings\n", "Version", "1.2:", "Added", "save()", "method\n", "NOTE(alaski):", "Normally", "these", "would", "come", "from", "the", "NovaPersistentObject\n", "mixin", "but", "they're", "being", "set", "explicitly", "because", "we", "only", "need\n", "created_at/updated_at.", "There", "is", "no", "soft", "delete", "for", "this", "object.\n", "NOTE(alaski):", "Be", "very", "careful", "with", "instance", "loading", "because", "it\n", "changes", "more", "than", "most", "objects.\n", "This", "should", "only", "happen", "if", "proper", "service", "upgrade", "strategies", "are\n", "not", "followed.", "Log", "the", "exception", "and", "raise", "BuildRequestNotFound.\n", "If", "the", "instance", "can't", "be", "loaded", "this", "object", "is", "useless", "and", "may\n", "as", "well", "not", "exist.\n", "NOTE(sbauza):", "The", "instance", "primitive", "should", "already", "have", "the", "deleted\n", "field", "being", "set,", "so", "when", "hydrating", "it", "back", "here,", "we", "should", "get", "the\n", "right", "value", "but", "in", "case", "we", "don't", "have", "it,", "let's", "suppose", "that", "the\n", "instance", "is", "not", "deleted,", "which", "is", "the", "default", "value", "for", "that", "field.\n", "NOTE(alaski):", "Set", "some", "fields", "on", "instance", "that", "are", "needed", "by", "the", "api,\n", "not", "lazy-loadable,", "and", "don't", "change.\n", "The", "fields", "above", "are", "not", "set", "until", "the", "instance", "is", "in", "a", "cell", "at\n", "which", "point", "this", "BuildRequest", "will", "be", "gone.", "locked_by", "could\n", "potentially", "be", "set", "by", "an", "update", "so", "it", "should", "not", "be", "overwritten.\n", "created_at/updated_at", "are", "not", "on", "the", "serialized", "instance", "because", "it\n", "was", "never", "persisted.\n", "'db_bdms'", "is", "a", "serialized", "BlockDeviceMappingList", "object.", "If", "it's", "None\n", "we're", "in", "a", "mixed", "version", "nova-api", "scenario", "and", "can't", "retrieve", "the\n", "actual", "list.", "Set", "it", "to", "an", "empty", "list", "here", "which", "will", "cause", "a\n", "temporary", "API", "inconsistency", "that", "will", "be", "resolved", "as", "soon", "as", "the\n", "instance", "is", "scheduled", "and", "on", "a", "compute.\n", "Set", "this", "up", "front", "so", "that", "it", "can", "be", "pulled", "for", "error", "messages", "or\n", "logging", "at", "any", "point.\n", "Load", "instance", "last", "because", "other", "fields", "on", "req", "may", "be", "referenced\n", "We", "can't", "guarantee", "this", "is", "not", "null", "in", "the", "db", "so", "check", "here\n", "NOTE(danms):", "This", "is", "a", "hack", "to", "make", "sure", "that", "the", "returned\n", "instance", "has", "all", "dirty", "fields.", "There", "are", "probably", "better\n", "ways", "to", "do", "this,", "but", "they", "kinda", "involve", "o.vo", "internals\n", "so", "this", "is", "okay", "for", "the", "moment.\n", "NOTE(danms):", "Don't", "copy", "the", "defaulted", "tags", "field\n", "as", "instance.create()", "won't", "handle", "it", "properly.\n", "Version", "1.0:", "Initial", "version\n", "Special", "value", "to", "indicate", "that", "nothing", "will", "match.\n", "Sometimes", "the", "REGEX", "filter", "value", "is", "not", "a", "string\n", "build_req_list", "is", "a", "[]", "of", "build_reqs\n", "'id'", "is", "not", "set", "on", "the", "instance", "yet.", "Use", "the", "BuildRequest\n", "'id'", "instead.\n", "'deleted'", "records", "can", "not", "be", "returned", "from", "here", "since", "build_requests\n", "are", "not", "soft", "deleted.\n", "'cleaned'", "records", "won't", "exist", "as", "they", "would", "need", "to", "be", "deleted.\n", "Because", "the", "build_requests", "table", "stores", "an", "instance", "as", "a", "serialized\n", "versioned", "object", "it", "is", "not", "feasible", "to", "do", "the", "filtering", "and", "sorting\n", "in", "the", "database.", "Just", "get", "all", "potentially", "relevant", "records", "and\n", "process", "them", "here.", "It", "should", "be", "noted", "that", "build", "requests", "are", "short\n", "lived", "so", "there", "should", "not", "be", "a", "lot", "of", "results", "to", "deal", "with.\n", "Fortunately", "some", "filters", "do", "not", "apply", "here.\n", "'tags'", "can", "not", "be", "applied", "at", "boot", "time", "so", "will", "not", "be", "set", "for", "an\n", "instance", "here.\n", "'changes-since'", "works", "off", "of", "the", "updated_at", "field", "which", "has", "not", "yet\n", "been", "set", "at", "the", "point", "in", "the", "boot", "process", "where", "build_request", "still\n", "exists.", "So", "it", "can", "be", "ignored.\n", "'deleted'", "and", "'cleaned'", "are", "handled", "above.\n", "For", "other", "filters", "that", "don't", "match", "this,", "we", "will", "do", "regexp", "matching\n", "Taken", "from", "db/sqlalchemy/api.py\n", "As", "much", "as", "possible", "this", "copies", "the", "logic", "from", "db/sqlalchemy/api.py\n", "instance_get_all_by_filters_sort.", "The", "main", "difference", "is", "that", "method\n", "builds", "a", "sql", "query", "and", "this", "filters", "in", "python.\n", "The", "filter", "condition", "is", "such", "that", "nothing", "will", "match.\n", "Bail", "early.\n", "No", "need", "to", "sort\n", "build_requests", "don't", "use", "the", "SoftDeleteMixin", "so", "we", "don't", "have", "to", "filter\n", "on", "the", "deleted", "column."], "/Users/mehranhassani/repos/nova/nova/tests/unit/objects/test_instance_info_cache.py": ["False", "None", "True", "_TestInstanceInfoCacheObject", "cell_type", "cells_api", "cells_opts", "cells_rpcapi", "datetime", "db", "dict", "exception", "fake_info_cache", "fake_updated_at", "instance_info_cache", "mock", "mock_get", "mock_get_type", "mock_rpc", "mock_update", "network_model", "new_info_cache", "nwinfo", "nwinfo_json", "obj", "object", "self", "set", "test_objects", "timeutils", "update_cells", "uuids"], "/Users/mehranhassani/repos/nova/nova/api/openstack/placement/handlers/resource_provider.py": ["False", "None", "POST_RESOURCE_PROVIDER_SCHEMA", "PUT_RESOURCE_PROVIDER_SCHEMA", "_", "_serialize_links", "_serialize_provider", "_serialize_providers", "allowed_filters", "attr", "context", "copy", "data", "db_exc", "environ", "exc", "exception", "filters", "invalid_filters", "jsonutils", "links", "microversion", "objects", "output", "passed_filters", "provider", "provider_data", "rel", "req", "resource_provider", "resource_providers", "response", "set", "url", "util", "uuid", "uuidutils", "value", "want_version", "webob", "Placement", "API", "handlers", "for", "resource", "providers.", "Remove", "uuid", "to", "create", "the", "schema", "for", "PUTting", "a", "resource", "provider\n", "The", "containing", "application", "will", "catch", "a", "not", "found", "here.\n", "The", "containing", "application", "will", "catch", "a", "not", "found", "here.\n", "special", "case", "member_of", "to", "always", "make", "its", "value", "a\n", "list,", "either", "by", "accepting", "the", "single", "value,", "or", "if", "it\n", "starts", "with", "'in:'", "splitting", "on", "','.\n", "NOTE(cdent):", "This", "will", "all", "change", "when", "we", "start", "using\n", "JSONSchema", "validation", "of", "query", "params.\n", "The", "containing", "application", "will", "catch", "a", "not", "found", "here."], "/Users/mehranhassani/repos/nova/nova/conf/pci.py": ["cfg", "conf", "pci_group", "pci_opts"], "/Users/mehranhassani/repos/nova/nova/tests/unit/test_test.py": ["CONF", "Exception", "False", "Hello", "KeyError", "LOG", "NeverCalled", "World", "__name__", "dict", "e", "expected", "fixtures", "logging", "matcher", "messaging", "nova", "object", "observed", "rpc", "self", "server", "set", "six", "test", "Tests", "for", "the", "testing", "base", "code.\nMake", "sure", "a", "mis-formatted", "debug", "log", "will", "get", "caught.", "error", "reported", "is", "going", "to", "be", "a", "cryptic", "length", "failure\n", "on", "the", "level2", "structure.\n", "error", "reported", "is", "going", "to", "be", "a", "cryptic", "length", "failure\n", "on", "the", "level2", "structure.\n", "Raise", "TypeError\n", "Raise", "KeyError"], "/Users/mehranhassani/repos/nova/nova/objects/aggregate.py": ["Aggregate", "DEPRECATED_FIELDS", "False", "KeyError", "LOG", "None", "True", "VERSION", "_", "_LW", "__name__", "_adjust_autoincrement", "_aggregate_create_in_db", "_aggregate_delete_from_db", "_aggregate_get_from_db", "_aggregate_get_from_db_by_uuid", "_aggregate_update_to_db", "_get_all_from_db", "_get_by_host_from_db", "_get_by_metadata_key_from_db", "_get_main_db_aggregate_ids", "_get_max_aggregate_id", "_host_add_to_db", "_host_delete_from_db", "_metadata_add_to_db", "_metadata_delete_from_db", "action", "agg", "aggregate", "aggregate_id", "aggregate_uuid", "all_aggregates", "all_keys", "already_existing_keys", "any", "api_db_aggregates", "api_models", "args", "attempt", "az", "base", "classmethod", "cls", "compute_utils", "contains_eager", "context", "count", "count_all", "count_hit", "ctxt", "db", "db_aggregate", "db_aggregates", "db_api", "db_exc", "db_key", "dict", "e", "engine", "exception", "excutils", "f", "field", "fields", "filtered_aggregates", "func", "getattr", "host", "host_ref", "hosts", "isinstance", "joinedload", "key", "kwargs", "len", "limit", "logging", "main_db_ids", "main_models", "max_id", "max_retries", "meta_ref", "metadata", "metadata_add", "metadata_delete", "models", "msg", "new_entries", "obj_extra_fields", "objects", "payload", "property", "query", "range", "remove", "result", "self", "set", "set_delete", "setattr", "staticmethod", "str", "super", "text", "to_add", "updates", "uuidutils", "value", "values", "x", "Check", "to", "see", "if", "the", "aggregate", "exists\n", "Check", "to", "see", "if", "the", "aggregate", "exists\n", "a", "concurrent", "transaction", "has", "been", "committed,\n", "try", "again", "unless", "this", "was", "the", "last", "attempt\n", "Check", "to", "see", "if", "the", "aggregate", "exists\n", "We", "don't", "want", "these", "to", "be", "lazy", "loaded", "later.", "We", "know", "there", "is\n", "nothing", "here", "since", "we", "just", "created", "this", "aggregate.\n", "Delete", "Metadata", "first\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "String", "attributes", "updated", "to", "support", "unicode\n", "Version", "1.2:", "Added", "uuid", "field\n", "Version", "1.3:", "Added", "get_by_uuid", "method\n", "NOTE(danms):", "Remove", "this", "conditional", "load", "(and", "remove", "uuid\n", "special", "cases", "above)", "once", "we're", "in", "Newton", "and", "have", "enforced\n", "that", "all", "UUIDs", "in", "the", "database", "are", "not", "NULL.\n", "NOTE:", "This", "can", "be", "removed", "when", "we", "remove", "compatibility", "with\n", "the", "old", "aggregate", "model.\n", "NOTE(danms):", "This", "needs", "to", "come", "after", "obj_reset_changes()", "to", "make\n", "sure", "we", "only", "save", "the", "uuid,", "if", "we", "generate", "one.\n", "FIXME(danms):", "Remove", "this", "in", "Newton", "once", "we", "have", "enforced", "that\n", "all", "aggregates", "have", "uuids", "set", "in", "the", "database.\n", "NOTE(mdoff):", "Once", "we", "have", "made", "it", "past", "a", "point", "where", "we", "know\n", "all", "aggregates", "have", "been", "migrated,", "we", "can", "remove", "this.", "Ideally\n", "in", "Ocata", "with", "a", "blocker", "migration", "to", "be", "sure.\n", "NOTE(danms):", "For", "some", "reason", "the", "notification", "format", "is", "weird\n", "Version", "1.0:", "Initial", "version\n", "Version", "1.1:", "Added", "key", "argument", "to", "get_by_host()\n", "Aggregate", "<=", "version", "1.1\n", "Version", "1.2:", "Added", "get_by_metadata_key\n", "NOTE(mdoff):", "Calls", "to", "this", "can", "be", "removed", "when", "we", "remove\n", "compatibility", "with", "the", "old", "aggregate", "model.\n", "NOTE(danms):", "If", "we", "migrated", "some", "aggregates", "in", "the", "above", "function,\n", "then", "we", "will", "have", "confused", "postgres'", "sequence", "for", "the", "autoincrement\n", "primary", "key.", "MySQL", "does", "not", "care", "about", "this,", "but", "since", "postgres", "does,\n", "we", "need", "to", "reset", "this", "to", "avoid", "a", "failure", "on", "the", "next", "aggregate\n", "creation."], "/Users/mehranhassani/repos/nova/nova/tests/unit/volume/encryptors/test_cryptsetup.py": ["CryptsetupEncryptorTestCase", "False", "None", "True", "binascii", "bytes", "connection_info", "context", "copy", "cryptsetup", "data", "dict", "encryptor", "exc", "exception", "fake__get_key", "fake_key", "fake_key_mangled", "key", "len", "mock", "mock_execute", "mock_exists", "old_dev_name", "passphrase", "processutils", "raw", "self", "six", "super", "symmetric_key", "test_base", "type", "uuid", "wwn", "Tests", "that", "creating", "a", "CryptsetupEncryptor", "fails", "if", "there", "is", "no\n", "device_path", "key.\n", "If", "an", "old", "name", "crypt", "device", "exists,", "dev_path", "should", "be", "the", "old", "name.\n", "If", "an", "wwn", "name", "crypt", "device", "exists,", "dev_path", "should", "be", "based", "on", "wwn.\n", "luksOpen"], "/Users/mehranhassani/repos/nova/nova/conf/rdp.py": ["False", "RDP_OPTS", "cfg", "conf", "rdp_group"], "/Users/mehranhassani/repos/nova/nova/tests/unit/console/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/views/addresses.py": ["False", "_collection_name", "address", "addresses", "all_ips", "collections", "common", "dict", "extend_address", "ip", "itertools", "label", "network", "network_dict", "networks", "self", "Models", "server", "addresses", "as", "a", "dictionary.\nReturn", "a", "dictionary", "describing", "an", "IP", "address.\nReturns", "a", "dictionary", "describing", "a", "network.\nReturn", "a", "dictionary", "describing", "a", "list", "of", "networks."], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/224_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Havana", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Icehouse", "work.", "New", "Icehouse", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-icehouse\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/conf/__init__.py": ["CONF", "api", "availability_zone", "base", "cache", "cells", "cfg", "cinder", "cloudpipe", "compute", "conductor", "configdrive", "console", "consoleauth", "crypto", "database", "ephemeral_storage", "flavors", "floating_ips", "glance", "guestfs", "hyperv", "image_file_url", "ipv6", "ironic", "key_manager", "libvirt", "mks", "netconf", "network", "neutron", "notifications", "novnc", "osapi_v21", "paths", "pci", "placement", "quota", "rdp", "remote_debug", "scheduler", "serial_console", "service", "servicegroup", "spice", "ssl", "upgrade_levels", "virt", "vmware", "vnc", "workarounds", "wsgi", "xenserver", "xvp", "This", "package", "got", "introduced", "during", "the", "Mitaka", "cycle", "in", "2015", "to\n", "have", "a", "central", "place", "where", "the", "config", "options", "of", "Nova", "can", "be", "maintained.\n", "For", "more", "background", "see", "the", "blueprint", "\"centralize-config-options\""], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/consoles.py": ["ALIAS", "ConsolesController", "_translate_detail_keys", "_translate_keys", "alias", "body", "cons", "console", "console_api", "consoles", "consoles_policies", "context", "dict", "e", "exc", "exception", "extensions", "id", "info", "int", "name", "parent", "pool", "req", "resources", "self", "server_id", "version", "wsgi", "Coerces", "a", "console", "instance", "into", "proper", "dictionary", "format.\nCoerces", "a", "console", "instance", "into", "proper", "dictionary", "format", "with", "detail.\nThe", "Consoles", "controller", "for", "the", "OpenStack", "API.\nReturns", "a", "list", "of", "consoles", "for", "this", "instance.\nCreates", "a", "new", "console.\nShows", "in-depth", "information", "on", "a", "specific", "console.\nDeletes", "a", "console.\nConsoles.", "NOTE(gmann):", "Here", "should", "be", "201", "instead", "of", "200", "by", "v2.1\n", "+microversions", "because", "the", "console", "has", "been", "created\n", "completely", "when", "returning", "a", "response."], "/Users/mehranhassani/repos/nova/nova/objects/instance_mapping.py": ["None", "True", "VERSION", "api_models", "base", "cell_mapping", "cell_mapping_obj", "changes", "cls", "context", "db_api", "db_instance_mapping", "db_mapping", "db_mappings", "db_value", "exception", "fields", "instance_mapping", "instance_uuid", "joinedload", "key", "objects", "project_id", "result", "self", "setattr", "staticmethod", "updates", "Version", "1.0:", "Initial", "version\n", "cell_mapping", "can", "be", "None", "indicating", "that", "the", "instance", "has\n", "not", "been", "scheduled", "yet.\n", "NOTE:", "This", "is", "done", "because", "a", "later", "access", "will", "trigger", "a", "lazy", "load\n", "outside", "of", "the", "db", "session", "so", "it", "will", "fail.", "We", "don't", "lazy", "load\n", "cell_mapping", "on", "the", "object", "later", "because", "we", "never", "need", "an\n", "InstanceMapping", "without", "the", "CellMapping.\n", "NOTE:", "This", "is", "done", "because", "a", "later", "access", "will", "trigger", "a", "lazy", "load\n", "outside", "of", "the", "db", "session", "so", "it", "will", "fail.", "We", "don't", "lazy", "load\n", "cell_mapping", "on", "the", "object", "later", "because", "we", "never", "need", "an\n", "InstanceMapping", "without", "the", "CellMapping.\n", "Version", "1.0:", "Initial", "version"], "/Users/mehranhassani/repos/nova/nova/virt/disk/__init__.py": [], "/Users/mehranhassani/repos/nova/nova/image/download/file.py": ["CONF", "FileTransfer", "LOG", "None", "_", "_LI", "__name__", "conf_group", "context", "desc_required_keys", "dst_file", "exception", "fs", "fs_descriptor", "fs_dict", "fs_ent", "fs_key", "glance_mount", "glance_mountpoint", "group_name", "id", "logging", "lv_utils", "metadata", "msg", "new_path", "nova", "nova_mount", "nova_mountpoint", "path", "r", "self", "source_file", "str", "url", "url_parts", "xfer_base", "This", "module", "extends", "the", "configuration", "options", "for", "nova.conf.", "If", "the", "user\n", "wishes", "to", "use", "the", "specific", "configuration", "settings", "the", "following", "needs", "to\n", "be", "added", "to", "nova.conf:\n", "[image_file_url]\n", "filesystem", "=", "<a", "list", "of", "strings", "referencing", "a", "config", "section>\n\n", "For", "each", "entry", "in", "the", "filesystem", "list", "a", "new", "configuration", "section", "must", "be\n", "added", "with", "the", "following", "format:\n", "[image_file_url:<list", "entry>]\n", "id", "=", "<string>\n", "mountpoint", "=", "<string>\n\n", "id:\n", "An", "opaque", "string.", "In", "order", "for", "this", "module", "to", "know", "that", "the", "remote\n", "FS", "is", "the", "same", "one", "that", "is", "mounted", "locally", "it", "must", "share", "information\n", "with", "the", "glance", "deployment.", "Both", "glance", "and", "nova-compute", "must", "be\n", "configured", "with", "a", "unique", "matching", "string.", "This", "ensures", "that", "the\n", "file://", "advertised", "URL", "is", "describing", "a", "file", "system", "that", "is", "known\n", "to", "nova-compute\n", "mountpoint:\n", "The", "location", "at", "which", "the", "file", "system", "is", "locally", "mounted.", "Glance\n", "may", "mount", "a", "shared", "file", "system", "on", "a", "different", "path", "than", "nova-compute.\n", "This", "value", "will", "be", "compared", "against", "the", "metadata", "advertised", "with\n", "glance", "and", "paths", "will", "be", "adjusted", "to", "ensure", "that", "the", "correct", "file\n", "file", "is", "copied.\n\n", "If", "these", "values", "are", "not", "added", "to", "nova.conf", "and", "the", "file", "module", "is", "in", "the\n", "allowed_direct_url_schemes", "list,", "then", "the", "legacy", "behavior", "will", "occur", "such\n", "that", "a", "copy", "will", "be", "attempted", "assuming", "that", "the", "glance", "and", "nova", "file", "systems\n", "are", "the", "same.\n", "NOTE(jbresnah)", "when", "nothing", "is", "configured", "assume", "legacy", "behavior"], "/Users/mehranhassani/repos/nova/nova/tests/functional/notification_sample_tests/notification_sample_base.py": ["ANY", "CONF", "False", "None", "NotificationSampleTestBase", "REQUIRES_LOCKING", "True", "__file__", "actual", "api_client", "api_fixture", "cfg", "created_server", "event_type", "expected_status", "extra_params", "fake_notifier", "flavor_body", "flavor_id", "found_server", "i", "integrated_helpers", "jsonutils", "key", "len", "n_obj", "notification", "nova", "nova_fixtures", "obj", "object", "open", "os", "post", "range", "received", "replacements", "reservation_id", "sample", "sample_data", "sample_dir", "sample_file_name", "sample_obj", "self", "server", "sub_key", "super", "test", "test_services", "time", "timeout", "utils_fixture", "value", "the", "image", "fake", "backend", "needed", "for", "image", "discovery\n", "We", "have", "to", "depend", "on", "a", "specific", "image", "and", "flavor", "to", "fix", "the", "content\n", "of", "the", "notification", "that", "will", "be", "emitted\n", "Wait", "for", "it", "to", "finish", "being", "created"], "/Users/mehranhassani/repos/nova/nova/db/sqlalchemy/migrate_repo/versions/240_placeholder.py": ["migrate_engine", "This", "is", "a", "placeholder", "for", "Icehouse", "backports.\n", "Do", "not", "use", "this", "number", "for", "new", "Juno", "work.", "New", "Juno", "work", "starts", "after\n", "all", "the", "placeholders.\n\n", "See", "blueprint", "backportable-db-migrations-juno\n", "http://lists.openstack.org/pipermail/openstack-dev/2013-March/006827.html"], "/Users/mehranhassani/repos/nova/nova/api/openstack/compute/lock_server.py": ["ALIAS", "LockServerController", "alias", "args", "body", "common", "compute", "context", "controller", "extension", "extensions", "id", "instance", "kwargs", "ls_policies", "name", "req", "self", "super", "version", "wsgi", "Lock", "a", "server", "instance.\nUnlock", "a", "server", "instance.\nEnable", "lock/unlock", "server", "actions."]}